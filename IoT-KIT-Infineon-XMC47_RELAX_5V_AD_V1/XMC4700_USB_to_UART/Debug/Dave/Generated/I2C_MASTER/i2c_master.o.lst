   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "i2c_master.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.__NVIC_ClearPendingIRQ,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	__NVIC_ClearPendingIRQ:
  25              	.LFB112:
  26              	 .file 1 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/core_cm4.h"
   1:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V5.1.1
   5:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * @date     27. March 2020
   6:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*
   8:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  *
  10:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  *
  12:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * not use this file except in compliance with the License.
  14:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * You may obtain a copy of the License at
  15:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  *
  16:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  *
  18:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * See the License for the specific language governing permissions and
  22:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  * limitations under the License.
  23:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
  24:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  25:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  26:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__clang__)
  28:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif
  30:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  31:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  34:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  35:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  36:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  37:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  38:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif
  39:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  40:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
  41:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  44:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  47:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  49:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  50:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
  53:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  54:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  55:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  56:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  57:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  58:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
  59:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  60:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
  61:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
  62:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  63:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_version.h"
  64:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  65:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* CMSIS CM4 definitions */
  66:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  71:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  73:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** */
  76:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
  77:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  80:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #else
  81:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  83:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  84:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #else
  85:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  86:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  87:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
  88:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARM_FP
  90:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  92:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #else
  93:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  95:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  96:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #else
  97:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  98:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  99:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 100:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 101:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 104:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #else
 105:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 107:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 108:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #else
 109:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 110:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 111:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 112:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 113:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 114:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 116:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #else
 117:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 119:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 120:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #else
 121:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 122:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 123:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 124:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #else
 129:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 132:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #else
 133:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 135:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 136:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 137:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 138:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #else
 141:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 144:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #else
 145:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 147:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 148:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 149:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #else
 153:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 156:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #else
 157:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 159:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 160:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif
 161:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 162:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 164:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 165:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 166:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** }
 167:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif
 168:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 169:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 171:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 173:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 176:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 177:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 178:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif
 179:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 180:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 181:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 183:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 184:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 186:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 187:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 188:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 189:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 191:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 192:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 193:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 194:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 196:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 197:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __VTOR_PRESENT
 198:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __VTOR_PRESENT             1U
 199:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 200:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 201:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   
 202:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 203:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 204:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 205:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 206:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 207:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 208:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 209:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 210:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 211:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif
 212:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 213:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 214:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 215:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 216:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 217:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 218:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 219:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 220:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** */
 221:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 222:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 223:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #else
 224:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 225:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif
 226:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 227:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 228:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 229:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 230:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 231:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 232:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 233:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 234:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 235:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 236:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 237:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 238:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 239:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 240:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 241:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 242:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 243:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 244:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 245:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 246:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 247:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 248:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 249:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 250:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 251:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 252:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** */
 253:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 254:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 255:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 256:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 257:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 258:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
 259:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 260:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 261:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 262:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 263:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 264:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 265:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
 266:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   struct
 267:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
 268:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 269:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 270:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 271:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 272:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 273:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 274:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 275:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 276:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 277:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 278:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 279:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 280:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 281:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 282:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 283:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 284:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 285:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 286:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 287:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 288:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 289:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 290:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 291:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 292:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 293:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 294:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 295:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 296:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 297:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 298:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 299:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 300:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 301:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 302:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 303:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 304:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
 305:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   struct
 306:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
 307:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 308:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 309:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 310:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 311:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 312:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 313:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 314:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 315:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 316:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 317:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 318:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 319:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 320:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 321:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 322:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
 323:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   struct
 324:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
 325:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 326:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 327:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 328:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 330:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 331:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 332:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 333:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 334:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 335:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 336:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 337:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 338:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 339:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 340:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 341:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 342:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 343:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 344:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 345:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 346:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 347:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 348:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 349:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 350:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 351:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 352:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 353:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 354:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 355:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 356:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 357:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 358:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 359:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 360:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 361:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 362:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 363:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 364:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 365:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 366:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 367:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 368:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 369:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 370:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 371:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 372:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 373:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 374:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 375:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 376:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 377:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
 378:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   struct
 379:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
 380:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 381:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 382:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 383:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 384:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 385:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 386:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 387:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 388:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 389:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 390:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 391:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 392:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 393:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 394:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 395:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 396:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 397:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 398:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 399:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 400:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 401:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 402:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 403:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 404:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 405:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
 406:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 407:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 408:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 409:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 410:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 411:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 412:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
 413:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 414:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 415:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 416:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[24U];
 417:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 418:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 419:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 420:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 421:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 422:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 423:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 424:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 425:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 426:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 427:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 428:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 429:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 430:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 431:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 432:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 433:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 434:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 435:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 436:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 437:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 438:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 439:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
 440:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 441:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 442:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 443:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 444:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 445:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 446:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
 447:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 448:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 449:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 450:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 451:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 452:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 453:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 454:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 455:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 456:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 457:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 458:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 459:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 460:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 461:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 462:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 463:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 464:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 465:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 466:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 467:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 468:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 469:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 470:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 471:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 472:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 473:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 474:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 475:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 476:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 477:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 478:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 479:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 480:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 481:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 482:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 483:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 484:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 485:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 486:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 487:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 488:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 489:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 490:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 491:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 492:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 493:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 494:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 495:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 496:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 497:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 498:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 499:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 500:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 501:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 502:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 503:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 504:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 505:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 506:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 507:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 508:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 509:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 510:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 511:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 512:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 513:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 514:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 515:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 516:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 517:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 518:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 519:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 520:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 521:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 522:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 523:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 524:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 525:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 526:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 527:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 528:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 529:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 530:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 531:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 532:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 533:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 534:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 535:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 536:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 537:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 538:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 539:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 540:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 541:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 542:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 543:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 544:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 545:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 546:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 547:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 548:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 549:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 550:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 551:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 552:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 553:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 554:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 555:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 556:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 557:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 558:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 559:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 560:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 561:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 562:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 563:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 564:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 565:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 566:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 567:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 568:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 569:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 570:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 571:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 572:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 573:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 574:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 575:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 576:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 577:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 578:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 579:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 580:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 581:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 582:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 583:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 584:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 585:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 586:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 587:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 588:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 589:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 590:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 591:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 592:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 593:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 594:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 595:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 596:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 597:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 598:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 599:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 600:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 601:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 602:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 603:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 604:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 605:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 606:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 607:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 608:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 609:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 610:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 611:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 612:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 613:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 614:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 615:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 616:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 617:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 618:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 619:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 620:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 621:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 622:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 623:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 624:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 625:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 626:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 627:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 628:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 629:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 630:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 631:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 632:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 633:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 634:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 635:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 636:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 637:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 638:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 639:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 640:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 641:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 642:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 643:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 644:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 645:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 646:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 647:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 648:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 649:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 650:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 651:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 652:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 653:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 654:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 655:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 656:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 657:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 658:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 659:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 660:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 661:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 662:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 663:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 664:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 665:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 666:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 667:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 668:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 669:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 670:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 671:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 672:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 673:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 674:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 675:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 676:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 677:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 678:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 679:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 680:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 681:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 682:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 683:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 684:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 685:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 686:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 687:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 688:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 689:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 690:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 691:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 692:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 693:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 694:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 695:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 696:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 697:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 698:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 699:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 700:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 701:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 702:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 703:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 704:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 705:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 706:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 707:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 708:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 709:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 710:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 711:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 712:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 713:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 714:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 715:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 716:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 717:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 718:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
 719:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 720:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 721:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 722:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 723:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 724:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 725:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
 726:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 727:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 728:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 729:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 730:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 731:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 732:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 733:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 734:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 735:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 736:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 737:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 738:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 739:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 740:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 741:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 742:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 743:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 744:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 745:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 746:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 747:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 748:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 749:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 750:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 751:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 752:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 753:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 754:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 755:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 756:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 757:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 758:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
 759:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 760:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 761:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 762:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 763:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 764:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 765:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
 766:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 767:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 768:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 769:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 770:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 771:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 772:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 773:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 774:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 775:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 776:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 777:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 778:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 779:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 780:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 781:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 782:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 783:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 784:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 785:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 786:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 787:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 788:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 789:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 790:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 791:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 792:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 793:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 794:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 795:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 796:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 797:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 798:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 799:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 800:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 801:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 802:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 803:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 804:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 805:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 806:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 807:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 808:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 809:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 810:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
 811:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 812:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 813:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 814:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 815:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 816:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 817:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
 818:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __OM  union
 819:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
 820:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 821:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 822:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 823:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 824:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 825:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 826:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 827:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 828:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 829:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 830:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[32U];
 831:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 832:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 833:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 834:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 835:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 836:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 837:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 838:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 839:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 840:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 841:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 842:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 843:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 844:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 845:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 846:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 847:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 848:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 849:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 850:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 851:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 852:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 853:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 854:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 855:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 856:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 857:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 858:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 859:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 860:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 861:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 862:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 863:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 864:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 865:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 866:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 867:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 868:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 869:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 870:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 871:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 872:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 873:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 874:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 875:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 876:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 877:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 878:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 879:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 880:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 881:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 882:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 883:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 884:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 885:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 886:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 887:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 888:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 889:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 890:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 891:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 892:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 893:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 894:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 895:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 896:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 897:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 898:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
 899:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 900:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 901:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
 902:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 903:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
 904:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 905:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
 906:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 907:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 908:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 909:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 910:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 911:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 912:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 913:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 914:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 915:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 916:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 917:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 918:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 919:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 920:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 921:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 922:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 923:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 924:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 925:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 926:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 927:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 928:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 929:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 930:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 931:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 932:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 933:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 934:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 935:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 936:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 937:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 938:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 939:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 940:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 941:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 942:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 943:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 944:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 945:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 946:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 947:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 948:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 949:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 950:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 951:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 952:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 953:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 954:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 955:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 956:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 957:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 958:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 959:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 960:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 961:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 962:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 963:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 964:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 965:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 966:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 967:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 968:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 969:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 970:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 971:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 972:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 973:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 974:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 975:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 976:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 977:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 978:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 979:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 980:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 981:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 982:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 983:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 984:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 985:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 986:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 987:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 988:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 989:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 990:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 991:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 992:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 993:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 994:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 995:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 996:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 997:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
 998:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 999:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1000:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1001:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1002:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1003:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1004:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1005:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1006:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1007:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1008:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1009:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1010:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1011:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1012:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1013:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1014:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1015:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1016:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1017:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1018:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1019:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1020:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1021:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1022:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1023:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1024:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1025:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1026:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1027:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1028:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1029:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1030:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1031:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1032:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1033:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1034:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1035:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1036:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1037:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1038:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1039:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1040:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1041:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1042:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1043:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1044:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1045:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
1046:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1047:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1048:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1049:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1050:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1051:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1052:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
1053:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1054:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1055:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1056:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1057:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1058:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1059:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1060:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1061:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1062:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1063:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1064:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1065:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1066:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1067:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1068:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1069:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1070:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1071:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1072:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1073:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1074:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1075:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1076:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1077:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
1078:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1079:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1080:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1081:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1082:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1083:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1084:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1085:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1086:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1087:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1088:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1089:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1090:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1091:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1092:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1093:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1094:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1095:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1096:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1097:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1098:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1099:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1100:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1101:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1102:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1103:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1104:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1105:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1106:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1107:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1108:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1109:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1110:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1111:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1112:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1113:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1114:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1115:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1116:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1117:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1118:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1119:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1120:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1121:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1122:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1123:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1124:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1125:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1126:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1127:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1128:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1129:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1130:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1131:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1132:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1133:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1134:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1135:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1136:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1137:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1138:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1139:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1140:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1141:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1142:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1143:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1144:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1145:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1146:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1147:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1148:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1149:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1150:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1151:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1152:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1153:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1154:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1155:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1156:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1157:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1158:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1159:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1160:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1161:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1162:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1163:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1164:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1165:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1166:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1167:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1168:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1169:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1170:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1171:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1172:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1173:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1174:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1175:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1176:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1177:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1178:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1179:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1180:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1181:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1182:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1183:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1184:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1185:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1186:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1187:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1188:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1189:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1190:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1191:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1192:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1193:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1194:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1195:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1196:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1197:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1198:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1199:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1200:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1201:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1202:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1203:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1204:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1205:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1206:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1207:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
1208:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1209:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1210:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1211:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1212:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1213:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1214:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
1215:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1216:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1217:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1218:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1219:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1220:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1221:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1222:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1223:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1224:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1225:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1226:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1227:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1228:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1229:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1230:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1231:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1232:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1233:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1234:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1235:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1236:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1237:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1238:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1239:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1240:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1241:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1242:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1243:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1244:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1245:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1246:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1247:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1248:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1249:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1250:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1251:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1252:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1253:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1254:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1255:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1256:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1257:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1258:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1259:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1260:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1261:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1262:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1263:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1264:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1265:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1266:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1267:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1268:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1269:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1270:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1271:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1272:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1273:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1274:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1275:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1276:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1277:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1278:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1279:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1280:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1281:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1282:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1283:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1284:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1285:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1286:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1287:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1288:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1289:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1290:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1291:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1292:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1293:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1294:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1295:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1296:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1297:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1298:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1299:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1300:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1301:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1302:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1303:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
1304:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1305:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1306:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1307:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1308:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1309:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1310:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
1311:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1312:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1313:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1314:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1315:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1316:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1317:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1318:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1319:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1320:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1321:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1322:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1323:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1324:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1325:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1326:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1327:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1328:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1329:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1330:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1331:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1332:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1333:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1334:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1335:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1336:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1337:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1338:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1339:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1340:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1341:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1342:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1343:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1344:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1345:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1346:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1347:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1348:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1349:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1350:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1351:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1352:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1353:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1354:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1355:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1356:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1357:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1358:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1359:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1360:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1361:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1362:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1363:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1364:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1365:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1366:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1367:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1368:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1369:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1370:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1371:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1372:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1373:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1374:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1375:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1376:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1377:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1378:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1379:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1380:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1381:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1382:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1383:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1384:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1385:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1386:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1387:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1388:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1389:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1390:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1391:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1392:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1393:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1394:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1395:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1396:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1397:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1398:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1399:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1400:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1401:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1402:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1403:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1404:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1405:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1406:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1407:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1408:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1409:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1410:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1411:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1412:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1413:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1414:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1415:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
1416:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1417:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1418:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1419:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1420:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1421:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1422:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
1423:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1424:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1425:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1426:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1427:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1428:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1429:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1430:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1431:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1432:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1433:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1434:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1435:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1436:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1437:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1438:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1439:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1440:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1441:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1442:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1443:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1444:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1445:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1446:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1447:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1448:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1449:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1450:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1451:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1452:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1453:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1454:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1455:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1456:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1457:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1458:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1459:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1460:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1461:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1462:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1463:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1464:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1465:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1466:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1467:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1468:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1469:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1470:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1471:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1472:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1473:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1474:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1475:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1476:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1477:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1478:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1479:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1480:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1481:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1482:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1483:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1484:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1485:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1486:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1487:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1488:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1489:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1490:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1491:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1492:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1493:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1494:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1495:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1496:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1497:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1498:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1499:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1500:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1501:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1502:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1503:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1504:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1505:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1506:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1507:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1508:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1509:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1510:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1511:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1512:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1513:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1514:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1515:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1516:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1517:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1518:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1519:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1520:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
1521:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1522:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1523:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1524:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1525:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1526:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1527:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1528:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** */
1529:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1530:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1531:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1532:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1533:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1534:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1535:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1536:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** */
1537:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1538:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1539:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1540:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1541:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1542:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1543:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1544:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1545:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1546:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
1547:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1548:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1549:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Core Hardware */
1550:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1551:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1552:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1553:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1554:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1555:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1556:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1557:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1558:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1559:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1560:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1561:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1562:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1563:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1564:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1565:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1566:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1567:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1568:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1569:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1570:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1571:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif
1572:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1573:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1574:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1575:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1576:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1577:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1578:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1579:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1580:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1581:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1582:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1583:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1584:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1585:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1586:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1587:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1588:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1589:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1590:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** */
1591:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1592:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1593:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1594:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1595:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1596:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1597:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1598:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1599:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   @{
1600:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1601:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1602:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1603:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1604:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1605:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1606:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1607:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #else
1608:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1609:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1610:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1611:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1612:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1613:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1614:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1615:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1616:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1617:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1618:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1619:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1620:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1621:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1622:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1623:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1624:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1625:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1626:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1627:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #else
1628:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1629:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1630:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1631:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1632:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1633:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1634:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1635:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1636:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1637:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1638:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1639:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1640:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1641:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1642:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1643:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1644:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1645:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1646:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1647:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1648:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1649:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1650:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1651:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1652:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1653:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1654:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
1655:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1656:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1657:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1658:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1659:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1660:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1661:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1662:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1663:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1664:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** }
1665:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1666:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1667:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1668:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1669:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1670:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1671:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1672:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1673:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
1674:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1675:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** }
1676:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1677:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1678:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1679:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Enable Interrupt
1680:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1681:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1682:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1683:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1684:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1685:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
1686:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1687:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
1688:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
1689:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1690:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
1691:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   }
1692:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** }
1693:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1694:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1695:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1696:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Enable status
1697:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1698:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1699:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt is not enabled.
1700:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt is enabled.
1701:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1702:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1703:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1704:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
1705:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1706:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
1707:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1708:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   }
1709:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   else
1710:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
1711:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1712:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   }
1713:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** }
1714:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1715:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1716:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1717:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Disable Interrupt
1718:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1719:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1720:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1721:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1722:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1723:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
1724:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1725:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
1726:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1727:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     __DSB();
1728:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     __ISB();
1729:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   }
1730:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** }
1731:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1732:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1733:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1734:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Pending Interrupt
1735:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1736:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1737:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not pending.
1738:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is pending.
1739:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1740:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1741:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1742:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
1743:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1744:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
1745:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1746:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   }
1747:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   else
1748:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
1749:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1750:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   }
1751:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** }
1752:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1753:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1754:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1755:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Pending Interrupt
1756:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1757:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1758:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1759:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1760:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1761:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
1762:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1763:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
1764:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1765:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   }
1766:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** }
1767:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1768:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** 
1769:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** /**
1770:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Clear Pending Interrupt
1771:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1772:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1773:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1774:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****  */
1775:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1776:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** {
  27              	 .loc 1 1776 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 0346     	 mov r3,r0
  43 0008 FB71     	 strb r3,[r7,#7]
1777:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  44              	 .loc 1 1777 0
  45 000a 97F90730 	 ldrsb r3,[r7,#7]
  46 000e 002B     	 cmp r3,#0
  47 0010 0CDB     	 blt .L1
1778:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   {
1779:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  48              	 .loc 1 1779 0
  49 0012 0949     	 ldr r1,.L3
  50 0014 97F90730 	 ldrsb r3,[r7,#7]
  51 0018 5B09     	 lsrs r3,r3,#5
  52 001a FA79     	 ldrb r2,[r7,#7]
  53 001c 02F01F02 	 and r2,r2,#31
  54 0020 0120     	 movs r0,#1
  55 0022 00FA02F2 	 lsl r2,r0,r2
  56 0026 6033     	 adds r3,r3,#96
  57 0028 41F82320 	 str r2,[r1,r3,lsl#2]
  58              	.L1:
1780:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h ****   }
1781:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include\core_cm4.h **** }
  59              	 .loc 1 1781 0
  60 002c 0C37     	 adds r7,r7,#12
  61              	.LCFI3:
  62              	 .cfi_def_cfa_offset 4
  63 002e BD46     	 mov sp,r7
  64              	.LCFI4:
  65              	 .cfi_def_cfa_register 13
  66              	 
  67 0030 5DF8047B 	 ldr r7,[sp],#4
  68              	.LCFI5:
  69              	 .cfi_restore 7
  70              	 .cfi_def_cfa_offset 0
  71 0034 7047     	 bx lr
  72              	.L4:
  73 0036 00BF     	 .align 2
  74              	.L3:
  75 0038 00E100E0 	 .word -536813312
  76              	 .cfi_endproc
  77              	.LFE112:
  79              	 .section .text.XMC_USIC_CH_EnableEvent,"ax",%progbits
  80              	 .align 2
  81              	 .thumb
  82              	 .thumb_func
  84              	XMC_USIC_CH_EnableEvent:
  85              	.LFB166:
  86              	 .file 2 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2020-12-05
   4:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
   7:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.
  11:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  12:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  14:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * do so, all subject to the following:
  20:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  21:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * a source language processor.
  27:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  28:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * at XMCSupport@infineon.com.
  39:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
  40:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  41:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  42:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  43:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  44:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  45:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  46:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  47:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  48:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  49:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  50:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  51:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  52:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  54:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  55:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  56:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  57:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  58:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  59:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  60:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  62:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  63:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  64:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  65:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  67:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  68:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  69:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  70:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  71:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  72:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  73:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  74:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  75:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  76:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  77:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  79:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  80:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  81:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  82:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  83:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  84:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  86:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  87:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  88:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  89:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  90:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  92:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  93:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  95:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  96:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-09-30:
  98:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_InvalidateReadData(), XMC_USIC_CH_EnableWordLengthControl() and XMC_USIC
  99:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 100:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-12-05:
 101:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_PutDataEx()
 102:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 103:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-04-30:
 104:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_SetTriggerLimit()
 105:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 106:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-12-05:
 107:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S to XMC_USIC_CH_BRG_CLOCK_SOURCE_t
 108:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CTQSEL_t
 109:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
 110:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 111:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
 112:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 114:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 115:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
 116:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
 117:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 119:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 122:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 123:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 124:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 126:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 127:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 129:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 130:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 131:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 132:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 133:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 134:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 135:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 136:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 137:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 138:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 139:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 140:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 141:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 142:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 143:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 144:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 145:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 146:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 147:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 148:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 149:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 150:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 151:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 152:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 153:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 154:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 155:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 157:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 158:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 159:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 161:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 162:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 163:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 164:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 167:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 168:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 169:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 170:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 171:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 172:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 173:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 174:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 175:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 176:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 177:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 178:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 179:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 180:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 181:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 182:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 183:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 185:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc1_usic_map.h"
 186:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 187:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 188:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 189:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc4_usic_map.h"
 190:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 191:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 192:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 193:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 194:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 195:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 196:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 197:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 198:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 199:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 200:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 201:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 202:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 203:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 204:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 205:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 206:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 207:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 208:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 209:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 210:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 211:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 212:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 213:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 214:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 215:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 216:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 217:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 218:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 219:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 220:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 221:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 222:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 223:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 224:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 225:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 226:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 227:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 228:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 231:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 233:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 235:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 236:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 237:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 238:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 239:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 240:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 241:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 242:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 243:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 244:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 245:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 246:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 247:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 248:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 249:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 250:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 251:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 252:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 253:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 254:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 255:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 256:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 257:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 258:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 259:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 260:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 261:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 262:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 263:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 264:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 265:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 266:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 267:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 268:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 269:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 270:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 271:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 272:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 273:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 274:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 275:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 276:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 277:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 278:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 279:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 280:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 281:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 282:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 283:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 284:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 285:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 286:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 287:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 288:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 289:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 290:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 291:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 292:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 293:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 294:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 295:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 296:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 297:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 298:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 299:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 300:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 301:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 304:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 306:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 308:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 309:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 310:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 311:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 313:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 314:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 315:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 316:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 317:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 318:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 319:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 320:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 321:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 322:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 323:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 324:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 325:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 326:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 327:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 328:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 329:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 330:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 332:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 333:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 334:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 335:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 336:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 337:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 338:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 339:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 340:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 341:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 342:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 343:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 344:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 345:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 346:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 347:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 348:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 349:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 350:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 351:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 352:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 353:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 354:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 355:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 356:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 357:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 358:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 359:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 360:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 361:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 362:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 363:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 364:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 365:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 366:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 367:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 368:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 369:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 370:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 371:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 372:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 373:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 374:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 375:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 376:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 377:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 378:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 379:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 380:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 381:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 382:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 383:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 384:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 385:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 386:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 387:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 388:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 389:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 390:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 393:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 395:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 397:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 398:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 399:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 402:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 404:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 406:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 407:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 408:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 409:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 410:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 411:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 412:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 413:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 414:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 415:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 416:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 417:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 418:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 421:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 423:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 425:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 426:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 427:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 428:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 431:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 433:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 435:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos,  /**< Baudrate generator 
 436:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S    = 0x3UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 437:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 438:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 439:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 440:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel input selection for CTQ
 441:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 442:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CTQSEL
 443:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 444:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PDIV = 0x0UL, /**< fCTQIN = fPDIV */
 445:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PPP  = 0x1UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fPPP */
 446:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_SCLK = 0x2UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fSCLK */
 447:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_MCLK = 0x3UL << USIC_CH_BRG_CTQSEL_Pos  /**< fCTQIN = fMCLK */
 448:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CTQSEL_t;
 449:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 450:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 451:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 452:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 453:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 454:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 455:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 456:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 457:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 458:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 459:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 460:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 462:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 463:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 464:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 465:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 466:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 467:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 468:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 469:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 471:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 472:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 473:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 474:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 475:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 476:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 477:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 478:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 479:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 480:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 483:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 484:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 485:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 487:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 488:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 489:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 490:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 491:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 492:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 493:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
 494:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 495:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 496:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 497:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 498:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 499:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 500:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 501:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 502:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 503:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 504:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 505:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 506:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 507:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #pragma push
 508:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #pragma anon_unions
 509:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 510:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning 586
 511:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 512:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 514:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 515:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 516:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 517:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 518:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 519:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file,
 520:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 521:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 522:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 523:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 524:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 525:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 526:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 527:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 528:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 529:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 530:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 531:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 532:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 533:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 534:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 535:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 536:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 537:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   union
 539:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   {
 540:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 541:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 542:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 543:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 544:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 545:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   };
 546:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 547:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 548:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   union
 550:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   {
 551:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 552:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 553:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 554:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 555:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 556:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   };
 557:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 558:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 559:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 560:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 561:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 562:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 563:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 564:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 565:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 566:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 567:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 568:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 569:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 570:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 571:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 572:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 573:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 574:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 575:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 576:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 577:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 578:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 579:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 582:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 583:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #pragma pop
 584:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 585:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning restore
 586:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 587:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 588:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 589:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 590:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 591:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 593:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 594:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 595:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 596:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 597:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 598:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 599:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 600:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 601:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 602:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 603:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 604:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 605:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 606:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 607:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 608:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 609:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 610:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 611:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 612:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 613:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 614:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 615:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 616:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 617:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 618:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 619:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 620:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 621:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 622:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 624:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 625:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 626:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 627:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 628:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 629:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 630:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 631:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 632:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 634:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 635:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 636:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 637:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 639:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 640:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 641:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 642:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 643:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 644:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 645:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 646:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 647:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 648:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 649:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 650:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 651:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 652:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 654:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 655:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 656:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 657:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 658:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 659:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 660:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 661:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 662:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 663:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 664:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 665:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 666:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 667:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 668:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 669:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 670:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 674:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 675:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 676:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 677:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 678:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 679:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 680:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 681:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 682:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 683:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 684:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 685:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 686:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 687:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 688:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 689:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 690:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 691:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 692:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 693:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 694:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 695:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 698:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 699:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 700:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 701:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 703:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 704:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 706:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 707:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 708:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 709:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 710:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 711:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 712:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 713:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 714:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 715:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 716:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 717:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 719:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 720:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 721:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 722:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 723:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 726:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 728:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 732:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clksel Baudrate generator clock source.
 733:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pppen Enable 2:1 Divider for fPPP.
 734:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Divider Factor to generate fPDIV = fPPP / (pDIV + 1)
 735:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  ctqsel Input selection for CTQ.
 736:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pctq Pre-Divider for Time Quanta Counter. fCTQIN / (PCQT + 1)
 737:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  dctq Denominator for Time Quanta Counter. fTQ / (DCTQ + 1)
 738:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 739:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 741:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate generator of the USIC channel.
 742:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFractionalDivider() \n\n\n
 745:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 747:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 748:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                     bool pppen,
 749:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pdiv,
 750:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 751:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pctq,
 752:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t dctq);
 753:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 757:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 758:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 759:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 760:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 761:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 762:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 763:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 765:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 766:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 767:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 768:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 769:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 770:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 771:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 772:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 773:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 774:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 775:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 776:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 777:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 778:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 780:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 781:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 783:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 784:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 785:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 786:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 787:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 788:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 789:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 790:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 791:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 792:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 793:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 795:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 796:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 797:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 798:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 799:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 800:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 801:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 802:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 803:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 804:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 805:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 806:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 807:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 808:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 809:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 813:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 814:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 815:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 816:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 817:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 818:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 819:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t pdiv,
 820:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t oversampling,
 821:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 822:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 823:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 824:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 825:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 826:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 827:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 828:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 829:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 830:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 831:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 832:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 833:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 834:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 835:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 836:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 837:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc.
 838:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 839:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 841:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 842:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 843:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 844:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 845:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 846:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                     ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 847:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 848:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 849:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 850:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 851:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 852:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 853:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 854:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 856:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 857:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 858:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 859:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 860:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 861:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 862:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 863:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 864:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_INSW_Msk;
 865:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 866:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 867:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 868:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 869:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 870:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 871:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 872:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 876:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 877:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 878:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 879:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 880:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 881:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 882:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 883:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 884:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 885:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 886:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 887:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 888:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 889:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 890:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 891:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 892:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 893:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 894:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 895:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 896:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 897:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 898:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 899:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 900:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 901:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 902:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 903:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 904:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 905:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 906:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 907:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 908:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 909:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 910:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 911:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 912:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 913:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 914:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 915:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 916:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 917:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 918:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 919:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 920:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 921:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 922:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 923:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 924:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 925:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 926:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 927:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 928:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 929:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 930:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 931:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 932:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 933:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 934:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 935:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 936:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 937:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 938:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 939:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 940:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 941:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 942:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 943:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 944:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 945:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 946:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 947:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 948:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 949:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 950:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 951:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 953:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 954:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 955:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 956:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 957:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &= (uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 958:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 959:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
 960:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 961:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 962:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 963:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 964:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 965:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 966:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 967:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 968:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 969:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 970:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 973:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 975:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 977:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 979:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 980:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 981:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 982:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 983:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 984:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 985:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 986:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 987:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 988:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
 989:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 990:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 991:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
 992:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 993:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 994:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 995:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
 997:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 998:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 999:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1000:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1001:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1002:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1003:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1004:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
1005:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
1006:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
1007:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
1010:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
1012:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1013:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DSEN_Msk;
1014:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1016:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1017:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1018:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1019:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1020:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
1024:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
1025:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1026:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1027:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
1028:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1029:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
1030:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1031:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DSEN_Msk;
1032:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1033:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1034:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1035:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1036:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1037:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1038:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
1039:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1040:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1041:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1042:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
1043:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1044:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1045:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1046:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1047:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
1048:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1049:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_freq)
1050:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1051:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
1052:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
1053:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1054:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1055:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1056:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1057:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1058:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1059:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1060:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1061:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1062:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1064:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1065:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1066:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1068:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1070:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1071:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
1072:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1073:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1074:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1075:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1076:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1081:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1082:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1083:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1084:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1085:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1086:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1087:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1088:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1089:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1090:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1091:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1092:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1093:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1094:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1095:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1096:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1097:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1098:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1099:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1100:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1101:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1102:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1103:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1104:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1105:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1106:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1107:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1108:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1109:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1110:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1111:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1112:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1113:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1114:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1115:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1116:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1117:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1118:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1119:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1120:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1121:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1122:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1123:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1124:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1125:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1126:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1128:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1129:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1130:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1131:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1132:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t transmit_control_information)
1133:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1134:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1135:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1136:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1137:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1138:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1139:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1140:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1141:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1142:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1143:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1144:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1145:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1146:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1147:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1148:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1149:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1150:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1151:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1152:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1153:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1154:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1155:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1156:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1157:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1158:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1159:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1160:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1161:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1162:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1163:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1164:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1165:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1166:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1167:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1168:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1169:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1170:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1171:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1172:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1173:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1174:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1175:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1176:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1177:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1178:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1179:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1180:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1181:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1182:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value
1183:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1184:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1185:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1186:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1187:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1188:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1189:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1190:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1191:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1192:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1193:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1194:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1195:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1196:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1197:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1198:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1199:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1200:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1201:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1202:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1203:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1204:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1205:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1206:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1207:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1208:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1209:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1210:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1211:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1212:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1213:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1214:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1215:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1216:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1217:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1218:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1219:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1220:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1221:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1222:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1223:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1224:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly.
1225:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1226:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1227:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1228:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1229:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1230:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1231:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1232:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1233:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1234:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1235:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1236:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1237:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1238:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1239:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1240:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1241:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1242:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1243:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1244:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1245:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1246:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1247:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1248:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1250:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1251:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1252:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1253:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
  87              	 .loc 2 1253 0
  88              	 .cfi_startproc
  89              	 
  90              	 
  91              	 
  92 0000 80B4     	 push {r7}
  93              	.LCFI6:
  94              	 .cfi_def_cfa_offset 4
  95              	 .cfi_offset 7,-4
  96 0002 83B0     	 sub sp,sp,#12
  97              	.LCFI7:
  98              	 .cfi_def_cfa_offset 16
  99 0004 00AF     	 add r7,sp,#0
 100              	.LCFI8:
 101              	 .cfi_def_cfa_register 7
 102 0006 7860     	 str r0,[r7,#4]
 103 0008 3960     	 str r1,[r7]
1254:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
 104              	 .loc 2 1254 0
 105 000a 7B68     	 ldr r3,[r7,#4]
 106 000c 1A6C     	 ldr r2,[r3,#64]
 107 000e 3B68     	 ldr r3,[r7]
 108 0010 1A43     	 orrs r2,r2,r3
 109 0012 7B68     	 ldr r3,[r7,#4]
 110 0014 1A64     	 str r2,[r3,#64]
1255:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 111              	 .loc 2 1255 0
 112 0016 0C37     	 adds r7,r7,#12
 113              	.LCFI9:
 114              	 .cfi_def_cfa_offset 4
 115 0018 BD46     	 mov sp,r7
 116              	.LCFI10:
 117              	 .cfi_def_cfa_register 13
 118              	 
 119 001a 5DF8047B 	 ldr r7,[sp],#4
 120              	.LCFI11:
 121              	 .cfi_restore 7
 122              	 .cfi_def_cfa_offset 0
 123 001e 7047     	 bx lr
 124              	 .cfi_endproc
 125              	.LFE166:
 127              	 .section .text.XMC_USIC_CH_DisableEvent,"ax",%progbits
 128              	 .align 2
 129              	 .thumb
 130              	 .thumb_func
 132              	XMC_USIC_CH_DisableEvent:
 133              	.LFB167:
1256:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1257:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1258:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1259:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1260:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1261:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1262:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1263:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1264:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1265:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1266:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1267:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1268:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1269:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1270:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1271:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1272:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
1273:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1274:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 134              	 .loc 2 1274 0
 135              	 .cfi_startproc
 136              	 
 137              	 
 138              	 
 139 0000 80B4     	 push {r7}
 140              	.LCFI12:
 141              	 .cfi_def_cfa_offset 4
 142              	 .cfi_offset 7,-4
 143 0002 83B0     	 sub sp,sp,#12
 144              	.LCFI13:
 145              	 .cfi_def_cfa_offset 16
 146 0004 00AF     	 add r7,sp,#0
 147              	.LCFI14:
 148              	 .cfi_def_cfa_register 7
 149 0006 7860     	 str r0,[r7,#4]
 150 0008 3960     	 str r1,[r7]
1275:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
 151              	 .loc 2 1275 0
 152 000a 7B68     	 ldr r3,[r7,#4]
 153 000c 1A6C     	 ldr r2,[r3,#64]
 154 000e 3B68     	 ldr r3,[r7]
 155 0010 DB43     	 mvns r3,r3
 156 0012 1A40     	 ands r2,r2,r3
 157 0014 7B68     	 ldr r3,[r7,#4]
 158 0016 1A64     	 str r2,[r3,#64]
1276:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 159              	 .loc 2 1276 0
 160 0018 0C37     	 adds r7,r7,#12
 161              	.LCFI15:
 162              	 .cfi_def_cfa_offset 4
 163 001a BD46     	 mov sp,r7
 164              	.LCFI16:
 165              	 .cfi_def_cfa_register 13
 166              	 
 167 001c 5DF8047B 	 ldr r7,[sp],#4
 168              	.LCFI17:
 169              	 .cfi_restore 7
 170              	 .cfi_def_cfa_offset 0
 171 0020 7047     	 bx lr
 172              	 .cfi_endproc
 173              	.LFE167:
 175 0022 00BF     	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
 176              	 .align 2
 177              	 .thumb
 178              	 .thumb_func
 180              	XMC_USIC_CH_GetTransmitBufferStatus:
 181              	.LFB168:
1277:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1278:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1279:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1280:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1281:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1282:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1283:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1284:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1285:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1286:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1287:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1288:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1289:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1290:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1291:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1292:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1293:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1294:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1295:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1296:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1297:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1298:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1299:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1300:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1301:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1302:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1303:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1304:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1305:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1306:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1307:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1308:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1309:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1310:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1311:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1312:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1313:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1314:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1315:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1316:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1317:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1318:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 182              	 .loc 2 1318 0
 183              	 .cfi_startproc
 184              	 
 185              	 
 186              	 
 187 0000 80B4     	 push {r7}
 188              	.LCFI18:
 189              	 .cfi_def_cfa_offset 4
 190              	 .cfi_offset 7,-4
 191 0002 83B0     	 sub sp,sp,#12
 192              	.LCFI19:
 193              	 .cfi_def_cfa_offset 16
 194 0004 00AF     	 add r7,sp,#0
 195              	.LCFI20:
 196              	 .cfi_def_cfa_register 7
 197 0006 7860     	 str r0,[r7,#4]
1319:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
 198              	 .loc 2 1319 0
 199 0008 7B68     	 ldr r3,[r7,#4]
 200 000a 9B6B     	 ldr r3,[r3,#56]
 201 000c DBB2     	 uxtb r3,r3
 202 000e 23F07F03 	 bic r3,r3,#127
 203 0012 DBB2     	 uxtb r3,r3
1320:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 204              	 .loc 2 1320 0
 205 0014 1846     	 mov r0,r3
 206 0016 0C37     	 adds r7,r7,#12
 207              	.LCFI21:
 208              	 .cfi_def_cfa_offset 4
 209 0018 BD46     	 mov sp,r7
 210              	.LCFI22:
 211              	 .cfi_def_cfa_register 13
 212              	 
 213 001a 5DF8047B 	 ldr r7,[sp],#4
 214              	.LCFI23:
 215              	 .cfi_restore 7
 216              	 .cfi_def_cfa_offset 0
 217 001e 7047     	 bx lr
 218              	 .cfi_endproc
 219              	.LFE168:
 221              	 .section .text.XMC_USIC_CH_TriggerServiceRequest,"ax",%progbits
 222              	 .align 2
 223              	 .thumb
 224              	 .thumb_func
 226              	XMC_USIC_CH_TriggerServiceRequest:
 227              	.LFB178:
1321:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1322:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1323:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1324:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1325:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1326:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1327:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1328:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1329:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1330:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1331:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1332:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1333:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1334:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte.
1335:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1336:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1337:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1338:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1339:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1340:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1341:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1342:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1343:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1344:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1345:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1346:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1347:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1348:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1349:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1350:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1351:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1352:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1353:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1354:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1355:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1356:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1357:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1358:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1359:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1360:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1361:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1362:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1363:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1364:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1365:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_START_TRANSMISION_MODE_t start_transmision_mode)
1366:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1367:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1368:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1369:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1370:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1371:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1372:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1373:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1374:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1375:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1376:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1377:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1378:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1379:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1380:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1381:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1382:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1383:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1384:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1385:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1386:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output_mode)
1387:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1388:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1389:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1390:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1391:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1392:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1393:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1394:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1395:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1396:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1397:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1398:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the
1399:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1400:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1401:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1402:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1403:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1404:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1405:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1406:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1407:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1408:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1409:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1410:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1411:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1412:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1413:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1414:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1415:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1416:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1417:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1418:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1419:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1420:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1421:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of word length. \n\n
1422:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of word length is enabled, word length is configured based on the
1423:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], word length is con
1424:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1425:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1426:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1427:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1428:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1429:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1430:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableWordLengthControl(XMC_USIC_CH_t *const channel)
1431:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1432:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1433:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1434:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1435:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1436:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_WLEMD_Msk;
1437:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1438:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1439:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1440:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1441:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1442:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1443:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1444:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1445:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1446:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1447:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1448:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1449:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1450:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1451:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1452:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1453:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1454:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1455:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1456:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1457:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1458:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1459:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1460:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1461:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1462:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1463:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of word length. \n\n
1464:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of word length is disabled, word length has to configured explicitly.
1465:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Word length remains fixed until it is changed again.
1466:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1467:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1468:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetWordLength() \n\n\n
1469:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1470:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableWordLengthControl(XMC_USIC_CH_t *const channel)
1471:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1472:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_WLEMD_Msk;
1473:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1474:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1475:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1476:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1477:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1478:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1479:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1480:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1481:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1482:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1483:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1484:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1485:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1486:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1487:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1488:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1489:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1490:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1491:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1492:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1493:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1494:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1495:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1496:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1497:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1498:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1499:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1500:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1501:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1502:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1503:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1504:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1505:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1506:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1507:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1508:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1509:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1510:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1511:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1512:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1513:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1514:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1515:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1516:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1517:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1518:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1519:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be
1520:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled.
1521:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1522:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1523:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1524:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1525:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1526:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 228              	 .loc 2 1526 0
 229              	 .cfi_startproc
 230              	 
 231              	 
 232              	 
 233 0000 80B4     	 push {r7}
 234              	.LCFI24:
 235              	 .cfi_def_cfa_offset 4
 236              	 .cfi_offset 7,-4
 237 0002 83B0     	 sub sp,sp,#12
 238              	.LCFI25:
 239              	 .cfi_def_cfa_offset 16
 240 0004 00AF     	 add r7,sp,#0
 241              	.LCFI26:
 242              	 .cfi_def_cfa_register 7
 243 0006 7860     	 str r0,[r7,#4]
 244 0008 3960     	 str r1,[r7]
1527:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
 245              	 .loc 2 1527 0
 246 000a 3B68     	 ldr r3,[r7]
 247 000c 4FF48032 	 mov r2,#65536
 248 0010 9A40     	 lsls r2,r2,r3
 249 0012 7B68     	 ldr r3,[r7,#4]
 250 0014 9A66     	 str r2,[r3,#104]
1528:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 251              	 .loc 2 1528 0
 252 0016 0C37     	 adds r7,r7,#12
 253              	.LCFI27:
 254              	 .cfi_def_cfa_offset 4
 255 0018 BD46     	 mov sp,r7
 256              	.LCFI28:
 257              	 .cfi_def_cfa_register 13
 258              	 
 259 001a 5DF8047B 	 ldr r7,[sp],#4
 260              	.LCFI29:
 261              	 .cfi_restore 7
 262              	 .cfi_def_cfa_offset 0
 263 001e 7047     	 bx lr
 264              	 .cfi_endproc
 265              	.LFE178:
 267              	 .section .text.XMC_USIC_CH_TXFIFO_EnableEvent,"ax",%progbits
 268              	 .align 2
 269              	 .thumb
 270              	 .thumb_func
 272              	XMC_USIC_CH_TXFIFO_EnableEvent:
 273              	.LFB183:
1529:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1530:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1531:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1532:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1533:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1534:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1535:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1536:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1537:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1538:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1539:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1540:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1541:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1542:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1543:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1544:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buffer_status)
1545:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1546:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1547:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1548:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1549:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1550:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1551:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1552:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1553:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1554:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1556:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1557:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1558:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1560:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1561:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_InvalidateReadData(XMC_USIC_CH_t *const channel)
1562:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1563:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = USIC_CH_FMR_CRDV0_Msk | USIC_CH_FMR_CRDV1_Msk;
1564:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1565:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1566:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1567:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1568:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1569:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1570:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1571:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1572:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1573:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1574:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1575:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1576:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the
1577:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1578:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1579:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1580:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1581:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1582:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1583:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive_level)
1584:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1585:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1586:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1587:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1588:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1589:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1590:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1591:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1592:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1593:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1594:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1595:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1596:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1597:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1598:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1599:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1600:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1601:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1602:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1603:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1604:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1605:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1606:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1607:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1608:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1609:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1610:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1611:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1612:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1613:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1614:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1615:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1616:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1617:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1618:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1619:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1620:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1621:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1622:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1623:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1624:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1625:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1626:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() }
1627:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1628:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1629:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1630:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the
1631:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1632:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1633:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1634:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1635:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1636:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1637:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1638:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
1639:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1640:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1641:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1642:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1643:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1644:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1645:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
1646:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1647:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1648:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1649:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
1650:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1651:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1652:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1653:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1654:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
1655:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
1656:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1657:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR = (channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) | ((limit << USIC_CH_TBCTR
1658:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1659:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1660:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1661:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1666:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1667:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1668:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1669:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1670:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1671:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
1672:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1673:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1674:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1675:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1676:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1677:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1678:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1679:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1680:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1681:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 274              	 .loc 2 1681 0
 275              	 .cfi_startproc
 276              	 
 277              	 
 278              	 
 279 0000 80B4     	 push {r7}
 280              	.LCFI30:
 281              	 .cfi_def_cfa_offset 4
 282              	 .cfi_offset 7,-4
 283 0002 83B0     	 sub sp,sp,#12
 284              	.LCFI31:
 285              	 .cfi_def_cfa_offset 16
 286 0004 00AF     	 add r7,sp,#0
 287              	.LCFI32:
 288              	 .cfi_def_cfa_register 7
 289 0006 7860     	 str r0,[r7,#4]
 290 0008 3960     	 str r1,[r7]
1682:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
 291              	 .loc 2 1682 0
 292 000a 7B68     	 ldr r3,[r7,#4]
 293 000c D3F80821 	 ldr r2,[r3,#264]
 294 0010 3B68     	 ldr r3,[r7]
 295 0012 1A43     	 orrs r2,r2,r3
 296 0014 7B68     	 ldr r3,[r7,#4]
 297 0016 C3F80821 	 str r2,[r3,#264]
1683:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 298              	 .loc 2 1683 0
 299 001a 0C37     	 adds r7,r7,#12
 300              	.LCFI33:
 301              	 .cfi_def_cfa_offset 4
 302 001c BD46     	 mov sp,r7
 303              	.LCFI34:
 304              	 .cfi_def_cfa_register 13
 305              	 
 306 001e 5DF8047B 	 ldr r7,[sp],#4
 307              	.LCFI35:
 308              	 .cfi_restore 7
 309              	 .cfi_def_cfa_offset 0
 310 0022 7047     	 bx lr
 311              	 .cfi_endproc
 312              	.LFE183:
 314              	 .section .text.XMC_USIC_CH_TXFIFO_DisableEvent,"ax",%progbits
 315              	 .align 2
 316              	 .thumb
 317              	 .thumb_func
 319              	XMC_USIC_CH_TXFIFO_DisableEvent:
 320              	.LFB184:
1684:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1685:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1686:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1687:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1688:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1689:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1690:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1691:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1692:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1693:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1694:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
1695:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent().
1696:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1697:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1698:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1699:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1700:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1701:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1702:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1703:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 321              	 .loc 2 1703 0
 322              	 .cfi_startproc
 323              	 
 324              	 
 325              	 
 326 0000 80B4     	 push {r7}
 327              	.LCFI36:
 328              	 .cfi_def_cfa_offset 4
 329              	 .cfi_offset 7,-4
 330 0002 83B0     	 sub sp,sp,#12
 331              	.LCFI37:
 332              	 .cfi_def_cfa_offset 16
 333 0004 00AF     	 add r7,sp,#0
 334              	.LCFI38:
 335              	 .cfi_def_cfa_register 7
 336 0006 7860     	 str r0,[r7,#4]
 337 0008 3960     	 str r1,[r7]
1704:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
 338              	 .loc 2 1704 0
 339 000a 7B68     	 ldr r3,[r7,#4]
 340 000c D3F80821 	 ldr r2,[r3,#264]
 341 0010 3B68     	 ldr r3,[r7]
 342 0012 DB43     	 mvns r3,r3
 343 0014 1A40     	 ands r2,r2,r3
 344 0016 7B68     	 ldr r3,[r7,#4]
 345 0018 C3F80821 	 str r2,[r3,#264]
1705:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 346              	 .loc 2 1705 0
 347 001c 0C37     	 adds r7,r7,#12
 348              	.LCFI39:
 349              	 .cfi_def_cfa_offset 4
 350 001e BD46     	 mov sp,r7
 351              	.LCFI40:
 352              	 .cfi_def_cfa_register 13
 353              	 
 354 0020 5DF8047B 	 ldr r7,[sp],#4
 355              	.LCFI41:
 356              	 .cfi_restore 7
 357              	 .cfi_def_cfa_offset 0
 358 0024 7047     	 bx lr
 359              	 .cfi_endproc
 360              	.LFE184:
 362 0026 00BF     	 .section .text.XMC_USIC_CH_TXFIFO_Flush,"ax",%progbits
 363              	 .align 2
 364              	 .thumb
 365              	 .thumb_func
 367              	XMC_USIC_CH_TXFIFO_Flush:
 368              	.LFB189:
1706:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1710:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1711:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1712:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1713:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1714:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1715:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1716:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1717:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1718:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1719:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1720:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1721:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1722:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1723:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1724:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1725:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1726:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1727:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1728:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1729:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1730:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1731:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1732:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
1733:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1734:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1735:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1736:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1737:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1738:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1739:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1740:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1741:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1742:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1743:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1744:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1745:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1746:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1747:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1748:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1749:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1750:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1751:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1752:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1753:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1754:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1755:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1756:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1757:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1758:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1759:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1760:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param loc Input location. \n
1761:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1762:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1763:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1764:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit data can be loaded to TBUF by software by writing to the transmit buffer input
1765:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * locations TBUFx (x = 00-31), consisting of 32 consecutive addresses. The data written
1766:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * to one of these input locations is stored in the transmit buffer TBUF. Additionally, the
1767:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * address of the written location is evaluated and can be used for additional control
1768:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * purposes. This 5-bit wide information (named Transmit Control Information TCI) can be
1769:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * used for different purposes in different protocols.
1770:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1771:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1772:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableWordLengthControl() \n
1773:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1774:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1775:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataEx(XMC_USIC_CH_t *const channel, const uint16_t data
1776:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1777:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[loc] = data;
1778:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1779:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1780:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1781:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1782:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1783:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1784:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1785:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1786:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1787:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1788:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1789:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1790:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1791:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1792:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1793:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1794:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1795:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_PutDataEx() \n
1796:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1797:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1798:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1799:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1800:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1801:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1802:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1803:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1804:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1805:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1806:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1807:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1808:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1809:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1810:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1811:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1812:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1813:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1814:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1815:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1816:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1817:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1818:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1819:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1820:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1821:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1822:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1823:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1824:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1825:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1826:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1827:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1828:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1829:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1830:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1831:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1832:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1833:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1834:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1835:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1836:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1837:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1838:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1839:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1840:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1841:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1842:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 369              	 .loc 2 1842 0
 370              	 .cfi_startproc
 371              	 
 372              	 
 373              	 
 374 0000 80B4     	 push {r7}
 375              	.LCFI42:
 376              	 .cfi_def_cfa_offset 4
 377              	 .cfi_offset 7,-4
 378 0002 83B0     	 sub sp,sp,#12
 379              	.LCFI43:
 380              	 .cfi_def_cfa_offset 16
 381 0004 00AF     	 add r7,sp,#0
 382              	.LCFI44:
 383              	 .cfi_def_cfa_register 7
 384 0006 7860     	 str r0,[r7,#4]
1843:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
 385              	 .loc 2 1843 0
 386 0008 7B68     	 ldr r3,[r7,#4]
 387 000a 4FF40042 	 mov r2,#32768
 388 000e C3F81821 	 str r2,[r3,#280]
1844:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 389              	 .loc 2 1844 0
 390 0012 0C37     	 adds r7,r7,#12
 391              	.LCFI45:
 392              	 .cfi_def_cfa_offset 4
 393 0014 BD46     	 mov sp,r7
 394              	.LCFI46:
 395              	 .cfi_def_cfa_register 13
 396              	 
 397 0016 5DF8047B 	 ldr r7,[sp],#4
 398              	.LCFI47:
 399              	 .cfi_restore 7
 400              	 .cfi_def_cfa_offset 0
 401 001a 7047     	 bx lr
 402              	 .cfi_endproc
 403              	.LFE189:
 405              	 .section .text.XMC_USIC_CH_TXFIFO_IsFull,"ax",%progbits
 406              	 .align 2
 407              	 .thumb
 408              	 .thumb_func
 410              	XMC_USIC_CH_TXFIFO_IsFull:
 411              	.LFB190:
1845:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1846:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1847:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1848:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1849:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1850:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1851:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1852:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1853:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1854:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1855:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1856:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1857:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1858:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1859:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1860:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1861:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 412              	 .loc 2 1861 0
 413              	 .cfi_startproc
 414              	 
 415              	 
 416              	 
 417 0000 80B4     	 push {r7}
 418              	.LCFI48:
 419              	 .cfi_def_cfa_offset 4
 420              	 .cfi_offset 7,-4
 421 0002 83B0     	 sub sp,sp,#12
 422              	.LCFI49:
 423              	 .cfi_def_cfa_offset 16
 424 0004 00AF     	 add r7,sp,#0
 425              	.LCFI50:
 426              	 .cfi_def_cfa_register 7
 427 0006 7860     	 str r0,[r7,#4]
1862:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
 428              	 .loc 2 1862 0
 429 0008 7B68     	 ldr r3,[r7,#4]
 430 000a D3F81431 	 ldr r3,[r3,#276]
 431 000e 03F48053 	 and r3,r3,#4096
 432 0012 002B     	 cmp r3,#0
 433 0014 14BF     	 ite ne
 434 0016 0123     	 movne r3,#1
 435 0018 0023     	 moveq r3,#0
 436 001a DBB2     	 uxtb r3,r3
1863:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 437              	 .loc 2 1863 0
 438 001c 1846     	 mov r0,r3
 439 001e 0C37     	 adds r7,r7,#12
 440              	.LCFI51:
 441              	 .cfi_def_cfa_offset 4
 442 0020 BD46     	 mov sp,r7
 443              	.LCFI52:
 444              	 .cfi_def_cfa_register 13
 445              	 
 446 0022 5DF8047B 	 ldr r7,[sp],#4
 447              	.LCFI53:
 448              	 .cfi_restore 7
 449              	 .cfi_def_cfa_offset 0
 450 0026 7047     	 bx lr
 451              	 .cfi_endproc
 452              	.LFE190:
 454              	 .section .text.XMC_USIC_CH_TXFIFO_IsEmpty,"ax",%progbits
 455              	 .align 2
 456              	 .thumb
 457              	 .thumb_func
 459              	XMC_USIC_CH_TXFIFO_IsEmpty:
 460              	.LFB191:
1864:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1865:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1866:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1867:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1868:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1869:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1870:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1872:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1873:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1874:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO,
1875:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1876:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1877:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1878:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1879:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1880:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1881:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 461              	 .loc 2 1881 0
 462              	 .cfi_startproc
 463              	 
 464              	 
 465              	 
 466 0000 80B4     	 push {r7}
 467              	.LCFI54:
 468              	 .cfi_def_cfa_offset 4
 469              	 .cfi_offset 7,-4
 470 0002 83B0     	 sub sp,sp,#12
 471              	.LCFI55:
 472              	 .cfi_def_cfa_offset 16
 473 0004 00AF     	 add r7,sp,#0
 474              	.LCFI56:
 475              	 .cfi_def_cfa_register 7
 476 0006 7860     	 str r0,[r7,#4]
1882:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
 477              	 .loc 2 1882 0
 478 0008 7B68     	 ldr r3,[r7,#4]
 479 000a D3F81431 	 ldr r3,[r3,#276]
 480 000e 03F40063 	 and r3,r3,#2048
 481 0012 002B     	 cmp r3,#0
 482 0014 14BF     	 ite ne
 483 0016 0123     	 movne r3,#1
 484 0018 0023     	 moveq r3,#0
 485 001a DBB2     	 uxtb r3,r3
1883:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 486              	 .loc 2 1883 0
 487 001c 1846     	 mov r0,r3
 488 001e 0C37     	 adds r7,r7,#12
 489              	.LCFI57:
 490              	 .cfi_def_cfa_offset 4
 491 0020 BD46     	 mov sp,r7
 492              	.LCFI58:
 493              	 .cfi_def_cfa_register 13
 494              	 
 495 0022 5DF8047B 	 ldr r7,[sp],#4
 496              	.LCFI59:
 497              	 .cfi_restore 7
 498              	 .cfi_def_cfa_offset 0
 499 0026 7047     	 bx lr
 500              	 .cfi_endproc
 501              	.LFE191:
 503              	 .section .text.XMC_USIC_CH_RXFIFO_EnableEvent,"ax",%progbits
 504              	 .align 2
 505              	 .thumb
 506              	 .thumb_func
 508              	XMC_USIC_CH_RXFIFO_EnableEvent:
 509              	.LFB196:
1884:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1885:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1886:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1887:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1888:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n
1889:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1890:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1891:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1892:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1893:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1894:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1895:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1896:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1897:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1898:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1899:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1900:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1901:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1902:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1903:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1904:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1905:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1906:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1907:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1908:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1909:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1910:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1911:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1912:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1913:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1914:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1915:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1916:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1917:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1918:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1919:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1920:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1921:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1922:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1923:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1924:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_TBERI_Msk));
1925:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1926:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1927:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1928:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1929:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1930:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1931:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1932:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1933:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1934:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1935:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1936:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1937:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
1938:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1939:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
1940:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1941:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1942:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1943:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1944:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1945:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1946:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
1947:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
1948:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1949:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
1950:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1951:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1952:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1953:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1954:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1955:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1956:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1957:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1958:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1959:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1960:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1961:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1962:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1963:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1964:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1965:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1966:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1967:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1968:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1969:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1970:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1971:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1972:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** */
1973:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1974:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1975:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1976:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1977:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
1978:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
1979:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1980:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1981:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1982:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1983:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1984:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1985:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1986:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1987:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_RXFIFO_SetTriggerLimit() }
1988:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1989:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1990:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1991:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the
1992:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1993:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
1994:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1995:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1996:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
1997:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1998:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1999:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
2000:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
2001:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
2002:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2003:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2004:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
2005:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
2006:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2007:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2008:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2009:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
2010:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2011:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2012:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() \n\n\n
2013:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
2014:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
2015:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
2016:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
2017:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR = (channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) | ((limit << USIC_CH_RBCTR
2018:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
2019:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
2020:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
2021:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2022:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2023:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
2024:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2025:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2026:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2027:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
2028:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
2029:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
2030:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
2031:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2032:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
2033:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
2034:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2035:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2036:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
2037:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
2038:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
2039:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 510              	 .loc 2 2039 0
 511              	 .cfi_startproc
 512              	 
 513              	 
 514              	 
 515 0000 80B4     	 push {r7}
 516              	.LCFI60:
 517              	 .cfi_def_cfa_offset 4
 518              	 .cfi_offset 7,-4
 519 0002 83B0     	 sub sp,sp,#12
 520              	.LCFI61:
 521              	 .cfi_def_cfa_offset 16
 522 0004 00AF     	 add r7,sp,#0
 523              	.LCFI62:
 524              	 .cfi_def_cfa_register 7
 525 0006 7860     	 str r0,[r7,#4]
 526 0008 3960     	 str r1,[r7]
2040:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
 527              	 .loc 2 2040 0
 528 000a 7B68     	 ldr r3,[r7,#4]
 529 000c D3F80C21 	 ldr r2,[r3,#268]
 530 0010 3B68     	 ldr r3,[r7]
 531 0012 1A43     	 orrs r2,r2,r3
 532 0014 7B68     	 ldr r3,[r7,#4]
 533 0016 C3F80C21 	 str r2,[r3,#268]
2041:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 534              	 .loc 2 2041 0
 535 001a 0C37     	 adds r7,r7,#12
 536              	.LCFI63:
 537              	 .cfi_def_cfa_offset 4
 538 001c BD46     	 mov sp,r7
 539              	.LCFI64:
 540              	 .cfi_def_cfa_register 13
 541              	 
 542 001e 5DF8047B 	 ldr r7,[sp],#4
 543              	.LCFI65:
 544              	 .cfi_restore 7
 545              	 .cfi_def_cfa_offset 0
 546 0022 7047     	 bx lr
 547              	 .cfi_endproc
 548              	.LFE196:
 550              	 .section .text.XMC_USIC_CH_RXFIFO_DisableEvent,"ax",%progbits
 551              	 .align 2
 552              	 .thumb
 553              	 .thumb_func
 555              	XMC_USIC_CH_RXFIFO_DisableEvent:
 556              	.LFB197:
2042:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
2043:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
2044:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
2045:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2046:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2047:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
2048:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
2049:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
2050:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2051:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2052:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2053:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
2054:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
2055:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent().
2056:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
2057:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
2058:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2059:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2060:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2061:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
2062:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
2063:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 557              	 .loc 2 2063 0
 558              	 .cfi_startproc
 559              	 
 560              	 
 561              	 
 562 0000 80B4     	 push {r7}
 563              	.LCFI66:
 564              	 .cfi_def_cfa_offset 4
 565              	 .cfi_offset 7,-4
 566 0002 83B0     	 sub sp,sp,#12
 567              	.LCFI67:
 568              	 .cfi_def_cfa_offset 16
 569 0004 00AF     	 add r7,sp,#0
 570              	.LCFI68:
 571              	 .cfi_def_cfa_register 7
 572 0006 7860     	 str r0,[r7,#4]
 573 0008 3960     	 str r1,[r7]
2064:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
 574              	 .loc 2 2064 0
 575 000a 7B68     	 ldr r3,[r7,#4]
 576 000c D3F80C21 	 ldr r2,[r3,#268]
 577 0010 3B68     	 ldr r3,[r7]
 578 0012 DB43     	 mvns r3,r3
 579 0014 1A40     	 ands r2,r2,r3
 580 0016 7B68     	 ldr r3,[r7,#4]
 581 0018 C3F80C21 	 str r2,[r3,#268]
2065:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 582              	 .loc 2 2065 0
 583 001c 0C37     	 adds r7,r7,#12
 584              	.LCFI69:
 585              	 .cfi_def_cfa_offset 4
 586 001e BD46     	 mov sp,r7
 587              	.LCFI70:
 588              	 .cfi_def_cfa_register 13
 589              	 
 590 0020 5DF8047B 	 ldr r7,[sp],#4
 591              	.LCFI71:
 592              	 .cfi_restore 7
 593              	 .cfi_def_cfa_offset 0
 594 0024 7047     	 bx lr
 595              	 .cfi_endproc
 596              	.LFE197:
 598 0026 00BF     	 .section .text.XMC_USIC_CH_RXFIFO_Flush,"ax",%progbits
 599              	 .align 2
 600              	 .thumb
 601              	 .thumb_func
 603              	XMC_USIC_CH_RXFIFO_Flush:
 604              	.LFB199:
2066:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
2067:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
2068:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2069:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2070:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
2071:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
2072:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
2073:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
2074:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
2075:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2076:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2077:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2078:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
2079:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
2080:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
2081:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
2082:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
2083:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
2084:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
2085:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2086:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
2087:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2088:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2089:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2090:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
2091:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
2092:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
2093:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
2094:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
2095:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
2096:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2097:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2098:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
2099:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
2100:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2101:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2102:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
2103:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
2104:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
2105:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
2106:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
2107:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2108:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2109:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
2110:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
2111:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
2112:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
2113:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
2114:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
2115:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
2116:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
2117:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2118:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2119:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2120:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2121:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2122:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
2123:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
2124:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2125:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2126:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
2127:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
2128:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
2129:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 605              	 .loc 2 2129 0
 606              	 .cfi_startproc
 607              	 
 608              	 
 609              	 
 610 0000 80B4     	 push {r7}
 611              	.LCFI72:
 612              	 .cfi_def_cfa_offset 4
 613              	 .cfi_offset 7,-4
 614 0002 83B0     	 sub sp,sp,#12
 615              	.LCFI73:
 616              	 .cfi_def_cfa_offset 16
 617 0004 00AF     	 add r7,sp,#0
 618              	.LCFI74:
 619              	 .cfi_def_cfa_register 7
 620 0006 7860     	 str r0,[r7,#4]
2130:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
 621              	 .loc 2 2130 0
 622 0008 7B68     	 ldr r3,[r7,#4]
 623 000a 4FF48042 	 mov r2,#16384
 624 000e C3F81821 	 str r2,[r3,#280]
2131:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 625              	 .loc 2 2131 0
 626 0012 0C37     	 adds r7,r7,#12
 627              	.LCFI75:
 628              	 .cfi_def_cfa_offset 4
 629 0014 BD46     	 mov sp,r7
 630              	.LCFI76:
 631              	 .cfi_def_cfa_register 13
 632              	 
 633 0016 5DF8047B 	 ldr r7,[sp],#4
 634              	.LCFI77:
 635              	 .cfi_restore 7
 636              	 .cfi_def_cfa_offset 0
 637 001a 7047     	 bx lr
 638              	 .cfi_endproc
 639              	.LFE199:
 641              	 .section .text.XMC_USIC_CH_RXFIFO_IsEmpty,"ax",%progbits
 642              	 .align 2
 643              	 .thumb
 644              	 .thumb_func
 646              	XMC_USIC_CH_RXFIFO_IsEmpty:
 647              	.LFB201:
2132:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
2133:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
2134:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2135:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2136:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
2137:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
2138:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2139:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2140:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
2141:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
2142:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
2143:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2144:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2145:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
2146:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
2147:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
2148:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
2149:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
2150:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
2151:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** 
2152:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** /**
2153:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2154:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2155:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
2156:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
2157:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2158:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2159:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
2160:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
2161:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
2162:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
2163:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  *
2164:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2165:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2166:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****  */
2167:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
2168:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** {
 648              	 .loc 2 2168 0
 649              	 .cfi_startproc
 650              	 
 651              	 
 652              	 
 653 0000 80B4     	 push {r7}
 654              	.LCFI78:
 655              	 .cfi_def_cfa_offset 4
 656              	 .cfi_offset 7,-4
 657 0002 83B0     	 sub sp,sp,#12
 658              	.LCFI79:
 659              	 .cfi_def_cfa_offset 16
 660 0004 00AF     	 add r7,sp,#0
 661              	.LCFI80:
 662              	 .cfi_def_cfa_register 7
 663 0006 7860     	 str r0,[r7,#4]
2169:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
 664              	 .loc 2 2169 0
 665 0008 7B68     	 ldr r3,[r7,#4]
 666 000a D3F81431 	 ldr r3,[r3,#276]
 667 000e 03F00803 	 and r3,r3,#8
 668 0012 002B     	 cmp r3,#0
 669 0014 14BF     	 ite ne
 670 0016 0123     	 movne r3,#1
 671 0018 0023     	 moveq r3,#0
 672 001a DBB2     	 uxtb r3,r3
2170:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_usic.h **** }
 673              	 .loc 2 2170 0
 674 001c 1846     	 mov r0,r3
 675 001e 0C37     	 adds r7,r7,#12
 676              	.LCFI81:
 677              	 .cfi_def_cfa_offset 4
 678 0020 BD46     	 mov sp,r7
 679              	.LCFI82:
 680              	 .cfi_def_cfa_register 13
 681              	 
 682 0022 5DF8047B 	 ldr r7,[sp],#4
 683              	.LCFI83:
 684              	 .cfi_restore 7
 685              	 .cfi_def_cfa_offset 0
 686 0026 7047     	 bx lr
 687              	 .cfi_endproc
 688              	.LFE201:
 690              	 .section .text.XMC_I2C_CH_SetInterruptNodePointer,"ax",%progbits
 691              	 .align 2
 692              	 .thumb
 693              	 .thumb_func
 695              	XMC_I2C_CH_SetInterruptNodePointer:
 696              	.LFB212:
 697              	 .file 3 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_i2c.h"
   1:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
   2:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @file xmc_i2c.h
   3:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @date 2020-12-05
   4:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   5:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @cond
   6:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *****************************************************************************
   7:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   9:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * All rights reserved.
  11:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  12:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  14:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * do so, all subject to the following:
  20:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  21:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * a source language processor.
  27:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  28:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  36:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * at XMCSupport@infineon.com.
  39:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *****************************************************************************
  40:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  41:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Change History
  42:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * --------------
  43:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  44:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-02-20:
  45:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Initial <br>
  46:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  47:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-05-20:
  48:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Description updated <br>
  49:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_TriggerServiceRequest() and XMC_I2C_CH_SelectInterruptNodePointer() <br>
  50:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  51:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-06-20:
  52:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  53:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  54:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-08-27:
  55:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for external input for BRG configuration:XMC_I2C_CH_ConfigExternalInputSignalTo
  56:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  57:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-09-01:
  58:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for enabling or disabling the ACK response to a 0x00 slave address: XMC_I2C_CH_
  59:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *       XMC_I2C_CH_DisableSlaveAcknowledgeTo00(). <br>
  60:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_SetInputSource() API for avoiding complete DXCR register overwriting. 
  61:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_EVENT_t enum for supporting XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_Di
  62:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *       for supporting multiple events configuration <br>
  63:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  64:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-02:
  65:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix 10bit addressing
  66:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  67:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-07:
  68:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix register access in XMC_I2C_CH_EnableSlaveAcknowledgeTo00() and XMC_I2C_CH_DisableSlave
  69:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Naming of APIs modified: from XMC_I2C_CH_EnableSlaveAcknowledgeTo00() to  XMC_I2C_CH_Enabl
  70:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *       and from XMC_I2C_CH_DisableSlaveAcknowledgeTo00() to XMC_I2C_CH_DisableAcknowledgeAddress0
  71:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  72:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-05-20:
  73:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableDataTransmission() and XMC_I2C_CH_DisableDataTransmission()
  74:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  75:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-08-17:
  76:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Improved documentation of slave address passing
  77:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  78:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2017-10-25:
  79:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableMasterClock() and XMC_I2C_CH_DisableMasterClock()
  80:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  81:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-05-07:
  82:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added normal_divider_mode to XMC_I2C_CH_CONFIG_t configuration structure.
  83:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  84:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetBaudrateEx()
  85:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  86:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-12-10:
  87:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetHoldDelay()
  88:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  89:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2020-12-05:
  90:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *    - Added XMC_I2C_CH_InitEx() that allows user select if automatic baudrate configuration shoul
  91:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  92:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @endcond
  93:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  94:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  95:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
  96:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #ifndef XMC_I2C_H
  97:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_H
  98:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
  99:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 100:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * HEADER FILES
 101:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 102:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 103:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #include "xmc_usic.h"
 104:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 105:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 106:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup XMClib XMC Peripheral Library
 107:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 108:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 109:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 110:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 111:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup I2C
 112:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief Inter Integrated Circuit(IIC) driver for the XMC microcontroller family.
 113:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 114:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * USIC IIC Features: <br>
 115:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *  * Two-wire interface, with one line for shift clock transfer and synchronization (shift clock S
 116:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Communication in standard mode (100 kBit/s) or in fast mode (up to 400 kBit/s) <br>
 117:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Support of 7-bit addressing, as well as 10-bit addressing <br>
 118:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Master mode operation, where the IIC controls the bus transactions and provides the clock sign
 119:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Slave mode operation, where an external master controls the bus transactions and provides the 
 120:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Multi-master mode operation, where several masters can be connected to the bus and bus arbitra
 121:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 	  The master/slave operation of an IIC bus participant can change from frame to frame. <br>
 122:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Efficient frame handling (low software effort), also allowing DMA transfers <br>
 123:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Powerful interrupt handling due to multitude of indication flags <br>
 124:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 125:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 126:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 127:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 128:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * MACROS
 129:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 130:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 131:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC0)
 132:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
 133:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
 134:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 135:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 136:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC1)
 137:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
 138:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
 139:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 140:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 141:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC2)
 142:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 143:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 144:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 145:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 146:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_10BIT_ADDR_GROUP       (0x7800U)	 /**< Value to verify the address is 10-bit or not
 147:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 148:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 149:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * ENUMS
 150:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 151:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 152:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 153:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C Status
 154:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 155:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS
 156:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 157:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_OK,      /**< Status OK */
 158:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_ERROR,   /**< Status ERROR */
 159:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_BUSY     /**< Status BUSY */
 160:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_t;
 161:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 162:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 163:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C status
 164:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 165:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS_FLAG
 166:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 167:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_SELECT = USIC_CH_PSR_IICMode_SLSEL_Msk,                     /**< Sla
 168:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND = USIC_CH_PSR_IICMode_WTDF_Msk,              /**< Wro
 169:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_SCR_Msk,           /**< Sta
 170:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_RSCR_Msk, /**< Rep
 171:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_PCR_Msk,            /**< Sto
 172:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED = USIC_CH_PSR_IICMode_NACK_Msk,                     /**< NAC
 173:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST = USIC_CH_PSR_IICMode_ARL_Msk,                   /**< Arb
 174:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_READ_REQUESTED = USIC_CH_PSR_IICMode_SRR_Msk,               /**< Sla
 175:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ERROR = USIC_CH_PSR_IICMode_ERR_Msk,                              /**< Err
 176:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED = USIC_CH_PSR_IICMode_ACK_Msk,                       /**< ACK
 177:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IICMode_RSIF_Msk,         /**< Rec
 178:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IICMode_DLIF_Msk,              /**< Dat
 179:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IICMode_TSIF_Msk,         /**< Tra
 180:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IICMode_TBIF_Msk,        /**< Tra
 181:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_RIF_Msk,                 /**< Rec
 182:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_AIF_Msk,     /**< Alt
 183:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IICMode_BRGIF_Msk    /**< Bau
 184:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_FLAG_t;
 185:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 186:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 187:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C receiver status. The received data byte is available at the bit
 188:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * positions RBUF[7:0], whereas the additional information is monitored at the bit positions
 189:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** *  RBUF[12:8].
 190:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 191:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_RECEIVER_STATUS_FLAG
 192:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 193:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ACK = 0x1U,      /**< Bit 8:  Value of Received Acknowledgement b
 194:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_FIN = 0x2U,      /**< Bit 9:  A 1 at this bit position indicates 
 195:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 followed by the address reception t
 196:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 been received. A 0 at this bit posi
 197:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_MODE = 0x4U,     /**< Bit 10: A 0 at this bit position indicates 
 198:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 when the device has been in slave m
 199:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ERR = 0x8U,      /**< Bit 11: A 1 at this bit position indicates 
 200:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 data byte in the receive buffer */
 201:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ADR = 0x10       /**< Bit 12: A 0 at this bit position indicates 
 202:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 has been received. A 1 indicates a 
 203:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_RECEIVER_STATUS_FLAG_t;
 204:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 205:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 206:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C commands
 207:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 208:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_CMD
 209:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 210:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_WRITE,                            /**< I2C Command Write */
 211:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_READ                              /**< I2C Command Read */
 212:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CMD_t;
 213:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 214:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 215:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C events
 216:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 217:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_EVENT
 218:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 219:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 220:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 221:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 222:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 223:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 224:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 225:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 226:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 227:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_SCRIEN_Msk,             /**< Star
 228:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_RSCRIEN_Msk,   /**< Repe
 229:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STOP_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_PCRIEN_Msk,              /**< Stop
 230:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_NACK = USIC_CH_PCR_IICMode_NACKIEN_Msk,                                /**< NACK
 231:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ARBITRATION_LOST = USIC_CH_PCR_IICMode_ARLIEN_Msk,                     /**< Arbi
 232:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_SLAVE_READ_REQUEST = USIC_CH_PCR_IICMode_SRRIEN_Msk,                   /**< Slav
 233:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ERROR = USIC_CH_PCR_IICMode_ERRIEN_Msk,	                              /**< Error
 234:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ACK = USIC_CH_PCR_IICMode_ACKIEN_Msk                                   /**< ACK 
 235:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_EVENT_t;
 236:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 237:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 238:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C input stage selection
 239:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 240:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INPUT
 241:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 242:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA = 0U,   /**< selection of sda input stage */
 243:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 244:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA1 = 3U,
 245:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA2 = 5U,
 246:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 247:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL = 1U,  /**< selection of scl input stage */
 248:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 249:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL1 = 4U
 250:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 251:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INPUT_t;
 252:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 253:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 254:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * I2C channel interrupt node pointers
 255:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 256:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INTERRUPT_NODE_POINTER
 257:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 258:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 259:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 260:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 261:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 262:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 263:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INTERRUPT_NODE_POINTER_t;
 264:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 265:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 266:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * DATA STRUCTURES
 267:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 268:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 269:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C_CH configuration structure
 270:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 271:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** typedef struct XMC_I2C_CH_CONFIG
 272:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 273:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   uint32_t baudrate;   /**< baud rate configuration upto max of 400KHz */
 274:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   bool normal_divider_mode; /**< Selects normal divider mode for baudrate generator instead of defa
 275:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   uint16_t address;    /**< slave address
 276:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 7-bit address needs to be left shifted it by 1.
 277:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 10-bit address needs to be ORed with XMC_I2C_10BIT_ADDR_GROUP. */
 278:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CONFIG_t;
 279:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 280:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 281:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * API PROTOTYPES
 282:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 283:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 284:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #ifdef __cplusplus
 285:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** extern "C" {
 286:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 287:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 288:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 289:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 290:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 291:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param init_brg Selects if the baudrate generator should be configured automatically.
 292:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 293:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 294:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 295:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 296:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 297:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 298:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 299:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 300:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 301:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 302:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 303:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 304:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 305:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config, bool 
 306:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 307:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 308:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 309:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 310:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 311:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 312:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 313:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 314:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 315:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 316:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 317:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 318:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 319:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 320:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 321:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 322:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 323:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const
 324:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 325:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_InitEx(channel, config, true);
 326:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** }
 327:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 328:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 329:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 330:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 331:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 332:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 333:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 334:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 335:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 336:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 337:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 338:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 339:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 340:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 341:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 342:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 343:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 344:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 345:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 346:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 347:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 348:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 349:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 350:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 351:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 352:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 353:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 354:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 355:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 356:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 357:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 358:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 359:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 360:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 361:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, bool norm
 362:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 363:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 364:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 365:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 366:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 367:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 368:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 369:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C \a channel.
 370:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 371:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 372:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation mode to I2C mode using CCR register.
 373:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 374:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 375:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 376:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 377:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Start(XMC_USIC_CH_t *const channel)
 378:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 379:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2C);
 380:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** }
 381:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 382:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 383:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 384:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 385:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return @ref XMC_I2C_CH_STATUS_t<br>
 386:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 387:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 388:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C \a channel.<br>
 389:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 390:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 391:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation to IDLE mode using CCR register.
 392:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 393:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 394:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 395:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 396:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel);
 397:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 398:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 399:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 400:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number in the range of 0-5
 401:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 402:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 403:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 404:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for protocol interrupt.<br>
 405:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 406:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 407:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * To generate interrupt for an event, node pointer should be configured with service request numbe
 408:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 409:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 410:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 411:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * NVIC node should be separately enabled to generate the interrupt. After setting the node pointer
 412:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 413:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 414:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent(), NVIC_SetPriority(), NVIC_EnableIRQ(), XMC_I2C_CH_SetInputSource()<br>
 415:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 416:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 417:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****     const uint8_t service_request)
 418:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 698              	 .loc 3 418 0
 699              	 .cfi_startproc
 700              	 
 701              	 
 702 0000 80B5     	 push {r7,lr}
 703              	.LCFI84:
 704              	 .cfi_def_cfa_offset 8
 705              	 .cfi_offset 7,-8
 706              	 .cfi_offset 14,-4
 707 0002 82B0     	 sub sp,sp,#8
 708              	.LCFI85:
 709              	 .cfi_def_cfa_offset 16
 710 0004 00AF     	 add r7,sp,#0
 711              	.LCFI86:
 712              	 .cfi_def_cfa_register 7
 713 0006 7860     	 str r0,[r7,#4]
 714 0008 0B46     	 mov r3,r1
 715 000a FB70     	 strb r3,[r7,#3]
 419:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, service
 716              	 .loc 3 419 0
 717 000c FB78     	 ldrb r3,[r7,#3]
 718 000e 7868     	 ldr r0,[r7,#4]
 719 0010 1021     	 movs r1,#16
 720 0012 1A46     	 mov r2,r3
 721 0014 FFF7FEFF 	 bl XMC_USIC_CH_SetInterruptNodePointer
 420:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** }
 722              	 .loc 3 420 0
 723 0018 0837     	 adds r7,r7,#8
 724              	.LCFI87:
 725              	 .cfi_def_cfa_offset 8
 726 001a BD46     	 mov sp,r7
 727              	.LCFI88:
 728              	 .cfi_def_cfa_register 13
 729              	 
 730 001c 80BD     	 pop {r7,pc}
 731              	 .cfi_endproc
 732              	.LFE212:
 734 001e 00BF     	 .section .text.XMC_I2C_CH_GetStatusFlag,"ax",%progbits
 735              	 .align 2
 736              	 .thumb
 737              	 .thumb_func
 739              	XMC_I2C_CH_GetStatusFlag:
 740              	.LFB217:
 421:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 422:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 423:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 424:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 425:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				  \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref XM
 426:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 427:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: @ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 428:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  			@ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 429:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number.\n
 430:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: 0 to 5.
 431:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 432:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 433:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 434:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for USIC channel events. \n\n
 435:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 436:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 437:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 438:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 439:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 440:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent() \n\n\n
 441:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 442:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 443:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****     const XMC_I2C_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 444:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****     const uint32_t service_request)
 445:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 446:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 447:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****                                       (uint32_t)service_request);
 448:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** }
 449:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 450:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 451:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 452:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				   \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref X
 453:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 454:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 			\b Range: 0 to 5.
 455:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 456:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 457:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 458:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Trigger a I2C interrupt service request.\n\n
 459:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * When the I2C service request is triggered, the NVIC interrupt associated with it will be
 460:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * generated if enabled.
 461:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 462:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 463:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SelectInterruptNodePointer() \n\n\n
 464:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 465:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t 
 466:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 467:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 468:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** }
 469:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 470:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 471:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 472:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param input I2C channel input stage of type @ref XMC_I2C_CH_INPUT_t
 473:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param source Input source select for the input stage(0->DX0A, 1->DX1A, .. 7->DX7G)
 474:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 475:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 476:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 477:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the input source for I2C \a channel.<br>
 478:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Defines the input stage for the corresponding input line.
 479:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 480:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note After configuring the input source for corresponding channel, interrupt node pointer is se
 481:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 482:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 483:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetInptSource(), XMC_USIC_CH_SetInterruptNodePointer()
 484:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 485:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 486:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_INPUT
 487:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 488:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->DXCR[input] =  (uint32_t)(channel->DXCR[input] & (~USIC_CH_DX0CR_INSW_Msk)) | USIC_CH_DX
 489:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 490:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** }
 491:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 492:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 493:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 494:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param address I2C slave address
 495:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 496:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 497:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 498:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the I2C \a channel slave address.<br>
 499:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 500:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 501:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Address is set in PCR_IICMode register by checking if it is in 10-bit address group or 7-bit add
 502:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is 10-bit mode otherwis
 503:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address should include an additional bit at the LSB for read/write indication. For
 504:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. A 10-bit address should be provided with the identifier 0b11110xx at the mo
 505:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * address 0x305 should be provided as 0x7b05(bitwise OR with 0x7800).
 506:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 507:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 508:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetSlaveAddress()\n\n
 509:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 510:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address);
 511:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 512:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 513:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel handler of type @ref XMC_USIC_CH_t
 514:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint16_t Slave address<br>
 515:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 516:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 517:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the I2C \a channel slave address.<br>
 518:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 519:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 520:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Returns the address using PCR_IICMode register by checking if it is in 10-bit address group or 7
 521:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is considered as 10-bit
 522:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address will include an additional bit at the LSB. For example, address 0x05 will 
 523:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * 10-bit address will not include the 10-bit address identifier 0b11110xx at the most signifcant b
 524:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 525:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 526:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SetSlaveAddress()\n\n
 527:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 528:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel);
 529:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 530:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 531:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 532:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 533:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 534:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 535:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 536:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 537:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C master \a channel.<br>
 538:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 539:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 540:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Start condition with read/write command by updating IN/TBUF register based on FIFO/non
 541:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 542:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 543:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 544:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 545:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 546:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 547:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 548:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 549:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 550:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 551:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 552:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 553:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 554:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 555:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 556:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 557:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 558:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition from I2C master \a channel.<br>
 559:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 560:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 561:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition with read/write command by updating IN/TBUF register based on
 562:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 563:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 564:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 565:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 566:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 567:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 568:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 569:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 570:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 571:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 572:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 573:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 574:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 575:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 576:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 577:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C master \a channel.<br>
 578:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 579:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 580:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on F
 581:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 582:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 583:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 584:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 585:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel);
 586:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 587:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 588:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 589:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 590:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 591:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 592:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 593:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C master \a channel.<br>
 594:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 595:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 596:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 597:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 598:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 599:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 600:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 601:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 602:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 603:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 604:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 605:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 606:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 607:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 608:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 609:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C slave \a channel.<br>
 610:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 611:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 612:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 613:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 614:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 615:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(),XMC_I2C_CH_ClearStatusFlag()\n\n
 616:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 617:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 618:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 619:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 620:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 621:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 622:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 623:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 624:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Ack request from I2C master \a channel.<br>
 625:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 626:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 627:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FIF
 628:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 629:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 630:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 631:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 632:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel);
 633:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 634:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 635:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 636:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 637:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 638:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 639:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Nack request from I2C master \a channel.<br>
 640:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 641:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 642:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 643:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 644:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 645:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 646:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 647:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel);
 648:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 649:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 650:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 651:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t OUTR/RBUF register data<br>
 652:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 653:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 654:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the data from I2C \a channel.<br>
 655:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 656:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 657:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Data is read by using OUTR/RBUF register based on FIFO/non-FIFO modes.
 658:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 659:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 660:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 661:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 662:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel);
 663:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 664:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 665:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 666:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t Receiver status flag<br>
 667:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 668:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 669:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the receiver status of I2C \a channel using RBUF register of bits 8-12 which gives informat
 670:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 671:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 672:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 673:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 674:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint8_t XMC_I2C_CH_GetReceiverStatusFlag(XMC_USIC_CH_t *const channel)
 675:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 676:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   return ((uint8_t)((channel->RBUF) >> 8U));
 677:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** }
 678:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 679:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 680:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 681:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 682:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 683:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 684:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 685:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Enables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 686:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 687:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 688:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_DisableEvent()\n\n
 689:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 690:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 691:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 692:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 693:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 694:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 695:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 696:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 697:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 698:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Disables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 699:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 700:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 701:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent()\n\n
 702:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 703:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 704:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 705:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 706:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 707:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint32_t Status byte<br>
 708:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 709:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 710:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Retrieves the status byte of I2C \a channel using PSR_IICMode register.\n
 711:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 712:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 713:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_ClearStatusFlag()\n\n
 714:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 715:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint32_t XMC_I2C_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 716:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 741              	 .loc 3 716 0
 742              	 .cfi_startproc
 743              	 
 744              	 
 745              	 
 746 0000 80B4     	 push {r7}
 747              	.LCFI89:
 748              	 .cfi_def_cfa_offset 4
 749              	 .cfi_offset 7,-4
 750 0002 83B0     	 sub sp,sp,#12
 751              	.LCFI90:
 752              	 .cfi_def_cfa_offset 16
 753 0004 00AF     	 add r7,sp,#0
 754              	.LCFI91:
 755              	 .cfi_def_cfa_register 7
 756 0006 7860     	 str r0,[r7,#4]
 717:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   return (channel->PSR_IICMode);
 757              	 .loc 3 717 0
 758 0008 7B68     	 ldr r3,[r7,#4]
 759 000a 9B6C     	 ldr r3,[r3,#72]
 718:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** }
 760              	 .loc 3 718 0
 761 000c 1846     	 mov r0,r3
 762 000e 0C37     	 adds r7,r7,#12
 763              	.LCFI92:
 764              	 .cfi_def_cfa_offset 4
 765 0010 BD46     	 mov sp,r7
 766              	.LCFI93:
 767              	 .cfi_def_cfa_register 13
 768              	 
 769 0012 5DF8047B 	 ldr r7,[sp],#4
 770              	.LCFI94:
 771              	 .cfi_restore 7
 772              	 .cfi_def_cfa_offset 0
 773 0016 7047     	 bx lr
 774              	 .cfi_endproc
 775              	.LFE217:
 777              	 .section .text.XMC_I2C_CH_ClearStatusFlag,"ax",%progbits
 778              	 .align 2
 779              	 .thumb
 780              	 .thumb_func
 782              	XMC_I2C_CH_ClearStatusFlag:
 783              	.LFB218:
 719:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** 
 720:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 721:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 722:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param flag Status flag
 723:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 724:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 725:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 726:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * Clears the status flag of I2C \a channel by setting the input parameter \a flag in PSCR register
 727:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 728:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 729:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetStatusFlag()\n\n
 730:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 731:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, uint32_t flag)
 732:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** {
 784              	 .loc 3 732 0
 785              	 .cfi_startproc
 786              	 
 787              	 
 788              	 
 789 0000 80B4     	 push {r7}
 790              	.LCFI95:
 791              	 .cfi_def_cfa_offset 4
 792              	 .cfi_offset 7,-4
 793 0002 83B0     	 sub sp,sp,#12
 794              	.LCFI96:
 795              	 .cfi_def_cfa_offset 16
 796 0004 00AF     	 add r7,sp,#0
 797              	.LCFI97:
 798              	 .cfi_def_cfa_register 7
 799 0006 7860     	 str r0,[r7,#4]
 800 0008 3960     	 str r1,[r7]
 733:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->PSCR |= flag;
 801              	 .loc 3 733 0
 802 000a 7B68     	 ldr r3,[r7,#4]
 803 000c DA6C     	 ldr r2,[r3,#76]
 804 000e 3B68     	 ldr r3,[r7]
 805 0010 1A43     	 orrs r2,r2,r3
 806 0012 7B68     	 ldr r3,[r7,#4]
 807 0014 DA64     	 str r2,[r3,#76]
 734:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_i2c.h **** }
 808              	 .loc 3 734 0
 809 0016 0C37     	 adds r7,r7,#12
 810              	.LCFI98:
 811              	 .cfi_def_cfa_offset 4
 812 0018 BD46     	 mov sp,r7
 813              	.LCFI99:
 814              	 .cfi_def_cfa_register 13
 815              	 
 816 001a 5DF8047B 	 ldr r7,[sp],#4
 817              	.LCFI100:
 818              	 .cfi_restore 7
 819              	 .cfi_def_cfa_offset 0
 820 001e 7047     	 bx lr
 821              	 .cfi_endproc
 822              	.LFE218:
 824              	 .section .text.I2C_MASTER_SetRXFIFOTriggerLimit,"ax",%progbits
 825              	 .align 2
 826              	 .thumb
 827              	 .thumb_func
 829              	I2C_MASTER_SetRXFIFOTriggerLimit:
 830              	.LFB229:
 831              	 .file 4 "../Dave/Generated/I2C_MASTER/i2c_master.h"
   1:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
   2:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @file i2c_master.h
   3:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @date 2017-12-20
   4:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
   5:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * NOTE:
   6:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * regenerated.
   8:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
   9:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
  10:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @cond
  11:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  12:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER v4.1.30 Configures USIC channel to transmit & receive data using I2C protocol.
  13:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  14:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  15:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * All rights reserved.
  16:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  17:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * following conditions are met:
  19:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  20:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  21:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * disclaimer.
  22:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  23:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  24:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * following disclaimer in the documentation and/or other materials provided with the distribution.
  25:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  26:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  27:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * products derived from this software without specific prior written permission.
  28:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  29:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  37:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  40:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  41:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Change History
  42:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * --------------
  43:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  44:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-02-16:
  45:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Initial version<br>
  46:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  47:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-06-10:
  48:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  49:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  50:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-08-31:
  51:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - DMA support APIs added
  52:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-10-20:
  53:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Code snippets updated
  54:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2016-08-18:
  55:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Documentation of slave address formatting improved.
  56:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2017-11-17:
  57:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Added tx_irqn and rx_irqn to I2C_MASTER_CONFIG_t
  58:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2017-12-20:
  59:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Added I2C_MASTER_FlushTxFifo(), I2C_MASTER_FlushRxFifo(), I2C_MASTER_DisableOutputs(), I2C
  60:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  61:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcond
  62:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  63:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
  64:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  65:../Dave/Generated/I2C_MASTER/i2c_master.h **** #ifndef I2C_MASTER_H
  66:../Dave/Generated/I2C_MASTER/i2c_master.h **** #define I2C_MASTER_H
  67:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  68:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  69:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  70:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
  71:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * HEADER FILES
  72:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  73:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include <xmc_gpio.h>
  74:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include <xmc_i2c.h>
  75:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include "i2c_master_conf.h"
  76:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  77:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if(UC_FAMILY == XMC4)
  78:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
  79:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include "GLOBAL_DMA/global_dma.h"
  80:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
  81:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
  82:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  83:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include <DAVE_Common.h>
  84:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  85:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  86:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef void(*i2c_master_fptr_cbhandler)(void);
  87:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  88:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
  89:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * MACROS
  90:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  91:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  92:../Dave/Generated/I2C_MASTER/i2c_master.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  93:../Dave/Generated/I2C_MASTER/i2c_master.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  94:../Dave/Generated/I2C_MASTER/i2c_master.h **** #error "I2C_MASTER requires XMC Peripheral Library v2.0.0 or higher"
  95:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
  96:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  97:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
  98:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * ENUMS
  99:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
 100:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 101:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @ingroup I2C_MASTER_enumerations
 102:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @{
 103:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 104:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 105:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Initialization status.
 106:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 107:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef enum I2C_MASTER_STATUS
 108:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 109:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_SUCCESS = 0U,           /*!< I2C_MASTER SUCCESS */
 110:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_FAILURE = 1U,           /*!< I2C_MASTER FAILURE */
 111:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_BUSY = 2U,              /*!< I2C_MASTER BUSY */
 112:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_UNSUPPORTED_MODE = 3U   /*!< I2C_MASTER UNSUPPORTED MODE */
 113:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_STATUS_t;
 114:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 115:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 116:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Direction
 117:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 118:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef enum I2C_MASTER_DIRECTION
 119:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 120:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_DIRECTION_TRANSMIT = 0U,   /*!< Direction indicates transmit */
 121:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_DIRECTION_RECEIVE = 1U     /*!< Direction indicates receive */
 122:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_DIRECTION_t;
 123:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 124:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 125:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 126:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 127:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef enum I2C_MASTER_TRANSFER_MODE
 128:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 129:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 130:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 131:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 132:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_TRANSFER_MODE_t;
 133:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 134:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @}
 135:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 136:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
 137:../Dave/Generated/I2C_MASTER/i2c_master.h **** * DATA STRUCTURES
 138:../Dave/Generated/I2C_MASTER/i2c_master.h **** ***************************************************************************************************
 139:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 140:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 141:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @ingroup I2C_MASTER_datastructures
 142:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @{
 143:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 144:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 145:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Structure for DMA configuration.
 146:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 147:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
 148:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER_DMA_CONFIG
 149:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 150:../Dave/Generated/I2C_MASTER/i2c_master.h ****   const XMC_DMA_CH_CONFIG_t * dma_ch_config;   /**< Pointer to the DMA channel configuration.*/
 151:../Dave/Generated/I2C_MASTER/i2c_master.h ****   GLOBAL_DMA_t * global_dma;                   /**< Global DMA handle */
 152:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t dma_channel;                         /**< DMA channel number */
 153:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_DMA_CONFIG_t;
 154:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 155:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 156:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Constant structure for holding the configuration parameters of I2C channel.
 157:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 158:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER_CONFIG
 159:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 160:../Dave/Generated/I2C_MASTER/i2c_master.h ****    const XMC_I2C_CH_CONFIG_t *brg_config;             /*!< Basic I2C configuration from the GUI wit
 161:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 162:../Dave/Generated/I2C_MASTER/i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const transmit_dma_config; /**< Pointer to the DMA channel confi
 163:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                                    data transmission.*/
 164:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 165:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 166:../Dave/Generated/I2C_MASTER/i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const receive_dma_config;  /**< Pointer to the DMA channel confi
 167:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                                    data reception.*/
 168:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 169:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_config;         /*!< Function pointer to configure the MUX va
 170:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_enable_io;      /*!< Function pointer to enable SDA/SCL outpu
 171:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_disable_io;     /*!< Function pointer to disable SDA/SCL outp
 172:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 173:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler tx_cbhandler;            /*!< Function pointer to hold the callback fu
 174:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when the transmission is complete
 175:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler rx_cbhandler;            /*!< Function pointer to hold the callback fu
 176:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when the reception is complete*/
 177:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler nack_cbhandler;          /*!< Function pointer to hold the callback fu
 178:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when nack is received*/
 179:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler arbitration_cbhandler;   /*!< Function pointer to hold the callback fu
 180:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when arbitration lost is occured*
 181:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler error_cbhandler;         /*!< Function pointer to hold the callback fu
 182:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when error is detected.*/
 183:../Dave/Generated/I2C_MASTER/i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t transmit_mode;          /**< Mode used for transmitting data. Data ca
 184:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 185:../Dave/Generated/I2C_MASTER/i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t receive_mode;           /**< Mode used for receiving data. Data can b
 186:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 187:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 188:../Dave/Generated/I2C_MASTER/i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t txFIFO_size;               /*!< TxFIFO size configuration*/
 189:../Dave/Generated/I2C_MASTER/i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t rxFIFO_size;               /*!< RxFIFO size configuration*/
 190:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 191:../Dave/Generated/I2C_MASTER/i2c_master.h ****    IRQn_Type tx_irqn;
 192:../Dave/Generated/I2C_MASTER/i2c_master.h ****    IRQn_Type rx_irqn; 
 193:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_CONFIG_t;
 194:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 195:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 196:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Structure to hold the dynamic variables for the I2C_MASTER communication.
 197:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 198:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER_RUNTIME
 199:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 200:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t * tx_data;                     /*!< Pointer to the transmit data buffer*/
 201:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t * rx_data;                     /*!< Pointer to the receive data buffer*/
 202:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t tx_data_count;                /*!< Number of bytes of data to be transmitted*/
 203:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile uint32_t tx_data_index;       /*!< Index to the byte to be transmitted next in the tx_da
 204:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t rx_data_count;                /*!< Number of bytes of data to be received*/
 205:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 206:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t rx_dma_data_count;            /*!< Number of bytes of data to be received-DMA mode*/
 207:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t rx_dma_data_index;            /*!< Index of bytes of data to be received-DMA mode*/
 208:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 209:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile uint32_t rx_data_index;       /*!< Indicates the number of bytes currently available in 
 210:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile uint32_t direction;           /*!< Indicates TRANSMIT/RECEIVE */
 211:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t send_stop;                    /*!< Indicates to stop the I2C */
 212:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t send_nack;                    /*!< Indicates to send nack */
 213:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t tx_ack_sr;                         /*!< Service request number assigned to transmit inter
 214:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t rx_sr;                         /*!< Service request number assigned to receive interrupts
 215:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile bool tx_busy;                 /*!< Status flag to indicate busy when a transmission is a
 216:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile bool rx_busy;                 /*!< Status flag to indicate busy when a reception is assi
 217:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile bool bus_acquired;            /*!< flag to indicate whether bus is acquired or not */
 218:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_RUNTIME_t;
 219:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 220:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 221:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 222:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Handler structure with pointers to dynamic and static parameters.
 223:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 224:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER
 225:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 226:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_t *channel;                    /*!< USIC channel*/
 227:../Dave/Generated/I2C_MASTER/i2c_master.h ****   const I2C_MASTER_CONFIG_t * const config;  /*!< I2C configuration structure pointer*/
 228:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_RUNTIME_t * const runtime;      /*!< Pointer to the structure holding all variables,
 229:../Dave/Generated/I2C_MASTER/i2c_master.h ****    	                                               that can change at runtime*/
 230:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_t;
 231:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 232:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 233:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @}
 234:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 235:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 236:../Dave/Generated/I2C_MASTER/i2c_master.h **** #ifdef __cplusplus
 237:../Dave/Generated/I2C_MASTER/i2c_master.h **** extern "C" {
 238:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 239:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 240:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 241:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 242:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @ingroup I2C_MASTER_apidoc
 243:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @{
 244:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 245:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 246:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
 247:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * API PROTOTYPES
 248:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
 249:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 250:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Get I2C_MASTER APP version.
 251:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return \a DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 252:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 253:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description: </b><br>
 254:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The function can be used to check application software compatibility with a
 255:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * specific version of the APP.
 256:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 257:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 258:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 259:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 260:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 261:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 262:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_APP_VERSION_t version;
 263:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_Init();
 264:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    version = I2C_MASTER_GetAppVersion();
 265:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(version.major != 4U)
 266:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 267:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 268:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 269:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {}
 270:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 0;
 271:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 272:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 273:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 274:../Dave/Generated/I2C_MASTER/i2c_master.h **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void);
 275:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 276:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief This function initializes the I2C_MASTER APP based on user provided configuration.
 277:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 278:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
 279:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 280:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description: </b><br>
 281:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C configurations like channel selection,baud rate setting,
 282:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * FIFO configuration etc are done in this API.
 283:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Protocol specific interrupts can also be enabled using the I2C_MASTER_Init
 284:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * function.
 285:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 286:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 287:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 288:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 289:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 290:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 291:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 292:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   // Initializing the modules and the multiplexer
 293:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   DAVE_Init(); // I2C_MASTER_Init will be called from DAVE_Init()
 294:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1)
 295:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {}
 296:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 297:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 298:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 299:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 300:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 301:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 302:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle);
 303:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 304:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 305:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 306:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief  Receives the data from I2C slave device.
 307:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 308:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start Flag to indicate that the start condition need to be send.
 309:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address I2C slave device address.
 310:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data buffer to receive data.
 311:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  count The number of bytes to be received from slave.
 312:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 313:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_nack The flag to indicate that the NACK condition need to be send for the last byte
 314:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 315:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>
 316:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER_Receive API can be used in Interrupt and Direct modes.\n
 317:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 318:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 319:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 320:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).\n
 321:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 322:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 323:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 324:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 325:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 326:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 327:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define BYTES_TO_READ 10
 328:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
 329:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 330:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 331:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 332:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 333:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 334:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 335:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  } PCA9502_REGADDR_t;
 336:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 337:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 338:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t data = 0x55;
 339:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t rx_data;
 340:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 341:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 342:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 343:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   DAVE_STATUS_t init_status;  
 344:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   init_status = DAVE_Init();
 345:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 346:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
 347:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
 348:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //Write data to IO EXPANDER
 349:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 350:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 351:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 352:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
 353:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 354:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 355:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //Read data from IO EXPANDER
 356:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 357:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 358:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 359:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
 360:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 361:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
 362:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1)
 363:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   { }
 364:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  return 0;
 365:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 366:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 367:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 368:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 369:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 370:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 371:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                        uint8_t * data, const uint32_t count, bool send_stop, bool s
 372:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 373:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 374:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Transmits data to I2C slave device.
 375:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 376:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 377:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start The flag to indicate that the start condition need to be send.
 378:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address I2C slave device address.
 379:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data buffer containing the data to transmit.
 380:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size The number of bytes to be send to slave.
 381:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 382:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 383:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 384:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>
 385:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER_Transmit API can be used in Interrupt and Direct modes.\n
 386:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 387:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 388:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 389:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write). \n
 390:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 391:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 
 392:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 393:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 394:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 395:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 396:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 397:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 398:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 399:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 400:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 401:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  } PCA9502_REGADDR_t;
 402:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 403:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 404:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 405:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 406:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 407:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 408:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 409:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 410:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 411:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 412:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
 413:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Write data to IO EXPANDER
 414:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 415:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 416:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 417:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
 418:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 419:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 420:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 421:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    { }
 422:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 423:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 424:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 425:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 426:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 427:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 428:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 429:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 430:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                uint8_t *data, const uint32_t size, bool send_stop);
 431:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 432:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 433:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Get the I2C flag status.
 434:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 435:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 436:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 437:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *			 	      bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be used to selec
 438:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                    multiple flags.
 439:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 440:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint32_t Flag status.
 441:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 442:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 443:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 444:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 445:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 446:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 447:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 448:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 449:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 450:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 451:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 452:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 453:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 454:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 455:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 456:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 457:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 458:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
 459:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 460:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 461:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 462:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {}
 463:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 464:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 465:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 466:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 467:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 468:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 469:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 470:../Dave/Generated/I2C_MASTER/i2c_master.h **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype);
 471:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 472:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 473:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Clear the I2C flag status.
 474:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 475:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 476:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 477:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                    The bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be 
 478:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                    multiple flags.
 479:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 480:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None <BR>
 481:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 482:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 483:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 484:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 485:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 486:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 487:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 488:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 489:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 490:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 491:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 492:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 493:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 494:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 495:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 496:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 497:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
 498:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 499:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 500:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 501:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 502:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {}
 503:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 504:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 505:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 506:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 507:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 508:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 509:../Dave/Generated/I2C_MASTER/i2c_master.h **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype);
 510:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 511:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 512:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Aborts the ongoing data transmission.
 513:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 514:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 515:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 516:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 517:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If there is a transmission in progress, it will be stopped. Once the transmission is stopped, 
 518:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * user can start a new transmission without delay.
 519:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 520:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 521:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 522:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 523:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 524:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 525:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 526:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 527:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 528:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t tx_buf[50] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
 529:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 530:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 531:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 532:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 533:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 534:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 535:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 536:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 537:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_AbortTransmit(&I2C_MASTER_0);
 538:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
 539:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 540:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 541:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 542:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
 543:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 544:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 545:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 546:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 547:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 548:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 549:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 550:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 551:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 552:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle);
 553:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 554:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 555:../Dave/Generated/I2C_MASTER/i2c_master.h **** * @brief Stops the active data reception request.
 556:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 557:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 558:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 559:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 560:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a reception is in progress, it will be stopped. When a reception request
 561:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * is active, user will not be able to place a new receive request till the active
 562:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * reception is complete. This API can stop the progressing reception to make
 563:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * a new receive request.
 564:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 565:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 566:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 567:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 568:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 569:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 570:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 571:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 572:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 573:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 574:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   uint8_t rx_buf[25];
 575:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   uint8_t tx_buf[2];
 576:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   DAVE_STATUS_t init_status;
 577:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   init_status = DAVE_Init();
 578:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 579:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
 580:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //send the address from which data to be transfered
 581:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     tx_buf[0] = 0;
 582:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 583:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 584:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 585:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_AbortReceive(&I2C_MASTER_0);
 586:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_SendStop(&I2C_MASTER_0);
 587:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 588:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 589:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 590:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 591:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
 592:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1U)
 593:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
 594:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
 595:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 596:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 1U;
 597:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 598:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 599:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 600:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 601:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 602:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle);
 603:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 604:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 605:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1U) || defined(DOXYGEN)
 606:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 607:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for transmitting data over I2C channel using DMA.
 608:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 609:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 610:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  block_size size of the block
 611:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  addr    address\n
 612:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 613:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 614:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 615:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 616:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 617:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 618:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 619:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * request is registered.
 620:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 621:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 622:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 623:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. The function uses AP
 624:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * structure to store the status of transmission.
 625:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 626:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Actual data transmission happens through DMA channel.
 627:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * A maximum of 4095 bytes can be transmitted in one API call. This limit is because of the DMA sin
 628:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 629:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 630:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 631:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the completion of data transmission.
 632:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 633:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * calls to this API.
 634:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>
 635:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER_StartTransmitDMA API can be used in DMA mode.
 636:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit should be configured as "DMA" mode in advanced settings tab. \n
 637:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 638:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 639:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 640:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 641:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 642:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 643:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 644:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 645:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 646:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 647:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 648:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 649:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 650:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 651:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 652:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 653:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 654:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 655:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 656:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 657:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 658:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 659:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 660:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 661:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
 662:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 663:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 664:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 665:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 666:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 667:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 668:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // trigger the DMA
 669:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitDMA(&I2C_MASTER_0, sizeof(Send_Data), Send_Data);
 670:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 671:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 672:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
 673:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 674:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 675:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
 676:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 677:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 678:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 679:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 680:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 681:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 682:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 683:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 684:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitDMA(const I2C_MASTER_t *const handle, uint32_t block_si
 685:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 686:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 687:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1U) || defined(DOXYGEN)
 688:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 689:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel using DMA.
 690:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 691:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 692:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 693:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param block_size  size of the block
 694:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  addr  address \n
 695:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 696:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 697:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 698:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 699:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 700:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 701:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 702:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 703:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * configured callback function will be executed.
 704:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 705:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When all the requested number of data bytes are received, the configured callback function will 
 706:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a callback function is not configured, the user has to poll for the value of the variable, \a
 707:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * handle->runtime->rx_busy to be false. The value is updated to \a false when all the requested nu
 708:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * are received.
 709:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * A maximum of 4095 bytes can be received in one API call. This limit is because of the DMA single
 710:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 711:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveDMA API can be used only in DMA mode
 712:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive should be configured as "DMA" mode in advanced settings tab \n
 713:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 714:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 715:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 716:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 717:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 718:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 719:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 720:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 721:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 722:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 723:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  //Pre condition:
 724:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  //Transmit mode and receive mode should be configured to "DMA" in advanced settings tab
 725:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 726:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t ReadData[256];
 727:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 728:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 729:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 730:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 731:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 732:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 733:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 734:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 735:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 736:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 737:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 738:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 739:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 740:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
 741:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 742:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 743:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 744:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 745:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 746:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 747:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
 748:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 749:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 750:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 751:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 752:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 753:../Dave/Generated/I2C_MASTER/i2c_master.h ****  
 754:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartReceiveDMA(&I2C_MASTER_0, 200, ReadData);
 755:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 756:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 757:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
 758:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 759:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 760:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
 761:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 762:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 763:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 764:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 765:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 766:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  @endcode
 767:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 768:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 769:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveDMA(const I2C_MASTER_t *const handle, uint32_t block_siz
 770:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 771:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 772:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1U)
 773:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 774:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for transmitting data over I2C_MASTER channel.
 775:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 776:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 777:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start flag to indicate the start condition
 778:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address slave address
 779:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data    pointer to buffer
 780:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size    number of bytes
 781:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop flag to indicate the stop condition\n
 782:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum supported by uint32_t.
 783:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 784:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 785:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 786:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 787:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 788:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 789:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * request is registered.
 790:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 791:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 792:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure a callback fu
 793:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. If transmit FIFO is 
 794:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the trigger limit is set to 1. So the transmit interrupt will be generated when all the data in 
 795:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * from FIFO. The function uses APP handle's runtime structure to store the data pointer, count, da
 796:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * status of transmission. This function only registers a data transmission request if there is no 
 797:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * in progress.
 798:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Actual data transmission happens in the transmit interrupt service routine. A trigger is generat
 799:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * interrupt to start loading the data. If transmit FIFO is configured, the data is filled into the
 800:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit interrupt will be generated next time when the transmit FIFO is empty. At this point of
 801:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * some more data to be transmitted, it is loaded to the FIFO again. When FIFO is not enabled, data
 802:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * byte at a time. On transmission of each byte an interrupt is generated and the next byte is tran
 803:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * interrupt service routine. Callback function is executed when all the data bytes are transmitted
 804:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of t
 805:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * structure( \a handle->runtime->tx_busy ) to check for the completion of data transmission.<br>
 806:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartTransmitIRQ API can be used only in Interrupt mode.
 807:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit should be configured as "Interrupt" mode in advanced settings tab.\n
 808:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 809:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 810:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 811:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).
 812:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 813:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 814:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 815:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 816:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 817:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 818:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 819:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 820:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 821:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 822:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 823:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 824:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 825:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 826:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 827:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Write data to IO EXPANDER
 828:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 829:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 830:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 831:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,64,true);
 832:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 833:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 834:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 835:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    { }
 836:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 837:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 0;
 838:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 839:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 840:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 841:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 842:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 843:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 844:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 845:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 846:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 847:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1U)
 848:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 849:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel.
 850:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 851:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 852:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 853:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start flag to indicate the start condition
 854:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address slave address
 855:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data    pointer to buffer
 856:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  count    number of bytes
 857:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop flag to indicate the stop condition
 858:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_nack flag to indicate the nack condition\n
 859:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum value supported by type uint32_t.
 860:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 861:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 862:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 863:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 864:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 865:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 866:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 867:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 868:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * configured callback function will be executed. Based on the UI configuration, either standard re
 869:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * receive FIFO is used for data reception. An interrupt is configured for reading received data fr
 870:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * function only registers a request to receive a number of data bytes from a USIC channel. If FIFO
 871:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.  When all
 872:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * of data bytes are received, the configured callback function will be executed. If a callback fun
 873:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * configured, the user has to poll for the value of the variable, \a handle->runtime->rx_busy to b
 874:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * is updated to \a false when all the requested number of data bytes are received.<br>
 875:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveIRQ API can be used only in Interrupt mode.
 876:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive should be configured as "Interrupt" mode in advanced settings tab.\n
 877:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 878:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 879:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 880:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).
 881:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 882:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 883:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 884:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 885:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 886:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t rx_buffer[64];
 887:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 888:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 889:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 890:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 891:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 892:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 893:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 894:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 895:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 896:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //Write data to IO EXPANDER
 897:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 898:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 899:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 900:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,rx_buffer,64,true, true);
 901:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 902:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 903:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 904:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    { }
 905:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 0;
 906:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 907:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 908:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 909:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 910:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 911:../Dave/Generated/I2C_MASTER/i2c_master.h ****  I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 912:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                uint8_t * data, const uint32_t count, bool send_stop
 913:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 914:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 915:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 916:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 917:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Gets the transmit FIFO event flags.
 918:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 919:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 920:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 921:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint32_t: Status of the STBI and TBERI bits in TRBSR register in
 922:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                      their bit positions.\n
 923:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                      \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t for the bitmask of event
 924:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 925:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 926:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function reads the value of TRBSR register. It masks the standard transmit buffer interrupt flag
 927:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * buffer error flag before providing the value.
 928:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * User has to mask the bits of interest before checking the status.
 929:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: Enable transmit fifo in Advanced settings tab. <br>
 930:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 931:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 932:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 933:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 934:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 935:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 936:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 937:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 938:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 939:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 940:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 941:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 942:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 943:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 944:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
 945:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
 946:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 947:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 948:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
 949:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
 950:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
 951:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
 952:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
 953:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 954:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
 955:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 956:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 957:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
 958:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 959:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 960:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 961:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 962:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 963:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 964:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 965:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 966:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetTXFIFOStatus(const I2C_MASTER_t* const handle)
 967:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 968:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetTXFIFOStatus: invalid handle", (handle != NULL))
 969:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_TXFIFO_GetEvent(handle->channel);
 970:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 971:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 972:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 973:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Configures trigger limit for the transmit FIFO.
 974:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 975:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 976:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size   FIFO size
 977:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  limit Value of transmit FIFO filling level, transition below which the interrupt should 
 978:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               \bRange: 0 to transmit FIFO size.\n
 979:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               e.g, If transmit FIFO size is 16, and limit is configured as 8, FIFO standard tran
 980:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               will be generated when the FIFO filling level drops from 8 to 7.\n
 981:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 982:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
 983:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 984:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 985:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit FIFO trigger limit is configured by setting its value in the TBCTR register.
 986:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit FIFO is configured to generate interrupt when the FIFO filling level drops
 987:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * below the trigger limit.
 988:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 989:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 990:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 991:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 992:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 993:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 994:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 995:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 996:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 997:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 998:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 999:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1000:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1001:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1002:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1003:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure transmit fifo trigger limit, draining level as 10
1004:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1005:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // Execution will happen two times in the interrupt handler as the limit is set to 10
1006:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, Send_Data, 16, true);
1007:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1008:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1009:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1010:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1011:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1012:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1013:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1014:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1015:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1016:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1017:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1018:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1019:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1020:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1021:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetTXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1022:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                              const uint32_t limit)
1023:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1024:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetTXFIFOTriggerLimit: invalid handle", (handle != NULL))
1025:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1026:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1027:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1028:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Configures trigger limit for the receive FIFO.
1029:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1030:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1031:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size   FIFO size
1032:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  limit Value of receive FIFO filling level, transition above which the interrupt should b
1033:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               \bRange: 0 to receive FIFO size.\n
1034:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               e.g, If receive FIFO size is 16, and limit is configured as 8, FIFO receive buffer
1035:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               will be generated when the FIFO filling level rises from 8 to 9.\n
1036:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1037:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
1038:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1039:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1040:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive FIFO trigger limit is configured by setting its value in the RBCTR register.
1041:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive FIFO is configured to generate interrupt when the FIFO filling level rises
1042:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * above the trigger limit.
1043:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1044:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1045:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1046:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1047:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1048:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1049:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1050:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1051:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t Rx_Data[256];
1052:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1053:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1054:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1055:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1056:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1057:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1058:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1059:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure receive fifo trigger limit to filling level as 10
1060:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1061:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // Execution will happen two times in the receive interrupt handler as the limit is set to 
1062:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, Rx_Data, 16, true, true);
1063:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
1064:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1065:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1066:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1067:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1068:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1069:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1070:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1071:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1072:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1073:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1074:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1075:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1076:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1077:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetRXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1078:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                              const uint32_t limit)
1079:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 832              	 .loc 4 1079 0
 833              	 .cfi_startproc
 834              	 
 835              	 
 836 0000 80B5     	 push {r7,lr}
 837              	.LCFI101:
 838              	 .cfi_def_cfa_offset 8
 839              	 .cfi_offset 7,-8
 840              	 .cfi_offset 14,-4
 841 0002 84B0     	 sub sp,sp,#16
 842              	.LCFI102:
 843              	 .cfi_def_cfa_offset 24
 844 0004 00AF     	 add r7,sp,#0
 845              	.LCFI103:
 846              	 .cfi_def_cfa_register 7
 847 0006 F860     	 str r0,[r7,#12]
 848 0008 B960     	 str r1,[r7,#8]
 849 000a 7A60     	 str r2,[r7,#4]
1080:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetRXFIFOTriggerLimit: invalid handle", (handle != NULL))
1081:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
 850              	 .loc 4 1081 0
 851 000c FB68     	 ldr r3,[r7,#12]
 852 000e 1A68     	 ldr r2,[r3]
 853 0010 BB68     	 ldr r3,[r7,#8]
 854 0012 DBB2     	 uxtb r3,r3
 855 0014 1046     	 mov r0,r2
 856 0016 1946     	 mov r1,r3
 857 0018 7A68     	 ldr r2,[r7,#4]
 858 001a FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
1082:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 859              	 .loc 4 1082 0
 860 001e 1037     	 adds r7,r7,#16
 861              	.LCFI104:
 862              	 .cfi_def_cfa_offset 8
 863 0020 BD46     	 mov sp,r7
 864              	.LCFI105:
 865              	 .cfi_def_cfa_register 13
 866              	 
 867 0022 80BD     	 pop {r7,pc}
 868              	 .cfi_endproc
 869              	.LFE229:
 871              	 .section .text.I2C_MASTER_IsTXFIFOFull,"ax",%progbits
 872              	 .align 2
 873              	 .thumb
 874              	 .thumb_func
 876              	I2C_MASTER_IsTXFIFOFull:
 877              	.LFB230:
1083:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1084:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1085:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Checks if the transmit FIFO is full.
1086:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1087:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1088:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1089:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return bool Status of transmit FIFO filling level.
1090:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *              \bRange: \atrue- if transmit FIFO is full.<br>
1091:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                       \afalse- if transmit FIFO is not full.<br>
1092:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1093:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while filling
1094:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * data to the transmit FIFO.
1095:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: Transmit should be "Direct" mode in advanced settings tab.<br>
1096:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1097:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1098:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1099:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1100:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1101:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1102:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1103:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1104:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t send_data[] = "Infineon Technologies";
1105:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1106:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1107:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1108:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();           // Initialization of DAVE APPs
1109:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1110:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1111:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1112:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1113:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1114:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1115:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1116:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1117:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1118:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &send_data[0], 10, false);
1119:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  //Wait when Tx FIFO is full
1120:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  while(!I2C_MASTER_IsTXFIFOFull(&I2C_MASTER_0))
1121:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1122:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_Transmit(&I2C_MASTER_0, false, SLAVE_ADDRESS, &send_data[0], 10, false);
1123:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1124:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  while(1U)
1125:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1126:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1127:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
1128:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1129:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1130:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTXFIFOFull(const I2C_MASTER_t* const handle)
1131:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 878              	 .loc 4 1131 0
 879              	 .cfi_startproc
 880              	 
 881              	 
 882 0000 80B5     	 push {r7,lr}
 883              	.LCFI106:
 884              	 .cfi_def_cfa_offset 8
 885              	 .cfi_offset 7,-8
 886              	 .cfi_offset 14,-4
 887 0002 82B0     	 sub sp,sp,#8
 888              	.LCFI107:
 889              	 .cfi_def_cfa_offset 16
 890 0004 00AF     	 add r7,sp,#0
 891              	.LCFI108:
 892              	 .cfi_def_cfa_register 7
 893 0006 7860     	 str r0,[r7,#4]
1132:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTXFIFOFull: invalid handle", (handle != NULL))
1133:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_TXFIFO_IsFull(handle->channel);
 894              	 .loc 4 1133 0
 895 0008 7B68     	 ldr r3,[r7,#4]
 896 000a 1B68     	 ldr r3,[r3]
 897 000c 1846     	 mov r0,r3
 898 000e FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsFull
 899 0012 0346     	 mov r3,r0
1134:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 900              	 .loc 4 1134 0
 901 0014 1846     	 mov r0,r3
 902 0016 0837     	 adds r7,r7,#8
 903              	.LCFI109:
 904              	 .cfi_def_cfa_offset 8
 905 0018 BD46     	 mov sp,r7
 906              	.LCFI110:
 907              	 .cfi_def_cfa_register 13
 908              	 
 909 001a 80BD     	 pop {r7,pc}
 910              	 .cfi_endproc
 911              	.LFE230:
 913              	 .section .text.I2C_MASTER_IsRXFIFOEmpty,"ax",%progbits
 914              	 .align 2
 915              	 .thumb
 916              	 .thumb_func
 918              	I2C_MASTER_IsRXFIFOEmpty:
 919              	.LFB231:
1135:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1136:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1137:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Checks if the receive FIFO is empty.
1138:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1139:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1140:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1141:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return bool Status of receive FIFO filling level.
1142:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *              \bRange: \atrue- if receive FIFO is empty.<br>
1143:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                       \afalse- if receive FIFO still has data.<br>
1144:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1145:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while reading data from the receive FIFO
1146:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1147:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1148:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1149:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1150:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1151:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1152:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1153:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1154:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1155:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[64];
1156:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1157:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1158:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1159:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1160:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1161:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1162:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1163:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1164:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1165:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1166:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1167:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1168:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1169:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1170:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1171:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1172:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1173:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1174:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1175:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1176:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1177:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1178:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1179:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1180:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1181:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1182:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        index++;
1183:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1184:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1185:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1186:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1187:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1188:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1189:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1190:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1U)
1191:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
1192:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
1193:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1194:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1195:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1196:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRXFIFOEmpty(const I2C_MASTER_t* const handle)
1197:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 920              	 .loc 4 1197 0
 921              	 .cfi_startproc
 922              	 
 923              	 
 924 0000 80B5     	 push {r7,lr}
 925              	.LCFI111:
 926              	 .cfi_def_cfa_offset 8
 927              	 .cfi_offset 7,-8
 928              	 .cfi_offset 14,-4
 929 0002 82B0     	 sub sp,sp,#8
 930              	.LCFI112:
 931              	 .cfi_def_cfa_offset 16
 932 0004 00AF     	 add r7,sp,#0
 933              	.LCFI113:
 934              	 .cfi_def_cfa_register 7
 935 0006 7860     	 str r0,[r7,#4]
1198:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRXFIFOEmpty: invalid handle", (handle != NULL))
1199:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel);
 936              	 .loc 4 1199 0
 937 0008 7B68     	 ldr r3,[r7,#4]
 938 000a 1B68     	 ldr r3,[r3]
 939 000c 1846     	 mov r0,r3
 940 000e FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_IsEmpty
 941 0012 0346     	 mov r3,r0
1200:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 942              	 .loc 4 1200 0
 943 0014 1846     	 mov r0,r3
 944 0016 0837     	 adds r7,r7,#8
 945              	.LCFI114:
 946              	 .cfi_def_cfa_offset 8
 947 0018 BD46     	 mov sp,r7
 948              	.LCFI115:
 949              	 .cfi_def_cfa_register 13
 950              	 
 951 001a 80BD     	 pop {r7,pc}
 952              	 .cfi_endproc
 953              	.LFE231:
 955              	 .section .text.I2C_MASTER_GetReceivedByte,"ax",%progbits
 956              	 .align 2
 957              	 .thumb
 958              	 .thumb_func
 960              	I2C_MASTER_GetReceivedByte:
 961              	.LFB235:
1201:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1202:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1203:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Gets the status of event flags related to receive FIFO.
1204:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1205:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1206:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1207:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1208:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint32_t: Status of standard receive buffer event, alternative receive buffer event and 
1209:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * error event in their bit positions in TRBSR register.\n
1210:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for event bitmasks. Multiple events' status c
1211:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * comparison using \a OR operation.
1212:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1213:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1214:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * It provides the status of standard receive buffer event, alternative receive buffer event and re
1215:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * event.
1216:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function masks the TRBSR register with the bitmask of SRBI, ARBI and RBERI flags. User has to ma
1217:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * interest before checking the status.
1218:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1219:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1220:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1221:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1222:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1223:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   #define SLAVE_ADDRESS 0xA0
1224:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   uint8_t mem_address[2];
1225:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   int main(void)
1226:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
1227:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     DAVE_STATUS_t init_status;
1228:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1229:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     init_status = DAVE_Init();
1230:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     if(init_status == DAVE_STATUS_SUCCESS)
1231:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1232:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       mem_address[0] = 0x00;//memory which need to be read from slave
1233:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       //Configure receive fifo trigger limit as 10
1234:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1235:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1236:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1237:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1238:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1239:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0
1240:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1241:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1242:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1243:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     else
1244:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1245:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1246:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1247:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1248:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1249:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1250:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      return 1U;
1251:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
1252:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1253:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1254:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1255:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetRXFIFOStatus(const I2C_MASTER_t* const handle)
1256:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1257:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetRXFIFOStatus: invalid handle", (handle != NULL))
1258:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_RXFIFO_GetEvent(handle->channel);
1259:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1260:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1261:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1262:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to
1263:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * transmit FIFO.
1264:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1265:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1266:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1267:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flag Value with event bits at their bit positions in TRBSR register to be cleared.\n
1268:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t. Multiple events can be combined 
1269:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             \a OR operation.
1270:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1271:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return    None
1272:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1273:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1274:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function clears a status bit in TRBSR register using the TRBSCR register. But the function does 
1275:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * value with the bit positions restricted to transmit FIFO status bits. User should ensure that th
1276:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * appropriately masked.
1277:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1278:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1279:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1280:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1281:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1282:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1283:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
1284:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1285:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1286:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1287:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1288:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1289:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1290:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1291:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00; //memory which need to be read from slave
1292:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
1293:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1294:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1295:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1296:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
1297:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1298:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
1299:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1300:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
1301:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1302:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1303:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1304:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1305:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1306:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1307:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1308:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1309:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1310:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1311:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1312:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1313:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1314:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearTXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1315:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1316:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearTXFIFOStatus: invalid handle", (handle != NULL))
1317:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_TXFIFO_ClearEvent(handle->channel, flag);
1318:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1319:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1320:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1321:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to receive FIFO. It should be used 
1322:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * of standard receive buffer interrupt, alternative receive buffer interrupt and receive buffer er
1323:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1324:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1325:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1326:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flag Value with event bits at the bit positions in TRBSR register to be cleared.\n
1327:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for providing events.
1328:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             Multiple events can be input by using \a OR operation.
1329:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1330:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return    None
1331:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1332:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1333:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function clears a status bit in TRBSR using the TRBSCR register.
1334:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The function does not mask the input value to clear only receive buffer
1335:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * events. So user should appropriately mask the input value before calling
1336:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the function.
1337:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1338:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1339:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1340:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1341:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1342:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1343:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
1344:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1345:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1346:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1347:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1348:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1349:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1350:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1351:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
1352:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure receive fifo trigger limit as 10
1353:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1354:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1355:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1356:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1357:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1358:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0)
1359:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1360:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1361:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1362:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1363:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1364:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1365:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1366:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1367:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1368:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1369:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1370:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1371:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1372:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1373:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1374:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearRXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1375:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1376:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearRXFIFOStatus: invalid handle", (handle != NULL))
1377:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_RXFIFO_ClearEvent(handle->channel, flag);
1378:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1379:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1380:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1381:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Provides the received data from receive buffer.
1382:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1383:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1384:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint8_t: Data read from RBUF.\n
1385:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1386:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1387:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This can be used in receive mode "Direct" to read the received data.
1388:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If Rx FIFO is not configured, function reads the value of RBUF register.
1389:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Otherwise it reads the data from OUTR register.
1390:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1391:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1392:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1393:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1394:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1395:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1396:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1397:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1398:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[10];
1399:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t index = 0,loc_index = 0;
1400:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1401:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1402:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1403:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1404:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1405:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1406:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1407:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1408:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1409:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1410:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1411:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1412:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1413:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1414:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1415:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1416:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1417:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1418:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1419:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1420:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        // wait for ACK
1421:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1422:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1423:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1424:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1425:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1426:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         index++;
1427:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1428:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1429:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1430:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1431:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1432:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1433:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1434:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1435:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1436:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1437:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1438:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1439:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1440:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1441:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1442:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1443:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1444:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1445:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1446:../Dave/Generated/I2C_MASTER/i2c_master.h **** /* Wrapper to the LLD API for reading back the value of the RBUF or OUTR register */
1447:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE uint8_t I2C_MASTER_GetReceivedByte(I2C_MASTER_t * const handle)
1448:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 962              	 .loc 4 1448 0
 963              	 .cfi_startproc
 964              	 
 965              	 
 966 0000 80B5     	 push {r7,lr}
 967              	.LCFI116:
 968              	 .cfi_def_cfa_offset 8
 969              	 .cfi_offset 7,-8
 970              	 .cfi_offset 14,-4
 971 0002 82B0     	 sub sp,sp,#8
 972              	.LCFI117:
 973              	 .cfi_def_cfa_offset 16
 974 0004 00AF     	 add r7,sp,#0
 975              	.LCFI118:
 976              	 .cfi_def_cfa_register 7
 977 0006 7860     	 str r0,[r7,#4]
1449:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetReceivedByte: invalid handle", (handle != NULL))
1450:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return (uint8_t)XMC_I2C_CH_GetReceivedData(handle->channel);
 978              	 .loc 4 1450 0
 979 0008 7B68     	 ldr r3,[r7,#4]
 980 000a 1B68     	 ldr r3,[r3]
 981 000c 1846     	 mov r0,r3
 982 000e FFF7FEFF 	 bl XMC_I2C_CH_GetReceivedData
 983 0012 0346     	 mov r3,r0
1451:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 984              	 .loc 4 1451 0
 985 0014 1846     	 mov r0,r3
 986 0016 0837     	 adds r7,r7,#8
 987              	.LCFI119:
 988              	 .cfi_def_cfa_offset 8
 989 0018 BD46     	 mov sp,r7
 990              	.LCFI120:
 991              	 .cfi_def_cfa_register 13
 992              	 
 993 001a 80BD     	 pop {r7,pc}
 994              	 .cfi_endproc
 995              	.LFE235:
 997              	 .section .text.I2C_MASTER_TransmitByte,"ax",%progbits
 998              	 .align 2
 999              	 .thumb
 1000              	 .thumb_func
 1002              	I2C_MASTER_TransmitByte:
 1003              	.LFB236:
1452:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1453:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1454:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Transmits single byte using I2C protocol.
1455:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1456:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1457:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  byte data byte to transmit. \n
1458:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
1459:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 
1460:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1461:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1462:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1463:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1464:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1465:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1466:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1467:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1468:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1469:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1470:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1471:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();
1472:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1473:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1474:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1475:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1476:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1477:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1478:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1479:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1480:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1481:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1482:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1483:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1484:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1485:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // wait for ACK
1486:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1487:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1488:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1489:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1490:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1491:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // wait for ACK
1492:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1493:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1494:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
1495:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1496:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1497:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1498:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1499:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1500:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_TransmitByte(I2C_MASTER_t * const handle, uint8_t byte)
1501:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1004              	 .loc 4 1501 0
 1005              	 .cfi_startproc
 1006              	 
 1007              	 
 1008 0000 80B5     	 push {r7,lr}
 1009              	.LCFI121:
 1010              	 .cfi_def_cfa_offset 8
 1011              	 .cfi_offset 7,-8
 1012              	 .cfi_offset 14,-4
 1013 0002 82B0     	 sub sp,sp,#8
 1014              	.LCFI122:
 1015              	 .cfi_def_cfa_offset 16
 1016 0004 00AF     	 add r7,sp,#0
 1017              	.LCFI123:
 1018              	 .cfi_def_cfa_register 7
 1019 0006 7860     	 str r0,[r7,#4]
 1020 0008 0B46     	 mov r3,r1
 1021 000a FB70     	 strb r3,[r7,#3]
1502:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_TransmitByte: invalid handle", (handle != NULL))
1503:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterTransmit(handle->channel, byte);
 1022              	 .loc 4 1503 0
 1023 000c 7B68     	 ldr r3,[r7,#4]
 1024 000e 1A68     	 ldr r2,[r3]
 1025 0010 FB78     	 ldrb r3,[r7,#3]
 1026 0012 1046     	 mov r0,r2
 1027 0014 1946     	 mov r1,r3
 1028 0016 FFF7FEFF 	 bl XMC_I2C_CH_MasterTransmit
1504:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1029              	 .loc 4 1504 0
 1030 001a 0837     	 adds r7,r7,#8
 1031              	.LCFI124:
 1032              	 .cfi_def_cfa_offset 8
 1033 001c BD46     	 mov sp,r7
 1034              	.LCFI125:
 1035              	 .cfi_def_cfa_register 13
 1036              	 
 1037 001e 80BD     	 pop {r7,pc}
 1038              	 .cfi_endproc
 1039              	.LFE236:
 1041              	 .section .text.I2C_MASTER_EnableEvent,"ax",%progbits
 1042              	 .align 2
 1043              	 .thumb
 1044              	 .thumb_func
 1046              	I2C_MASTER_EnableEvent:
 1047              	.LFB237:
1505:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1506:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Enables the selected protocol events for interrupt generation.
1507:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1508:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1509:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  event  Protocol events to be enabled for interrupt generation. \n
1510:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1511:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         combined using the bitwise OR operation.\n
1512:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
1513:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1514:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1515:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Enables the events by configuring CCR or PCR register based on the event.
1516:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When the event is enabled, an interrupt can be generated on occurrence of the event.
1517:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The API should be used only for \a Direct mode related events. Using this API for non \a Direct 
1518:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * may not yield expected result.
1519:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1520:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1521:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1522:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1523:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1524:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1525:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1526:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1527:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1528:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1529:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();
1530:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1531:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1532:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1533:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1534:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1535:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1536:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1537:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1538:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1539:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1540:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_EnableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1541:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
1542:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1543:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1544:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1545:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1546:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1547:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_EnableEvent(I2C_MASTER_t * const handle, uint32_t event)
1548:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1048              	 .loc 4 1548 0
 1049              	 .cfi_startproc
 1050              	 
 1051              	 
 1052 0000 80B5     	 push {r7,lr}
 1053              	.LCFI126:
 1054              	 .cfi_def_cfa_offset 8
 1055              	 .cfi_offset 7,-8
 1056              	 .cfi_offset 14,-4
 1057 0002 82B0     	 sub sp,sp,#8
 1058              	.LCFI127:
 1059              	 .cfi_def_cfa_offset 16
 1060 0004 00AF     	 add r7,sp,#0
 1061              	.LCFI128:
 1062              	 .cfi_def_cfa_register 7
 1063 0006 7860     	 str r0,[r7,#4]
 1064 0008 3960     	 str r1,[r7]
1549:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_EnableEvent: invalid handle", (handle != NULL))
1550:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_EnableEvent(handle->channel, event);
 1065              	 .loc 4 1550 0
 1066 000a 7B68     	 ldr r3,[r7,#4]
 1067 000c 1B68     	 ldr r3,[r3]
 1068 000e 1846     	 mov r0,r3
 1069 0010 3968     	 ldr r1,[r7]
 1070 0012 FFF7FEFF 	 bl XMC_I2C_CH_EnableEvent
1551:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1071              	 .loc 4 1551 0
 1072 0016 0837     	 adds r7,r7,#8
 1073              	.LCFI129:
 1074              	 .cfi_def_cfa_offset 8
 1075 0018 BD46     	 mov sp,r7
 1076              	.LCFI130:
 1077              	 .cfi_def_cfa_register 13
 1078              	 
 1079 001a 80BD     	 pop {r7,pc}
 1080              	 .cfi_endproc
 1081              	.LFE237:
 1083              	 .section .text.I2C_MASTER_DisableEvent,"ax",%progbits
 1084              	 .align 2
 1085              	 .thumb
 1086              	 .thumb_func
 1088              	I2C_MASTER_DisableEvent:
 1089              	.LFB238:
1552:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1553:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Disables selected events from generating interrupt.
1554:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1555:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1556:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  event  Events to be disabled from generating interrupt. \n
1557:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1558:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         combined using the bitwise OR operation.\n
1559:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1560:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1561:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1562:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Events are disabled by clearing their respective bits in either CCR, TBCTR or RBCTR.
1563:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1564:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1565:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1566:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1567:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1568:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1569:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1570:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1571:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1572:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1573:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();
1574:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1575:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1576:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1577:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1578:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1579:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1580:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1581:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1582:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1583:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1584:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_DisableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1585:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
1586:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1587:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1588:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1589:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1590:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1591:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1592:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_DisableEvent(I2C_MASTER_t * const handle, uint32_t event)
1593:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1090              	 .loc 4 1593 0
 1091              	 .cfi_startproc
 1092              	 
 1093              	 
 1094 0000 80B5     	 push {r7,lr}
 1095              	.LCFI131:
 1096              	 .cfi_def_cfa_offset 8
 1097              	 .cfi_offset 7,-8
 1098              	 .cfi_offset 14,-4
 1099 0002 82B0     	 sub sp,sp,#8
 1100              	.LCFI132:
 1101              	 .cfi_def_cfa_offset 16
 1102 0004 00AF     	 add r7,sp,#0
 1103              	.LCFI133:
 1104              	 .cfi_def_cfa_register 7
 1105 0006 7860     	 str r0,[r7,#4]
 1106 0008 3960     	 str r1,[r7]
1594:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_DisableEvent: invalid handle", (handle != NULL))
1595:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_DisableEvent(handle->channel, event);
 1107              	 .loc 4 1595 0
 1108 000a 7B68     	 ldr r3,[r7,#4]
 1109 000c 1B68     	 ldr r3,[r3]
 1110 000e 1846     	 mov r0,r3
 1111 0010 3968     	 ldr r1,[r7]
 1112 0012 FFF7FEFF 	 bl XMC_I2C_CH_DisableEvent
1596:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1113              	 .loc 4 1596 0
 1114 0016 0837     	 adds r7,r7,#8
 1115              	.LCFI134:
 1116              	 .cfi_def_cfa_offset 8
 1117 0018 BD46     	 mov sp,r7
 1118              	.LCFI135:
 1119              	 .cfi_def_cfa_register 13
 1120              	 
 1121 001a 80BD     	 pop {r7,pc}
 1122              	 .cfi_endproc
 1123              	.LFE238:
 1125              	 .section .text.I2C_MASTER_ReceiveACK,"ax",%progbits
 1126              	 .align 2
 1127              	 .thumb
 1128              	 .thumb_func
 1130              	I2C_MASTER_ReceiveACK:
 1131              	.LFB239:
1597:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1598:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1599:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Receives the ACK from slave
1600:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1601:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1602:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1603:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1604:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * After transmitting a byte, master receives the ack from slave.<br>
1605:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1606:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1607:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1608:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1609:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1610:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1611:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1612:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1613:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1614:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1615:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1616:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1617:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[64];
1618:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1619:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1620:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1621:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1622:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1623:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1624:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1625:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1626:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1627:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1628:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1629:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1630:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1631:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1632:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1633:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1634:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1635:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1636:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1637:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1638:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1639:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1640:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1641:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1642:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1643:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        index++;
1644:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1645:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1646:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1647:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1648:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1649:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1650:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1651:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1652:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1653:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1654:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1655:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1656:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1657:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1658:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1659:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1660:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1661:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1662:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveACK(I2C_MASTER_t * const handle)
1663:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1132              	 .loc 4 1663 0
 1133              	 .cfi_startproc
 1134              	 
 1135              	 
 1136 0000 80B5     	 push {r7,lr}
 1137              	.LCFI136:
 1138              	 .cfi_def_cfa_offset 8
 1139              	 .cfi_offset 7,-8
 1140              	 .cfi_offset 14,-4
 1141 0002 82B0     	 sub sp,sp,#8
 1142              	.LCFI137:
 1143              	 .cfi_def_cfa_offset 16
 1144 0004 00AF     	 add r7,sp,#0
 1145              	.LCFI138:
 1146              	 .cfi_def_cfa_register 7
 1147 0006 7860     	 str r0,[r7,#4]
1664:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveACK: invalid handle", (handle != NULL))
1665:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterReceiveAck(handle->channel);
 1148              	 .loc 4 1665 0
 1149 0008 7B68     	 ldr r3,[r7,#4]
 1150 000a 1B68     	 ldr r3,[r3]
 1151 000c 1846     	 mov r0,r3
 1152 000e FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveAck
1666:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1153              	 .loc 4 1666 0
 1154 0012 0837     	 adds r7,r7,#8
 1155              	.LCFI139:
 1156              	 .cfi_def_cfa_offset 8
 1157 0014 BD46     	 mov sp,r7
 1158              	.LCFI140:
 1159              	 .cfi_def_cfa_register 13
 1160              	 
 1161 0016 80BD     	 pop {r7,pc}
 1162              	 .cfi_endproc
 1163              	.LFE239:
 1165              	 .section .text.I2C_MASTER_ReceiveNACK,"ax",%progbits
 1166              	 .align 2
 1167              	 .thumb
 1168              	 .thumb_func
 1170              	I2C_MASTER_ReceiveNACK:
 1171              	.LFB240:
1667:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1668:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Receives the NACK from slave
1669:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1670:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1671:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1672:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1673:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * After transmitting a byte, master receives the nack from slave.<br>
1674:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1675:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1676:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1677:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1678:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1679:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1680:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1681:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1682:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1683:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1684:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint32_t index = 0, loc_index = 0;
1685:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[64];
1686:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1687:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1688:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1689:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1690:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1691:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1692:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1693:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1694:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1695:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1696:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1697:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1698:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1699:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1700:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1701:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1702:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1703:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1704:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1705:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1706:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1707:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1708:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1709:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1710:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1711:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        index++;
1712:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1713:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // only for the last byte
1714:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ReceiveNACK(&I2C_MASTER_0);
1715:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1716:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1717:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1718:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1719:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1720:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1721:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1722:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1723:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1724:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1725:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1726:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1727:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1728:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1729:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1730:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1731:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1732:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveNACK(I2C_MASTER_t * const handle)
1733:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1172              	 .loc 4 1733 0
 1173              	 .cfi_startproc
 1174              	 
 1175              	 
 1176 0000 80B5     	 push {r7,lr}
 1177              	.LCFI141:
 1178              	 .cfi_def_cfa_offset 8
 1179              	 .cfi_offset 7,-8
 1180              	 .cfi_offset 14,-4
 1181 0002 82B0     	 sub sp,sp,#8
 1182              	.LCFI142:
 1183              	 .cfi_def_cfa_offset 16
 1184 0004 00AF     	 add r7,sp,#0
 1185              	.LCFI143:
 1186              	 .cfi_def_cfa_register 7
 1187 0006 7860     	 str r0,[r7,#4]
1734:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveNACK: invalid handle", (handle != NULL))
1735:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterReceiveNack(handle->channel);
 1188              	 .loc 4 1735 0
 1189 0008 7B68     	 ldr r3,[r7,#4]
 1190 000a 1B68     	 ldr r3,[r3]
 1191 000c 1846     	 mov r0,r3
 1192 000e FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveNack
1736:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1193              	 .loc 4 1736 0
 1194 0012 0837     	 adds r7,r7,#8
 1195              	.LCFI144:
 1196              	 .cfi_def_cfa_offset 8
 1197 0014 BD46     	 mov sp,r7
 1198              	.LCFI145:
 1199              	 .cfi_def_cfa_register 13
 1200              	 
 1201 0016 80BD     	 pop {r7,pc}
 1202              	 .cfi_endproc
 1203              	.LFE240:
 1205              	 .section .text.I2C_MASTER_SendStop,"ax",%progbits
 1206              	 .align 2
 1207              	 .thumb
 1208              	 .thumb_func
 1210              	I2C_MASTER_SendStop:
 1211              	.LFB241:
1737:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1738:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Sends stop command to slave
1739:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1740:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1741:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1742:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1743:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * At the end of transmission, sends a stop command to slave <br>
1744:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.<br>
1745:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1746:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1747:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1748:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1749:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1750:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1751:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1752:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1753:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1754:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1755:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1756:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1757:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1758:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1759:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1760:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1761:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1762:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1763:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //send the address to which data to be transfered
1764:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1765:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1766:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1767:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1768:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1769:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1770:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
1771:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1772:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1773:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1774:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1775:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1776:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1777:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1778:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1779:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1780:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1781:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1782:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1783:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStop(I2C_MASTER_t * const handle)
1784:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1212              	 .loc 4 1784 0
 1213              	 .cfi_startproc
 1214              	 
 1215              	 
 1216 0000 80B5     	 push {r7,lr}
 1217              	.LCFI146:
 1218              	 .cfi_def_cfa_offset 8
 1219              	 .cfi_offset 7,-8
 1220              	 .cfi_offset 14,-4
 1221 0002 82B0     	 sub sp,sp,#8
 1222              	.LCFI147:
 1223              	 .cfi_def_cfa_offset 16
 1224 0004 00AF     	 add r7,sp,#0
 1225              	.LCFI148:
 1226              	 .cfi_def_cfa_register 7
 1227 0006 7860     	 str r0,[r7,#4]
1785:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStop: invalid handle", (handle != NULL))
1786:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED);
 1228              	 .loc 4 1786 0
 1229 0008 7B68     	 ldr r3,[r7,#4]
 1230 000a 1B68     	 ldr r3,[r3]
 1231 000c 1846     	 mov r0,r3
 1232 000e 1021     	 movs r1,#16
 1233 0010 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
1787:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterStop(handle->channel);
 1234              	 .loc 4 1787 0
 1235 0014 7B68     	 ldr r3,[r7,#4]
 1236 0016 1B68     	 ldr r3,[r3]
 1237 0018 1846     	 mov r0,r3
 1238 001a FFF7FEFF 	 bl XMC_I2C_CH_MasterStop
1788:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1239              	 .loc 4 1788 0
 1240 001e 0837     	 adds r7,r7,#8
 1241              	.LCFI149:
 1242              	 .cfi_def_cfa_offset 8
 1243 0020 BD46     	 mov sp,r7
 1244              	.LCFI150:
 1245              	 .cfi_def_cfa_register 13
 1246              	 
 1247 0022 80BD     	 pop {r7,pc}
 1248              	 .cfi_endproc
 1249              	.LFE241:
 1251              	 .section .text.I2C_MASTER_SendStart,"ax",%progbits
 1252              	 .align 2
 1253              	 .thumb
 1254              	 .thumb_func
 1256              	I2C_MASTER_SendStart:
 1257              	.LFB242:
1789:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1790:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Sends start command to slave
1791:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1792:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param address slave address
1793:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param cmd     command
1794:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1795:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1796:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1797:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Before start of transmission, sends a start command to slave. \n
1798:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1799:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1800:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1801:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1802:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1803:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1804:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1805:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1806:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
1807:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1808:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1809:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1810:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1811:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1812:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1813:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1814:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1815:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1816:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1817:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1818:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1819:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1820:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1821:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //send the address to which data to be transfered
1822:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1823:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1824:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1825:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1826:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1827:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1828:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1829:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1830:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       XMC_DEBUG("main: Application initialization failed");
1831:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       while(1U)
1832:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       {
1833:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       }
1834:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1835:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1836:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
1837:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1838:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1839:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStart(I2C_MASTER_t * const handle, const uint32_t address,
1840:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                  const XMC_I2C_CH_CMD_t cmd)
1841:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1258              	 .loc 4 1841 0
 1259              	 .cfi_startproc
 1260              	 
 1261              	 
 1262 0000 80B5     	 push {r7,lr}
 1263              	.LCFI151:
 1264              	 .cfi_def_cfa_offset 8
 1265              	 .cfi_offset 7,-8
 1266              	 .cfi_offset 14,-4
 1267 0002 84B0     	 sub sp,sp,#16
 1268              	.LCFI152:
 1269              	 .cfi_def_cfa_offset 24
 1270 0004 00AF     	 add r7,sp,#0
 1271              	.LCFI153:
 1272              	 .cfi_def_cfa_register 7
 1273 0006 F860     	 str r0,[r7,#12]
 1274 0008 B960     	 str r1,[r7,#8]
 1275 000a 1346     	 mov r3,r2
 1276 000c FB71     	 strb r3,[r7,#7]
1842:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStart: invalid handle", (handle != NULL))
1843:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED);
 1277              	 .loc 4 1843 0
 1278 000e FB68     	 ldr r3,[r7,#12]
 1279 0010 1B68     	 ldr r3,[r3]
 1280 0012 1846     	 mov r0,r3
 1281 0014 0421     	 movs r1,#4
 1282 0016 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
1844:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterStart(handle->channel, (uint16_t)address, cmd);
 1283              	 .loc 4 1844 0
 1284 001a FB68     	 ldr r3,[r7,#12]
 1285 001c 1968     	 ldr r1,[r3]
 1286 001e BB68     	 ldr r3,[r7,#8]
 1287 0020 9AB2     	 uxth r2,r3
 1288 0022 FB79     	 ldrb r3,[r7,#7]
 1289 0024 0846     	 mov r0,r1
 1290 0026 1146     	 mov r1,r2
 1291 0028 1A46     	 mov r2,r3
 1292 002a FFF7FEFF 	 bl XMC_I2C_CH_MasterStart
1845:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1293              	 .loc 4 1845 0
 1294 002e 1037     	 adds r7,r7,#16
 1295              	.LCFI154:
 1296              	 .cfi_def_cfa_offset 8
 1297 0030 BD46     	 mov sp,r7
 1298              	.LCFI155:
 1299              	 .cfi_def_cfa_register 13
 1300              	 
 1301 0032 80BD     	 pop {r7,pc}
 1302              	 .cfi_endproc
 1303              	.LFE242:
 1305              	 .section .text.I2C_MASTER_SendRepeatedStart,"ax",%progbits
 1306              	 .align 2
 1307              	 .thumb
 1308              	 .thumb_func
 1310              	I2C_MASTER_SendRepeatedStart:
 1311              	.LFB243:
1846:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1847:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Sends repeated start command to slave
1848:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1849:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param address slave address
1850:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param cmd     command
1851:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1852:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1853:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1854:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Before start of transmission, sends a repeatedstart command to slave if bus acquired is true.\n
1855:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1856:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1857:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1858:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1859:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1860:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1861:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1862:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1863:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1864:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1865:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1866:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1867:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1868:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rx_buf[256];
1869:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1870:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1871:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1872:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1873:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_MasterStart(I2C_MASTER_0.channel, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1874:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1875:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1876:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1877:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1878:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1879:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //send the address to which data to be transfered
1880:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1881:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1882:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1883:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1884:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1885:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1886:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1887:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1888:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1889:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1890:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1891:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1892:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 	   memset(rx_buf,0,16);
1893:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, false, SLAVE_ADDRESS, rx_buf, 16, true, true);
1894:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1895:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1896:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1897:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1898:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1899:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1900:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1901:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1902:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 1U;
1903:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1904:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1905:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1906:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendRepeatedStart(I2C_MASTER_t * const handle, const uint32_t addre
1907:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                          const XMC_I2C_CH_CMD_t cmd)
1908:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 1312              	 .loc 4 1908 0
 1313              	 .cfi_startproc
 1314              	 
 1315              	 
 1316 0000 80B5     	 push {r7,lr}
 1317              	.LCFI156:
 1318              	 .cfi_def_cfa_offset 8
 1319              	 .cfi_offset 7,-8
 1320              	 .cfi_offset 14,-4
 1321 0002 84B0     	 sub sp,sp,#16
 1322              	.LCFI157:
 1323              	 .cfi_def_cfa_offset 24
 1324 0004 00AF     	 add r7,sp,#0
 1325              	.LCFI158:
 1326              	 .cfi_def_cfa_register 7
 1327 0006 F860     	 str r0,[r7,#12]
 1328 0008 B960     	 str r1,[r7,#8]
 1329 000a 1346     	 mov r3,r2
 1330 000c FB71     	 strb r3,[r7,#7]
1909:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendRepeatedStart: invalid handle", (handle != NULL))
1910:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEI
 1331              	 .loc 4 1910 0
 1332 000e FB68     	 ldr r3,[r7,#12]
 1333 0010 1B68     	 ldr r3,[r3]
 1334 0012 1846     	 mov r0,r3
 1335 0014 0821     	 movs r1,#8
 1336 0016 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
1911:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterRepeatedStart(handle->channel, (uint16_t)address, cmd);
 1337              	 .loc 4 1911 0
 1338 001a FB68     	 ldr r3,[r7,#12]
 1339 001c 1968     	 ldr r1,[r3]
 1340 001e BB68     	 ldr r3,[r7,#8]
 1341 0020 9AB2     	 uxth r2,r3
 1342 0022 FB79     	 ldrb r3,[r7,#7]
 1343 0024 0846     	 mov r0,r1
 1344 0026 1146     	 mov r1,r2
 1345 0028 1A46     	 mov r2,r3
 1346 002a FFF7FEFF 	 bl XMC_I2C_CH_MasterRepeatedStart
1912:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1347              	 .loc 4 1912 0
 1348 002e 1037     	 adds r7,r7,#16
 1349              	.LCFI159:
 1350              	 .cfi_def_cfa_offset 8
 1351 0030 BD46     	 mov sp,r7
 1352              	.LCFI160:
 1353              	 .cfi_def_cfa_register 13
 1354              	 
 1355 0032 80BD     	 pop {r7,pc}
 1356              	 .cfi_endproc
 1357              	.LFE243:
 1359              	 .section .text.calculate_minfifosize,"ax",%progbits
 1360              	 .align 2
 1361              	 .thumb
 1362              	 .thumb_func
 1364              	calculate_minfifosize:
 1365              	.LFB250:
 1366              	 .file 5 "../Dave/Generated/I2C_MASTER/i2c_master.c"
   1:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**
   2:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @file i2c_master.c
   3:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @date 2019-06-24
   4:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
   5:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * NOTE:
   6:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
   8:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**
   9:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @cond
  10:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  11:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * I2C_MASTER v4.1.30 Configures USIC channel to transmit & receive data using I2C protocol.
  12:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  13:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  14:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * All rights reserved.
  15:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  16:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * following conditions are met:
  18:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  19:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   disclaimer.
  21:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  22:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  25:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  28:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  36:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  39:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  40:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Change History
  41:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * --------------
  42:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  43:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2015-02-16:
  44:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Initial version<br>
  45:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  46:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2015-06-10:
  47:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  48:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  49:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2015-07-31:
  50:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - DMA support APIs added
  51:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  52:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2017-01-19:
  53:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Avoid unintended interrupts when filling FIFO
  54:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  55:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2017-11-17:
  56:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Use tx_irqn of channel config structure in the call of NVIC_ClearPendingIRQ()
  57:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  58:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2017-12-20:
  59:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Fix TX DMA issues
  60:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  61:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2019-06-24:
  62:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - I2C_MASTER_lStartTransmitPolling() handling of non ack     
  63:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  64:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2019-09-23:
  65:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Fixed return status of I2C_MASTER_lStartReceivePolling()
  66:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  67:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @endcond
  68:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  69:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
  70:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  71:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * HEADER FILES
  72:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  73:../Dave/Generated/I2C_MASTER/i2c_master.c **** #include "i2c_master.h"
  74:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  75:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  76:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * MACROS
  77:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  78:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_TDF_RECEIVE_ACK             (0x0200U)
  79:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_TDF_RECEIVE_NACK       (3U << 8U)
  80:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_DST_TR_WIDTH_MASK   (0x7EU)
  81:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_ADDR_INC_MASK       (0x600U)
  82:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_ADDR_INC_POS        (9U)
  83:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_TRANSFER_WIDTH_POS  (4U)
  84:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_DST_TRANSFER_WIDTH_POS  (1U)
  85:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  86:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_DMA_MAX_BLOCK_SIZE (4095U)
  87:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  88:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  89:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * LOCAL DATA
  90:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  91:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  92:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  93:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * LOCAL ROUTINES
  94:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  95:../Dave/Generated/I2C_MASTER/i2c_master.c ****  /*
  96:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Function monitors the configured protocol interrupt flags. It is called from the protocol interr
  97:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * service handler.
  98:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Function reads the status of the USIC channel and checks for configured flags in the app UI.
  99:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * If any callback function is provided in the app UI, it will be called when the selected flag is 
 100:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 101:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * I2C_MASTER_t * pointer to the I2C_MASTER APP instance handle
 102:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 103:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
 104:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ProtocolHandler(I2C_MASTER_t * const handle);
 105:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 106:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1))
 107:../Dave/Generated/I2C_MASTER/i2c_master.c **** static uint32_t calculate_minfifosize(uint32_t a, uint32_t b)
 108:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1367              	 .loc 5 108 0
 1368              	 .cfi_startproc
 1369              	 
 1370              	 
 1371              	 
 1372 0000 80B4     	 push {r7}
 1373              	.LCFI161:
 1374              	 .cfi_def_cfa_offset 4
 1375              	 .cfi_offset 7,-4
 1376 0002 85B0     	 sub sp,sp,#20
 1377              	.LCFI162:
 1378              	 .cfi_def_cfa_offset 24
 1379 0004 00AF     	 add r7,sp,#0
 1380              	.LCFI163:
 1381              	 .cfi_def_cfa_register 7
 1382 0006 7860     	 str r0,[r7,#4]
 1383 0008 3960     	 str r1,[r7]
 109:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t result;
 110:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 111:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (a < b)
 1384              	 .loc 5 111 0
 1385 000a 7A68     	 ldr r2,[r7,#4]
 1386 000c 3B68     	 ldr r3,[r7]
 1387 000e 9A42     	 cmp r2,r3
 1388 0010 02D2     	 bcs .L42
 112:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 113:../Dave/Generated/I2C_MASTER/i2c_master.c ****     result = a;
 1389              	 .loc 5 113 0
 1390 0012 7B68     	 ldr r3,[r7,#4]
 1391 0014 FB60     	 str r3,[r7,#12]
 1392 0016 01E0     	 b .L43
 1393              	.L42:
 114:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 115:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 116:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 117:../Dave/Generated/I2C_MASTER/i2c_master.c ****     result = b;
 1394              	 .loc 5 117 0
 1395 0018 3B68     	 ldr r3,[r7]
 1396 001a FB60     	 str r3,[r7,#12]
 1397              	.L43:
 118:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 119:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (result);
 1398              	 .loc 5 119 0
 1399 001c FB68     	 ldr r3,[r7,#12]
 120:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1400              	 .loc 5 120 0
 1401 001e 1846     	 mov r0,r3
 1402 0020 1437     	 adds r7,r7,#20
 1403              	.LCFI164:
 1404              	 .cfi_def_cfa_offset 4
 1405 0022 BD46     	 mov sp,r7
 1406              	.LCFI165:
 1407              	 .cfi_def_cfa_register 13
 1408              	 
 1409 0024 5DF8047B 	 ldr r7,[sp],#4
 1410              	.LCFI166:
 1411              	 .cfi_restore 7
 1412              	 .cfi_def_cfa_offset 0
 1413 0028 7047     	 bx lr
 1414              	 .cfi_endproc
 1415              	.LFE250:
 1417 002a 00BF     	 .section .text.I2C_MASTER_GetAppVersion,"ax",%progbits
 1418              	 .align 2
 1419              	 .global I2C_MASTER_GetAppVersion
 1420              	 .thumb
 1421              	 .thumb_func
 1423              	I2C_MASTER_GetAppVersion:
 1424              	.LFB251:
 121:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 122:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 123:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1) || \
 124:../Dave/Generated/I2C_MASTER/i2c_master.c ****     (I2C_MASTER_DIRECT_TX_ENABLED == 1) || (I2C_MASTER_DIRECT_RX_ENABLED == 1))
 125:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStart_Or_RepeatedStart(I2C_MASTER_t * handle, const uint32_t address,
 126:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                const XMC_I2C_CH_CMD_t cmd);
 127:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 128:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 129:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1))
 130:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_TxCallback(I2C_MASTER_t *const handle);
 131:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 132:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 133:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if(I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
 134:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_AbortTransmitIRQ(const I2C_MASTER_t *const handle);
 135:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 136:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 137:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 138:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_RxCallback(I2C_MASTER_t *const handle);
 139:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReconfigureRxFIFO(const I2C_MASTER_t * const handle, uint32_t data_size);
 140:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 141:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_FIFOData(I2C_MASTER_t * const handle, bool send_start, const uint32
 142:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                          const uint32_t count);
 143:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 144:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_StdData(I2C_MASTER_t * const handle, bool send_start, const uint32_
 145:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortReceiveIRQ(const I2C_MASTER_t *const handle);
 146:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 147:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 148:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 149:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DIRECT_TX_ENABLED == 1)
 150:../Dave/Generated/I2C_MASTER/i2c_master.c **** static I2C_MASTER_STATUS_t I2C_MASTER_lStartTransmitPolling(I2C_MASTER_t *const handle, bool send_s
 151:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                         const uint32_t slave_address, uint8_t *data
 152:../Dave/Generated/I2C_MASTER/i2c_master.c ****                               bool send_stop);
 153:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 154:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if I2C_MASTER_DIRECT_RX_ENABLED
 155:../Dave/Generated/I2C_MASTER/i2c_master.c **** static I2C_MASTER_STATUS_t I2C_MASTER_lStartReceivePolling(I2C_MASTER_t *const handle, bool send_st
 156:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                        uint8_t *data, uint32_t count, bool send_sto
 157:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                bool send_nack);
 158:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 159:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 160:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortTransmitDMA(const I2C_MASTER_t *const handle);
 161:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 162:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 163:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortReceiveDMA(const I2C_MASTER_t *const handle);
 164:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 165:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 166:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1) && (I2C_MASTER_DMA_RX_ENABLED == 1)
 167:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* DMA buffer to send the ACK */
 168:../Dave/Generated/I2C_MASTER/i2c_master.c **** static uint16_t ack_buf[1];
 169:../Dave/Generated/I2C_MASTER/i2c_master.c **** static uint16_t nack_buf[1];
 170:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 171:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 172:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 173:../Dave/Generated/I2C_MASTER/i2c_master.c **** * API IMPLEMENTATION
 174:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 175:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 176:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
 177:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief API to retrieve the version of the I2C_MASTER APP.
 178:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 179:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return DAVE_APP_VERSION_t Structure containing major version, minor version
 180:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *         and patch version.
 181:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
 182:../Dave/Generated/I2C_MASTER/i2c_master.c **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void)
 183:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1425              	 .loc 5 183 0
 1426              	 .cfi_startproc
 1427              	 
 1428              	 
 1429              	 
 1430 0000 80B4     	 push {r7}
 1431              	.LCFI167:
 1432              	 .cfi_def_cfa_offset 4
 1433              	 .cfi_offset 7,-4
 1434 0002 83B0     	 sub sp,sp,#12
 1435              	.LCFI168:
 1436              	 .cfi_def_cfa_offset 16
 1437 0004 00AF     	 add r7,sp,#0
 1438              	.LCFI169:
 1439              	 .cfi_def_cfa_register 7
 184:../Dave/Generated/I2C_MASTER/i2c_master.c ****   DAVE_APP_VERSION_t version;
 185:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 186:../Dave/Generated/I2C_MASTER/i2c_master.c ****   version.major = I2C_MASTER_MAJOR_VERSION;
 1440              	 .loc 5 186 0
 1441 0006 0423     	 movs r3,#4
 1442 0008 3B70     	 strb r3,[r7]
 187:../Dave/Generated/I2C_MASTER/i2c_master.c ****   version.minor = I2C_MASTER_MINOR_VERSION;
 1443              	 .loc 5 187 0
 1444 000a 0123     	 movs r3,#1
 1445 000c 7B70     	 strb r3,[r7,#1]
 188:../Dave/Generated/I2C_MASTER/i2c_master.c ****   version.patch = I2C_MASTER_PATCH_VERSION;
 1446              	 .loc 5 188 0
 1447 000e 1E23     	 movs r3,#30
 1448 0010 BB70     	 strb r3,[r7,#2]
 189:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 190:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (version);
 1449              	 .loc 5 190 0
 1450 0012 3B1D     	 adds r3,r7,#4
 1451 0014 3A46     	 mov r2,r7
 1452 0016 1268     	 ldr r2,[r2]
 1453 0018 1146     	 mov r1,r2
 1454 001a 1980     	 strh r1,[r3]
 1455 001c 0233     	 adds r3,r3,#2
 1456 001e 120C     	 lsrs r2,r2,#16
 1457 0020 1A70     	 strb r2,[r3]
 1458 0022 0023     	 movs r3,#0
 1459 0024 3A79     	 ldrb r2,[r7,#4]
 1460 0026 62F30703 	 bfi r3,r2,#0,#8
 1461 002a 7A79     	 ldrb r2,[r7,#5]
 1462 002c 62F30F23 	 bfi r3,r2,#8,#8
 1463 0030 BA79     	 ldrb r2,[r7,#6]
 1464 0032 62F31743 	 bfi r3,r2,#16,#8
 191:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1465              	 .loc 5 191 0
 1466 0036 1846     	 mov r0,r3
 1467 0038 0C37     	 adds r7,r7,#12
 1468              	.LCFI170:
 1469              	 .cfi_def_cfa_offset 4
 1470 003a BD46     	 mov sp,r7
 1471              	.LCFI171:
 1472              	 .cfi_def_cfa_register 13
 1473              	 
 1474 003c 5DF8047B 	 ldr r7,[sp],#4
 1475              	.LCFI172:
 1476              	 .cfi_restore 7
 1477              	 .cfi_def_cfa_offset 0
 1478 0040 7047     	 bx lr
 1479              	 .cfi_endproc
 1480              	.LFE251:
 1482 0042 00BF     	 .section .text.I2C_MASTER_Init,"ax",%progbits
 1483              	 .align 2
 1484              	 .global I2C_MASTER_Init
 1485              	 .thumb
 1486              	 .thumb_func
 1488              	I2C_MASTER_Init:
 1489              	.LFB252:
 192:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 193:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to initialize the USIC Channel with GUI configured values.*/
 194:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle)
 195:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1490              	 .loc 5 195 0
 1491              	 .cfi_startproc
 1492              	 
 1493              	 
 1494 0000 80B5     	 push {r7,lr}
 1495              	.LCFI173:
 1496              	 .cfi_def_cfa_offset 8
 1497              	 .cfi_offset 7,-8
 1498              	 .cfi_offset 14,-4
 1499 0002 84B0     	 sub sp,sp,#16
 1500              	.LCFI174:
 1501              	 .cfi_def_cfa_offset 24
 1502 0004 00AF     	 add r7,sp,#0
 1503              	.LCFI175:
 1504              	 .cfi_def_cfa_register 7
 1505 0006 7860     	 str r0,[r7,#4]
 196:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 197:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 198:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle != NULL)
 1506              	 .loc 5 198 0
 1507 0008 7B68     	 ldr r3,[r7,#4]
 1508 000a 002B     	 cmp r3,#0
 1509 000c 06D0     	 beq .L48
 199:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 200:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Initialize the multiplexers required for I2C_MASTER configuration*/
 201:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->fptr_i2c_config();
 1510              	 .loc 5 201 0
 1511 000e 7B68     	 ldr r3,[r7,#4]
 1512 0010 5B68     	 ldr r3,[r3,#4]
 1513 0012 5B68     	 ldr r3,[r3,#4]
 1514 0014 9847     	 blx r3
 202:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 203:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_SUCCESS;
 1515              	 .loc 5 203 0
 1516 0016 0023     	 movs r3,#0
 1517 0018 FB73     	 strb r3,[r7,#15]
 1518 001a 01E0     	 b .L49
 1519              	.L48:
 204:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 205:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 206:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 207:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
 1520              	 .loc 5 207 0
 1521 001c 0123     	 movs r3,#1
 1522 001e FB73     	 strb r3,[r7,#15]
 1523              	.L49:
 208:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 209:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 1524              	 .loc 5 209 0
 1525 0020 FB7B     	 ldrb r3,[r7,#15]
 210:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1526              	 .loc 5 210 0
 1527 0022 1846     	 mov r0,r3
 1528 0024 1037     	 adds r7,r7,#16
 1529              	.LCFI176:
 1530              	 .cfi_def_cfa_offset 8
 1531 0026 BD46     	 mov sp,r7
 1532              	.LCFI177:
 1533              	 .cfi_def_cfa_register 13
 1534              	 
 1535 0028 80BD     	 pop {r7,pc}
 1536              	 .cfi_endproc
 1537              	.LFE252:
 1539 002a 00BF     	 .section .text.I2C_MASTER_GetFlagStatus,"ax",%progbits
 1540              	 .align 2
 1541              	 .global I2C_MASTER_GetFlagStatus
 1542              	 .thumb
 1543              	 .thumb_func
 1545              	I2C_MASTER_GetFlagStatus:
 1546              	.LFB253:
 211:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 212:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to get flag status of the requested parameter */
 213:../Dave/Generated/I2C_MASTER/i2c_master.c **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype)
 214:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1547              	 .loc 5 214 0
 1548              	 .cfi_startproc
 1549              	 
 1550              	 
 1551 0000 80B5     	 push {r7,lr}
 1552              	.LCFI178:
 1553              	 .cfi_def_cfa_offset 8
 1554              	 .cfi_offset 7,-8
 1555              	 .cfi_offset 14,-4
 1556 0002 84B0     	 sub sp,sp,#16
 1557              	.LCFI179:
 1558              	 .cfi_def_cfa_offset 24
 1559 0004 00AF     	 add r7,sp,#0
 1560              	.LCFI180:
 1561              	 .cfi_def_cfa_register 7
 1562 0006 7860     	 str r0,[r7,#4]
 1563 0008 3960     	 str r1,[r7]
 215:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t status;
 216:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 217:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = XMC_I2C_CH_GetStatusFlag(handle->channel);
 1564              	 .loc 5 217 0
 1565 000a 7B68     	 ldr r3,[r7,#4]
 1566 000c 1B68     	 ldr r3,[r3]
 1567 000e 1846     	 mov r0,r3
 1568 0010 FFF7FEFF 	 bl XMC_I2C_CH_GetStatusFlag
 1569 0014 F860     	 str r0,[r7,#12]
 218:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 219:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status & flagtype);
 1570              	 .loc 5 219 0
 1571 0016 FA68     	 ldr r2,[r7,#12]
 1572 0018 3B68     	 ldr r3,[r7]
 1573 001a 1340     	 ands r3,r3,r2
 220:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1574              	 .loc 5 220 0
 1575 001c 1846     	 mov r0,r3
 1576 001e 1037     	 adds r7,r7,#16
 1577              	.LCFI181:
 1578              	 .cfi_def_cfa_offset 8
 1579 0020 BD46     	 mov sp,r7
 1580              	.LCFI182:
 1581              	 .cfi_def_cfa_register 13
 1582              	 
 1583 0022 80BD     	 pop {r7,pc}
 1584              	 .cfi_endproc
 1585              	.LFE253:
 1587              	 .section .text.I2C_MASTER_ClearFlag,"ax",%progbits
 1588              	 .align 2
 1589              	 .global I2C_MASTER_ClearFlag
 1590              	 .thumb
 1591              	 .thumb_func
 1593              	I2C_MASTER_ClearFlag:
 1594              	.LFB254:
 221:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 222:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to clear flag status of the requested parameter */
 223:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype)
 224:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1595              	 .loc 5 224 0
 1596              	 .cfi_startproc
 1597              	 
 1598              	 
 1599 0000 80B5     	 push {r7,lr}
 1600              	.LCFI183:
 1601              	 .cfi_def_cfa_offset 8
 1602              	 .cfi_offset 7,-8
 1603              	 .cfi_offset 14,-4
 1604 0002 82B0     	 sub sp,sp,#8
 1605              	.LCFI184:
 1606              	 .cfi_def_cfa_offset 16
 1607 0004 00AF     	 add r7,sp,#0
 1608              	.LCFI185:
 1609              	 .cfi_def_cfa_register 7
 1610 0006 7860     	 str r0,[r7,#4]
 1611 0008 3960     	 str r1,[r7]
 225:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_I2C_CH_ClearStatusFlag(handle->channel,flagtype);
 1612              	 .loc 5 225 0
 1613 000a 7B68     	 ldr r3,[r7,#4]
 1614 000c 1B68     	 ldr r3,[r3]
 1615 000e 1846     	 mov r0,r3
 1616 0010 3968     	 ldr r1,[r7]
 1617 0012 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 226:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 1618              	 .loc 5 226 0
 1619 0016 0837     	 adds r7,r7,#8
 1620              	.LCFI186:
 1621              	 .cfi_def_cfa_offset 8
 1622 0018 BD46     	 mov sp,r7
 1623              	.LCFI187:
 1624              	 .cfi_def_cfa_register 13
 1625              	 
 1626 001a 80BD     	 pop {r7,pc}
 1627              	 .cfi_endproc
 1628              	.LFE254:
 1630              	 .section .text.I2C_MASTER_Transmit,"ax",%progbits
 1631              	 .align 2
 1632              	 .global I2C_MASTER_Transmit
 1633              	 .thumb
 1634              	 .thumb_func
 1636              	I2C_MASTER_Transmit:
 1637              	.LFB255:
 227:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 228:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to transmit the data to slave device */
 229:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 230:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         uint8_t *data, const uint32_t size, bool send_stop)
 231:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1638              	 .loc 5 231 0
 1639              	 .cfi_startproc
 1640              	 
 1641              	 
 1642 0000 80B5     	 push {r7,lr}
 1643              	.LCFI188:
 1644              	 .cfi_def_cfa_offset 8
 1645              	 .cfi_offset 7,-8
 1646              	 .cfi_offset 14,-4
 1647 0002 88B0     	 sub sp,sp,#32
 1648              	.LCFI189:
 1649              	 .cfi_def_cfa_offset 40
 1650 0004 02AF     	 add r7,sp,#8
 1651              	.LCFI190:
 1652              	 .cfi_def_cfa 7,32
 1653 0006 F860     	 str r0,[r7,#12]
 1654 0008 7A60     	 str r2,[r7,#4]
 1655 000a 3B60     	 str r3,[r7]
 1656 000c 0B46     	 mov r3,r1
 1657 000e FB72     	 strb r3,[r7,#11]
 232:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 233:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 234:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 1658              	 .loc 5 234 0
 1659 0010 0223     	 movs r3,#2
 1660 0012 FB75     	 strb r3,[r7,#23]
 235:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 236:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if(handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 1661              	 .loc 5 236 0
 1662 0014 FB68     	 ldr r3,[r7,#12]
 1663 0016 5B68     	 ldr r3,[r3,#4]
 1664 0018 93F82430 	 ldrb r3,[r3,#36]
 1665 001c 002B     	 cmp r3,#0
 1666 001e 0DD1     	 bne .L56
 237:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 238:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
 239:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_StartTransmitIRQ(handle, send_start, address, data, size, send_stop);
 1667              	 .loc 5 239 0
 1668 0020 FA7A     	 ldrb r2,[r7,#11]
 1669 0022 3B6A     	 ldr r3,[r7,#32]
 1670 0024 0093     	 str r3,[sp]
 1671 0026 97F82430 	 ldrb r3,[r7,#36]
 1672 002a 0193     	 str r3,[sp,#4]
 1673 002c F868     	 ldr r0,[r7,#12]
 1674 002e 1146     	 mov r1,r2
 1675 0030 7A68     	 ldr r2,[r7,#4]
 1676 0032 3B68     	 ldr r3,[r7]
 1677 0034 FFF7FEFF 	 bl I2C_MASTER_StartTransmitIRQ
 1678 0038 0346     	 mov r3,r0
 1679 003a FB75     	 strb r3,[r7,#23]
 1680              	.L56:
 240:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 241:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 242:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if(handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 243:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 244:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 245:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_UNSUPPORTED_MODE;
 246:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 247:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 248:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 249:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 250:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DIRECT_TX_ENABLED == 1)
 251:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_lStartTransmitPolling(handle, send_start, address, data, size, send_stop);
 252:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 253:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 254:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 255:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 1681              	 .loc 5 255 0
 1682 003c FB7D     	 ldrb r3,[r7,#23]
 256:../Dave/Generated/I2C_MASTER/i2c_master.c **** } /* end of function */
 1683              	 .loc 5 256 0
 1684 003e 1846     	 mov r0,r3
 1685 0040 1837     	 adds r7,r7,#24
 1686              	.LCFI191:
 1687              	 .cfi_def_cfa_offset 8
 1688 0042 BD46     	 mov sp,r7
 1689              	.LCFI192:
 1690              	 .cfi_def_cfa_register 13
 1691              	 
 1692 0044 80BD     	 pop {r7,pc}
 1693              	 .cfi_endproc
 1694              	.LFE255:
 1696 0046 00BF     	 .section .text.I2C_MASTER_TransmitHandler,"ax",%progbits
 1697              	 .align 2
 1698              	 .global I2C_MASTER_TransmitHandler
 1699              	 .thumb
 1700              	 .thumb_func
 1702              	I2C_MASTER_TransmitHandler:
 1703              	.LFB256:
 257:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 258:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1))
 259:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
 260:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Transmit interrupt handler for the APP.
 261:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * This is a common interrupt handling function called for different instances of the APP.
 262:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 263:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *  @param  handle I2C_MASTER APP handle pointer of type I2C_MASTER_t*
 264:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 265:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *  @return void
 266:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
 267:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_TransmitHandler(I2C_MASTER_t * const handle)
 268:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 1704              	 .loc 5 268 0
 1705              	 .cfi_startproc
 1706              	 
 1707              	 
 1708 0000 80B5     	 push {r7,lr}
 1709              	.LCFI193:
 1710              	 .cfi_def_cfa_offset 8
 1711              	 .cfi_offset 7,-8
 1712              	 .cfi_offset 14,-4
 1713 0002 84B0     	 sub sp,sp,#16
 1714              	.LCFI194:
 1715              	 .cfi_def_cfa_offset 24
 1716 0004 00AF     	 add r7,sp,#0
 1717              	.LCFI195:
 1718              	 .cfi_def_cfa_register 7
 1719 0006 7860     	 str r0,[r7,#4]
 269:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 270:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_min;
 271:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 272:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 1720              	 .loc 5 272 0
 1721 0008 7B68     	 ldr r3,[r7,#4]
 1722 000a 9B68     	 ldr r3,[r3,#8]
 1723 000c BB60     	 str r3,[r7,#8]
 273:../Dave/Generated/I2C_MASTER/i2c_master.c ****   fifo_min = 0U;
 1724              	 .loc 5 273 0
 1725 000e 0023     	 movs r3,#0
 1726 0010 FB73     	 strb r3,[r7,#15]
 274:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 275:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* check if any error flag is set */
 276:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (I2C_MASTER_GetFlagStatus(handle, ((uint32_t)XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED |
 1727              	 .loc 5 276 0
 1728 0012 7868     	 ldr r0,[r7,#4]
 1729 0014 4FF4B171 	 mov r1,#354
 1730 0018 FFF7FEFF 	 bl I2C_MASTER_GetFlagStatus
 1731 001c 0346     	 mov r3,r0
 1732 001e 002B     	 cmp r3,#0
 1733 0020 11D0     	 beq .L59
 277:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         (uint32_t)XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST |
 278:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         (uint32_t)XMC_I2C_CH_STATUS_FLAG_ERROR |
 279:../Dave/Generated/I2C_MASTER/i2c_master.c ****                     (uint32_t)XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND)))
 280:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 281:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /* Disable the transmit events */
 282:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDAR
 1734              	 .loc 5 282 0
 1735 0022 7B68     	 ldr r3,[r7,#4]
 1736 0024 1B68     	 ldr r3,[r3]
 1737 0026 1846     	 mov r0,r3
 1738 0028 4FF08041 	 mov r1,#1073741824
 1739 002c FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 283:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_EVENT_TRANSMIT_BUFFER);
 1740              	 .loc 5 283 0
 1741 0030 7B68     	 ldr r3,[r7,#4]
 1742 0032 1B68     	 ldr r3,[r3]
 1743 0034 1846     	 mov r0,r3
 1744 0036 4FF40051 	 mov r1,#8192
 1745 003a FFF7FEFF 	 bl XMC_USIC_CH_DisableEvent
 284:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 285:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ProtocolHandler(handle);
 1746              	 .loc 5 285 0
 1747 003e 7868     	 ldr r0,[r7,#4]
 1748 0040 FFF7FEFF 	 bl I2C_MASTER_ProtocolHandler
 1749 0044 05E1     	 b .L58
 1750              	.L59:
 286:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 287:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 288:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 289:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 290:../Dave/Generated/I2C_MASTER/i2c_master.c ****   Direction = Transmit, Tx FIFO enabled
 291:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 292:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->direction == (uint32_t)I2C_MASTER_DIRECTION_TRANSMIT)
 1751              	 .loc 5 292 0
 1752 0046 BB68     	 ldr r3,[r7,#8]
 1753 0048 9B69     	 ldr r3,[r3,#24]
 1754 004a 002B     	 cmp r3,#0
 1755 004c 40F08280 	 bne .L61
 293:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 294:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size > 0)
 1756              	 .loc 5 294 0
 1757 0050 7B68     	 ldr r3,[r7,#4]
 1758 0052 5B68     	 ldr r3,[r3,#4]
 1759 0054 93F82630 	 ldrb r3,[r3,#38]
 1760 0058 002B     	 cmp r3,#0
 1761 005a 5AD0     	 beq .L62
 295:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 296:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 1762              	 .loc 5 296 0
 1763 005c BB68     	 ldr r3,[r7,#8]
 1764 005e DA68     	 ldr r2,[r3,#12]
 1765 0060 BB68     	 ldr r3,[r7,#8]
 1766 0062 9B68     	 ldr r3,[r3,#8]
 1767 0064 9A42     	 cmp r2,r3
 1768 0066 2ED2     	 bcs .L63
 297:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 298:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_DisableEvent(handle,(uint32_t)XMC_I2C_CH_EVENT_ACK);
 1769              	 .loc 5 298 0
 1770 0068 7868     	 ldr r0,[r7,#4]
 1771 006a 4FF08041 	 mov r1,#1073741824
 1772 006e FFF7FEFF 	 bl I2C_MASTER_DisableEvent
 299:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_EnableEvent(handle->channel, (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAND
 1773              	 .loc 5 299 0
 1774 0072 7B68     	 ldr r3,[r7,#4]
 1775 0074 1B68     	 ldr r3,[r3]
 1776 0076 1846     	 mov r0,r3
 1777 0078 4FF08041 	 mov r1,#1073741824
 1778 007c FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_EnableEvent
 300:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /*Fill the transmit FIFO */
 301:../Dave/Generated/I2C_MASTER/i2c_master.c ****         while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 1779              	 .loc 5 301 0
 1780 0080 17E0     	 b .L64
 1781              	.L67:
 302:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 303:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /* transmit each byte till index reaches to the last byte */
 304:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 1782              	 .loc 5 304 0
 1783 0082 BB68     	 ldr r3,[r7,#8]
 1784 0084 DA68     	 ldr r2,[r3,#12]
 1785 0086 BB68     	 ldr r3,[r7,#8]
 1786 0088 9B68     	 ldr r3,[r3,#8]
 1787 008a 9A42     	 cmp r2,r3
 1788 008c 0FD2     	 bcs .L65
 305:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 306:../Dave/Generated/I2C_MASTER/i2c_master.c ****             /* load the FIFO, byte by byte till either FIFO is full or all data is loaded*/
 307:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_TransmitByte(handle, (uint8_t)ptr_runtime->tx_data[ptr_runtime->tx_data_inde
 1789              	 .loc 5 307 0
 1790 008e BB68     	 ldr r3,[r7,#8]
 1791 0090 1A68     	 ldr r2,[r3]
 1792 0092 BB68     	 ldr r3,[r7,#8]
 1793 0094 DB68     	 ldr r3,[r3,#12]
 1794 0096 1344     	 add r3,r3,r2
 1795 0098 1B78     	 ldrb r3,[r3]
 1796 009a 7868     	 ldr r0,[r7,#4]
 1797 009c 1946     	 mov r1,r3
 1798 009e FFF7FEFF 	 bl I2C_MASTER_TransmitByte
 308:../Dave/Generated/I2C_MASTER/i2c_master.c ****             ptr_runtime->tx_data_index++;
 1799              	 .loc 5 308 0
 1800 00a2 BB68     	 ldr r3,[r7,#8]
 1801 00a4 DB68     	 ldr r3,[r3,#12]
 1802 00a6 5A1C     	 adds r2,r3,#1
 1803 00a8 BB68     	 ldr r3,[r7,#8]
 1804 00aa DA60     	 str r2,[r3,#12]
 1805 00ac 01E0     	 b .L64
 1806              	.L65:
 309:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 310:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 311:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 312:../Dave/Generated/I2C_MASTER/i2c_master.c ****             break;
 1807              	 .loc 5 312 0
 1808 00ae 00BF     	 nop
 1809 00b0 CFE0     	 b .L58
 1810              	.L64:
 301:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 1811              	 .loc 5 301 0
 1812 00b2 7868     	 ldr r0,[r7,#4]
 1813 00b4 FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 1814 00b8 0346     	 mov r3,r0
 1815 00ba 83F00103 	 eor r3,r3,#1
 1816 00be DBB2     	 uxtb r3,r3
 1817 00c0 002B     	 cmp r3,#0
 1818 00c2 DED1     	 bne .L67
 1819 00c4 C5E0     	 b .L58
 1820              	.L63:
 313:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 314:../Dave/Generated/I2C_MASTER/i2c_master.c ****         } /* end of while */
 315:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 316:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 317:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 318:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if index is reached to last byte and "bus acquired" flag is set to true, then issue Send
 319:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAN
 1821              	 .loc 5 319 0
 1822 00c6 7B68     	 ldr r3,[r7,#4]
 1823 00c8 1B68     	 ldr r3,[r3]
 1824 00ca 1846     	 mov r0,r3
 1825 00cc 4FF08041 	 mov r1,#1073741824
 1826 00d0 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 320:../Dave/Generated/I2C_MASTER/i2c_master.c ****       NVIC_ClearPendingIRQ(handle->config->tx_irqn);
 1827              	 .loc 5 320 0
 1828 00d4 7B68     	 ldr r3,[r7,#4]
 1829 00d6 5B68     	 ldr r3,[r3,#4]
 1830 00d8 93F82830 	 ldrb r3,[r3,#40]
 1831 00dc 5BB2     	 sxtb r3,r3
 1832 00de 1846     	 mov r0,r3
 1833 00e0 FFF7FEFF 	 bl __NVIC_ClearPendingIRQ
 321:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 322:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*make sure data is transmitted in FIFO*/
 323:../Dave/Generated/I2C_MASTER/i2c_master.c ****         while (!XMC_USIC_CH_TXFIFO_IsEmpty(handle->channel)){}
 1834              	 .loc 5 323 0
 1835 00e4 00BF     	 nop
 1836              	.L69:
 1837              	 .loc 5 323 0 is_stmt 0 discriminator 1
 1838 00e6 7B68     	 ldr r3,[r7,#4]
 1839 00e8 1B68     	 ldr r3,[r3]
 1840 00ea 1846     	 mov r0,r3
 1841 00ec FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_IsEmpty
 1842 00f0 0346     	 mov r3,r0
 1843 00f2 83F00103 	 eor r3,r3,#1
 1844 00f6 DBB2     	 uxtb r3,r3
 1845 00f8 002B     	 cmp r3,#0
 1846 00fa F4D1     	 bne .L69
 324:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 325:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (ptr_runtime->bus_acquired == true)
 1847              	 .loc 5 325 0 is_stmt 1
 1848 00fc BB68     	 ldr r3,[r7,#8]
 1849 00fe 93F82830 	 ldrb r3,[r3,#40]
 1850 0102 DBB2     	 uxtb r3,r3
 1851 0104 002B     	 cmp r3,#0
 1852 0106 00F0A480 	 beq .L58
 326:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 327:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_lSendStop_JumpTo_TxCallback(handle);
 1853              	 .loc 5 327 0
 1854 010a 7868     	 ldr r0,[r7,#4]
 1855 010c FFF7FEFF 	 bl I2C_MASTER_lSendStop_JumpTo_TxCallback
 1856 0110 9FE0     	 b .L58
 1857              	.L62:
 328:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 329:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 330:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of  if(handle->config->txFIFO_size > 0) */
 331:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 332:../Dave/Generated/I2C_MASTER/i2c_master.c ****     Direction = transmit and Tx FIFO disabled
 333:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 334:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 335:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 336:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* transmit each byte till the last byte */
 337:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 1858              	 .loc 5 337 0
 1859 0112 BB68     	 ldr r3,[r7,#8]
 1860 0114 DA68     	 ldr r2,[r3,#12]
 1861 0116 BB68     	 ldr r3,[r7,#8]
 1862 0118 9B68     	 ldr r3,[r3,#8]
 1863 011a 9A42     	 cmp r2,r3
 1864 011c 0FD2     	 bcs .L71
 338:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 339:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_TransmitByte(handle, ptr_runtime->tx_data[ptr_runtime->tx_data_index]);
 1865              	 .loc 5 339 0
 1866 011e BB68     	 ldr r3,[r7,#8]
 1867 0120 1A68     	 ldr r2,[r3]
 1868 0122 BB68     	 ldr r3,[r7,#8]
 1869 0124 DB68     	 ldr r3,[r3,#12]
 1870 0126 1344     	 add r3,r3,r2
 1871 0128 1B78     	 ldrb r3,[r3]
 1872 012a 7868     	 ldr r0,[r7,#4]
 1873 012c 1946     	 mov r1,r3
 1874 012e FFF7FEFF 	 bl I2C_MASTER_TransmitByte
 340:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->tx_data_index++;
 1875              	 .loc 5 340 0
 1876 0132 BB68     	 ldr r3,[r7,#8]
 1877 0134 DB68     	 ldr r3,[r3,#12]
 1878 0136 5A1C     	 adds r2,r3,#1
 1879 0138 BB68     	 ldr r3,[r7,#8]
 1880 013a DA60     	 str r2,[r3,#12]
 1881 013c 89E0     	 b .L58
 1882              	.L71:
 341:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 342:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 343:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 344:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if index reaches last byte and bus_acquired flag is set to true, issue send stop */
 345:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->bus_acquired == true)
 1883              	 .loc 5 345 0
 1884 013e BB68     	 ldr r3,[r7,#8]
 1885 0140 93F82830 	 ldrb r3,[r3,#40]
 1886 0144 DBB2     	 uxtb r3,r3
 1887 0146 002B     	 cmp r3,#0
 1888 0148 00F08380 	 beq .L58
 346:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 347:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_lSendStop_JumpTo_TxCallback(handle);
 1889              	 .loc 5 347 0
 1890 014c 7868     	 ldr r0,[r7,#4]
 1891 014e FFF7FEFF 	 bl I2C_MASTER_lSendStop_JumpTo_TxCallback
 1892 0152 7EE0     	 b .L58
 1893              	.L61:
 348:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 349:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 350:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 351:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of if(ptr_runtime->direction == (uint32_t)I2C_MASTER_DIRECTION_TRANSMIT) */
 352:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 353:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 354:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 355:../Dave/Generated/I2C_MASTER/i2c_master.c ****   Direction = Receive, Tx, Rx FIFO enabled.
 356:../Dave/Generated/I2C_MASTER/i2c_master.c ****   Minimum FIFO value is calculated by comparing Tx FIFO and Rx FIFO size.
 357:../Dave/Generated/I2C_MASTER/i2c_master.c ****   If Rx FIFO is not enabled, default size of 2 is considered.
 358:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 359:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size > 0)
 1894              	 .loc 5 359 0
 1895 0154 7B68     	 ldr r3,[r7,#4]
 1896 0156 5B68     	 ldr r3,[r3,#4]
 1897 0158 93F82630 	 ldrb r3,[r3,#38]
 1898 015c 002B     	 cmp r3,#0
 1899 015e 54D0     	 beq .L72
 360:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 361:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if ((handle->config->rxFIFO_size > 0))
 1900              	 .loc 5 361 0
 1901 0160 7B68     	 ldr r3,[r7,#4]
 1902 0162 5B68     	 ldr r3,[r3,#4]
 1903 0164 93F82730 	 ldrb r3,[r3,#39]
 1904 0168 002B     	 cmp r3,#0
 1905 016a 15D0     	 beq .L73
 362:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 363:../Dave/Generated/I2C_MASTER/i2c_master.c ****         fifo_min = (uint8_t)calculate_minfifosize(((uint32_t)1 << (uint32_t)handle->config->txFIFO_
 1906              	 .loc 5 363 0
 1907 016c 7B68     	 ldr r3,[r7,#4]
 1908 016e 5B68     	 ldr r3,[r3,#4]
 1909 0170 93F82630 	 ldrb r3,[r3,#38]
 1910 0174 1A46     	 mov r2,r3
 1911 0176 0123     	 movs r3,#1
 1912 0178 03FA02F2 	 lsl r2,r3,r2
 364:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               ((uint32_t)1 << (uint32_t)handle->config->rxFIFO_size
 1913              	 .loc 5 364 0
 1914 017c 7B68     	 ldr r3,[r7,#4]
 1915 017e 5B68     	 ldr r3,[r3,#4]
 1916 0180 93F82730 	 ldrb r3,[r3,#39]
 363:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               ((uint32_t)1 << (uint32_t)handle->config->rxFIFO_size
 1917              	 .loc 5 363 0
 1918 0184 1946     	 mov r1,r3
 1919 0186 0123     	 movs r3,#1
 1920 0188 8B40     	 lsls r3,r3,r1
 1921 018a 1046     	 mov r0,r2
 1922 018c 1946     	 mov r1,r3
 1923 018e FFF7FEFF 	 bl calculate_minfifosize
 1924 0192 0346     	 mov r3,r0
 1925 0194 FB73     	 strb r3,[r7,#15]
 1926 0196 01E0     	 b .L74
 1927              	.L73:
 365:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 366:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 367:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 368:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if Rx FIFO is disabled, set minimum FIFO size as 2 */
 369:../Dave/Generated/I2C_MASTER/i2c_master.c ****         fifo_min = 2U;
 1928              	 .loc 5 369 0
 1929 0198 0223     	 movs r3,#2
 1930 019a FB73     	 strb r3,[r7,#15]
 1931              	.L74:
 370:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 371:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 372:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAN
 1932              	 .loc 5 372 0
 1933 019c 7B68     	 ldr r3,[r7,#4]
 1934 019e 1B68     	 ldr r3,[r3]
 1935 01a0 1846     	 mov r0,r3
 1936 01a2 4FF08041 	 mov r1,#1073741824
 1937 01a6 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 373:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 374:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* fill the FIFO */
 375:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 1938              	 .loc 5 375 0
 1939 01aa 23E0     	 b .L75
 1940              	.L80:
 376:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 377:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 1941              	 .loc 5 377 0
 1942 01ac BB68     	 ldr r3,[r7,#8]
 1943 01ae DA68     	 ldr r2,[r3,#12]
 1944 01b0 BB68     	 ldr r3,[r7,#8]
 1945 01b2 9B68     	 ldr r3,[r3,#8]
 1946 01b4 9A42     	 cmp r2,r3
 1947 01b6 1CD2     	 bcs .L76
 378:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 379:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /* check for last byte and send_nack is set to true */
 380:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->se
 1948              	 .loc 5 380 0
 1949 01b8 BB68     	 ldr r3,[r7,#8]
 1950 01ba DB68     	 ldr r3,[r3,#12]
 1951 01bc 5A1C     	 adds r2,r3,#1
 1952 01be BB68     	 ldr r3,[r7,#8]
 1953 01c0 9B68     	 ldr r3,[r3,#8]
 1954 01c2 9A42     	 cmp r2,r3
 1955 01c4 07D1     	 bne .L77
 1956              	 .loc 5 380 0 is_stmt 0 discriminator 1
 1957 01c6 BB68     	 ldr r3,[r7,#8]
 1958 01c8 1B6A     	 ldr r3,[r3,#32]
 1959 01ca 012B     	 cmp r3,#1
 1960 01cc 03D1     	 bne .L77
 381:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 382:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
 1961              	 .loc 5 382 0 is_stmt 1
 1962 01ce 7868     	 ldr r0,[r7,#4]
 1963 01d0 FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 1964 01d4 02E0     	 b .L78
 1965              	.L77:
 383:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 384:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 385:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 386:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
 1966              	 .loc 5 386 0
 1967 01d6 7868     	 ldr r0,[r7,#4]
 1968 01d8 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 1969              	.L78:
 387:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 388:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
 1970              	 .loc 5 388 0
 1971 01dc BB68     	 ldr r3,[r7,#8]
 1972 01de DB68     	 ldr r3,[r3,#12]
 1973 01e0 5A1C     	 adds r2,r3,#1
 1974 01e2 BB68     	 ldr r3,[r7,#8]
 1975 01e4 DA60     	 str r2,[r3,#12]
 389:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 390:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /*if index reaches fifo size - break*/
 391:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if ((ptr_runtime->tx_data_index) >= fifo_min)
 1976              	 .loc 5 391 0
 1977 01e6 BB68     	 ldr r3,[r7,#8]
 1978 01e8 DA68     	 ldr r2,[r3,#12]
 1979 01ea FB7B     	 ldrb r3,[r7,#15]
 1980 01ec 9A42     	 cmp r2,r3
 1981 01ee 01D3     	 bcc .L75
 392:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 393:../Dave/Generated/I2C_MASTER/i2c_master.c ****             break;
 1982              	 .loc 5 393 0
 1983 01f0 0AE0     	 b .L79
 1984              	.L76:
 394:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 395:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 396:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 397:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 398:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 1985              	 .loc 5 398 0 discriminator 5
 1986 01f2 09E0     	 b .L79
 1987              	.L75:
 375:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 1988              	 .loc 5 375 0
 1989 01f4 7868     	 ldr r0,[r7,#4]
 1990 01f6 FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 1991 01fa 0346     	 mov r3,r0
 1992 01fc 83F00103 	 eor r3,r3,#1
 1993 0200 DBB2     	 uxtb r3,r3
 1994 0202 002B     	 cmp r3,#0
 1995 0204 D2D1     	 bne .L80
 1996 0206 17E0     	 b .L81
 1997              	.L79:
 1998 0208 16E0     	 b .L81
 1999              	.L72:
 399:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 400:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while */
 401:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of if(handle->config->txFIFO_size > 0) */
 402:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 403:../Dave/Generated/I2C_MASTER/i2c_master.c ****    Direction = Receive, Tx FIFO disabled
 404:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
 405:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 406:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 407:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* check for last byte and send_nack is set to true */
 408:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_n
 2000              	 .loc 5 408 0
 2001 020a BB68     	 ldr r3,[r7,#8]
 2002 020c DB68     	 ldr r3,[r3,#12]
 2003 020e 5A1C     	 adds r2,r3,#1
 2004 0210 BB68     	 ldr r3,[r7,#8]
 2005 0212 9B68     	 ldr r3,[r3,#8]
 2006 0214 9A42     	 cmp r2,r3
 2007 0216 07D1     	 bne .L82
 2008              	 .loc 5 408 0 is_stmt 0 discriminator 1
 2009 0218 BB68     	 ldr r3,[r7,#8]
 2010 021a 1B6A     	 ldr r3,[r3,#32]
 2011 021c 012B     	 cmp r3,#1
 2012 021e 03D1     	 bne .L82
 409:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 410:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveNACK(handle);
 2013              	 .loc 5 410 0 is_stmt 1
 2014 0220 7868     	 ldr r0,[r7,#4]
 2015 0222 FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2016 0226 02E0     	 b .L83
 2017              	.L82:
 411:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 412:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 413:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 414:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveACK(handle);
 2018              	 .loc 5 414 0
 2019 0228 7868     	 ldr r0,[r7,#4]
 2020 022a FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2021              	.L83:
 415:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 416:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->tx_data_index++;
 2022              	 .loc 5 416 0
 2023 022e BB68     	 ldr r3,[r7,#8]
 2024 0230 DB68     	 ldr r3,[r3,#12]
 2025 0232 5A1C     	 adds r2,r3,#1
 2026 0234 BB68     	 ldr r3,[r7,#8]
 2027 0236 DA60     	 str r2,[r3,#12]
 2028              	.L81:
 417:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 418:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 419:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 420:../Dave/Generated/I2C_MASTER/i2c_master.c ****    If last byte, then disable ACK event
 421:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
 422:../Dave/Generated/I2C_MASTER/i2c_master.c ****      if (handle->runtime->tx_data_index == handle->runtime->tx_data_count)
 2029              	 .loc 5 422 0
 2030 0238 7B68     	 ldr r3,[r7,#4]
 2031 023a 9B68     	 ldr r3,[r3,#8]
 2032 023c DA68     	 ldr r2,[r3,#12]
 2033 023e 7B68     	 ldr r3,[r7,#4]
 2034 0240 9B68     	 ldr r3,[r3,#8]
 2035 0242 9B68     	 ldr r3,[r3,#8]
 2036 0244 9A42     	 cmp r2,r3
 2037 0246 04D1     	 bne .L58
 423:../Dave/Generated/I2C_MASTER/i2c_master.c ****      {
 424:../Dave/Generated/I2C_MASTER/i2c_master.c ****        I2C_MASTER_DisableEvent(handle,(uint32_t)XMC_I2C_CH_EVENT_ACK);
 2038              	 .loc 5 424 0
 2039 0248 7868     	 ldr r0,[r7,#4]
 2040 024a 4FF08041 	 mov r1,#1073741824
 2041 024e FFF7FEFF 	 bl I2C_MASTER_DisableEvent
 2042              	.L58:
 425:../Dave/Generated/I2C_MASTER/i2c_master.c ****      }
 426:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of else */
 427:../Dave/Generated/I2C_MASTER/i2c_master.c ****  } /* end of else */
 428:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2043              	 .loc 5 428 0
 2044 0252 1037     	 adds r7,r7,#16
 2045              	.LCFI196:
 2046              	 .cfi_def_cfa_offset 8
 2047 0254 BD46     	 mov sp,r7
 2048              	.LCFI197:
 2049              	 .cfi_def_cfa_register 13
 2050              	 
 2051 0256 80BD     	 pop {r7,pc}
 2052              	 .cfi_endproc
 2053              	.LFE256:
 2055              	 .section .text.I2C_MASTER_lSendStop_JumpTo_TxCallback,"ax",%progbits
 2056              	 .align 2
 2057              	 .thumb
 2058              	 .thumb_func
 2060              	I2C_MASTER_lSendStop_JumpTo_TxCallback:
 2061              	.LFB257:
 429:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 430:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to issue Send Stop command and jump to callback routine */
 431:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_TxCallback(I2C_MASTER_t *const handle)
 432:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2062              	 .loc 5 432 0
 2063              	 .cfi_startproc
 2064              	 
 2065              	 
 2066 0000 80B5     	 push {r7,lr}
 2067              	.LCFI198:
 2068              	 .cfi_def_cfa_offset 8
 2069              	 .cfi_offset 7,-8
 2070              	 .cfi_offset 14,-4
 2071 0002 84B0     	 sub sp,sp,#16
 2072              	.LCFI199:
 2073              	 .cfi_def_cfa_offset 24
 2074 0004 00AF     	 add r7,sp,#0
 2075              	.LCFI200:
 2076              	 .cfi_def_cfa_register 7
 2077 0006 7860     	 str r0,[r7,#4]
 433:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 434:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 435:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 2078              	 .loc 5 435 0
 2079 0008 7B68     	 ldr r3,[r7,#4]
 2080 000a 9B68     	 ldr r3,[r3,#8]
 2081 000c FB60     	 str r3,[r7,#12]
 436:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 437:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_DisableEvent(handle,((uint32_t)XMC_I2C_CH_EVENT_ACK ));
 2082              	 .loc 5 437 0
 2083 000e 7868     	 ldr r0,[r7,#4]
 2084 0010 4FF08041 	 mov r1,#1073741824
 2085 0014 FFF7FEFF 	 bl I2C_MASTER_DisableEvent
 438:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 439:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->send_stop == true)
 2086              	 .loc 5 439 0
 2087 0018 FB68     	 ldr r3,[r7,#12]
 2088 001a DB69     	 ldr r3,[r3,#28]
 2089 001c 012B     	 cmp r3,#1
 2090 001e 06D1     	 bne .L85
 440:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 441:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->bus_acquired = false;
 2091              	 .loc 5 441 0
 2092 0020 FB68     	 ldr r3,[r7,#12]
 2093 0022 0022     	 movs r2,#0
 2094 0024 83F82820 	 strb r2,[r3,#40]
 442:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_SendStop(handle);
 2095              	 .loc 5 442 0
 2096 0028 7868     	 ldr r0,[r7,#4]
 2097 002a FFF7FEFF 	 bl I2C_MASTER_SendStop
 2098              	.L85:
 443:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 444:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 445:../Dave/Generated/I2C_MASTER/i2c_master.c ****   while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY){}
 2099              	 .loc 5 445 0
 2100 002e 00BF     	 nop
 2101              	.L86:
 2102              	 .loc 5 445 0 is_stmt 0 discriminator 1
 2103 0030 7B68     	 ldr r3,[r7,#4]
 2104 0032 1B68     	 ldr r3,[r3]
 2105 0034 1846     	 mov r0,r3
 2106 0036 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 2107 003a 0346     	 mov r3,r0
 2108 003c 802B     	 cmp r3,#128
 2109 003e F7D0     	 beq .L86
 446:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 447:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*All data is transmitted*/
 448:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime->tx_busy = false;
 2110              	 .loc 5 448 0 is_stmt 1
 2111 0040 FB68     	 ldr r3,[r7,#12]
 2112 0042 0022     	 movs r2,#0
 2113 0044 83F82620 	 strb r2,[r3,#38]
 449:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 450:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->tx_cbhandler != NULL)
 2114              	 .loc 5 450 0
 2115 0048 7B68     	 ldr r3,[r7,#4]
 2116 004a 5B68     	 ldr r3,[r3,#4]
 2117 004c 1B69     	 ldr r3,[r3,#16]
 2118 004e 002B     	 cmp r3,#0
 2119 0050 03D0     	 beq .L84
 451:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 452:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Execute the 'End of transmission' callback function*/
 453:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->tx_cbhandler();
 2120              	 .loc 5 453 0
 2121 0052 7B68     	 ldr r3,[r7,#4]
 2122 0054 5B68     	 ldr r3,[r3,#4]
 2123 0056 1B69     	 ldr r3,[r3,#16]
 2124 0058 9847     	 blx r3
 2125              	.L84:
 454:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 455:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2126              	 .loc 5 455 0
 2127 005a 1037     	 adds r7,r7,#16
 2128              	.LCFI201:
 2129              	 .cfi_def_cfa_offset 8
 2130 005c BD46     	 mov sp,r7
 2131              	.LCFI202:
 2132              	 .cfi_def_cfa_register 13
 2133              	 
 2134 005e 80BD     	 pop {r7,pc}
 2135              	 .cfi_endproc
 2136              	.LFE257:
 2138              	 .section .text.I2C_MASTER_Receive,"ax",%progbits
 2139              	 .align 2
 2140              	 .global I2C_MASTER_Receive
 2141              	 .thumb
 2142              	 .thumb_func
 2144              	I2C_MASTER_Receive:
 2145              	.LFB258:
 456:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 457:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 458:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 459:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief This function registers the receive request by configuring the I2C_MASTER
 460:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * receive FIFO/Standard buffer (depending on the user configuration). The data
 461:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * is received asynchronously. When the requested number of data bytes are received,
 462:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * optionally, the user configured callback function will be executed. If a callback
 463:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * function is not configured on the APP UI, the user has to poll for the status of
 464:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * rx_busy variable of the APP handle structure.
 465:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 466:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Note: In FIFO mode, FIFO trigger limit should be adjusted manually to
 467:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * read required amount of data from FIFO buffer.
 468:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 469:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 470:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  I2C_MASTER_t* I2C_MASTER APP handle pointer of type I2C_MASTER_t
 471:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  bool      flag for send_start
 472:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  uint32_t  slave address
 473:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  uint8_t*  Pointer to data array
 474:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  uint32_t  Total no of bytes to be read.
 475:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  bool      flag for send_stop
 476:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  bool      flag for send_nack
 477:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 478:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return  I2C_MASTER_STATUS_t I2C_MASTER_STATUS_SUCCESS if the request is accepted.
 479:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *                              I2C_MASTER_STATUS_BUSY if a reception is in progress.
 480:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 481:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 482:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * request is registered.
 483:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 484:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 485:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
 486:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 487:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                    const uint32_t count, bool send_stop, bool send_nack)
 488:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2146              	 .loc 5 488 0
 2147              	 .cfi_startproc
 2148              	 
 2149              	 
 2150 0000 80B5     	 push {r7,lr}
 2151              	.LCFI203:
 2152              	 .cfi_def_cfa_offset 8
 2153              	 .cfi_offset 7,-8
 2154              	 .cfi_offset 14,-4
 2155 0002 8AB0     	 sub sp,sp,#40
 2156              	.LCFI204:
 2157              	 .cfi_def_cfa_offset 48
 2158 0004 04AF     	 add r7,sp,#16
 2159              	.LCFI205:
 2160              	 .cfi_def_cfa 7,32
 2161 0006 F860     	 str r0,[r7,#12]
 2162 0008 7A60     	 str r2,[r7,#4]
 2163 000a 3B60     	 str r3,[r7]
 2164 000c 0B46     	 mov r3,r1
 2165 000e FB72     	 strb r3,[r7,#11]
 489:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 490:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 491:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 2166              	 .loc 5 491 0
 2167 0010 0223     	 movs r3,#2
 2168 0012 FB75     	 strb r3,[r7,#23]
 492:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 493:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 2169              	 .loc 5 493 0
 2170 0014 FB68     	 ldr r3,[r7,#12]
 2171 0016 5B68     	 ldr r3,[r3,#4]
 2172 0018 93F82530 	 ldrb r3,[r3,#37]
 2173 001c 002B     	 cmp r3,#0
 2174 001e 10D1     	 bne .L90
 494:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 495:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 496:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_StartReceiveIRQ(handle, send_start, address, data, count, send_stop, send_nac
 2175              	 .loc 5 496 0
 2176 0020 FA7A     	 ldrb r2,[r7,#11]
 2177 0022 3B6A     	 ldr r3,[r7,#32]
 2178 0024 0093     	 str r3,[sp]
 2179 0026 97F82430 	 ldrb r3,[r7,#36]
 2180 002a 0193     	 str r3,[sp,#4]
 2181 002c 97F82830 	 ldrb r3,[r7,#40]
 2182 0030 0293     	 str r3,[sp,#8]
 2183 0032 F868     	 ldr r0,[r7,#12]
 2184 0034 1146     	 mov r1,r2
 2185 0036 7A68     	 ldr r2,[r7,#4]
 2186 0038 3B68     	 ldr r3,[r7]
 2187 003a FFF7FEFF 	 bl I2C_MASTER_StartReceiveIRQ
 2188 003e 0346     	 mov r3,r0
 2189 0040 FB75     	 strb r3,[r7,#23]
 2190              	.L90:
 497:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 498:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 499:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 500:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 501:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 502:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_UNSUPPORTED_MODE;
 503:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 504:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 505:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 506:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 507:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DIRECT_RX_ENABLED == 1)
 508:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_lStartReceivePolling(handle, send_start, address, data, count, send_stop, s
 509:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 510:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 511:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 512:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 2191              	 .loc 5 512 0
 2192 0042 FB7D     	 ldrb r3,[r7,#23]
 513:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2193              	 .loc 5 513 0
 2194 0044 1846     	 mov r0,r3
 2195 0046 1837     	 adds r7,r7,#24
 2196              	.LCFI206:
 2197              	 .cfi_def_cfa_offset 8
 2198 0048 BD46     	 mov sp,r7
 2199              	.LCFI207:
 2200              	 .cfi_def_cfa_register 13
 2201              	 
 2202 004a 80BD     	 pop {r7,pc}
 2203              	 .cfi_endproc
 2204              	.LFE258:
 2206              	 .section .text.I2C_MASTER_lReceive_FIFOData,"ax",%progbits
 2207              	 .align 2
 2208              	 .thumb
 2209              	 .thumb_func
 2211              	I2C_MASTER_lReceive_FIFOData:
 2212              	.LFB259:
 514:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 515:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 516:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 517:../Dave/Generated/I2C_MASTER/i2c_master.c ****      Rx FIFO data
 518:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 519:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_FIFOData(I2C_MASTER_t * const handle, bool send_start, const uint32
 520:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                      const uint32_t count)
 521:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2213              	 .loc 5 521 0
 2214              	 .cfi_startproc
 2215              	 
 2216              	 
 2217 0000 80B5     	 push {r7,lr}
 2218              	.LCFI208:
 2219              	 .cfi_def_cfa_offset 8
 2220              	 .cfi_offset 7,-8
 2221              	 .cfi_offset 14,-4
 2222 0002 86B0     	 sub sp,sp,#24
 2223              	.LCFI209:
 2224              	 .cfi_def_cfa_offset 32
 2225 0004 00AF     	 add r7,sp,#0
 2226              	.LCFI210:
 2227              	 .cfi_def_cfa_register 7
 2228 0006 F860     	 str r0,[r7,#12]
 2229 0008 7A60     	 str r2,[r7,#4]
 2230 000a 3B60     	 str r3,[r7]
 2231 000c 0B46     	 mov r3,r1
 2232 000e FB72     	 strb r3,[r7,#11]
 522:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 523:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 524:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 2233              	 .loc 5 524 0
 2234 0010 FB68     	 ldr r3,[r7,#12]
 2235 0012 9B68     	 ldr r3,[r3,#8]
 2236 0014 7B61     	 str r3,[r7,#20]
 525:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 526:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*Clear the receive FIFO, configure the trigger lime
 527:../Dave/Generated/I2C_MASTER/i2c_master.c ****    * and enable the receive events*/
 528:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_USIC_CH_RXFIFO_Flush(handle->channel);
 2237              	 .loc 5 528 0
 2238 0016 FB68     	 ldr r3,[r7,#12]
 2239 0018 1B68     	 ldr r3,[r3]
 2240 001a 1846     	 mov r0,r3
 2241 001c FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_Flush
 529:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 530:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*Configure the FIFO trigger limit based on the required data size*/
 531:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_lReconfigureRxFIFO(handle, count);
 2242              	 .loc 5 531 0
 2243 0020 F868     	 ldr r0,[r7,#12]
 2244 0022 3968     	 ldr r1,[r7]
 2245 0024 FFF7FEFF 	 bl I2C_MASTER_lReconfigureRxFIFO
 532:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 533:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_USIC_CH_RXFIFO_EnableEvent(handle->channel,
 2246              	 .loc 5 533 0
 2247 0028 FB68     	 ldr r3,[r7,#12]
 2248 002a 1B68     	 ldr r3,[r3]
 2249 002c 1846     	 mov r0,r3
 2250 002e 4FF0C041 	 mov r1,#1610612736
 2251 0032 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_EnableEvent
 534:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                 (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 535:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                            (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE));
 536:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (send_start == true)
 2252              	 .loc 5 536 0
 2253 0036 FB7A     	 ldrb r3,[r7,#11]
 2254 0038 002B     	 cmp r3,#0
 2255 003a 6ED0     	 beq .L93
 537:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 538:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if(!((handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA) ||
 2256              	 .loc 5 538 0
 2257 003c FB68     	 ldr r3,[r7,#12]
 2258 003e 5B68     	 ldr r3,[r3,#4]
 2259 0040 93F82430 	 ldrb r3,[r3,#36]
 2260 0044 012B     	 cmp r3,#1
 2261 0046 13D0     	 beq .L94
 539:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 2262              	 .loc 5 539 0 discriminator 1
 2263 0048 FB68     	 ldr r3,[r7,#12]
 2264 004a 5B68     	 ldr r3,[r3,#4]
 2265 004c 93F82430 	 ldrb r3,[r3,#36]
 538:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 2266              	 .loc 5 538 0 discriminator 1
 2267 0050 022B     	 cmp r3,#2
 2268 0052 0DD0     	 beq .L94
 540:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 541:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_EnableEvent(handle, (uint32_t)XMC_I2C_CH_EVENT_ACK);
 2269              	 .loc 5 541 0
 2270 0054 F868     	 ldr r0,[r7,#12]
 2271 0056 4FF08041 	 mov r1,#1073741824
 2272 005a FFF7FEFF 	 bl I2C_MASTER_EnableEvent
 542:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_I2C_CH_SetInterruptNodePointer(handle->channel,ptr_runtime->tx_ack_sr);
 2273              	 .loc 5 542 0
 2274 005e FB68     	 ldr r3,[r7,#12]
 2275 0060 1A68     	 ldr r2,[r3]
 2276 0062 7B69     	 ldr r3,[r7,#20]
 2277 0064 93F82430 	 ldrb r3,[r3,#36]
 2278 0068 1046     	 mov r0,r2
 2279 006a 1946     	 mov r1,r3
 2280 006c FFF7FEFF 	 bl XMC_I2C_CH_SetInterruptNodePointer
 2281              	.L94:
 543:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 544:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lSendStart_Or_RepeatedStart(handle,address, (XMC_I2C_CH_CMD_t)XMC_I2C_CH_CMD_READ);
 2282              	 .loc 5 544 0
 2283 0070 F868     	 ldr r0,[r7,#12]
 2284 0072 7968     	 ldr r1,[r7,#4]
 2285 0074 0122     	 movs r2,#1
 2286 0076 FFF7FEFF 	 bl I2C_MASTER_lSendStart_Or_RepeatedStart
 545:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 546:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED)
 547:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if(handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 548:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 549:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_nac
 550:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 551:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ReceiveNACK(handle);
 552:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 553:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 554:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 555:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ReceiveACK(handle);
 556:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 557:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index++;
 558:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 559:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 560:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)
 2287              	 .loc 5 560 0
 2288 007a FB68     	 ldr r3,[r7,#12]
 2289 007c 5B68     	 ldr r3,[r3,#4]
 2290 007e 93F82430 	 ldrb r3,[r3,#36]
 2291 0082 022B     	 cmp r3,#2
 2292 0084 40F0A580 	 bne .L92
 561:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 562:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (handle->config->txFIFO_size != XMC_USIC_CH_FIFO_DISABLED)
 2293              	 .loc 5 562 0
 2294 0088 FB68     	 ldr r3,[r7,#12]
 2295 008a 5B68     	 ldr r3,[r3,#4]
 2296 008c 93F82630 	 ldrb r3,[r3,#38]
 2297 0090 002B     	 cmp r3,#0
 2298 0092 2AD0     	 beq .L96
 563:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 564:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Fill the transmit FIFO */
 565:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 2299              	 .loc 5 565 0
 2300 0094 1FE0     	 b .L97
 2301              	.L102:
 566:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 567:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 2302              	 .loc 5 567 0
 2303 0096 7B69     	 ldr r3,[r7,#20]
 2304 0098 DA68     	 ldr r2,[r3,#12]
 2305 009a 7B69     	 ldr r3,[r7,#20]
 2306 009c 9B68     	 ldr r3,[r3,#8]
 2307 009e 9A42     	 cmp r2,r3
 2308 00a0 17D2     	 bcs .L98
 568:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 569:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send
 2309              	 .loc 5 569 0
 2310 00a2 7B69     	 ldr r3,[r7,#20]
 2311 00a4 DB68     	 ldr r3,[r3,#12]
 2312 00a6 5A1C     	 adds r2,r3,#1
 2313 00a8 7B69     	 ldr r3,[r7,#20]
 2314 00aa 9B68     	 ldr r3,[r3,#8]
 2315 00ac 9A42     	 cmp r2,r3
 2316 00ae 07D1     	 bne .L99
 2317              	 .loc 5 569 0 is_stmt 0 discriminator 1
 2318 00b0 7B69     	 ldr r3,[r7,#20]
 2319 00b2 1B6A     	 ldr r3,[r3,#32]
 2320 00b4 012B     	 cmp r3,#1
 2321 00b6 03D1     	 bne .L99
 570:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 571:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveNACK(handle);
 2322              	 .loc 5 571 0 is_stmt 1
 2323 00b8 F868     	 ldr r0,[r7,#12]
 2324 00ba FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2325 00be 02E0     	 b .L100
 2326              	.L99:
 572:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 573:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 574:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 575:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveACK(handle);
 2327              	 .loc 5 575 0
 2328 00c0 F868     	 ldr r0,[r7,#12]
 2329 00c2 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2330              	.L100:
 576:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 577:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->tx_data_index++;
 2331              	 .loc 5 577 0
 2332 00c6 7B69     	 ldr r3,[r7,#20]
 2333 00c8 DB68     	 ldr r3,[r3,#12]
 2334 00ca 5A1C     	 adds r2,r3,#1
 2335 00cc 7B69     	 ldr r3,[r7,#20]
 2336 00ce DA60     	 str r2,[r3,#12]
 2337 00d0 01E0     	 b .L97
 2338              	.L98:
 578:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 579:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 580:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 581:../Dave/Generated/I2C_MASTER/i2c_master.c ****         break;
 2339              	 .loc 5 581 0
 2340 00d2 00BF     	 nop
 2341 00d4 7DE0     	 b .L92
 2342              	.L97:
 565:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2343              	 .loc 5 565 0
 2344 00d6 F868     	 ldr r0,[r7,#12]
 2345 00d8 FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 2346 00dc 0346     	 mov r3,r0
 2347 00de 83F00103 	 eor r3,r3,#1
 2348 00e2 DBB2     	 uxtb r3,r3
 2349 00e4 002B     	 cmp r3,#0
 2350 00e6 D6D1     	 bne .L102
 2351 00e8 73E0     	 b .L92
 2352              	.L96:
 582:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 583:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of while */
 584:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 585:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 586:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 587:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if it is last byte and send_nack true */
 588:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_n
 2353              	 .loc 5 588 0
 2354 00ea 7B69     	 ldr r3,[r7,#20]
 2355 00ec DB68     	 ldr r3,[r3,#12]
 2356 00ee 5A1C     	 adds r2,r3,#1
 2357 00f0 7B69     	 ldr r3,[r7,#20]
 2358 00f2 9B68     	 ldr r3,[r3,#8]
 2359 00f4 9A42     	 cmp r2,r3
 2360 00f6 07D1     	 bne .L103
 2361              	 .loc 5 588 0 is_stmt 0 discriminator 1
 2362 00f8 7B69     	 ldr r3,[r7,#20]
 2363 00fa 1B6A     	 ldr r3,[r3,#32]
 2364 00fc 012B     	 cmp r3,#1
 2365 00fe 03D1     	 bne .L103
 589:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 590:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_ReceiveNACK(handle);
 2366              	 .loc 5 590 0 is_stmt 1
 2367 0100 F868     	 ldr r0,[r7,#12]
 2368 0102 FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2369 0106 02E0     	 b .L104
 2370              	.L103:
 591:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 592:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 593:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 594:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_ReceiveACK(handle);
 2371              	 .loc 5 594 0
 2372 0108 F868     	 ldr r0,[r7,#12]
 2373 010a FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2374              	.L104:
 595:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 596:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index++;
 2375              	 .loc 5 596 0
 2376 010e 7B69     	 ldr r3,[r7,#20]
 2377 0110 DB68     	 ldr r3,[r3,#12]
 2378 0112 5A1C     	 adds r2,r3,#1
 2379 0114 7B69     	 ldr r3,[r7,#20]
 2380 0116 DA60     	 str r2,[r3,#12]
 2381 0118 5BE0     	 b .L92
 2382              	.L93:
 597:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 598:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT) */
 599:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of if (send_start == true) */
 600:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 601:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 602:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /* if Tx FIFO enabled */
 603:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size > 0)
 2383              	 .loc 5 603 0
 2384 011a FB68     	 ldr r3,[r7,#12]
 2385 011c 5B68     	 ldr r3,[r3,#4]
 2386 011e 93F82630 	 ldrb r3,[r3,#38]
 2387 0122 002B     	 cmp r3,#0
 2388 0124 31D0     	 beq .L106
 604:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 605:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,
 2389              	 .loc 5 605 0
 2390 0126 FB68     	 ldr r3,[r7,#12]
 2391 0128 1B68     	 ldr r3,[r3]
 2392 012a 1846     	 mov r0,r3
 2393 012c 4FF08041 	 mov r1,#1073741824
 2394 0130 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 606:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                      (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD);
 607:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Fill the transmit FIFO */
 608:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 2395              	 .loc 5 608 0
 2396 0134 1FE0     	 b .L107
 2397              	.L112:
 609:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 610:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 2398              	 .loc 5 610 0
 2399 0136 7B69     	 ldr r3,[r7,#20]
 2400 0138 DA68     	 ldr r2,[r3,#12]
 2401 013a 7B69     	 ldr r3,[r7,#20]
 2402 013c 9B68     	 ldr r3,[r3,#8]
 2403 013e 9A42     	 cmp r2,r3
 2404 0140 17D2     	 bcs .L108
 611:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 612:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) &&
 2405              	 .loc 5 612 0
 2406 0142 7B69     	 ldr r3,[r7,#20]
 2407 0144 DB68     	 ldr r3,[r3,#12]
 2408 0146 5A1C     	 adds r2,r3,#1
 2409 0148 7B69     	 ldr r3,[r7,#20]
 2410 014a 9B68     	 ldr r3,[r3,#8]
 2411 014c 9A42     	 cmp r2,r3
 2412 014e 07D1     	 bne .L109
 613:../Dave/Generated/I2C_MASTER/i2c_master.c ****                (ptr_runtime->send_nack == true))
 2413              	 .loc 5 613 0 discriminator 1
 2414 0150 7B69     	 ldr r3,[r7,#20]
 2415 0152 1B6A     	 ldr r3,[r3,#32]
 612:../Dave/Generated/I2C_MASTER/i2c_master.c ****                (ptr_runtime->send_nack == true))
 2416              	 .loc 5 612 0 discriminator 1
 2417 0154 012B     	 cmp r3,#1
 2418 0156 03D1     	 bne .L109
 614:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 615:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
 2419              	 .loc 5 615 0
 2420 0158 F868     	 ldr r0,[r7,#12]
 2421 015a FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2422 015e 02E0     	 b .L110
 2423              	.L109:
 616:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 617:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 618:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 619:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
 2424              	 .loc 5 619 0
 2425 0160 F868     	 ldr r0,[r7,#12]
 2426 0162 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2427              	.L110:
 620:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 621:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
 2428              	 .loc 5 621 0
 2429 0166 7B69     	 ldr r3,[r7,#20]
 2430 0168 DB68     	 ldr r3,[r3,#12]
 2431 016a 5A1C     	 adds r2,r3,#1
 2432 016c 7B69     	 ldr r3,[r7,#20]
 2433 016e DA60     	 str r2,[r3,#12]
 2434 0170 01E0     	 b .L107
 2435              	.L108:
 622:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 623:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 624:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 625:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 2436              	 .loc 5 625 0
 2437 0172 00BF     	 nop
 2438 0174 2DE0     	 b .L92
 2439              	.L107:
 608:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2440              	 .loc 5 608 0
 2441 0176 F868     	 ldr r0,[r7,#12]
 2442 0178 FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 2443 017c 0346     	 mov r3,r0
 2444 017e 83F00103 	 eor r3,r3,#1
 2445 0182 DBB2     	 uxtb r3,r3
 2446 0184 002B     	 cmp r3,#0
 2447 0186 D6D1     	 bne .L112
 2448 0188 23E0     	 b .L92
 2449              	.L106:
 626:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 627:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while */
 628:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 629:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else  /* Tx FIFO disabled and Rx FIFO enabled */
 630:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 631:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 2450              	 .loc 5 631 0
 2451 018a 7B69     	 ldr r3,[r7,#20]
 2452 018c DA68     	 ldr r2,[r3,#12]
 2453 018e 7B69     	 ldr r3,[r7,#20]
 2454 0190 9B68     	 ldr r3,[r3,#8]
 2455 0192 9A42     	 cmp r2,r3
 2456 0194 1DD2     	 bcs .L92
 632:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 633:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) &&
 2457              	 .loc 5 633 0
 2458 0196 7B69     	 ldr r3,[r7,#20]
 2459 0198 DB68     	 ldr r3,[r3,#12]
 2460 019a 5A1C     	 adds r2,r3,#1
 2461 019c 7B69     	 ldr r3,[r7,#20]
 2462 019e 9B68     	 ldr r3,[r3,#8]
 2463 01a0 9A42     	 cmp r2,r3
 2464 01a2 07D1     	 bne .L113
 634:../Dave/Generated/I2C_MASTER/i2c_master.c ****              (ptr_runtime->send_nack == true))
 2465              	 .loc 5 634 0 discriminator 1
 2466 01a4 7B69     	 ldr r3,[r7,#20]
 2467 01a6 1B6A     	 ldr r3,[r3,#32]
 633:../Dave/Generated/I2C_MASTER/i2c_master.c ****              (ptr_runtime->send_nack == true))
 2468              	 .loc 5 633 0 discriminator 1
 2469 01a8 012B     	 cmp r3,#1
 2470 01aa 03D1     	 bne .L113
 635:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 636:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveNACK(handle);
 2471              	 .loc 5 636 0
 2472 01ac F868     	 ldr r0,[r7,#12]
 2473 01ae FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2474 01b2 09E0     	 b .L114
 2475              	.L113:
 637:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 638:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 639:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 640:../Dave/Generated/I2C_MASTER/i2c_master.c ****           XMC_I2C_CH_ClearStatusFlag(handle->channel, ((uint32_t)XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVE
 2476              	 .loc 5 640 0
 2477 01b4 FB68     	 ldr r3,[r7,#12]
 2478 01b6 1B68     	 ldr r3,[r3]
 2479 01b8 1846     	 mov r0,r3
 2480 01ba 4FF47241 	 mov r1,#61952
 2481 01be FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 641:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDI
 642:../Dave/Generated/I2C_MASTER/i2c_master.c ****                           (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION|
 643:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               (uint32_t)XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION |
 644:../Dave/Generated/I2C_MASTER/i2c_master.c ****                           (uint32_t)XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION));
 645:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveACK(handle);
 2482              	 .loc 5 645 0
 2483 01c2 F868     	 ldr r0,[r7,#12]
 2484 01c4 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2485              	.L114:
 646:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 647:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->tx_data_index++;
 2486              	 .loc 5 647 0
 2487 01c8 7B69     	 ldr r3,[r7,#20]
 2488 01ca DB68     	 ldr r3,[r3,#12]
 2489 01cc 5A1C     	 adds r2,r3,#1
 2490 01ce 7B69     	 ldr r3,[r7,#20]
 2491 01d0 DA60     	 str r2,[r3,#12]
 2492              	.L92:
 648:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 649:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of else */
 650:../Dave/Generated/I2C_MASTER/i2c_master.c ****    } /* end of  if(send_start == false) */
 651:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2493              	 .loc 5 651 0
 2494 01d2 1837     	 adds r7,r7,#24
 2495              	.LCFI211:
 2496              	 .cfi_def_cfa_offset 8
 2497 01d4 BD46     	 mov sp,r7
 2498              	.LCFI212:
 2499              	 .cfi_def_cfa_register 13
 2500              	 
 2501 01d6 80BD     	 pop {r7,pc}
 2502              	 .cfi_endproc
 2503              	.LFE259:
 2505              	 .section .text.I2C_MASTER_lReceive_StdData,"ax",%progbits
 2506              	 .align 2
 2507              	 .thumb
 2508              	 .thumb_func
 2510              	I2C_MASTER_lReceive_StdData:
 2511              	.LFB260:
 652:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 653:../Dave/Generated/I2C_MASTER/i2c_master.c ****     Standard receive mode
 654:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 655:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_StdData(I2C_MASTER_t * const handle, bool send_start, const uint32_
 656:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2512              	 .loc 5 656 0
 2513              	 .cfi_startproc
 2514              	 
 2515              	 
 2516 0000 80B5     	 push {r7,lr}
 2517              	.LCFI213:
 2518              	 .cfi_def_cfa_offset 8
 2519              	 .cfi_offset 7,-8
 2520              	 .cfi_offset 14,-4
 2521 0002 86B0     	 sub sp,sp,#24
 2522              	.LCFI214:
 2523              	 .cfi_def_cfa_offset 32
 2524 0004 00AF     	 add r7,sp,#0
 2525              	.LCFI215:
 2526              	 .cfi_def_cfa_register 7
 2527 0006 F860     	 str r0,[r7,#12]
 2528 0008 0B46     	 mov r3,r1
 2529 000a 7A60     	 str r2,[r7,#4]
 2530 000c FB72     	 strb r3,[r7,#11]
 657:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 658:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 659:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 2531              	 .loc 5 659 0
 2532 000e FB68     	 ldr r3,[r7,#12]
 2533 0010 9B68     	 ldr r3,[r3,#8]
 2534 0012 7B61     	 str r3,[r7,#20]
 660:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 661:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_USIC_CH_EnableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEIVE 
 2535              	 .loc 5 661 0
 2536 0014 FB68     	 ldr r3,[r7,#12]
 2537 0016 1B68     	 ldr r3,[r3]
 2538 0018 1846     	 mov r0,r3
 2539 001a 4FF44041 	 mov r1,#49152
 2540 001e FFF7FEFF 	 bl XMC_USIC_CH_EnableEvent
 662:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                       (uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE_RECEI
 663:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 664:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (send_start == true)
 2541              	 .loc 5 664 0
 2542 0022 FB7A     	 ldrb r3,[r7,#11]
 2543 0024 002B     	 cmp r3,#0
 2544 0026 42D0     	 beq .L116
 665:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 666:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if(!((handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA) ||
 2545              	 .loc 5 666 0
 2546 0028 FB68     	 ldr r3,[r7,#12]
 2547 002a 5B68     	 ldr r3,[r3,#4]
 2548 002c 93F82430 	 ldrb r3,[r3,#36]
 2549 0030 012B     	 cmp r3,#1
 2550 0032 13D0     	 beq .L117
 667:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 2551              	 .loc 5 667 0 discriminator 1
 2552 0034 FB68     	 ldr r3,[r7,#12]
 2553 0036 5B68     	 ldr r3,[r3,#4]
 2554 0038 93F82430 	 ldrb r3,[r3,#36]
 666:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 2555              	 .loc 5 666 0 discriminator 1
 2556 003c 022B     	 cmp r3,#2
 2557 003e 0DD0     	 beq .L117
 668:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 669:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_EnableEvent(handle, (uint32_t)XMC_I2C_CH_EVENT_ACK);
 2558              	 .loc 5 669 0
 2559 0040 F868     	 ldr r0,[r7,#12]
 2560 0042 4FF08041 	 mov r1,#1073741824
 2561 0046 FFF7FEFF 	 bl I2C_MASTER_EnableEvent
 670:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_I2C_CH_SetInterruptNodePointer(handle->channel,ptr_runtime->tx_ack_sr);
 2562              	 .loc 5 670 0
 2563 004a FB68     	 ldr r3,[r7,#12]
 2564 004c 1A68     	 ldr r2,[r3]
 2565 004e 7B69     	 ldr r3,[r7,#20]
 2566 0050 93F82430 	 ldrb r3,[r3,#36]
 2567 0054 1046     	 mov r0,r2
 2568 0056 1946     	 mov r1,r3
 2569 0058 FFF7FEFF 	 bl XMC_I2C_CH_SetInterruptNodePointer
 2570              	.L117:
 671:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 672:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lSendStart_Or_RepeatedStart(handle, address, (XMC_I2C_CH_CMD_t)XMC_I2C_CH_CMD_READ);
 2571              	 .loc 5 672 0
 2572 005c F868     	 ldr r0,[r7,#12]
 2573 005e 7968     	 ldr r1,[r7,#4]
 2574 0060 0122     	 movs r2,#1
 2575 0062 FFF7FEFF 	 bl I2C_MASTER_lSendStart_Or_RepeatedStart
 673:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 674:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if ((handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA) ||
 2576              	 .loc 5 674 0
 2577 0066 FB68     	 ldr r3,[r7,#12]
 2578 0068 5B68     	 ldr r3,[r3,#4]
 2579 006a 93F82430 	 ldrb r3,[r3,#36]
 2580 006e 012B     	 cmp r3,#1
 2581 0070 05D0     	 beq .L118
 675:../Dave/Generated/I2C_MASTER/i2c_master.c ****         (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT))
 2582              	 .loc 5 675 0 discriminator 1
 2583 0072 FB68     	 ldr r3,[r7,#12]
 2584 0074 5B68     	 ldr r3,[r3,#4]
 2585 0076 93F82430 	 ldrb r3,[r3,#36]
 674:../Dave/Generated/I2C_MASTER/i2c_master.c ****         (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT))
 2586              	 .loc 5 674 0 discriminator 1
 2587 007a 022B     	 cmp r3,#2
 2588 007c 65D1     	 bne .L115
 2589              	.L118:
 676:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 677:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_nac
 2590              	 .loc 5 677 0
 2591 007e 7B69     	 ldr r3,[r7,#20]
 2592 0080 DB68     	 ldr r3,[r3,#12]
 2593 0082 5A1C     	 adds r2,r3,#1
 2594 0084 7B69     	 ldr r3,[r7,#20]
 2595 0086 9B68     	 ldr r3,[r3,#8]
 2596 0088 9A42     	 cmp r2,r3
 2597 008a 07D1     	 bne .L120
 2598              	 .loc 5 677 0 is_stmt 0 discriminator 1
 2599 008c 7B69     	 ldr r3,[r7,#20]
 2600 008e 1B6A     	 ldr r3,[r3,#32]
 2601 0090 012B     	 cmp r3,#1
 2602 0092 03D1     	 bne .L120
 678:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 679:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveNACK(handle);
 2603              	 .loc 5 679 0 is_stmt 1
 2604 0094 F868     	 ldr r0,[r7,#12]
 2605 0096 FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2606 009a 02E0     	 b .L121
 2607              	.L120:
 680:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 681:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 682:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 683:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ReceiveACK(handle);
 2608              	 .loc 5 683 0
 2609 009c F868     	 ldr r0,[r7,#12]
 2610 009e FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2611              	.L121:
 684:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 685:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index++;
 2612              	 .loc 5 685 0
 2613 00a2 7B69     	 ldr r3,[r7,#20]
 2614 00a4 DB68     	 ldr r3,[r3,#12]
 2615 00a6 5A1C     	 adds r2,r3,#1
 2616 00a8 7B69     	 ldr r3,[r7,#20]
 2617 00aa DA60     	 str r2,[r3,#12]
 2618 00ac 4DE0     	 b .L115
 2619              	.L116:
 686:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 687:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 688:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 689:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 690:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 691:../Dave/Generated/I2C_MASTER/i2c_master.c ****      send_start flag is set to false and Tx FIFO is disabled
 692:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 693:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size == 0)
 2620              	 .loc 5 693 0
 2621 00ae FB68     	 ldr r3,[r7,#12]
 2622 00b0 5B68     	 ldr r3,[r3,#4]
 2623 00b2 93F82630 	 ldrb r3,[r3,#38]
 2624 00b6 002B     	 cmp r3,#0
 2625 00b8 17D1     	 bne .L123
 694:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 695:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_n
 2626              	 .loc 5 695 0
 2627 00ba 7B69     	 ldr r3,[r7,#20]
 2628 00bc DB68     	 ldr r3,[r3,#12]
 2629 00be 5A1C     	 adds r2,r3,#1
 2630 00c0 7B69     	 ldr r3,[r7,#20]
 2631 00c2 9B68     	 ldr r3,[r3,#8]
 2632 00c4 9A42     	 cmp r2,r3
 2633 00c6 07D1     	 bne .L124
 2634              	 .loc 5 695 0 is_stmt 0 discriminator 1
 2635 00c8 7B69     	 ldr r3,[r7,#20]
 2636 00ca 1B6A     	 ldr r3,[r3,#32]
 2637 00cc 012B     	 cmp r3,#1
 2638 00ce 03D1     	 bne .L124
 696:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 697:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveNACK(handle);
 2639              	 .loc 5 697 0 is_stmt 1
 2640 00d0 F868     	 ldr r0,[r7,#12]
 2641 00d2 FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2642 00d6 02E0     	 b .L125
 2643              	.L124:
 698:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 699:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 700:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 701:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveACK(handle);
 2644              	 .loc 5 701 0
 2645 00d8 F868     	 ldr r0,[r7,#12]
 2646 00da FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2647              	.L125:
 702:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 703:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 704:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->tx_data_index++;
 2648              	 .loc 5 704 0
 2649 00de 7B69     	 ldr r3,[r7,#20]
 2650 00e0 DB68     	 ldr r3,[r3,#12]
 2651 00e2 5A1C     	 adds r2,r3,#1
 2652 00e4 7B69     	 ldr r3,[r7,#20]
 2653 00e6 DA60     	 str r2,[r3,#12]
 2654 00e8 2FE0     	 b .L115
 2655              	.L123:
 705:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 706:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 707:../Dave/Generated/I2C_MASTER/i2c_master.c ****      send_start flag is set to false and Tx FIFO is enabled
 708:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 709:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 710:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 711:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAND
 2656              	 .loc 5 711 0
 2657 00ea FB68     	 ldr r3,[r7,#12]
 2658 00ec 1B68     	 ldr r3,[r3]
 2659 00ee 1846     	 mov r0,r3
 2660 00f0 4FF08041 	 mov r1,#1073741824
 2661 00f4 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 712:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 713:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Fill the transmit FIFO */
 714:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 2662              	 .loc 5 714 0
 2663 00f8 1EE0     	 b .L126
 2664              	.L130:
 715:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 716:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 2665              	 .loc 5 716 0
 2666 00fa 7B69     	 ldr r3,[r7,#20]
 2667 00fc DA68     	 ldr r2,[r3,#12]
 2668 00fe 7B69     	 ldr r3,[r7,#20]
 2669 0100 9B68     	 ldr r3,[r3,#8]
 2670 0102 9A42     	 cmp r2,r3
 2671 0104 17D2     	 bcs .L127
 717:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 718:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->se
 2672              	 .loc 5 718 0
 2673 0106 7B69     	 ldr r3,[r7,#20]
 2674 0108 DB68     	 ldr r3,[r3,#12]
 2675 010a 5A1C     	 adds r2,r3,#1
 2676 010c 7B69     	 ldr r3,[r7,#20]
 2677 010e 9B68     	 ldr r3,[r3,#8]
 2678 0110 9A42     	 cmp r2,r3
 2679 0112 07D1     	 bne .L128
 2680              	 .loc 5 718 0 is_stmt 0 discriminator 1
 2681 0114 7B69     	 ldr r3,[r7,#20]
 2682 0116 1B6A     	 ldr r3,[r3,#32]
 2683 0118 012B     	 cmp r3,#1
 2684 011a 03D1     	 bne .L128
 719:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 720:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
 2685              	 .loc 5 720 0 is_stmt 1
 2686 011c F868     	 ldr r0,[r7,#12]
 2687 011e FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 2688 0122 02E0     	 b .L129
 2689              	.L128:
 721:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 722:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 723:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 724:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
 2690              	 .loc 5 724 0
 2691 0124 F868     	 ldr r0,[r7,#12]
 2692 0126 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 2693              	.L129:
 725:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 726:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
 2694              	 .loc 5 726 0
 2695 012a 7B69     	 ldr r3,[r7,#20]
 2696 012c DB68     	 ldr r3,[r3,#12]
 2697 012e 5A1C     	 adds r2,r3,#1
 2698 0130 7B69     	 ldr r3,[r7,#20]
 2699 0132 DA60     	 str r2,[r3,#12]
 2700 0134 00E0     	 b .L126
 2701              	.L127:
 727:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 728:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 729:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 730:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 2702              	 .loc 5 730 0
 2703 0136 08E0     	 b .L115
 2704              	.L126:
 714:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2705              	 .loc 5 714 0
 2706 0138 F868     	 ldr r0,[r7,#12]
 2707 013a FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 2708 013e 0346     	 mov r3,r0
 2709 0140 83F00103 	 eor r3,r3,#1
 2710 0144 DBB2     	 uxtb r3,r3
 2711 0146 002B     	 cmp r3,#0
 2712 0148 D7D1     	 bne .L130
 2713              	.L115:
 731:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 732:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while */
 733:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of else */
 734:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of else */
 735:../Dave/Generated/I2C_MASTER/i2c_master.c **** } /* end of function */
 2714              	 .loc 5 735 0
 2715 014a 1837     	 adds r7,r7,#24
 2716              	.LCFI216:
 2717              	 .cfi_def_cfa_offset 8
 2718 014c BD46     	 mov sp,r7
 2719              	.LCFI217:
 2720              	 .cfi_def_cfa_register 13
 2721              	 
 2722 014e 80BD     	 pop {r7,pc}
 2723              	 .cfi_endproc
 2724              	.LFE260:
 2726              	 .section .text.I2C_MASTER_lSendStart_Or_RepeatedStart,"ax",%progbits
 2727              	 .align 2
 2728              	 .thumb
 2729              	 .thumb_func
 2731              	I2C_MASTER_lSendStart_Or_RepeatedStart:
 2732              	.LFB261:
 736:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 737:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 738:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1) || \
 739:../Dave/Generated/I2C_MASTER/i2c_master.c ****     (I2C_MASTER_DIRECT_TX_ENABLED == 1) || (I2C_MASTER_DIRECT_RX_ENABLED == 1))
 740:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to issue Send Start/Repeated Start command */
 741:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStart_Or_RepeatedStart(I2C_MASTER_t * handle,const uint32_t address,
 742:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                const XMC_I2C_CH_CMD_t cmd)
 743:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2733              	 .loc 5 743 0
 2734              	 .cfi_startproc
 2735              	 
 2736              	 
 2737 0000 80B5     	 push {r7,lr}
 2738              	.LCFI218:
 2739              	 .cfi_def_cfa_offset 8
 2740              	 .cfi_offset 7,-8
 2741              	 .cfi_offset 14,-4
 2742 0002 84B0     	 sub sp,sp,#16
 2743              	.LCFI219:
 2744              	 .cfi_def_cfa_offset 24
 2745 0004 00AF     	 add r7,sp,#0
 2746              	.LCFI220:
 2747              	 .cfi_def_cfa_register 7
 2748 0006 F860     	 str r0,[r7,#12]
 2749 0008 B960     	 str r1,[r7,#8]
 2750 000a 1346     	 mov r3,r2
 2751 000c FB71     	 strb r3,[r7,#7]
 744:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->runtime->bus_acquired == true)
 2752              	 .loc 5 744 0
 2753 000e FB68     	 ldr r3,[r7,#12]
 2754 0010 9B68     	 ldr r3,[r3,#8]
 2755 0012 93F82830 	 ldrb r3,[r3,#40]
 2756 0016 DBB2     	 uxtb r3,r3
 2757 0018 002B     	 cmp r3,#0
 2758 001a 09D0     	 beq .L132
 745:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 746:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_SendRepeatedStart(handle, (uint16_t)address, cmd);
 2759              	 .loc 5 746 0
 2760 001c BB68     	 ldr r3,[r7,#8]
 2761 001e 9BB2     	 uxth r3,r3
 2762 0020 1A46     	 mov r2,r3
 2763 0022 FB79     	 ldrb r3,[r7,#7]
 2764 0024 F868     	 ldr r0,[r7,#12]
 2765 0026 1146     	 mov r1,r2
 2766 0028 1A46     	 mov r2,r3
 2767 002a FFF7FEFF 	 bl I2C_MASTER_SendRepeatedStart
 2768 002e 0DE0     	 b .L131
 2769              	.L132:
 747:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 748:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 749:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 750:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->runtime->bus_acquired = true;
 2770              	 .loc 5 750 0
 2771 0030 FB68     	 ldr r3,[r7,#12]
 2772 0032 9B68     	 ldr r3,[r3,#8]
 2773 0034 0122     	 movs r2,#1
 2774 0036 83F82820 	 strb r2,[r3,#40]
 751:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_SendStart(handle, (uint16_t)address, cmd);
 2775              	 .loc 5 751 0
 2776 003a BB68     	 ldr r3,[r7,#8]
 2777 003c 9BB2     	 uxth r3,r3
 2778 003e 1A46     	 mov r2,r3
 2779 0040 FB79     	 ldrb r3,[r7,#7]
 2780 0042 F868     	 ldr r0,[r7,#12]
 2781 0044 1146     	 mov r1,r2
 2782 0046 1A46     	 mov r2,r3
 2783 0048 FFF7FEFF 	 bl I2C_MASTER_SendStart
 2784              	.L131:
 752:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 753:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2785              	 .loc 5 753 0
 2786 004c 1037     	 adds r7,r7,#16
 2787              	.LCFI221:
 2788              	 .cfi_def_cfa_offset 8
 2789 004e BD46     	 mov sp,r7
 2790              	.LCFI222:
 2791              	 .cfi_def_cfa_register 13
 2792              	 
 2793 0050 80BD     	 pop {r7,pc}
 2794              	 .cfi_endproc
 2795              	.LFE261:
 2797 0052 00BF     	 .section .text.I2C_MASTER_StartTransmitIRQ,"ax",%progbits
 2798              	 .align 2
 2799              	 .global I2C_MASTER_StartTransmitIRQ
 2800              	 .thumb
 2801              	 .thumb_func
 2803              	I2C_MASTER_StartTransmitIRQ:
 2804              	.LFB262:
 754:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 755:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 756:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
 757:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 758:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 759:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2805              	 .loc 5 759 0
 2806              	 .cfi_startproc
 2807              	 
 2808              	 
 2809 0000 80B5     	 push {r7,lr}
 2810              	.LCFI223:
 2811              	 .cfi_def_cfa_offset 8
 2812              	 .cfi_offset 7,-8
 2813              	 .cfi_offset 14,-4
 2814 0002 86B0     	 sub sp,sp,#24
 2815              	.LCFI224:
 2816              	 .cfi_def_cfa_offset 32
 2817 0004 00AF     	 add r7,sp,#0
 2818              	.LCFI225:
 2819              	 .cfi_def_cfa_register 7
 2820 0006 F860     	 str r0,[r7,#12]
 2821 0008 7A60     	 str r2,[r7,#4]
 2822 000a 3B60     	 str r3,[r7]
 2823 000c 0B46     	 mov r3,r1
 2824 000e FB72     	 strb r3,[r7,#11]
 760:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 761:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 762:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 763:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 2825              	 .loc 5 763 0
 2826 0010 0223     	 movs r3,#2
 2827 0012 FB75     	 strb r3,[r7,#23]
 764:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 2828              	 .loc 5 764 0
 2829 0014 FB68     	 ldr r3,[r7,#12]
 2830 0016 9B68     	 ldr r3,[r3,#8]
 2831 0018 3B61     	 str r3,[r7,#16]
 765:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 766:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* If send_stop is set to TRUE, bus_acquired flag is set to FALSE.
 767:../Dave/Generated/I2C_MASTER/i2c_master.c ****    If send_start is set to FALSE and bus_acquired is set to FALSE then API will return an error. */
 768:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (((send_start == false) && (handle->runtime->bus_acquired == false)) || (data == NULL) || (siz
 2832              	 .loc 5 768 0
 2833 001a FB7A     	 ldrb r3,[r7,#11]
 2834 001c 83F00103 	 eor r3,r3,#1
 2835 0020 DBB2     	 uxtb r3,r3
 2836 0022 002B     	 cmp r3,#0
 2837 0024 09D0     	 beq .L135
 2838              	 .loc 5 768 0 is_stmt 0 discriminator 1
 2839 0026 FB68     	 ldr r3,[r7,#12]
 2840 0028 9B68     	 ldr r3,[r3,#8]
 2841 002a 93F82830 	 ldrb r3,[r3,#40]
 2842 002e DBB2     	 uxtb r3,r3
 2843 0030 83F00103 	 eor r3,r3,#1
 2844 0034 DBB2     	 uxtb r3,r3
 2845 0036 002B     	 cmp r3,#0
 2846 0038 05D1     	 bne .L136
 2847              	.L135:
 2848              	 .loc 5 768 0 discriminator 3
 2849 003a 3B68     	 ldr r3,[r7]
 2850 003c 002B     	 cmp r3,#0
 2851 003e 02D0     	 beq .L136
 2852              	 .loc 5 768 0 discriminator 4
 2853 0040 3B6A     	 ldr r3,[r7,#32]
 2854 0042 002B     	 cmp r3,#0
 2855 0044 02D1     	 bne .L137
 2856              	.L136:
 769:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 770:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_FAILURE;
 2857              	 .loc 5 770 0 is_stmt 1
 2858 0046 0123     	 movs r3,#1
 2859 0048 FB75     	 strb r3,[r7,#23]
 2860 004a 3EE0     	 b .L138
 2861              	.L137:
 771:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 772:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 773:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 774:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->direction = (uint32_t)I2C_MASTER_DIRECTION_TRANSMIT;
 2862              	 .loc 5 774 0
 2863 004c 3B69     	 ldr r3,[r7,#16]
 2864 004e 0022     	 movs r2,#0
 2865 0050 9A61     	 str r2,[r3,#24]
 775:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 776:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (ptr_runtime->tx_busy == false)
 2866              	 .loc 5 776 0
 2867 0052 3B69     	 ldr r3,[r7,#16]
 2868 0054 93F82630 	 ldrb r3,[r3,#38]
 2869 0058 DBB2     	 uxtb r3,r3
 2870 005a 83F00103 	 eor r3,r3,#1
 2871 005e DBB2     	 uxtb r3,r3
 2872 0060 002B     	 cmp r3,#0
 2873 0062 32D0     	 beq .L138
 777:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 778:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*If there is no transmission in progress, obtain the address of data, size of data*/
 779:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data = data;
 2874              	 .loc 5 779 0
 2875 0064 3B69     	 ldr r3,[r7,#16]
 2876 0066 3A68     	 ldr r2,[r7]
 2877 0068 1A60     	 str r2,[r3]
 780:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_count = size;
 2878              	 .loc 5 780 0
 2879 006a 3B69     	 ldr r3,[r7,#16]
 2880 006c 3A6A     	 ldr r2,[r7,#32]
 2881 006e 9A60     	 str r2,[r3,#8]
 781:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 782:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Initialize to first index and set the busy flag*/
 783:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index = 0U;
 2882              	 .loc 5 783 0
 2883 0070 3B69     	 ldr r3,[r7,#16]
 2884 0072 0022     	 movs r2,#0
 2885 0074 DA60     	 str r2,[r3,#12]
 784:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_busy = true;
 2886              	 .loc 5 784 0
 2887 0076 3B69     	 ldr r3,[r7,#16]
 2888 0078 0122     	 movs r2,#1
 2889 007a 83F82620 	 strb r2,[r3,#38]
 785:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_stop = send_stop;
 2890              	 .loc 5 785 0
 2891 007e 97F82420 	 ldrb r2,[r7,#36]
 2892 0082 3B69     	 ldr r3,[r7,#16]
 2893 0084 DA61     	 str r2,[r3,#28]
 786:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 787:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /* Enable ACK event */
 788:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_EnableEvent(handle, (uint32_t)XMC_I2C_CH_EVENT_ACK);
 2894              	 .loc 5 788 0
 2895 0086 F868     	 ldr r0,[r7,#12]
 2896 0088 4FF08041 	 mov r1,#1073741824
 2897 008c FFF7FEFF 	 bl I2C_MASTER_EnableEvent
 789:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_I2C_CH_SetInterruptNodePointer(handle->channel,ptr_runtime->tx_ack_sr);
 2898              	 .loc 5 789 0
 2899 0090 FB68     	 ldr r3,[r7,#12]
 2900 0092 1A68     	 ldr r2,[r3]
 2901 0094 3B69     	 ldr r3,[r7,#16]
 2902 0096 93F82430 	 ldrb r3,[r3,#36]
 2903 009a 1046     	 mov r0,r2
 2904 009c 1946     	 mov r1,r3
 2905 009e FFF7FEFF 	 bl XMC_I2C_CH_SetInterruptNodePointer
 790:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 791:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (send_start == true)
 2906              	 .loc 5 791 0
 2907 00a2 FB7A     	 ldrb r3,[r7,#11]
 2908 00a4 002B     	 cmp r3,#0
 2909 00a6 05D0     	 beq .L139
 792:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 793:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_lSendStart_Or_RepeatedStart(handle, address, (XMC_I2C_CH_CMD_t)XMC_I2C_CH_CMD_WRIT
 2910              	 .loc 5 793 0
 2911 00a8 F868     	 ldr r0,[r7,#12]
 2912 00aa 7968     	 ldr r1,[r7,#4]
 2913 00ac 0022     	 movs r2,#0
 2914 00ae FFF7FEFF 	 bl I2C_MASTER_lSendStart_Or_RepeatedStart
 2915 00b2 08E0     	 b .L140
 2916              	.L139:
 794:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 795:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 796:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 797:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Trigger the Ack interrupt*/
 798:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TriggerServiceRequest(handle->channel, (uint32_t)ptr_runtime->tx_ack_sr);
 2917              	 .loc 5 798 0
 2918 00b4 FB68     	 ldr r3,[r7,#12]
 2919 00b6 1A68     	 ldr r2,[r3]
 2920 00b8 3B69     	 ldr r3,[r7,#16]
 2921 00ba 93F82430 	 ldrb r3,[r3,#36]
 2922 00be 1046     	 mov r0,r2
 2923 00c0 1946     	 mov r1,r3
 2924 00c2 FFF7FEFF 	 bl XMC_USIC_CH_TriggerServiceRequest
 2925              	.L140:
 799:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 800:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 801:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_SUCCESS;
 2926              	 .loc 5 801 0
 2927 00c6 0023     	 movs r3,#0
 2928 00c8 FB75     	 strb r3,[r7,#23]
 2929              	.L138:
 802:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 803:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 804:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 2930              	 .loc 5 804 0
 2931 00ca FB7D     	 ldrb r3,[r7,#23]
 805:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2932              	 .loc 5 805 0
 2933 00cc 1846     	 mov r0,r3
 2934 00ce 1837     	 adds r7,r7,#24
 2935              	.LCFI226:
 2936              	 .cfi_def_cfa_offset 8
 2937 00d0 BD46     	 mov sp,r7
 2938              	.LCFI227:
 2939              	 .cfi_def_cfa_register 13
 2940              	 
 2941 00d2 80BD     	 pop {r7,pc}
 2942              	 .cfi_endproc
 2943              	.LFE262:
 2945              	 .section .text.I2C_MASTER_AbortTransmitIRQ,"ax",%progbits
 2946              	 .align 2
 2947              	 .thumb
 2948              	 .thumb_func
 2950              	I2C_MASTER_AbortTransmitIRQ:
 2951              	.LFB263:
 806:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 807:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_AbortTransmitIRQ(const I2C_MASTER_t *const handle)
 808:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2952              	 .loc 5 808 0
 2953              	 .cfi_startproc
 2954              	 
 2955              	 
 2956 0000 80B5     	 push {r7,lr}
 2957              	.LCFI228:
 2958              	 .cfi_def_cfa_offset 8
 2959              	 .cfi_offset 7,-8
 2960              	 .cfi_offset 14,-4
 2961 0002 82B0     	 sub sp,sp,#8
 2962              	.LCFI229:
 2963              	 .cfi_def_cfa_offset 16
 2964 0004 00AF     	 add r7,sp,#0
 2965              	.LCFI230:
 2966              	 .cfi_def_cfa_register 7
 2967 0006 7860     	 str r0,[r7,#4]
 809:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_busy = false;
 2968              	 .loc 5 809 0
 2969 0008 7B68     	 ldr r3,[r7,#4]
 2970 000a 9B68     	 ldr r3,[r3,#8]
 2971 000c 0022     	 movs r2,#0
 2972 000e 83F82620 	 strb r2,[r3,#38]
 810:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_data = NULL;
 2973              	 .loc 5 810 0
 2974 0012 7B68     	 ldr r3,[r7,#4]
 2975 0014 9B68     	 ldr r3,[r3,#8]
 2976 0016 0022     	 movs r2,#0
 2977 0018 1A60     	 str r2,[r3]
 811:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->bus_acquired = false;
 2978              	 .loc 5 811 0
 2979 001a 7B68     	 ldr r3,[r7,#4]
 2980 001c 9B68     	 ldr r3,[r3,#8]
 2981 001e 0022     	 movs r2,#0
 2982 0020 83F82820 	 strb r2,[r3,#40]
 812:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 813:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*Disable the transmit interrupts*/
 814:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->txFIFO_size != XMC_USIC_CH_FIFO_DISABLED)
 2983              	 .loc 5 814 0
 2984 0024 7B68     	 ldr r3,[r7,#4]
 2985 0026 5B68     	 ldr r3,[r3,#4]
 2986 0028 93F82630 	 ldrb r3,[r3,#38]
 2987 002c 002B     	 cmp r3,#0
 2988 002e 0BD0     	 beq .L143
 815:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 816:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Disable the transmit FIFO event*/
 817:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDAR
 2989              	 .loc 5 817 0
 2990 0030 7B68     	 ldr r3,[r7,#4]
 2991 0032 1B68     	 ldr r3,[r3]
 2992 0034 1846     	 mov r0,r3
 2993 0036 4FF08041 	 mov r1,#1073741824
 2994 003a FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_DisableEvent
 818:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 2995              	 .loc 5 818 0
 2996 003e 7B68     	 ldr r3,[r7,#4]
 2997 0040 1B68     	 ldr r3,[r3]
 2998 0042 1846     	 mov r0,r3
 2999 0044 FFF7FEFF 	 bl XMC_USIC_CH_TXFIFO_Flush
 3000              	.L143:
 819:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 820:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_DisableEvent((I2C_MASTER_t *)handle,((uint32_t)XMC_I2C_CH_EVENT_ACK ));
 3001              	 .loc 5 820 0
 3002 0048 7868     	 ldr r0,[r7,#4]
 3003 004a 4FF08041 	 mov r1,#1073741824
 3004 004e FFF7FEFF 	 bl I2C_MASTER_DisableEvent
 821:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3005              	 .loc 5 821 0
 3006 0052 0837     	 adds r7,r7,#8
 3007              	.LCFI231:
 3008              	 .cfi_def_cfa_offset 8
 3009 0054 BD46     	 mov sp,r7
 3010              	.LCFI232:
 3011              	 .cfi_def_cfa_register 13
 3012              	 
 3013 0056 80BD     	 pop {r7,pc}
 3014              	 .cfi_endproc
 3015              	.LFE263:
 3017              	 .section .text.I2C_MASTER_StartReceiveIRQ,"ax",%progbits
 3018              	 .align 2
 3019              	 .global I2C_MASTER_StartReceiveIRQ
 3020              	 .thumb
 3021              	 .thumb_func
 3023              	I2C_MASTER_StartReceiveIRQ:
 3024              	.LFB264:
 822:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 823:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 824:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 825:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32_
 826:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                uint8_t * data, const uint32_t count, bool send_stop
 827:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3025              	 .loc 5 827 0
 3026              	 .cfi_startproc
 3027              	 
 3028              	 
 3029 0000 80B5     	 push {r7,lr}
 3030              	.LCFI233:
 3031              	 .cfi_def_cfa_offset 8
 3032              	 .cfi_offset 7,-8
 3033              	 .cfi_offset 14,-4
 3034 0002 86B0     	 sub sp,sp,#24
 3035              	.LCFI234:
 3036              	 .cfi_def_cfa_offset 32
 3037 0004 00AF     	 add r7,sp,#0
 3038              	.LCFI235:
 3039              	 .cfi_def_cfa_register 7
 3040 0006 F860     	 str r0,[r7,#12]
 3041 0008 7A60     	 str r2,[r7,#4]
 3042 000a 3B60     	 str r3,[r7]
 3043 000c 0B46     	 mov r3,r1
 3044 000e FB72     	 strb r3,[r7,#11]
 828:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 829:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 830:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 831:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 3045              	 .loc 5 831 0
 3046 0010 0223     	 movs r3,#2
 3047 0012 FB75     	 strb r3,[r7,#23]
 832:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 3048              	 .loc 5 832 0
 3049 0014 FB68     	 ldr r3,[r7,#12]
 3050 0016 9B68     	 ldr r3,[r3,#8]
 3051 0018 3B61     	 str r3,[r7,#16]
 833:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 834:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (((handle == NULL) || ((send_start == false) && (handle->runtime->bus_acquired == false)) || (
 3052              	 .loc 5 834 0
 3053 001a FB68     	 ldr r3,[r7,#12]
 3054 001c 002B     	 cmp r3,#0
 3055 001e 15D0     	 beq .L145
 3056              	 .loc 5 834 0 is_stmt 0 discriminator 1
 3057 0020 FB7A     	 ldrb r3,[r7,#11]
 3058 0022 83F00103 	 eor r3,r3,#1
 3059 0026 DBB2     	 uxtb r3,r3
 3060 0028 002B     	 cmp r3,#0
 3061 002a 09D0     	 beq .L146
 3062              	 .loc 5 834 0 discriminator 2
 3063 002c FB68     	 ldr r3,[r7,#12]
 3064 002e 9B68     	 ldr r3,[r3,#8]
 3065 0030 93F82830 	 ldrb r3,[r3,#40]
 3066 0034 DBB2     	 uxtb r3,r3
 3067 0036 83F00103 	 eor r3,r3,#1
 3068 003a DBB2     	 uxtb r3,r3
 3069 003c 002B     	 cmp r3,#0
 3070 003e 05D1     	 bne .L145
 3071              	.L146:
 3072              	 .loc 5 834 0 discriminator 4
 3073 0040 3B68     	 ldr r3,[r7]
 3074 0042 002B     	 cmp r3,#0
 3075 0044 02D0     	 beq .L145
 3076              	 .loc 5 834 0 discriminator 5
 3077 0046 3B6A     	 ldr r3,[r7,#32]
 3078 0048 002B     	 cmp r3,#0
 3079 004a 02D1     	 bne .L147
 3080              	.L145:
 835:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (count == 0U)))
 836:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 837:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
 3081              	 .loc 5 837 0 is_stmt 1
 3082 004c 0123     	 movs r3,#1
 3083 004e FB75     	 strb r3,[r7,#23]
 3084 0050 43E0     	 b .L148
 3085              	.L147:
 838:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 839:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 840:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 841:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (ptr_runtime->rx_busy == false)
 3086              	 .loc 5 841 0
 3087 0052 3B69     	 ldr r3,[r7,#16]
 3088 0054 93F82730 	 ldrb r3,[r3,#39]
 3089 0058 DBB2     	 uxtb r3,r3
 3090 005a 83F00103 	 eor r3,r3,#1
 3091 005e DBB2     	 uxtb r3,r3
 3092 0060 002B     	 cmp r3,#0
 3093 0062 3AD0     	 beq .L148
 842:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 843:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->direction = (uint32_t)I2C_MASTER_DIRECTION_RECEIVE;
 3094              	 .loc 5 843 0
 3095 0064 3B69     	 ldr r3,[r7,#16]
 3096 0066 0122     	 movs r2,#1
 3097 0068 9A61     	 str r2,[r3,#24]
 844:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 845:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* If no active reception in progress, obtain the address of data buffer and number of data b
 846:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data = data;
 3098              	 .loc 5 846 0
 3099 006a 3B69     	 ldr r3,[r7,#16]
 3100 006c 3A68     	 ldr r2,[r7]
 3101 006e 5A60     	 str r2,[r3,#4]
 847:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data_count = count;
 3102              	 .loc 5 847 0
 3103 0070 3B69     	 ldr r3,[r7,#16]
 3104 0072 3A6A     	 ldr r2,[r7,#32]
 3105 0074 1A61     	 str r2,[r3,#16]
 848:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data = data;
 3106              	 .loc 5 848 0
 3107 0076 3B69     	 ldr r3,[r7,#16]
 3108 0078 3A68     	 ldr r2,[r7]
 3109 007a 1A60     	 str r2,[r3]
 849:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_count = count;
 3110              	 .loc 5 849 0
 3111 007c 3B69     	 ldr r3,[r7,#16]
 3112 007e 3A6A     	 ldr r2,[r7,#32]
 3113 0080 9A60     	 str r2,[r3,#8]
 850:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_busy = true;
 3114              	 .loc 5 850 0
 3115 0082 3B69     	 ldr r3,[r7,#16]
 3116 0084 0122     	 movs r2,#1
 3117 0086 83F82620 	 strb r2,[r3,#38]
 851:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_busy = true;
 3118              	 .loc 5 851 0
 3119 008a 3B69     	 ldr r3,[r7,#16]
 3120 008c 0122     	 movs r2,#1
 3121 008e 83F82720 	 strb r2,[r3,#39]
 852:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_stop = send_stop;
 3122              	 .loc 5 852 0
 3123 0092 97F82420 	 ldrb r2,[r7,#36]
 3124 0096 3B69     	 ldr r3,[r7,#16]
 3125 0098 DA61     	 str r2,[r3,#28]
 853:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_nack = send_nack;
 3126              	 .loc 5 853 0
 3127 009a 97F82820 	 ldrb r2,[r7,#40]
 3128 009e 3B69     	 ldr r3,[r7,#16]
 3129 00a0 1A62     	 str r2,[r3,#32]
 854:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data_index = 0U;
 3130              	 .loc 5 854 0
 3131 00a2 3B69     	 ldr r3,[r7,#16]
 3132 00a4 0022     	 movs r2,#0
 3133 00a6 5A61     	 str r2,[r3,#20]
 855:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index = 0U;
 3134              	 .loc 5 855 0
 3135 00a8 3B69     	 ldr r3,[r7,#16]
 3136 00aa 0022     	 movs r2,#0
 3137 00ac DA60     	 str r2,[r3,#12]
 856:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 857:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->rxFIFO_size > 0)
 3138              	 .loc 5 857 0
 3139 00ae FB68     	 ldr r3,[r7,#12]
 3140 00b0 5B68     	 ldr r3,[r3,#4]
 3141 00b2 93F82730 	 ldrb r3,[r3,#39]
 3142 00b6 002B     	 cmp r3,#0
 3143 00b8 07D0     	 beq .L149
 858:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 859:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_lReceive_FIFOData(handle, send_start, address, count);
 3144              	 .loc 5 859 0
 3145 00ba FB7A     	 ldrb r3,[r7,#11]
 3146 00bc F868     	 ldr r0,[r7,#12]
 3147 00be 1946     	 mov r1,r3
 3148 00c0 7A68     	 ldr r2,[r7,#4]
 3149 00c2 3B6A     	 ldr r3,[r7,#32]
 3150 00c4 FFF7FEFF 	 bl I2C_MASTER_lReceive_FIFOData
 3151 00c8 05E0     	 b .L150
 3152              	.L149:
 860:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 861:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 862:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 863:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_lReceive_StdData(handle, send_start, address);
 3153              	 .loc 5 863 0
 3154 00ca FB7A     	 ldrb r3,[r7,#11]
 3155 00cc F868     	 ldr r0,[r7,#12]
 3156 00ce 1946     	 mov r1,r3
 3157 00d0 7A68     	 ldr r2,[r7,#4]
 3158 00d2 FFF7FEFF 	 bl I2C_MASTER_lReceive_StdData
 3159              	.L150:
 864:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 865:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_SUCCESS;
 3160              	 .loc 5 865 0
 3161 00d6 0023     	 movs r3,#0
 3162 00d8 FB75     	 strb r3,[r7,#23]
 3163              	.L148:
 866:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 867:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 868:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 3164              	 .loc 5 868 0
 3165 00da FB7D     	 ldrb r3,[r7,#23]
 869:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3166              	 .loc 5 869 0
 3167 00dc 1846     	 mov r0,r3
 3168 00de 1837     	 adds r7,r7,#24
 3169              	.LCFI236:
 3170              	 .cfi_def_cfa_offset 8
 3171 00e0 BD46     	 mov sp,r7
 3172              	.LCFI237:
 3173              	 .cfi_def_cfa_register 13
 3174              	 
 3175 00e2 80BD     	 pop {r7,pc}
 3176              	 .cfi_endproc
 3177              	.LFE264:
 3179              	 .section .text.I2C_MASTER_ReceiveHandler,"ax",%progbits
 3180              	 .align 2
 3181              	 .global I2C_MASTER_ReceiveHandler
 3182              	 .thumb
 3183              	 .thumb_func
 3185              	I2C_MASTER_ReceiveHandler:
 3186              	.LFB265:
 870:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 871:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
 872:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Receive interrupt handler for the APP.
 873:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * This is a common interrupt handling function for different instances of the I2C_MASTER APP.
 874:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 875:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  handle I2C_MASTER APP handle pointer of type I2C_MASTER_t*
 876:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 877:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return void
 878:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
 879:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ReceiveHandler(I2C_MASTER_t * const handle)
 880:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3187              	 .loc 5 880 0
 3188              	 .cfi_startproc
 3189              	 
 3190              	 
 3191 0000 90B5     	 push {r4,r7,lr}
 3192              	.LCFI238:
 3193              	 .cfi_def_cfa_offset 12
 3194              	 .cfi_offset 4,-12
 3195              	 .cfi_offset 7,-8
 3196              	 .cfi_offset 14,-4
 3197 0002 85B0     	 sub sp,sp,#20
 3198              	.LCFI239:
 3199              	 .cfi_def_cfa_offset 32
 3200 0004 00AF     	 add r7,sp,#0
 3201              	.LCFI240:
 3202              	 .cfi_def_cfa_register 7
 3203 0006 7860     	 str r0,[r7,#4]
 881:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 882:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_lindex;
 883:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_min;
 884:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 885:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 3204              	 .loc 5 885 0
 3205 0008 7B68     	 ldr r3,[r7,#4]
 3206 000a 9B68     	 ldr r3,[r3,#8]
 3207 000c BB60     	 str r3,[r7,#8]
 886:../Dave/Generated/I2C_MASTER/i2c_master.c ****   fifo_lindex = 0U;
 3208              	 .loc 5 886 0
 3209 000e 0023     	 movs r3,#0
 3210 0010 FB73     	 strb r3,[r7,#15]
 887:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 888:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->rx_busy == true)
 3211              	 .loc 5 888 0
 3212 0012 BB68     	 ldr r3,[r7,#8]
 3213 0014 93F82730 	 ldrb r3,[r3,#39]
 3214 0018 DBB2     	 uxtb r3,r3
 3215 001a 002B     	 cmp r3,#0
 3216 001c 00F01181 	 beq .L152
 889:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 890:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->rxFIFO_size > 0)
 3217              	 .loc 5 890 0
 3218 0020 7B68     	 ldr r3,[r7,#4]
 3219 0022 5B68     	 ldr r3,[r3,#4]
 3220 0024 93F82730 	 ldrb r3,[r3,#39]
 3221 0028 002B     	 cmp r3,#0
 3222 002a 00F0C780 	 beq .L154
 891:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 892:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /********************************************************************************************
 893:../Dave/Generated/I2C_MASTER/i2c_master.c ****        Rx FIFO enabled
 894:../Dave/Generated/I2C_MASTER/i2c_master.c ****       *********************************************************************************************
 895:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsRXFIFOEmpty(handle) == false)
 3223              	 .loc 5 895 0
 3224 002e 20E0     	 b .L155
 3225              	.L157:
 896:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 897:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /*Read all the content of Receive FIFO */
 898:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->rx_data[ptr_runtime->rx_data_index] = (uint8_t)I2C_MASTER_GetReceivedByte(hand
 3226              	 .loc 5 898 0
 3227 0030 BB68     	 ldr r3,[r7,#8]
 3228 0032 5A68     	 ldr r2,[r3,#4]
 3229 0034 BB68     	 ldr r3,[r7,#8]
 3230 0036 5B69     	 ldr r3,[r3,#20]
 3231 0038 D418     	 adds r4,r2,r3
 3232 003a 7868     	 ldr r0,[r7,#4]
 3233 003c FFF7FEFF 	 bl I2C_MASTER_GetReceivedByte
 3234 0040 0346     	 mov r3,r0
 3235 0042 2370     	 strb r3,[r4]
 899:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->rx_data_index++;
 3236              	 .loc 5 899 0
 3237 0044 BB68     	 ldr r3,[r7,#8]
 3238 0046 5B69     	 ldr r3,[r3,#20]
 3239 0048 5A1C     	 adds r2,r3,#1
 3240 004a BB68     	 ldr r3,[r7,#8]
 3241 004c 5A61     	 str r2,[r3,#20]
 900:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 901:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->rx_data_index == ptr_runtime->rx_data_count)
 3242              	 .loc 5 901 0
 3243 004e BB68     	 ldr r3,[r7,#8]
 3244 0050 5A69     	 ldr r2,[r3,#20]
 3245 0052 BB68     	 ldr r3,[r7,#8]
 3246 0054 1B69     	 ldr r3,[r3,#16]
 3247 0056 9A42     	 cmp r2,r3
 3248 0058 0BD1     	 bne .L155
 902:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 903:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /*Reception complete*/
 904:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->rx_busy = false;
 3249              	 .loc 5 904 0
 3250 005a BB68     	 ldr r3,[r7,#8]
 3251 005c 0022     	 movs r2,#0
 3252 005e 83F82720 	 strb r2,[r3,#39]
 905:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 906:../Dave/Generated/I2C_MASTER/i2c_master.c ****             /*Disable both standard receive and alternative receive FIFO events*/
 907:../Dave/Generated/I2C_MASTER/i2c_master.c ****             XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel,
 3253              	 .loc 5 907 0
 3254 0062 7B68     	 ldr r3,[r7,#4]
 3255 0064 1B68     	 ldr r3,[r3]
 3256 0066 1846     	 mov r0,r3
 3257 0068 4FF0C041 	 mov r1,#1610612736
 3258 006c FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_DisableEvent
 908:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                           (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDA
 909:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                      (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERN
 910:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 911:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 3259              	 .loc 5 911 0
 3260 0070 08E0     	 b .L156
 3261              	.L155:
 895:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 3262              	 .loc 5 895 0
 3263 0072 7868     	 ldr r0,[r7,#4]
 3264 0074 FFF7FEFF 	 bl I2C_MASTER_IsRXFIFOEmpty
 3265 0078 0346     	 mov r3,r0
 3266 007a 83F00103 	 eor r3,r3,#1
 3267 007e DBB2     	 uxtb r3,r3
 3268 0080 002B     	 cmp r3,#0
 3269 0082 D5D1     	 bne .L157
 3270              	.L156:
 912:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 913:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while(I2C_MASTER_IsRXFIFOEmpty(handle) == false)*/
 914:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 915:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Set the trigger limit if data still to be received*/
 916:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
 3271              	 .loc 5 916 0
 3272 0084 BB68     	 ldr r3,[r7,#8]
 3273 0086 5A69     	 ldr r2,[r3,#20]
 3274 0088 BB68     	 ldr r3,[r7,#8]
 3275 008a 1B69     	 ldr r3,[r3,#16]
 3276 008c 9A42     	 cmp r2,r3
 3277 008e 77D2     	 bcs .L158
 917:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 918:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_lReconfigureRxFIFO(handle,(uint32_t)(ptr_runtime->rx_data_count - ptr_runtime->r
 3278              	 .loc 5 918 0
 3279 0090 BB68     	 ldr r3,[r7,#8]
 3280 0092 1A69     	 ldr r2,[r3,#16]
 3281 0094 BB68     	 ldr r3,[r7,#8]
 3282 0096 5B69     	 ldr r3,[r3,#20]
 3283 0098 D31A     	 subs r3,r2,r3
 3284 009a 7868     	 ldr r0,[r7,#4]
 3285 009c 1946     	 mov r1,r3
 3286 009e FFF7FEFF 	 bl I2C_MASTER_lReconfigureRxFIFO
 919:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 920:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if ((handle->config->txFIFO_size > 0))
 3287              	 .loc 5 920 0
 3288 00a2 7B68     	 ldr r3,[r7,#4]
 3289 00a4 5B68     	 ldr r3,[r3,#4]
 3290 00a6 93F82630 	 ldrb r3,[r3,#38]
 3291 00aa 002B     	 cmp r3,#0
 3292 00ac 15D0     	 beq .L159
 921:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 922:../Dave/Generated/I2C_MASTER/i2c_master.c ****           fifo_min = (uint8_t)calculate_minfifosize(((uint32_t)1 << (uint32_t)handle->config->txFIF
 3293              	 .loc 5 922 0
 3294 00ae 7B68     	 ldr r3,[r7,#4]
 3295 00b0 5B68     	 ldr r3,[r3,#4]
 3296 00b2 93F82630 	 ldrb r3,[r3,#38]
 3297 00b6 1A46     	 mov r2,r3
 3298 00b8 0123     	 movs r3,#1
 3299 00ba 03FA02F2 	 lsl r2,r3,r2
 923:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                     ((uint32_t)1 << (uint32_t)handle->config->rxFIF
 3300              	 .loc 5 923 0
 3301 00be 7B68     	 ldr r3,[r7,#4]
 3302 00c0 5B68     	 ldr r3,[r3,#4]
 3303 00c2 93F82730 	 ldrb r3,[r3,#39]
 922:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                     ((uint32_t)1 << (uint32_t)handle->config->rxFIF
 3304              	 .loc 5 922 0
 3305 00c6 1946     	 mov r1,r3
 3306 00c8 0123     	 movs r3,#1
 3307 00ca 8B40     	 lsls r3,r3,r1
 3308 00cc 1046     	 mov r0,r2
 3309 00ce 1946     	 mov r1,r3
 3310 00d0 FFF7FEFF 	 bl calculate_minfifosize
 3311 00d4 0346     	 mov r3,r0
 3312 00d6 BB73     	 strb r3,[r7,#14]
 3313 00d8 01E0     	 b .L160
 3314              	.L159:
 924:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 925:../Dave/Generated/I2C_MASTER/i2c_master.c ****        else
 926:../Dave/Generated/I2C_MASTER/i2c_master.c ****        {
 927:../Dave/Generated/I2C_MASTER/i2c_master.c ****           fifo_min = 2U;
 3315              	 .loc 5 927 0
 3316 00da 0223     	 movs r3,#2
 3317 00dc BB73     	 strb r3,[r7,#14]
 3318              	.L160:
 928:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 929:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*******************************************************************************************
 930:../Dave/Generated/I2C_MASTER/i2c_master.c ****          Rx and Tx FIFO enabled
 931:../Dave/Generated/I2C_MASTER/i2c_master.c ****         *******************************************************************************************
 932:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (handle->config->txFIFO_size > 0)
 3319              	 .loc 5 932 0
 3320 00de 7B68     	 ldr r3,[r7,#4]
 3321 00e0 5B68     	 ldr r3,[r3,#4]
 3322 00e2 93F82630 	 ldrb r3,[r3,#38]
 3323 00e6 002B     	 cmp r3,#0
 3324 00e8 33D0     	 beq .L161
 933:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 934:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /*Fill the transmit FIFO */
 935:../Dave/Generated/I2C_MASTER/i2c_master.c ****           while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 3325              	 .loc 5 935 0
 3326 00ea 27E0     	 b .L162
 3327              	.L167:
 936:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 937:../Dave/Generated/I2C_MASTER/i2c_master.c ****             if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 3328              	 .loc 5 937 0
 3329 00ec BB68     	 ldr r3,[r7,#8]
 3330 00ee DA68     	 ldr r2,[r3,#12]
 3331 00f0 BB68     	 ldr r3,[r7,#8]
 3332 00f2 9B68     	 ldr r3,[r3,#8]
 3333 00f4 9A42     	 cmp r2,r3
 3334 00f6 20D2     	 bcs .L163
 938:../Dave/Generated/I2C_MASTER/i2c_master.c ****             {
 939:../Dave/Generated/I2C_MASTER/i2c_master.c ****               if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime
 3335              	 .loc 5 939 0
 3336 00f8 BB68     	 ldr r3,[r7,#8]
 3337 00fa DB68     	 ldr r3,[r3,#12]
 3338 00fc 5A1C     	 adds r2,r3,#1
 3339 00fe BB68     	 ldr r3,[r7,#8]
 3340 0100 9B68     	 ldr r3,[r3,#8]
 3341 0102 9A42     	 cmp r2,r3
 3342 0104 07D1     	 bne .L164
 3343              	 .loc 5 939 0 is_stmt 0 discriminator 1
 3344 0106 BB68     	 ldr r3,[r7,#8]
 3345 0108 1B6A     	 ldr r3,[r3,#32]
 3346 010a 012B     	 cmp r3,#1
 3347 010c 03D1     	 bne .L164
 940:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 941:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 I2C_MASTER_ReceiveNACK(handle);
 3348              	 .loc 5 941 0 is_stmt 1
 3349 010e 7868     	 ldr r0,[r7,#4]
 3350 0110 FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 3351 0114 02E0     	 b .L165
 3352              	.L164:
 942:../Dave/Generated/I2C_MASTER/i2c_master.c ****               }
 943:../Dave/Generated/I2C_MASTER/i2c_master.c ****               else
 944:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 945:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 I2C_MASTER_ReceiveACK(handle);
 3353              	 .loc 5 945 0
 3354 0116 7868     	 ldr r0,[r7,#4]
 3355 0118 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 3356              	.L165:
 946:../Dave/Generated/I2C_MASTER/i2c_master.c ****               }
 947:../Dave/Generated/I2C_MASTER/i2c_master.c ****               ptr_runtime->tx_data_index++;
 3357              	 .loc 5 947 0
 3358 011c BB68     	 ldr r3,[r7,#8]
 3359 011e DB68     	 ldr r3,[r3,#12]
 3360 0120 5A1C     	 adds r2,r3,#1
 3361 0122 BB68     	 ldr r3,[r7,#8]
 3362 0124 DA60     	 str r2,[r3,#12]
 948:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 949:../Dave/Generated/I2C_MASTER/i2c_master.c ****               /* if fifo size- break */
 950:../Dave/Generated/I2C_MASTER/i2c_master.c ****               if ((++fifo_lindex) >= fifo_min)
 3363              	 .loc 5 950 0
 3364 0126 FB7B     	 ldrb r3,[r7,#15]
 3365 0128 0133     	 adds r3,r3,#1
 3366 012a FB73     	 strb r3,[r7,#15]
 3367 012c FA7B     	 ldrb r2,[r7,#15]
 3368 012e BB7B     	 ldrb r3,[r7,#14]
 3369 0130 9A42     	 cmp r2,r3
 3370 0132 03D3     	 bcc .L162
 951:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 952:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 fifo_lindex = 0U;
 3371              	 .loc 5 952 0
 3372 0134 0023     	 movs r3,#0
 3373 0136 FB73     	 strb r3,[r7,#15]
 953:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 break;
 3374              	 .loc 5 953 0
 3375 0138 0AE0     	 b .L166
 3376              	.L163:
 954:../Dave/Generated/I2C_MASTER/i2c_master.c ****               }
 955:../Dave/Generated/I2C_MASTER/i2c_master.c ****             }/* end of if(handle->runtime->tx_data_index < handle->runtime->tx_data_count) */
 956:../Dave/Generated/I2C_MASTER/i2c_master.c ****             else
 957:../Dave/Generated/I2C_MASTER/i2c_master.c ****             {
 958:../Dave/Generated/I2C_MASTER/i2c_master.c ****               break;
 3377              	 .loc 5 958 0
 3378 013a 09E0     	 b .L166
 3379              	.L162:
 935:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 3380              	 .loc 5 935 0
 3381 013c 7868     	 ldr r0,[r7,#4]
 3382 013e FFF7FEFF 	 bl I2C_MASTER_IsTXFIFOFull
 3383 0142 0346     	 mov r3,r0
 3384 0144 83F00103 	 eor r3,r3,#1
 3385 0148 DBB2     	 uxtb r3,r3
 3386 014a 002B     	 cmp r3,#0
 3387 014c CED1     	 bne .L167
 3388 014e 17E0     	 b .L158
 3389              	.L166:
 3390 0150 16E0     	 b .L158
 3391              	.L161:
 959:../Dave/Generated/I2C_MASTER/i2c_master.c ****             }
 960:../Dave/Generated/I2C_MASTER/i2c_master.c ****          }
 961:../Dave/Generated/I2C_MASTER/i2c_master.c ****        } /* end of  if((handle->config->txFIFO_size > 0)) */
 962:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*******************************************************************************************
 963:../Dave/Generated/I2C_MASTER/i2c_master.c ****           Rx FIFO is enabled, Tx FIFO disabled
 964:../Dave/Generated/I2C_MASTER/i2c_master.c ****        ********************************************************************************************
 965:../Dave/Generated/I2C_MASTER/i2c_master.c ****        else
 966:../Dave/Generated/I2C_MASTER/i2c_master.c ****        {
 967:../Dave/Generated/I2C_MASTER/i2c_master.c ****          if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->sen
 3392              	 .loc 5 967 0
 3393 0152 BB68     	 ldr r3,[r7,#8]
 3394 0154 DB68     	 ldr r3,[r3,#12]
 3395 0156 5A1C     	 adds r2,r3,#1
 3396 0158 BB68     	 ldr r3,[r7,#8]
 3397 015a 9B68     	 ldr r3,[r3,#8]
 3398 015c 9A42     	 cmp r2,r3
 3399 015e 07D1     	 bne .L168
 3400              	 .loc 5 967 0 is_stmt 0 discriminator 1
 3401 0160 BB68     	 ldr r3,[r7,#8]
 3402 0162 1B6A     	 ldr r3,[r3,#32]
 3403 0164 012B     	 cmp r3,#1
 3404 0166 03D1     	 bne .L168
 968:../Dave/Generated/I2C_MASTER/i2c_master.c ****          {
 969:../Dave/Generated/I2C_MASTER/i2c_master.c ****            I2C_MASTER_ReceiveNACK(handle);
 3405              	 .loc 5 969 0 is_stmt 1
 3406 0168 7868     	 ldr r0,[r7,#4]
 3407 016a FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 3408 016e 02E0     	 b .L169
 3409              	.L168:
 970:../Dave/Generated/I2C_MASTER/i2c_master.c ****          }
 971:../Dave/Generated/I2C_MASTER/i2c_master.c ****          else
 972:../Dave/Generated/I2C_MASTER/i2c_master.c ****          {
 973:../Dave/Generated/I2C_MASTER/i2c_master.c ****            I2C_MASTER_ReceiveACK(handle);
 3410              	 .loc 5 973 0
 3411 0170 7868     	 ldr r0,[r7,#4]
 3412 0172 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 3413              	.L169:
 974:../Dave/Generated/I2C_MASTER/i2c_master.c ****          }
 975:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 976:../Dave/Generated/I2C_MASTER/i2c_master.c ****          ptr_runtime->tx_data_index++;
 3414              	 .loc 5 976 0
 3415 0176 BB68     	 ldr r3,[r7,#8]
 3416 0178 DB68     	 ldr r3,[r3,#12]
 3417 017a 5A1C     	 adds r2,r3,#1
 3418 017c BB68     	 ldr r3,[r7,#8]
 3419 017e DA60     	 str r2,[r3,#12]
 3420              	.L158:
 977:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 978:../Dave/Generated/I2C_MASTER/i2c_master.c ****      } /* end of if(ptr_runtime->rx_data_index < ptr_runtime->rx_data_count) */
 979:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 980:../Dave/Generated/I2C_MASTER/i2c_master.c ****      if last byte to receive then disable receive events and jump to callback routine
 981:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 982:../Dave/Generated/I2C_MASTER/i2c_master.c ****      if (ptr_runtime->rx_data_index == ptr_runtime->rx_data_count)
 3421              	 .loc 5 982 0
 3422 0180 BB68     	 ldr r3,[r7,#8]
 3423 0182 5A69     	 ldr r2,[r3,#20]
 3424 0184 BB68     	 ldr r3,[r7,#8]
 3425 0186 1B69     	 ldr r3,[r3,#16]
 3426 0188 9A42     	 cmp r2,r3
 3427 018a 5AD1     	 bne .L152
 983:../Dave/Generated/I2C_MASTER/i2c_master.c ****      {
 984:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*Clear both standard receive and alternative receive FIFO events*/
 985:../Dave/Generated/I2C_MASTER/i2c_master.c ****        XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVE
 3428              	 .loc 5 985 0
 3429 018c 7B68     	 ldr r3,[r7,#4]
 3430 018e 1B68     	 ldr r3,[r3]
 3431 0190 1846     	 mov r0,r3
 3432 0192 4FF0C041 	 mov r1,#1610612736
 3433 0196 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_DisableEvent
 986:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                                    (uint32_t)XMC_USIC_CH_RXFIFO_EVE
 987:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 988:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*Disable both standard receive and alternative receive events*/
 989:../Dave/Generated/I2C_MASTER/i2c_master.c ****        XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE
 3434              	 .loc 5 989 0
 3435 019a 7B68     	 ldr r3,[r7,#4]
 3436 019c 1B68     	 ldr r3,[r3]
 3437 019e 1846     	 mov r0,r3
 3438 01a0 4FF44041 	 mov r1,#49152
 3439 01a4 FFF7FEFF 	 bl XMC_USIC_CH_DisableEvent
 990:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                             (uint32_t)XMC_USIC_CH_EVENT_STANDARD_RE
 991:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 992:../Dave/Generated/I2C_MASTER/i2c_master.c ****        if (ptr_runtime->bus_acquired == true)
 3440              	 .loc 5 992 0
 3441 01a8 BB68     	 ldr r3,[r7,#8]
 3442 01aa 93F82830 	 ldrb r3,[r3,#40]
 3443 01ae DBB2     	 uxtb r3,r3
 3444 01b0 002B     	 cmp r3,#0
 3445 01b2 46D0     	 beq .L152
 993:../Dave/Generated/I2C_MASTER/i2c_master.c ****        {
 994:../Dave/Generated/I2C_MASTER/i2c_master.c ****          I2C_MASTER_lSendStop_JumpTo_RxCallback(handle);
 3446              	 .loc 5 994 0
 3447 01b4 7868     	 ldr r0,[r7,#4]
 3448 01b6 FFF7FEFF 	 bl I2C_MASTER_lSendStop_JumpTo_RxCallback
 3449 01ba 42E0     	 b .L152
 3450              	.L154:
 995:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 996:../Dave/Generated/I2C_MASTER/i2c_master.c ****      }
 997:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /*  end of if(handle->config->rxFIFO_size > 0) */
 998:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 999:../Dave/Generated/I2C_MASTER/i2c_master.c ****      Rx FIFO disabled
1000:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
1001:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
1002:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
1003:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->rx_data[ptr_runtime->rx_data_index] = (uint8_t)I2C_MASTER_GetReceivedByte(handle
 3451              	 .loc 5 1003 0
 3452 01bc BB68     	 ldr r3,[r7,#8]
 3453 01be 5A68     	 ldr r2,[r3,#4]
 3454 01c0 BB68     	 ldr r3,[r7,#8]
 3455 01c2 5B69     	 ldr r3,[r3,#20]
 3456 01c4 D418     	 adds r4,r2,r3
 3457 01c6 7868     	 ldr r0,[r7,#4]
 3458 01c8 FFF7FEFF 	 bl I2C_MASTER_GetReceivedByte
 3459 01cc 0346     	 mov r3,r0
 3460 01ce 2370     	 strb r3,[r4]
1004:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->rx_data_index++;
 3461              	 .loc 5 1004 0
 3462 01d0 BB68     	 ldr r3,[r7,#8]
 3463 01d2 5B69     	 ldr r3,[r3,#20]
 3464 01d4 5A1C     	 adds r2,r3,#1
 3465 01d6 BB68     	 ldr r3,[r7,#8]
 3466 01d8 5A61     	 str r2,[r3,#20]
1005:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1006:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
 3467              	 .loc 5 1006 0
 3468 01da BB68     	 ldr r3,[r7,#8]
 3469 01dc 5A69     	 ldr r2,[r3,#20]
 3470 01de BB68     	 ldr r3,[r7,#8]
 3471 01e0 1B69     	 ldr r3,[r3,#16]
 3472 01e2 9A42     	 cmp r2,r3
 3473 01e4 1DD2     	 bcs .L171
1007:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
1008:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 3474              	 .loc 5 1008 0
 3475 01e6 BB68     	 ldr r3,[r7,#8]
 3476 01e8 DA68     	 ldr r2,[r3,#12]
 3477 01ea BB68     	 ldr r3,[r7,#8]
 3478 01ec 9B68     	 ldr r3,[r3,#8]
 3479 01ee 9A42     	 cmp r2,r3
 3480 01f0 27D2     	 bcs .L152
1009:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
1010:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /* if receive byte is end of byte and send_nack is true, send to receive Nack otherwise A
1011:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index) == (ptr_runtime->tx_data_count - 1U)) && (ptr_runtime->
 3481              	 .loc 5 1011 0
 3482 01f2 BB68     	 ldr r3,[r7,#8]
 3483 01f4 DA68     	 ldr r2,[r3,#12]
 3484 01f6 BB68     	 ldr r3,[r7,#8]
 3485 01f8 9B68     	 ldr r3,[r3,#8]
 3486 01fa 013B     	 subs r3,r3,#1
 3487 01fc 9A42     	 cmp r2,r3
 3488 01fe 07D1     	 bne .L173
 3489              	 .loc 5 1011 0 is_stmt 0 discriminator 1
 3490 0200 BB68     	 ldr r3,[r7,#8]
 3491 0202 1B6A     	 ldr r3,[r3,#32]
 3492 0204 012B     	 cmp r3,#1
 3493 0206 03D1     	 bne .L173
1012:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
1013:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
 3494              	 .loc 5 1013 0 is_stmt 1
 3495 0208 7868     	 ldr r0,[r7,#4]
 3496 020a FFF7FEFF 	 bl I2C_MASTER_ReceiveNACK
 3497 020e 02E0     	 b .L174
 3498              	.L173:
1014:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
1015:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
1016:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
1017:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
 3499              	 .loc 5 1017 0
 3500 0210 7868     	 ldr r0,[r7,#4]
 3501 0212 FFF7FEFF 	 bl I2C_MASTER_ReceiveACK
 3502              	.L174:
1018:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
1019:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
 3503              	 .loc 5 1019 0
 3504 0216 BB68     	 ldr r3,[r7,#8]
 3505 0218 DB68     	 ldr r3,[r3,#12]
 3506 021a 5A1C     	 adds r2,r3,#1
 3507 021c BB68     	 ldr r3,[r7,#8]
 3508 021e DA60     	 str r2,[r3,#12]
 3509 0220 0FE0     	 b .L152
 3510              	.L171:
1020:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
1021:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
1022:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
1023:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
1024:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /*Disable both standard receive and alternative receive events*/
1025:../Dave/Generated/I2C_MASTER/i2c_master.c ****         XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_ALTERNATIV
 3511              	 .loc 5 1025 0
 3512 0222 7B68     	 ldr r3,[r7,#4]
 3513 0224 1B68     	 ldr r3,[r3]
 3514 0226 1846     	 mov r0,r3
 3515 0228 4FF44041 	 mov r1,#49152
 3516 022c FFF7FEFF 	 bl XMC_USIC_CH_DisableEvent
1026:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                              (uint32_t)XMC_USIC_CH_EVENT_STANDARD_R
1027:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->bus_acquired == true)
 3517              	 .loc 5 1027 0
 3518 0230 BB68     	 ldr r3,[r7,#8]
 3519 0232 93F82830 	 ldrb r3,[r3,#40]
 3520 0236 DBB2     	 uxtb r3,r3
 3521 0238 002B     	 cmp r3,#0
 3522 023a 02D0     	 beq .L152
1028:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
1029:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_lSendStop_JumpTo_RxCallback(handle);
 3523              	 .loc 5 1029 0
 3524 023c 7868     	 ldr r0,[r7,#4]
 3525 023e FFF7FEFF 	 bl I2C_MASTER_lSendStop_JumpTo_RxCallback
 3526              	.L152:
1030:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
1031:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
1032:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
1033:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of  if(ptr_runtime->rx_busy == true)*/
1034:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3527              	 .loc 5 1034 0
 3528 0242 1437     	 adds r7,r7,#20
 3529              	.LCFI241:
 3530              	 .cfi_def_cfa_offset 12
 3531 0244 BD46     	 mov sp,r7
 3532              	.LCFI242:
 3533              	 .cfi_def_cfa_register 13
 3534              	 
 3535 0246 90BD     	 pop {r4,r7,pc}
 3536              	 .cfi_endproc
 3537              	.LFE265:
 3539              	 .section .text.I2C_MASTER_lSendStop_JumpTo_RxCallback,"ax",%progbits
 3540              	 .align 2
 3541              	 .thumb
 3542              	 .thumb_func
 3544              	I2C_MASTER_lSendStop_JumpTo_RxCallback:
 3545              	.LFB266:
1035:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1036:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to issue Send Stop command and jump to receive callback routine */
1037:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_RxCallback(I2C_MASTER_t *const handle)
1038:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3546              	 .loc 5 1038 0
 3547              	 .cfi_startproc
 3548              	 
 3549              	 
 3550 0000 80B5     	 push {r7,lr}
 3551              	.LCFI243:
 3552              	 .cfi_def_cfa_offset 8
 3553              	 .cfi_offset 7,-8
 3554              	 .cfi_offset 14,-4
 3555 0002 84B0     	 sub sp,sp,#16
 3556              	.LCFI244:
 3557              	 .cfi_def_cfa_offset 24
 3558 0004 00AF     	 add r7,sp,#0
 3559              	.LCFI245:
 3560              	 .cfi_def_cfa_register 7
 3561 0006 7860     	 str r0,[r7,#4]
1039:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
1040:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1041:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 3562              	 .loc 5 1041 0
 3563 0008 7B68     	 ldr r3,[r7,#4]
 3564 000a 9B68     	 ldr r3,[r3,#8]
 3565 000c FB60     	 str r3,[r7,#12]
1042:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1043:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->send_stop == true)
 3566              	 .loc 5 1043 0
 3567 000e FB68     	 ldr r3,[r7,#12]
 3568 0010 DB69     	 ldr r3,[r3,#28]
 3569 0012 012B     	 cmp r3,#1
 3570 0014 0FD1     	 bne .L176
1044:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1045:../Dave/Generated/I2C_MASTER/i2c_master.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY){}
 3571              	 .loc 5 1045 0
 3572 0016 00BF     	 nop
 3573              	.L177:
 3574              	 .loc 5 1045 0 is_stmt 0 discriminator 1
 3575 0018 7B68     	 ldr r3,[r7,#4]
 3576 001a 1B68     	 ldr r3,[r3]
 3577 001c 1846     	 mov r0,r3
 3578 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 3579 0022 0346     	 mov r3,r0
 3580 0024 802B     	 cmp r3,#128
 3581 0026 F7D0     	 beq .L177
1046:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1047:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->bus_acquired = false;
 3582              	 .loc 5 1047 0 is_stmt 1
 3583 0028 FB68     	 ldr r3,[r7,#12]
 3584 002a 0022     	 movs r2,#0
 3585 002c 83F82820 	 strb r2,[r3,#40]
1048:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1049:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_SendStop(handle);
 3586              	 .loc 5 1049 0
 3587 0030 7868     	 ldr r0,[r7,#4]
 3588 0032 FFF7FEFF 	 bl I2C_MASTER_SendStop
 3589              	.L176:
1050:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1051:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1052:../Dave/Generated/I2C_MASTER/i2c_master.c ****   while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY){}
 3590              	 .loc 5 1052 0
 3591 0036 00BF     	 nop
 3592              	.L178:
 3593              	 .loc 5 1052 0 is_stmt 0 discriminator 1
 3594 0038 7B68     	 ldr r3,[r7,#4]
 3595 003a 1B68     	 ldr r3,[r3]
 3596 003c 1846     	 mov r0,r3
 3597 003e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 3598 0042 0346     	 mov r3,r0
 3599 0044 802B     	 cmp r3,#128
 3600 0046 F7D0     	 beq .L178
1053:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1054:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Reception complete */
1055:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime->rx_busy = false;
 3601              	 .loc 5 1055 0 is_stmt 1
 3602 0048 FB68     	 ldr r3,[r7,#12]
 3603 004a 0022     	 movs r2,#0
 3604 004c 83F82720 	 strb r2,[r3,#39]
1056:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime->tx_busy = false;
 3605              	 .loc 5 1056 0
 3606 0050 FB68     	 ldr r3,[r7,#12]
 3607 0052 0022     	 movs r2,#0
 3608 0054 83F82620 	 strb r2,[r3,#38]
1057:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1058:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->rx_cbhandler != NULL)
 3609              	 .loc 5 1058 0
 3610 0058 7B68     	 ldr r3,[r7,#4]
 3611 005a 5B68     	 ldr r3,[r3,#4]
 3612 005c 5B69     	 ldr r3,[r3,#20]
 3613 005e 002B     	 cmp r3,#0
 3614 0060 03D0     	 beq .L175
1059:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1060:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Execute the 'End of reception' callback function*/
1061:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->rx_cbhandler();
 3615              	 .loc 5 1061 0
 3616 0062 7B68     	 ldr r3,[r7,#4]
 3617 0064 5B68     	 ldr r3,[r3,#4]
 3618 0066 5B69     	 ldr r3,[r3,#20]
 3619 0068 9847     	 blx r3
 3620              	.L175:
1062:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1063:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3621              	 .loc 5 1063 0
 3622 006a 1037     	 adds r7,r7,#16
 3623              	.LCFI246:
 3624              	 .cfi_def_cfa_offset 8
 3625 006c BD46     	 mov sp,r7
 3626              	.LCFI247:
 3627              	 .cfi_def_cfa_register 13
 3628              	 
 3629 006e 80BD     	 pop {r7,pc}
 3630              	 .cfi_endproc
 3631              	.LFE266:
 3633              	 .section .text.I2C_MASTER_lAbortReceiveIRQ,"ax",%progbits
 3634              	 .align 2
 3635              	 .thumb
 3636              	 .thumb_func
 3638              	I2C_MASTER_lAbortReceiveIRQ:
 3639              	.LFB267:
1064:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1065:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1066:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortReceiveIRQ(const I2C_MASTER_t *const handle)
1067:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3640              	 .loc 5 1067 0
 3641              	 .cfi_startproc
 3642              	 
 3643              	 
 3644 0000 80B5     	 push {r7,lr}
 3645              	.LCFI248:
 3646              	 .cfi_def_cfa_offset 8
 3647              	 .cfi_offset 7,-8
 3648              	 .cfi_offset 14,-4
 3649 0002 82B0     	 sub sp,sp,#8
 3650              	.LCFI249:
 3651              	 .cfi_def_cfa_offset 16
 3652 0004 00AF     	 add r7,sp,#0
 3653              	.LCFI250:
 3654              	 .cfi_def_cfa_register 7
 3655 0006 7860     	 str r0,[r7,#4]
1068:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Reset the user buffer pointer to null */
1069:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->rx_busy = false;
 3656              	 .loc 5 1069 0
 3657 0008 7B68     	 ldr r3,[r7,#4]
 3658 000a 9B68     	 ldr r3,[r3,#8]
 3659 000c 0022     	 movs r2,#0
 3660 000e 83F82720 	 strb r2,[r3,#39]
1070:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_busy = false;
 3661              	 .loc 5 1070 0
 3662 0012 7B68     	 ldr r3,[r7,#4]
 3663 0014 9B68     	 ldr r3,[r3,#8]
 3664 0016 0022     	 movs r2,#0
 3665 0018 83F82620 	 strb r2,[r3,#38]
1071:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->rx_data = NULL;
 3666              	 .loc 5 1071 0
 3667 001c 7B68     	 ldr r3,[r7,#4]
 3668 001e 9B68     	 ldr r3,[r3,#8]
 3669 0020 0022     	 movs r2,#0
 3670 0022 5A60     	 str r2,[r3,#4]
1072:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1073:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->bus_acquired = false;
 3671              	 .loc 5 1073 0
 3672 0024 7B68     	 ldr r3,[r7,#4]
 3673 0026 9B68     	 ldr r3,[r3,#8]
 3674 0028 0022     	 movs r2,#0
 3675 002a 83F82820 	 strb r2,[r3,#40]
1074:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1075:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Disable the receive interrupts */
1076:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->rxFIFO_size != XMC_USIC_CH_FIFO_DISABLED)
 3676              	 .loc 5 1076 0
 3677 002e 7B68     	 ldr r3,[r7,#4]
 3678 0030 5B68     	 ldr r3,[r3,#4]
 3679 0032 93F82730 	 ldrb r3,[r3,#39]
 3680 0036 002B     	 cmp r3,#0
 3681 0038 07D0     	 beq .L181
1077:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1078:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_
 3682              	 .loc 5 1078 0
 3683 003a 7B68     	 ldr r3,[r7,#4]
 3684 003c 1B68     	 ldr r3,[r3]
 3685 003e 1846     	 mov r0,r3
 3686 0040 4FF0C041 	 mov r1,#1610612736
 3687 0044 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_DisableEvent
 3688 0048 06E0     	 b .L182
 3689              	.L181:
1079:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                     (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNA
1080:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1081:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1082:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1083:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEI
 3690              	 .loc 5 1083 0
 3691 004a 7B68     	 ldr r3,[r7,#4]
 3692 004c 1B68     	 ldr r3,[r3]
 3693 004e 1846     	 mov r0,r3
 3694 0050 4FF44041 	 mov r1,#49152
 3695 0054 FFF7FEFF 	 bl XMC_USIC_CH_DisableEvent
 3696              	.L182:
1084:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                  (uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE));
1085:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1086:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_DisableEvent((I2C_MASTER_t *)handle,((uint32_t)XMC_I2C_CH_EVENT_ACK ));
 3697              	 .loc 5 1086 0
 3698 0058 7868     	 ldr r0,[r7,#4]
 3699 005a 4FF08041 	 mov r1,#1073741824
 3700 005e FFF7FEFF 	 bl I2C_MASTER_DisableEvent
1087:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3701              	 .loc 5 1087 0
 3702 0062 0837     	 adds r7,r7,#8
 3703              	.LCFI251:
 3704              	 .cfi_def_cfa_offset 8
 3705 0064 BD46     	 mov sp,r7
 3706              	.LCFI252:
 3707              	 .cfi_def_cfa_register 13
 3708              	 
 3709 0066 80BD     	 pop {r7,pc}
 3710              	 .cfi_endproc
 3711              	.LFE267:
 3713              	 .section .text.I2C_MASTER_ProtocolHandler,"ax",%progbits
 3714              	 .align 2
 3715              	 .global I2C_MASTER_ProtocolHandler
 3716              	 .thumb
 3717              	 .thumb_func
 3719              	I2C_MASTER_ProtocolHandler:
 3720              	.LFB268:
1088:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1089:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1090:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
1091:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Protocol interrupt handling function.
1092:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * The function is common for different instances of the I2C_MASTER APP.
1093:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1094:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  handle I2C_MASTER APP handle pointer of type I2C_MASTER_t*
1095:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1096:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return void
1097:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
1098:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ProtocolHandler(I2C_MASTER_t * const handle)
1099:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3721              	 .loc 5 1099 0
 3722              	 .cfi_startproc
 3723              	 
 3724              	 
 3725 0000 80B5     	 push {r7,lr}
 3726              	.LCFI253:
 3727              	 .cfi_def_cfa_offset 8
 3728              	 .cfi_offset 7,-8
 3729              	 .cfi_offset 14,-4
 3730 0002 84B0     	 sub sp,sp,#16
 3731              	.LCFI254:
 3732              	 .cfi_def_cfa_offset 24
 3733 0004 00AF     	 add r7,sp,#0
 3734              	.LCFI255:
 3735              	 .cfi_def_cfa_register 7
 3736 0006 7860     	 str r0,[r7,#4]
1100:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t psr_status;
1101:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1102:../Dave/Generated/I2C_MASTER/i2c_master.c ****   psr_status = XMC_I2C_CH_GetStatusFlag(handle->channel);
 3737              	 .loc 5 1102 0
 3738 0008 7B68     	 ldr r3,[r7,#4]
 3739 000a 1B68     	 ldr r3,[r3]
 3740 000c 1846     	 mov r0,r3
 3741 000e FFF7FEFF 	 bl XMC_I2C_CH_GetStatusFlag
 3742 0012 F860     	 str r0,[r7,#12]
1103:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1104:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Check for nack event */
1105:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->nack_cbhandler != NULL) && (psr_status & (uint32_t)XMC_I2C_CH_STATUS_FLAG_NA
 3743              	 .loc 5 1105 0
 3744 0014 7B68     	 ldr r3,[r7,#4]
 3745 0016 5B68     	 ldr r3,[r3,#4]
 3746 0018 9B69     	 ldr r3,[r3,#24]
 3747 001a 002B     	 cmp r3,#0
 3748 001c 0CD0     	 beq .L184
 3749              	 .loc 5 1105 0 is_stmt 0 discriminator 1
 3750 001e FB68     	 ldr r3,[r7,#12]
 3751 0020 03F02003 	 and r3,r3,#32
 3752 0024 002B     	 cmp r3,#0
 3753 0026 07D0     	 beq .L184
1106:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1107:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ClearFlag(handle,(uint32_t)XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED);
 3754              	 .loc 5 1107 0 is_stmt 1
 3755 0028 7868     	 ldr r0,[r7,#4]
 3756 002a 2021     	 movs r1,#32
 3757 002c FFF7FEFF 	 bl I2C_MASTER_ClearFlag
1108:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->nack_cbhandler();
 3758              	 .loc 5 1108 0
 3759 0030 7B68     	 ldr r3,[r7,#4]
 3760 0032 5B68     	 ldr r3,[r3,#4]
 3761 0034 9B69     	 ldr r3,[r3,#24]
 3762 0036 9847     	 blx r3
 3763              	.L184:
1109:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1110:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1111:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Check for arbitration lost */
1112:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->arbitration_cbhandler != NULL) && (psr_status & (uint32_t)XMC_I2C_CH_STATUS_
 3764              	 .loc 5 1112 0
 3765 0038 7B68     	 ldr r3,[r7,#4]
 3766 003a 5B68     	 ldr r3,[r3,#4]
 3767 003c DB69     	 ldr r3,[r3,#28]
 3768 003e 002B     	 cmp r3,#0
 3769 0040 0CD0     	 beq .L185
 3770              	 .loc 5 1112 0 is_stmt 0 discriminator 1
 3771 0042 FB68     	 ldr r3,[r7,#12]
 3772 0044 03F04003 	 and r3,r3,#64
 3773 0048 002B     	 cmp r3,#0
 3774 004a 07D0     	 beq .L185
1113:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1114:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ClearFlag(handle,(uint32_t)XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST);
 3775              	 .loc 5 1114 0 is_stmt 1
 3776 004c 7868     	 ldr r0,[r7,#4]
 3777 004e 4021     	 movs r1,#64
 3778 0050 FFF7FEFF 	 bl I2C_MASTER_ClearFlag
1115:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->arbitration_cbhandler();
 3779              	 .loc 5 1115 0
 3780 0054 7B68     	 ldr r3,[r7,#4]
 3781 0056 5B68     	 ldr r3,[r3,#4]
 3782 0058 DB69     	 ldr r3,[r3,#28]
 3783 005a 9847     	 blx r3
 3784              	.L185:
1116:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1117:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1118:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Check for error detected */
1119:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->error_cbhandler != NULL) && (psr_status & ((uint32_t)XMC_I2C_CH_STATUS_FLAG_
 3785              	 .loc 5 1119 0
 3786 005c 7B68     	 ldr r3,[r7,#4]
 3787 005e 5B68     	 ldr r3,[r3,#4]
 3788 0060 1B6A     	 ldr r3,[r3,#32]
 3789 0062 002B     	 cmp r3,#0
 3790 0064 0DD0     	 beq .L183
 3791              	 .loc 5 1119 0 is_stmt 0 discriminator 1
 3792 0066 FB68     	 ldr r3,[r7,#12]
 3793 0068 03F48173 	 and r3,r3,#258
 3794 006c 002B     	 cmp r3,#0
 3795 006e 08D0     	 beq .L183
1120:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1121:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ClearFlag(handle,(uint32_t)XMC_I2C_CH_STATUS_FLAG_ERROR);
 3796              	 .loc 5 1121 0 is_stmt 1
 3797 0070 7868     	 ldr r0,[r7,#4]
 3798 0072 4FF48071 	 mov r1,#256
 3799 0076 FFF7FEFF 	 bl I2C_MASTER_ClearFlag
1122:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->error_cbhandler();
 3800              	 .loc 5 1122 0
 3801 007a 7B68     	 ldr r3,[r7,#4]
 3802 007c 5B68     	 ldr r3,[r3,#4]
 3803 007e 1B6A     	 ldr r3,[r3,#32]
 3804 0080 9847     	 blx r3
 3805              	.L183:
1123:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1124:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3806              	 .loc 5 1124 0
 3807 0082 1037     	 adds r7,r7,#16
 3808              	.LCFI256:
 3809              	 .cfi_def_cfa_offset 8
 3810 0084 BD46     	 mov sp,r7
 3811              	.LCFI257:
 3812              	 .cfi_def_cfa_register 13
 3813              	 
 3814 0086 80BD     	 pop {r7,pc}
 3815              	 .cfi_endproc
 3816              	.LFE268:
 3818              	 .section .text.I2C_MASTER_lReconfigureRxFIFO,"ax",%progbits
 3819              	 .align 2
 3820              	 .thumb
 3821              	 .thumb_func
 3823              	I2C_MASTER_lReconfigureRxFIFO:
 3824              	.LFB269:
1125:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1126:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
1127:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
1128:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief A local function to reconfigure Receive FIFO with the given size and trigger limit.
1129:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Size is needed because the FIFO should be disabled before changing the trigger limit by
1130:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * clearing the FIFO size.
1131:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1132:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param I2C_MASTER_t * pointer to the I2C_MASTER APP handle
1133:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param uint32_t  number of bytes to be received.
1134:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1135:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return void.
1136:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
1137:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1138:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReconfigureRxFIFO(const I2C_MASTER_t * const handle, uint32_t data_size)
1139:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3825              	 .loc 5 1139 0
 3826              	 .cfi_startproc
 3827              	 
 3828              	 
 3829 0000 80B5     	 push {r7,lr}
 3830              	.LCFI258:
 3831              	 .cfi_def_cfa_offset 8
 3832              	 .cfi_offset 7,-8
 3833              	 .cfi_offset 14,-4
 3834 0002 86B0     	 sub sp,sp,#24
 3835              	.LCFI259:
 3836              	 .cfi_def_cfa_offset 32
 3837 0004 00AF     	 add r7,sp,#0
 3838              	.LCFI260:
 3839              	 .cfi_def_cfa_register 7
 3840 0006 7860     	 str r0,[r7,#4]
 3841 0008 3960     	 str r1,[r7]
1140:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t minfifo_value;
1141:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t tx_fifo_size;
1142:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t rx_fifo_size;
1143:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_limit;
1144:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1145:../Dave/Generated/I2C_MASTER/i2c_master.c ****   rx_fifo_size = (uint8_t)((uint8_t)1 << handle->config->rxFIFO_size);
 3842              	 .loc 5 1145 0
 3843 000a 7B68     	 ldr r3,[r7,#4]
 3844 000c 5B68     	 ldr r3,[r3,#4]
 3845 000e 93F82730 	 ldrb r3,[r3,#39]
 3846 0012 1A46     	 mov r2,r3
 3847 0014 0123     	 movs r3,#1
 3848 0016 9340     	 lsls r3,r3,r2
 3849 0018 BB75     	 strb r3,[r7,#22]
1146:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1147:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->txFIFO_size > 0))
 3850              	 .loc 5 1147 0
 3851 001a 7B68     	 ldr r3,[r7,#4]
 3852 001c 5B68     	 ldr r3,[r3,#4]
 3853 001e 93F82630 	 ldrb r3,[r3,#38]
 3854 0022 002B     	 cmp r3,#0
 3855 0024 08D0     	 beq .L188
1148:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1149:../Dave/Generated/I2C_MASTER/i2c_master.c ****     tx_fifo_size = (uint8_t)((uint8_t)1 << handle->config->txFIFO_size);
 3856              	 .loc 5 1149 0
 3857 0026 7B68     	 ldr r3,[r7,#4]
 3858 0028 5B68     	 ldr r3,[r3,#4]
 3859 002a 93F82630 	 ldrb r3,[r3,#38]
 3860 002e 1A46     	 mov r2,r3
 3861 0030 0123     	 movs r3,#1
 3862 0032 9340     	 lsls r3,r3,r2
 3863 0034 FB75     	 strb r3,[r7,#23]
 3864 0036 01E0     	 b .L189
 3865              	.L188:
1150:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1151:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1152:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1153:../Dave/Generated/I2C_MASTER/i2c_master.c ****     tx_fifo_size = 1U;
 3866              	 .loc 5 1153 0
 3867 0038 0123     	 movs r3,#1
 3868 003a FB75     	 strb r3,[r7,#23]
 3869              	.L189:
1154:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1155:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1156:../Dave/Generated/I2C_MASTER/i2c_master.c ****   minfifo_value = (uint32_t)(calculate_minfifosize((uint32_t)tx_fifo_size, (uint32_t)rx_fifo_size))
 3870              	 .loc 5 1156 0
 3871 003c FA7D     	 ldrb r2,[r7,#23]
 3872 003e BB7D     	 ldrb r3,[r7,#22]
 3873 0040 1046     	 mov r0,r2
 3874 0042 1946     	 mov r1,r3
 3875 0044 FFF7FEFF 	 bl calculate_minfifosize
 3876 0048 3861     	 str r0,[r7,#16]
1157:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1158:../Dave/Generated/I2C_MASTER/i2c_master.c ****   fifo_limit = (uint8_t)(calculate_minfifosize(data_size, minfifo_value));
 3877              	 .loc 5 1158 0
 3878 004a 3868     	 ldr r0,[r7]
 3879 004c 3969     	 ldr r1,[r7,#16]
 3880 004e FFF7FEFF 	 bl calculate_minfifosize
 3881 0052 0346     	 mov r3,r0
 3882 0054 FB73     	 strb r3,[r7,#15]
1159:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1160:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Set the limit value */
1161:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_SetRXFIFOTriggerLimit((I2C_MASTER_t *)handle, handle->config->rxFIFO_size, ((uint32_t)
 3883              	 .loc 5 1161 0
 3884 0056 7B68     	 ldr r3,[r7,#4]
 3885 0058 5B68     	 ldr r3,[r3,#4]
 3886 005a 93F82730 	 ldrb r3,[r3,#39]
 3887 005e 1A46     	 mov r2,r3
 3888 0060 FB7B     	 ldrb r3,[r7,#15]
 3889 0062 013B     	 subs r3,r3,#1
 3890 0064 7868     	 ldr r0,[r7,#4]
 3891 0066 1146     	 mov r1,r2
 3892 0068 1A46     	 mov r2,r3
 3893 006a FFF7FEFF 	 bl I2C_MASTER_SetRXFIFOTriggerLimit
1162:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3894              	 .loc 5 1162 0
 3895 006e 1837     	 adds r7,r7,#24
 3896              	.LCFI261:
 3897              	 .cfi_def_cfa_offset 8
 3898 0070 BD46     	 mov sp,r7
 3899              	.LCFI262:
 3900              	 .cfi_def_cfa_register 13
 3901              	 
 3902 0072 80BD     	 pop {r7,pc}
 3903              	 .cfi_endproc
 3904              	.LFE269:
 3906              	 .section .text.I2C_MASTER_AbortTransmit,"ax",%progbits
 3907              	 .align 2
 3908              	 .global I2C_MASTER_AbortTransmit
 3909              	 .thumb
 3910              	 .thumb_func
 3912              	I2C_MASTER_AbortTransmit:
 3913              	.LFB270:
1163:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1164:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1165:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
1166:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief Aborts the ongoing data transmission.
1167:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param I2C_MASTER_t*  I2C_MASTER APP handle pointer of type I2C_MASTER_t
1168:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return I2C_MASTER_STATUS_t
1169:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1170:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Details of function:
1171:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * If there is a transmission in progress, it will be stopped. If transmit FIFO is used,
1172:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * the existing data will be flushed. After the transmission is stopped, user can start
1173:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * a new transmission without delay.
1174:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
1175:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle)
1176:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3914              	 .loc 5 1176 0
 3915              	 .cfi_startproc
 3916              	 
 3917              	 
 3918 0000 80B5     	 push {r7,lr}
 3919              	.LCFI263:
 3920              	 .cfi_def_cfa_offset 8
 3921              	 .cfi_offset 7,-8
 3922              	 .cfi_offset 14,-4
 3923 0002 84B0     	 sub sp,sp,#16
 3924              	.LCFI264:
 3925              	 .cfi_def_cfa_offset 24
 3926 0004 00AF     	 add r7,sp,#0
 3927              	.LCFI265:
 3928              	 .cfi_def_cfa_register 7
 3929 0006 7860     	 str r0,[r7,#4]
1177:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
1178:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1179:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_SUCCESS;
 3930              	 .loc 5 1179 0
 3931 0008 0023     	 movs r3,#0
 3932 000a FB73     	 strb r3,[r7,#15]
1180:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1181:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 3933              	 .loc 5 1181 0
 3934 000c 7B68     	 ldr r3,[r7,#4]
 3935 000e 5B68     	 ldr r3,[r3,#4]
 3936 0010 93F82430 	 ldrb r3,[r3,#36]
 3937 0014 002B     	 cmp r3,#0
 3938 0016 03D1     	 bne .L191
1182:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1183:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
1184:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_AbortTransmitIRQ(handle);
 3939              	 .loc 5 1184 0
 3940 0018 7868     	 ldr r0,[r7,#4]
 3941 001a FFF7FEFF 	 bl I2C_MASTER_AbortTransmitIRQ
 3942 001e 07E0     	 b .L192
 3943              	.L191:
1185:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1186:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1187:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 3944              	 .loc 5 1187 0
 3945 0020 7B68     	 ldr r3,[r7,#4]
 3946 0022 5B68     	 ldr r3,[r3,#4]
 3947 0024 93F82430 	 ldrb r3,[r3,#36]
 3948 0028 012B     	 cmp r3,#1
 3949 002a 01D0     	 beq .L192
1188:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1189:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
1190:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lAbortTransmitDMA(handle);
1191:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1192:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1193:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1194:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1195:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
 3950              	 .loc 5 1195 0
 3951 002c 0123     	 movs r3,#1
 3952 002e FB73     	 strb r3,[r7,#15]
 3953              	.L192:
1196:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1197:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->channel->PSCR |= USIC_CH_PSR_IICMode_WTDF_Msk; /*clear WDTF*/
 3954              	 .loc 5 1197 0
 3955 0030 7B68     	 ldr r3,[r7,#4]
 3956 0032 1B68     	 ldr r3,[r3]
 3957 0034 7A68     	 ldr r2,[r7,#4]
 3958 0036 1268     	 ldr r2,[r2]
 3959 0038 D26C     	 ldr r2,[r2,#76]
 3960 003a 42F00202 	 orr r2,r2,#2
 3961 003e DA64     	 str r2,[r3,#76]
1198:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->channel->FMR = 0x00000002U;/*clear TDV*/
 3962              	 .loc 5 1198 0
 3963 0040 7B68     	 ldr r3,[r7,#4]
 3964 0042 1B68     	 ldr r3,[r3]
 3965 0044 0222     	 movs r2,#2
 3966 0046 9A66     	 str r2,[r3,#104]
1199:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1200:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 3967              	 .loc 5 1200 0
 3968 0048 FB7B     	 ldrb r3,[r7,#15]
1201:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 3969              	 .loc 5 1201 0
 3970 004a 1846     	 mov r0,r3
 3971 004c 1037     	 adds r7,r7,#16
 3972              	.LCFI266:
 3973              	 .cfi_def_cfa_offset 8
 3974 004e BD46     	 mov sp,r7
 3975              	.LCFI267:
 3976              	 .cfi_def_cfa_register 13
 3977              	 
 3978 0050 80BD     	 pop {r7,pc}
 3979              	 .cfi_endproc
 3980              	.LFE270:
 3982 0052 00BF     	 .section .text.I2C_MASTER_AbortReceive,"ax",%progbits
 3983              	 .align 2
 3984              	 .global I2C_MASTER_AbortReceive
 3985              	 .thumb
 3986              	 .thumb_func
 3988              	I2C_MASTER_AbortReceive:
 3989              	.LFB271:
1202:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1203:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
1204:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief Aborts the ongoing data reception.
1205:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param I2C_MASTER_t* I2C_MASTER APP handle pointer of type I2C_MASTER_t
1206:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return I2C_MASTER_STATUS_t
1207:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1208:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Details of function:
1209:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * If a reception is in progress, it will be stopped. When a reception request
1210:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * is active, user will not be able to place a new receive request till the active
1211:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * reception is complete. This API can stop the progressing reception to make
1212:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * a new receive request.
1213:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
1214:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle)
1215:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 3990              	 .loc 5 1215 0
 3991              	 .cfi_startproc
 3992              	 
 3993              	 
 3994 0000 80B5     	 push {r7,lr}
 3995              	.LCFI268:
 3996              	 .cfi_def_cfa_offset 8
 3997              	 .cfi_offset 7,-8
 3998              	 .cfi_offset 14,-4
 3999 0002 84B0     	 sub sp,sp,#16
 4000              	.LCFI269:
 4001              	 .cfi_def_cfa_offset 24
 4002 0004 00AF     	 add r7,sp,#0
 4003              	.LCFI270:
 4004              	 .cfi_def_cfa_register 7
 4005 0006 7860     	 str r0,[r7,#4]
1216:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
1217:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1218:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_SUCCESS;
 4006              	 .loc 5 1218 0
 4007 0008 0023     	 movs r3,#0
 4008 000a FB73     	 strb r3,[r7,#15]
1219:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1220:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 4009              	 .loc 5 1220 0
 4010 000c 7B68     	 ldr r3,[r7,#4]
 4011 000e 5B68     	 ldr r3,[r3,#4]
 4012 0010 93F82530 	 ldrb r3,[r3,#37]
 4013 0014 002B     	 cmp r3,#0
 4014 0016 03D1     	 bne .L195
1221:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1222:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
1223:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lAbortReceiveIRQ(handle);
 4015              	 .loc 5 1223 0
 4016 0018 7868     	 ldr r0,[r7,#4]
 4017 001a FFF7FEFF 	 bl I2C_MASTER_lAbortReceiveIRQ
 4018 001e 07E0     	 b .L196
 4019              	.L195:
1224:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1225:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1226:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 4020              	 .loc 5 1226 0
 4021 0020 7B68     	 ldr r3,[r7,#4]
 4022 0022 5B68     	 ldr r3,[r3,#4]
 4023 0024 93F82530 	 ldrb r3,[r3,#37]
 4024 0028 012B     	 cmp r3,#1
 4025 002a 01D0     	 beq .L196
1227:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1228:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
1229:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lAbortReceiveDMA(handle);
1230:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1231:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1232:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1233:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1234:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
 4026              	 .loc 5 1234 0
 4027 002c 0123     	 movs r3,#1
 4028 002e FB73     	 strb r3,[r7,#15]
 4029              	.L196:
1235:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1236:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1237:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 4030              	 .loc 5 1237 0
 4031 0030 FB7B     	 ldrb r3,[r7,#15]
1238:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 4032              	 .loc 5 1238 0
 4033 0032 1846     	 mov r0,r3
 4034 0034 1037     	 adds r7,r7,#16
 4035              	.LCFI271:
 4036              	 .cfi_def_cfa_offset 8
 4037 0036 BD46     	 mov sp,r7
 4038              	.LCFI272:
 4039              	 .cfi_def_cfa_register 13
 4040              	 
 4041 0038 80BD     	 pop {r7,pc}
 4042              	 .cfi_endproc
 4043              	.LFE271:
 4045 003a 00BF     	 .text
 4046              	.Letext0:
 4047              	 .file 6 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4048              	 .file 7 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4049              	 .file 8 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 4050              	 .file 9 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/DAVE_Common.h"
 4051              	 .file 10 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 i2c_master.c
    {standard input}:20     .text.__NVIC_ClearPendingIRQ:00000000 $t
    {standard input}:24     .text.__NVIC_ClearPendingIRQ:00000000 __NVIC_ClearPendingIRQ
    {standard input}:75     .text.__NVIC_ClearPendingIRQ:00000038 $d
    {standard input}:80     .text.XMC_USIC_CH_EnableEvent:00000000 $t
    {standard input}:84     .text.XMC_USIC_CH_EnableEvent:00000000 XMC_USIC_CH_EnableEvent
    {standard input}:128    .text.XMC_USIC_CH_DisableEvent:00000000 $t
    {standard input}:132    .text.XMC_USIC_CH_DisableEvent:00000000 XMC_USIC_CH_DisableEvent
    {standard input}:176    .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:180    .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:222    .text.XMC_USIC_CH_TriggerServiceRequest:00000000 $t
    {standard input}:226    .text.XMC_USIC_CH_TriggerServiceRequest:00000000 XMC_USIC_CH_TriggerServiceRequest
    {standard input}:268    .text.XMC_USIC_CH_TXFIFO_EnableEvent:00000000 $t
    {standard input}:272    .text.XMC_USIC_CH_TXFIFO_EnableEvent:00000000 XMC_USIC_CH_TXFIFO_EnableEvent
    {standard input}:315    .text.XMC_USIC_CH_TXFIFO_DisableEvent:00000000 $t
    {standard input}:319    .text.XMC_USIC_CH_TXFIFO_DisableEvent:00000000 XMC_USIC_CH_TXFIFO_DisableEvent
    {standard input}:363    .text.XMC_USIC_CH_TXFIFO_Flush:00000000 $t
    {standard input}:367    .text.XMC_USIC_CH_TXFIFO_Flush:00000000 XMC_USIC_CH_TXFIFO_Flush
    {standard input}:406    .text.XMC_USIC_CH_TXFIFO_IsFull:00000000 $t
    {standard input}:410    .text.XMC_USIC_CH_TXFIFO_IsFull:00000000 XMC_USIC_CH_TXFIFO_IsFull
    {standard input}:455    .text.XMC_USIC_CH_TXFIFO_IsEmpty:00000000 $t
    {standard input}:459    .text.XMC_USIC_CH_TXFIFO_IsEmpty:00000000 XMC_USIC_CH_TXFIFO_IsEmpty
    {standard input}:504    .text.XMC_USIC_CH_RXFIFO_EnableEvent:00000000 $t
    {standard input}:508    .text.XMC_USIC_CH_RXFIFO_EnableEvent:00000000 XMC_USIC_CH_RXFIFO_EnableEvent
    {standard input}:551    .text.XMC_USIC_CH_RXFIFO_DisableEvent:00000000 $t
    {standard input}:555    .text.XMC_USIC_CH_RXFIFO_DisableEvent:00000000 XMC_USIC_CH_RXFIFO_DisableEvent
    {standard input}:599    .text.XMC_USIC_CH_RXFIFO_Flush:00000000 $t
    {standard input}:603    .text.XMC_USIC_CH_RXFIFO_Flush:00000000 XMC_USIC_CH_RXFIFO_Flush
    {standard input}:642    .text.XMC_USIC_CH_RXFIFO_IsEmpty:00000000 $t
    {standard input}:646    .text.XMC_USIC_CH_RXFIFO_IsEmpty:00000000 XMC_USIC_CH_RXFIFO_IsEmpty
    {standard input}:691    .text.XMC_I2C_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:695    .text.XMC_I2C_CH_SetInterruptNodePointer:00000000 XMC_I2C_CH_SetInterruptNodePointer
    {standard input}:735    .text.XMC_I2C_CH_GetStatusFlag:00000000 $t
    {standard input}:739    .text.XMC_I2C_CH_GetStatusFlag:00000000 XMC_I2C_CH_GetStatusFlag
    {standard input}:778    .text.XMC_I2C_CH_ClearStatusFlag:00000000 $t
    {standard input}:782    .text.XMC_I2C_CH_ClearStatusFlag:00000000 XMC_I2C_CH_ClearStatusFlag
    {standard input}:825    .text.I2C_MASTER_SetRXFIFOTriggerLimit:00000000 $t
    {standard input}:829    .text.I2C_MASTER_SetRXFIFOTriggerLimit:00000000 I2C_MASTER_SetRXFIFOTriggerLimit
    {standard input}:872    .text.I2C_MASTER_IsTXFIFOFull:00000000 $t
    {standard input}:876    .text.I2C_MASTER_IsTXFIFOFull:00000000 I2C_MASTER_IsTXFIFOFull
    {standard input}:914    .text.I2C_MASTER_IsRXFIFOEmpty:00000000 $t
    {standard input}:918    .text.I2C_MASTER_IsRXFIFOEmpty:00000000 I2C_MASTER_IsRXFIFOEmpty
    {standard input}:956    .text.I2C_MASTER_GetReceivedByte:00000000 $t
    {standard input}:960    .text.I2C_MASTER_GetReceivedByte:00000000 I2C_MASTER_GetReceivedByte
    {standard input}:998    .text.I2C_MASTER_TransmitByte:00000000 $t
    {standard input}:1002   .text.I2C_MASTER_TransmitByte:00000000 I2C_MASTER_TransmitByte
    {standard input}:1042   .text.I2C_MASTER_EnableEvent:00000000 $t
    {standard input}:1046   .text.I2C_MASTER_EnableEvent:00000000 I2C_MASTER_EnableEvent
    {standard input}:1084   .text.I2C_MASTER_DisableEvent:00000000 $t
    {standard input}:1088   .text.I2C_MASTER_DisableEvent:00000000 I2C_MASTER_DisableEvent
    {standard input}:1126   .text.I2C_MASTER_ReceiveACK:00000000 $t
    {standard input}:1130   .text.I2C_MASTER_ReceiveACK:00000000 I2C_MASTER_ReceiveACK
    {standard input}:1166   .text.I2C_MASTER_ReceiveNACK:00000000 $t
    {standard input}:1170   .text.I2C_MASTER_ReceiveNACK:00000000 I2C_MASTER_ReceiveNACK
    {standard input}:1206   .text.I2C_MASTER_SendStop:00000000 $t
    {standard input}:1210   .text.I2C_MASTER_SendStop:00000000 I2C_MASTER_SendStop
    {standard input}:1252   .text.I2C_MASTER_SendStart:00000000 $t
    {standard input}:1256   .text.I2C_MASTER_SendStart:00000000 I2C_MASTER_SendStart
    {standard input}:1306   .text.I2C_MASTER_SendRepeatedStart:00000000 $t
    {standard input}:1310   .text.I2C_MASTER_SendRepeatedStart:00000000 I2C_MASTER_SendRepeatedStart
    {standard input}:1360   .text.calculate_minfifosize:00000000 $t
    {standard input}:1364   .text.calculate_minfifosize:00000000 calculate_minfifosize
    {standard input}:1418   .text.I2C_MASTER_GetAppVersion:00000000 $t
    {standard input}:1423   .text.I2C_MASTER_GetAppVersion:00000000 I2C_MASTER_GetAppVersion
    {standard input}:1483   .text.I2C_MASTER_Init:00000000 $t
    {standard input}:1488   .text.I2C_MASTER_Init:00000000 I2C_MASTER_Init
    {standard input}:1540   .text.I2C_MASTER_GetFlagStatus:00000000 $t
    {standard input}:1545   .text.I2C_MASTER_GetFlagStatus:00000000 I2C_MASTER_GetFlagStatus
    {standard input}:1588   .text.I2C_MASTER_ClearFlag:00000000 $t
    {standard input}:1593   .text.I2C_MASTER_ClearFlag:00000000 I2C_MASTER_ClearFlag
    {standard input}:1631   .text.I2C_MASTER_Transmit:00000000 $t
    {standard input}:1636   .text.I2C_MASTER_Transmit:00000000 I2C_MASTER_Transmit
    {standard input}:2803   .text.I2C_MASTER_StartTransmitIRQ:00000000 I2C_MASTER_StartTransmitIRQ
    {standard input}:1697   .text.I2C_MASTER_TransmitHandler:00000000 $t
    {standard input}:1702   .text.I2C_MASTER_TransmitHandler:00000000 I2C_MASTER_TransmitHandler
    {standard input}:3719   .text.I2C_MASTER_ProtocolHandler:00000000 I2C_MASTER_ProtocolHandler
    {standard input}:2060   .text.I2C_MASTER_lSendStop_JumpTo_TxCallback:00000000 I2C_MASTER_lSendStop_JumpTo_TxCallback
    {standard input}:2056   .text.I2C_MASTER_lSendStop_JumpTo_TxCallback:00000000 $t
    {standard input}:2139   .text.I2C_MASTER_Receive:00000000 $t
    {standard input}:2144   .text.I2C_MASTER_Receive:00000000 I2C_MASTER_Receive
    {standard input}:3023   .text.I2C_MASTER_StartReceiveIRQ:00000000 I2C_MASTER_StartReceiveIRQ
    {standard input}:2207   .text.I2C_MASTER_lReceive_FIFOData:00000000 $t
    {standard input}:2211   .text.I2C_MASTER_lReceive_FIFOData:00000000 I2C_MASTER_lReceive_FIFOData
    {standard input}:3823   .text.I2C_MASTER_lReconfigureRxFIFO:00000000 I2C_MASTER_lReconfigureRxFIFO
    {standard input}:2731   .text.I2C_MASTER_lSendStart_Or_RepeatedStart:00000000 I2C_MASTER_lSendStart_Or_RepeatedStart
    {standard input}:2506   .text.I2C_MASTER_lReceive_StdData:00000000 $t
    {standard input}:2510   .text.I2C_MASTER_lReceive_StdData:00000000 I2C_MASTER_lReceive_StdData
    {standard input}:2727   .text.I2C_MASTER_lSendStart_Or_RepeatedStart:00000000 $t
    {standard input}:2798   .text.I2C_MASTER_StartTransmitIRQ:00000000 $t
    {standard input}:2946   .text.I2C_MASTER_AbortTransmitIRQ:00000000 $t
    {standard input}:2950   .text.I2C_MASTER_AbortTransmitIRQ:00000000 I2C_MASTER_AbortTransmitIRQ
    {standard input}:3018   .text.I2C_MASTER_StartReceiveIRQ:00000000 $t
    {standard input}:3180   .text.I2C_MASTER_ReceiveHandler:00000000 $t
    {standard input}:3185   .text.I2C_MASTER_ReceiveHandler:00000000 I2C_MASTER_ReceiveHandler
    {standard input}:3544   .text.I2C_MASTER_lSendStop_JumpTo_RxCallback:00000000 I2C_MASTER_lSendStop_JumpTo_RxCallback
    {standard input}:3540   .text.I2C_MASTER_lSendStop_JumpTo_RxCallback:00000000 $t
    {standard input}:3634   .text.I2C_MASTER_lAbortReceiveIRQ:00000000 $t
    {standard input}:3638   .text.I2C_MASTER_lAbortReceiveIRQ:00000000 I2C_MASTER_lAbortReceiveIRQ
    {standard input}:3714   .text.I2C_MASTER_ProtocolHandler:00000000 $t
    {standard input}:3819   .text.I2C_MASTER_lReconfigureRxFIFO:00000000 $t
    {standard input}:3907   .text.I2C_MASTER_AbortTransmit:00000000 $t
    {standard input}:3912   .text.I2C_MASTER_AbortTransmit:00000000 I2C_MASTER_AbortTransmit
    {standard input}:3983   .text.I2C_MASTER_AbortReceive:00000000 $t
    {standard input}:3988   .text.I2C_MASTER_AbortReceive:00000000 I2C_MASTER_AbortReceive
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_SetInterruptNodePointer
XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
XMC_I2C_CH_GetReceivedData
XMC_I2C_CH_MasterTransmit
XMC_I2C_CH_EnableEvent
XMC_I2C_CH_DisableEvent
XMC_I2C_CH_MasterReceiveAck
XMC_I2C_CH_MasterReceiveNack
XMC_I2C_CH_MasterStop
XMC_I2C_CH_MasterStart
XMC_I2C_CH_MasterRepeatedStart
