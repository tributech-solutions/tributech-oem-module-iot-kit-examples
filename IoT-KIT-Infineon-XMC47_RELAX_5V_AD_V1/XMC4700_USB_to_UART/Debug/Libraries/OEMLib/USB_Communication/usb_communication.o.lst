   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "usb_communication.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm usb_received_message,4,4
  20              	 .comm _msCounter,4,4
  21              	 .comm _usCounter,4,4
  22              	 .comm uart_output_buffer,4,4
  23              	 .comm uart_read_index,4,4
  24              	 .comm uart_characters,4,4
  25              	 .comm uart_buffer,4,4
  26              	 .comm uart_last_receive,4,4
  27              	 .comm new_usb_output_message,1,1
  28              	 .global usb_recv_index
  29              	 .section .bss.usb_recv_index,"aw",%nobits
  30              	 .align 2
  33              	usb_recv_index:
  34 0000 00000000 	 .space 4
  35              	 .comm last_usb_recv_ms,4,4
  36              	 .section .text.init_usb_Connection,"ax",%progbits
  37              	 .align 2
  38              	 .global init_usb_Connection
  39              	 .thumb
  40              	 .thumb_func
  42              	init_usb_Connection:
  43              	.LFB349:
  44              	 .file 1 "../Libraries/OEMLib/USB_Communication/usb_communication.c"
   1:../Libraries/OEMLib/USB_Communication/usb_communication.c **** /*
   2:../Libraries/OEMLib/USB_Communication/usb_communication.c ****  * usb_communication.c
   3:../Libraries/OEMLib/USB_Communication/usb_communication.c ****  *
   4:../Libraries/OEMLib/USB_Communication/usb_communication.c ****  *  Created on: 21 Jun 2022
   5:../Libraries/OEMLib/USB_Communication/usb_communication.c ****  *      Author: AndreasAscher
   6:../Libraries/OEMLib/USB_Communication/usb_communication.c ****  */
   7:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
   8:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
   9:../Libraries/OEMLib/USB_Communication/usb_communication.c **** #include "usb_communication.h"
  10:../Libraries/OEMLib/USB_Communication/usb_communication.c **** #include "timer_definition.h"
  11:../Libraries/OEMLib/USB_Communication/usb_communication.c **** #include "uart_communication.h"
  12:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
  13:../Libraries/OEMLib/USB_Communication/usb_communication.c **** uint32_t 	usb_recv_index = 0;
  14:../Libraries/OEMLib/USB_Communication/usb_communication.c **** uint32_t 	last_usb_recv_ms;
  15:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
  16:../Libraries/OEMLib/USB_Communication/usb_communication.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  17:../Libraries/OEMLib/USB_Communication/usb_communication.c **** // init usb connection
  18:../Libraries/OEMLib/USB_Communication/usb_communication.c **** int16_t init_usb_Connection()
  19:../Libraries/OEMLib/USB_Communication/usb_communication.c **** {
  45              	 .loc 1 19 0
  46              	 .cfi_startproc
  47              	 
  48              	 
  49 0000 80B5     	 push {r7,lr}
  50              	.LCFI0:
  51              	 .cfi_def_cfa_offset 8
  52              	 .cfi_offset 7,-8
  53              	 .cfi_offset 14,-4
  54 0002 82B0     	 sub sp,sp,#8
  55              	.LCFI1:
  56              	 .cfi_def_cfa_offset 16
  57 0004 00AF     	 add r7,sp,#0
  58              	.LCFI2:
  59              	 .cfi_def_cfa_register 7
  20:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 	int16_t return_status = USBD_VCOM_STATUS_FAILURE;
  60              	 .loc 1 20 0
  61 0006 0123     	 movs r3,#1
  62 0008 FB80     	 strh r3,[r7,#6]
  21:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
  22:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 	return_status = USBD_VCOM_Connect();			// Connect to USB
  63              	 .loc 1 22 0
  64 000a FFF7FEFF 	 bl USBD_VCOM_Connect
  65 000e 0346     	 mov r3,r0
  66 0010 FB80     	 strh r3,[r7,#6]
  23:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
  24:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 	/* Wait until enumeration is finished */
  25:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 	while (!USBD_VCOM_IsEnumDone());
  67              	 .loc 1 25 0
  68 0012 00BF     	 nop
  69              	.L2:
  70              	 .loc 1 25 0 is_stmt 0 discriminator 1
  71 0014 FFF7FEFF 	 bl USBD_VCOM_IsEnumDone
  72 0018 0346     	 mov r3,r0
  73 001a 002B     	 cmp r3,#0
  74 001c FAD0     	 beq .L2
  26:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 	usb_received_message = calloc(USB_RECEIVE_BUFFER_SIZE, sizeof(char));	// Alloc usb read buffer
  75              	 .loc 1 26 0 is_stmt 1
  76 001e 4FF40050 	 mov r0,#8192
  77 0022 0121     	 movs r1,#1
  78 0024 FFF7FEFF 	 bl calloc
  79 0028 0346     	 mov r3,r0
  80 002a 1A46     	 mov r2,r3
  81 002c 034B     	 ldr r3,.L4
  82 002e 1A60     	 str r2,[r3]
  27:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
  28:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 	return return_status;
  83              	 .loc 1 28 0
  84 0030 FB88     	 ldrh r3,[r7,#6]
  85 0032 1BB2     	 sxth r3,r3
  29:../Libraries/OEMLib/USB_Communication/usb_communication.c **** }
  86              	 .loc 1 29 0
  87 0034 1846     	 mov r0,r3
  88 0036 0837     	 adds r7,r7,#8
  89              	.LCFI3:
  90              	 .cfi_def_cfa_offset 8
  91 0038 BD46     	 mov sp,r7
  92              	.LCFI4:
  93              	 .cfi_def_cfa_register 13
  94              	 
  95 003a 80BD     	 pop {r7,pc}
  96              	.L5:
  97              	 .align 2
  98              	.L4:
  99 003c 00000000 	 .word usb_received_message
 100              	 .cfi_endproc
 101              	.LFE349:
 103              	 .section .text.wait_for_input,"ax",%progbits
 104              	 .align 2
 105              	 .global wait_for_input
 106              	 .thumb
 107              	 .thumb_func
 109              	wait_for_input:
 110              	.LFB350:
  30:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
  31:../Libraries/OEMLib/USB_Communication/usb_communication.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  32:../Libraries/OEMLib/USB_Communication/usb_communication.c **** // wait for usb input
  33:../Libraries/OEMLib/USB_Communication/usb_communication.c **** int16_t wait_for_input()
  34:../Libraries/OEMLib/USB_Communication/usb_communication.c **** {
 111              	 .loc 1 34 0
 112              	 .cfi_startproc
 113              	 
 114              	 
 115 0000 80B5     	 push {r7,lr}
 116              	.LCFI5:
 117              	 .cfi_def_cfa_offset 8
 118              	 .cfi_offset 7,-8
 119              	 .cfi_offset 14,-4
 120 0002 82B0     	 sub sp,sp,#8
 121              	.LCFI6:
 122              	 .cfi_def_cfa_offset 16
 123 0004 00AF     	 add r7,sp,#0
 124              	.LCFI7:
 125              	 .cfi_def_cfa_register 7
  35:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 	uint16_t bytes = 0;
 126              	 .loc 1 35 0
 127 0006 0023     	 movs r3,#0
 128 0008 BB80     	 strh r3,[r7,#4]
  36:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 	int16_t return_status = 0;
 129              	 .loc 1 36 0
 130 000a 0023     	 movs r3,#0
 131 000c FB80     	 strh r3,[r7,#6]
  37:../Libraries/OEMLib/USB_Communication/usb_communication.c ****     bytes = USBD_VCOM_BytesReceived();
 132              	 .loc 1 37 0
 133 000e FFF7FEFF 	 bl USBD_VCOM_BytesReceived
 134 0012 0346     	 mov r3,r0
 135 0014 BB80     	 strh r3,[r7,#4]
  38:../Libraries/OEMLib/USB_Communication/usb_communication.c ****     if (bytes > 0)
 136              	 .loc 1 38 0
 137 0016 BB88     	 ldrh r3,[r7,#4]
 138 0018 002B     	 cmp r3,#0
 139 001a 1ED0     	 beq .L7
  39:../Libraries/OEMLib/USB_Communication/usb_communication.c ****     {
  40:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
  41:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		//+++++++++++++++++++++++++++++++++++++++++++
  42:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		// receive bytes
  43:../Libraries/OEMLib/USB_Communication/usb_communication.c ****     	return_status = (int16_t)USBD_VCOM_ReceiveData((int8_t*) &usb_received_message[usb_recv_index]
 140              	 .loc 1 43 0
 141 001c 2E4B     	 ldr r3,.L11
 142 001e 1A68     	 ldr r2,[r3]
 143 0020 2E4B     	 ldr r3,.L11+4
 144 0022 1B68     	 ldr r3,[r3]
 145 0024 1A44     	 add r2,r2,r3
 146 0026 BB88     	 ldrh r3,[r7,#4]
 147 0028 1046     	 mov r0,r2
 148 002a 1946     	 mov r1,r3
 149 002c FFF7FEFF 	 bl USBD_VCOM_ReceiveData
 150 0030 0346     	 mov r3,r0
 151 0032 FB80     	 strh r3,[r7,#6]
  44:../Libraries/OEMLib/USB_Communication/usb_communication.c ****     	CDC_Device_USBTask(&USBD_VCOM_cdc_interface);
 152              	 .loc 1 44 0
 153 0034 2A48     	 ldr r0,.L11+8
 154 0036 FFF7FEFF 	 bl CDC_Device_USBTask
  45:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
  46:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		last_usb_recv_ms = _msCounter;
 155              	 .loc 1 46 0
 156 003a 2A4B     	 ldr r3,.L11+12
 157 003c 1B68     	 ldr r3,[r3]
 158 003e 2A4A     	 ldr r2,.L11+16
 159 0040 1360     	 str r3,[r2]
  47:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		usb_recv_index = usb_recv_index + bytes;
 160              	 .loc 1 47 0
 161 0042 BA88     	 ldrh r2,[r7,#4]
 162 0044 254B     	 ldr r3,.L11+4
 163 0046 1B68     	 ldr r3,[r3]
 164 0048 1344     	 add r3,r3,r2
 165 004a 244A     	 ldr r2,.L11+4
 166 004c 1360     	 str r3,[r2]
  48:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		if(return_status != USBD_STATUS_SUCCESS)
 167              	 .loc 1 48 0
 168 004e B7F90630 	 ldrsh r3,[r7,#6]
 169 0052 002B     	 cmp r3,#0
 170 0054 39D0     	 beq .L8
  49:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		{
  50:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 			return return_status;
 171              	 .loc 1 50 0
 172 0056 FB88     	 ldrh r3,[r7,#6]
 173 0058 38E0     	 b .L9
 174              	.L7:
  51:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		}
  52:../Libraries/OEMLib/USB_Communication/usb_communication.c ****     }
  53:../Libraries/OEMLib/USB_Communication/usb_communication.c ****     else if (bytes == 0 && usb_recv_index > 0 && (usb_received_message[usb_recv_index-1] == '\r' ||
 175              	 .loc 1 53 0
 176 005a BB88     	 ldrh r3,[r7,#4]
 177 005c 002B     	 cmp r3,#0
 178 005e 34D1     	 bne .L8
 179              	 .loc 1 53 0 is_stmt 0 discriminator 1
 180 0060 1E4B     	 ldr r3,.L11+4
 181 0062 1B68     	 ldr r3,[r3]
 182 0064 002B     	 cmp r3,#0
 183 0066 30D0     	 beq .L8
 184              	 .loc 1 53 0 discriminator 2
 185 0068 1B4B     	 ldr r3,.L11
 186 006a 1A68     	 ldr r2,[r3]
 187 006c 1B4B     	 ldr r3,.L11+4
 188 006e 1B68     	 ldr r3,[r3]
 189 0070 013B     	 subs r3,r3,#1
 190 0072 1344     	 add r3,r3,r2
 191 0074 1B78     	 ldrb r3,[r3]
 192 0076 0D2B     	 cmp r3,#13
 193 0078 08D0     	 beq .L10
 194              	 .loc 1 53 0 discriminator 3
 195 007a 174B     	 ldr r3,.L11
 196 007c 1A68     	 ldr r2,[r3]
 197 007e 174B     	 ldr r3,.L11+4
 198 0080 1B68     	 ldr r3,[r3]
 199 0082 013B     	 subs r3,r3,#1
 200 0084 1344     	 add r3,r3,r2
 201 0086 1B78     	 ldrb r3,[r3]
 202 0088 0A2B     	 cmp r3,#10
 203 008a 1ED1     	 bne .L8
 204              	.L10:
  54:../Libraries/OEMLib/USB_Communication/usb_communication.c ****     {
  55:../Libraries/OEMLib/USB_Communication/usb_communication.c ****     	//+++++++++++++++++++++++++++++++++++++++++++
  56:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		// return sended characters -> echo
  57:../Libraries/OEMLib/USB_Communication/usb_communication.c **** //    	return_status = (int16_t)USBD_VCOM_SendData((int8_t*)usb_received_message,strlen(usb_receive
  58:../Libraries/OEMLib/USB_Communication/usb_communication.c **** //		CDC_Device_USBTask(&USBD_VCOM_cdc_interface);
  59:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
  60:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		//+++++++++++++++++++++++++++++++++++++++++++
  61:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		// Parse command
  62:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		usb_recv_index = strlen(usb_received_message);
 205              	 .loc 1 62 0 is_stmt 1
 206 008c 124B     	 ldr r3,.L11
 207 008e 1B68     	 ldr r3,[r3]
 208 0090 1846     	 mov r0,r3
 209 0092 FFF7FEFF 	 bl strlen
 210 0096 0246     	 mov r2,r0
 211 0098 104B     	 ldr r3,.L11+4
 212 009a 1A60     	 str r2,[r3]
  63:../Libraries/OEMLib/USB_Communication/usb_communication.c **** //		return_status = ssm_parse_command(usb_received_message,usb_recv_index);
  64:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		uart_output(&UART_OEM, usb_received_message);
 213              	 .loc 1 64 0
 214 009c 0E4B     	 ldr r3,.L11
 215 009e 1B68     	 ldr r3,[r3]
 216 00a0 1248     	 ldr r0,.L11+20
 217 00a2 1946     	 mov r1,r3
 218 00a4 FFF7FEFF 	 bl uart_output
  65:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
  66:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 
  67:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		memset(usb_received_message,0x0,USB_RECEIVE_BUFFER_SIZE);
 219              	 .loc 1 67 0
 220 00a8 0B4B     	 ldr r3,.L11
 221 00aa 1B68     	 ldr r3,[r3]
 222 00ac 1846     	 mov r0,r3
 223 00ae 0021     	 movs r1,#0
 224 00b0 4FF40052 	 mov r2,#8192
 225 00b4 FFF7FEFF 	 bl memset
  68:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		usb_recv_index = 0;
 226              	 .loc 1 68 0
 227 00b8 084B     	 ldr r3,.L11+4
 228 00ba 0022     	 movs r2,#0
 229 00bc 1A60     	 str r2,[r3]
  69:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		if(return_status != 0)
 230              	 .loc 1 69 0
 231 00be B7F90630 	 ldrsh r3,[r7,#6]
 232 00c2 002B     	 cmp r3,#0
 233 00c4 01D0     	 beq .L8
  70:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		{
  71:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 			return return_status;
 234              	 .loc 1 71 0
 235 00c6 FB88     	 ldrh r3,[r7,#6]
 236 00c8 00E0     	 b .L9
 237              	.L8:
  72:../Libraries/OEMLib/USB_Communication/usb_communication.c **** 		}
  73:../Libraries/OEMLib/USB_Communication/usb_communication.c ****     }
  74:../Libraries/OEMLib/USB_Communication/usb_communication.c ****     return return_status;
 238              	 .loc 1 74 0
 239 00ca FB88     	 ldrh r3,[r7,#6]
 240              	.L9:
 241 00cc 1BB2     	 sxth r3,r3
  75:../Libraries/OEMLib/USB_Communication/usb_communication.c **** }
 242              	 .loc 1 75 0
 243 00ce 1846     	 mov r0,r3
 244 00d0 0837     	 adds r7,r7,#8
 245              	.LCFI8:
 246              	 .cfi_def_cfa_offset 8
 247 00d2 BD46     	 mov sp,r7
 248              	.LCFI9:
 249              	 .cfi_def_cfa_register 13
 250              	 
 251 00d4 80BD     	 pop {r7,pc}
 252              	.L12:
 253 00d6 00BF     	 .align 2
 254              	.L11:
 255 00d8 00000000 	 .word usb_received_message
 256 00dc 00000000 	 .word usb_recv_index
 257 00e0 00000000 	 .word USBD_VCOM_cdc_interface
 258 00e4 00000000 	 .word _msCounter
 259 00e8 00000000 	 .word last_usb_recv_ms
 260 00ec 00000000 	 .word UART_OEM
 261              	 .cfi_endproc
 262              	.LFE350:
 264              	 .text
 265              	.Letext0:
 266              	 .file 2 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 267              	 .file 3 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 268              	 .file 4 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 269              	 .file 5 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_gpio.h"
 270              	 .file 6 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc4_gpio.h"
 271              	 .file 7 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usic.h"
 272              	 .file 8 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_uart.h"
 273              	 .file 9 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/UART/uart.h"
 274              	 .file 10 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 275              	 .file 11 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usbd.h"
 276              	 .file 12 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/USBD/usbd.h"
 277              	 .file 13 "c:\\repos\\tributech-oem-module-iot-kit-examples\\iot-kit-infineon-xmc47_relax_5v_ad_v1\\xmc4700_usb_to_uart\\dave\\generated\\usbd\\usb\\core\\endpoint.h"
 278              	 .file 14 "c:\\repos\\tributech-oem-module-iot-kit-examples\\iot-kit-infineon-xmc47_relax_5v_ad_v1\\xmc4700_usb_to_uart\\dave\\generated\\usbd_vcom\\class_driver\\common\\cdc_class_common.h"
 279              	 .file 15 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/USBD_VCOM/class_driver/device/cdc_class_device.h"
 280              	 .file 16 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/USBD_VCOM/usbd_vcom.h"
 281              	 .file 17 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/cmsis_gcc.h"
 282              	 .file 18 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/core_cm4.h"
 283              	 .file 19 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 284              	 .file 20 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/UART/uart_extern.h"
 285              	 .file 21 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/USBD/usbd_extern.h"
 286              	 .file 22 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/USBD_VCOM/usbd_vcom_extern.h"
 287              	 .file 23 "../Libraries/OEMLib/USB_Communication/usb_communication.h"
 288              	 .file 24 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/OEMLib/Timer/timer_definition.h"
 289              	 .file 25 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/OEMLib/UART_Communication/uart_communication.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usb_communication.c
                            *COM*:00000004 usb_received_message
                            *COM*:00000004 _msCounter
                            *COM*:00000004 _usCounter
                            *COM*:00000004 uart_output_buffer
                            *COM*:00000004 uart_read_index
                            *COM*:00000004 uart_characters
                            *COM*:00000004 uart_buffer
                            *COM*:00000004 uart_last_receive
                            *COM*:00000001 new_usb_output_message
    {standard input}:33     .bss.usb_recv_index:00000000 usb_recv_index
    {standard input}:30     .bss.usb_recv_index:00000000 $d
                            *COM*:00000004 last_usb_recv_ms
    {standard input}:37     .text.init_usb_Connection:00000000 $t
    {standard input}:42     .text.init_usb_Connection:00000000 init_usb_Connection
    {standard input}:99     .text.init_usb_Connection:0000003c $d
    {standard input}:104    .text.wait_for_input:00000000 $t
    {standard input}:109    .text.wait_for_input:00000000 wait_for_input
    {standard input}:255    .text.wait_for_input:000000d8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
USBD_VCOM_Connect
USBD_VCOM_IsEnumDone
calloc
USBD_VCOM_BytesReceived
USBD_VCOM_ReceiveData
CDC_Device_USBTask
strlen
uart_output
memset
USBD_VCOM_cdc_interface
UART_OEM
