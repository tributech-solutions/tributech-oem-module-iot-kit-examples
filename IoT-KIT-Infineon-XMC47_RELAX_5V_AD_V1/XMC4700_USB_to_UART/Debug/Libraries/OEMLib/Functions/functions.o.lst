   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "functions.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm transaction_nr_dec,4,4
  20              	 .comm transaction_nr_string,7,4
  21              	 .comm _msCounter,4,4
  22              	 .section .text.to_upper_case,"ax",%progbits
  23              	 .align 2
  24              	 .global to_upper_case
  25              	 .thumb
  26              	 .thumb_func
  28              	to_upper_case:
  29              	.LFB349:
  30              	 .file 1 "../Libraries/OEMLib/Functions/functions.c"
   1:../Libraries/OEMLib/Functions/functions.c **** /*
   2:../Libraries/OEMLib/Functions/functions.c ****  * functions.c
   3:../Libraries/OEMLib/Functions/functions.c ****  *
   4:../Libraries/OEMLib/Functions/functions.c ****  *  Created on: 17 Aug 2020
   5:../Libraries/OEMLib/Functions/functions.c ****  *      Author: DanielHackl
   6:../Libraries/OEMLib/Functions/functions.c ****  */
   7:../Libraries/OEMLib/Functions/functions.c **** 
   8:../Libraries/OEMLib/Functions/functions.c **** #include <functions.h>
   9:../Libraries/OEMLib/Functions/functions.c **** 
  10:../Libraries/OEMLib/Functions/functions.c **** //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  11:../Libraries/OEMLib/Functions/functions.c **** // String To UpperCase
  12:../Libraries/OEMLib/Functions/functions.c **** char * to_upper_case(char * text)
  13:../Libraries/OEMLib/Functions/functions.c **** {
  31              	 .loc 1 13 0
  32              	 .cfi_startproc
  33              	 
  34              	 
  35 0000 90B5     	 push {r4,r7,lr}
  36              	.LCFI0:
  37              	 .cfi_def_cfa_offset 12
  38              	 .cfi_offset 4,-12
  39              	 .cfi_offset 7,-8
  40              	 .cfi_offset 14,-4
  41 0002 85B0     	 sub sp,sp,#20
  42              	.LCFI1:
  43              	 .cfi_def_cfa_offset 32
  44 0004 00AF     	 add r7,sp,#0
  45              	.LCFI2:
  46              	 .cfi_def_cfa_register 7
  47 0006 7860     	 str r0,[r7,#4]
  14:../Libraries/OEMLib/Functions/functions.c **** 	uint16_t i;
  15:../Libraries/OEMLib/Functions/functions.c **** 
  16:../Libraries/OEMLib/Functions/functions.c **** 	i=0;
  48              	 .loc 1 16 0
  49 0008 0023     	 movs r3,#0
  50 000a FB81     	 strh r3,[r7,#14]
  17:../Libraries/OEMLib/Functions/functions.c **** 	while(i < strlen(text))
  51              	 .loc 1 17 0
  52 000c 1AE0     	 b .L2
  53              	.L5:
  18:../Libraries/OEMLib/Functions/functions.c **** 	{
  19:../Libraries/OEMLib/Functions/functions.c **** 		text[i] = (char) toupper((int)text[i]);
  54              	 .loc 1 19 0
  55 000e FB89     	 ldrh r3,[r7,#14]
  56 0010 7A68     	 ldr r2,[r7,#4]
  57 0012 1A44     	 add r2,r2,r3
  58              	.LBB2:
  59 0014 FB89     	 ldrh r3,[r7,#14]
  60 0016 7968     	 ldr r1,[r7,#4]
  61 0018 0B44     	 add r3,r3,r1
  62 001a 1B78     	 ldrb r3,[r3]
  63 001c BB60     	 str r3,[r7,#8]
  64 001e 0F4B     	 ldr r3,.L7
  65 0020 1968     	 ldr r1,[r3]
  66 0022 BB68     	 ldr r3,[r7,#8]
  67 0024 0133     	 adds r3,r3,#1
  68 0026 0B44     	 add r3,r3,r1
  69 0028 1B78     	 ldrb r3,[r3]
  70 002a 03F00303 	 and r3,r3,#3
  71 002e 022B     	 cmp r3,#2
  72 0030 02D1     	 bne .L3
  73              	 .loc 1 19 0 is_stmt 0 discriminator 1
  74 0032 BB68     	 ldr r3,[r7,#8]
  75 0034 203B     	 subs r3,r3,#32
  76 0036 00E0     	 b .L4
  77              	.L3:
  78              	 .loc 1 19 0 discriminator 2
  79 0038 BB68     	 ldr r3,[r7,#8]
  80              	.L4:
  81              	.LBE2:
  82              	 .loc 1 19 0 discriminator 4
  83 003a DBB2     	 uxtb r3,r3
  84 003c 1370     	 strb r3,[r2]
  20:../Libraries/OEMLib/Functions/functions.c **** 	    i++;
  85              	 .loc 1 20 0 is_stmt 1 discriminator 4
  86 003e FB89     	 ldrh r3,[r7,#14]
  87 0040 0133     	 adds r3,r3,#1
  88 0042 FB81     	 strh r3,[r7,#14]
  89              	.L2:
  17:../Libraries/OEMLib/Functions/functions.c **** 	while(i < strlen(text))
  90              	 .loc 1 17 0
  91 0044 FC89     	 ldrh r4,[r7,#14]
  92 0046 7868     	 ldr r0,[r7,#4]
  93 0048 FFF7FEFF 	 bl strlen
  94 004c 0346     	 mov r3,r0
  95 004e 9C42     	 cmp r4,r3
  96 0050 DDD3     	 bcc .L5
  21:../Libraries/OEMLib/Functions/functions.c **** 	}
  22:../Libraries/OEMLib/Functions/functions.c **** 
  23:../Libraries/OEMLib/Functions/functions.c **** 	return text;
  97              	 .loc 1 23 0
  98 0052 7B68     	 ldr r3,[r7,#4]
  24:../Libraries/OEMLib/Functions/functions.c **** }
  99              	 .loc 1 24 0
 100 0054 1846     	 mov r0,r3
 101 0056 1437     	 adds r7,r7,#20
 102              	.LCFI3:
 103              	 .cfi_def_cfa_offset 12
 104 0058 BD46     	 mov sp,r7
 105              	.LCFI4:
 106              	 .cfi_def_cfa_register 13
 107              	 
 108 005a 90BD     	 pop {r4,r7,pc}
 109              	.L8:
 110              	 .align 2
 111              	.L7:
 112 005c 00000000 	 .word __ctype_ptr__
 113              	 .cfi_endproc
 114              	.LFE349:
 116              	 .section .text.to_lower_case,"ax",%progbits
 117              	 .align 2
 118              	 .global to_lower_case
 119              	 .thumb
 120              	 .thumb_func
 122              	to_lower_case:
 123              	.LFB350:
  25:../Libraries/OEMLib/Functions/functions.c **** 
  26:../Libraries/OEMLib/Functions/functions.c **** //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  27:../Libraries/OEMLib/Functions/functions.c **** // String To LowerCase
  28:../Libraries/OEMLib/Functions/functions.c **** char * to_lower_case(char * text)
  29:../Libraries/OEMLib/Functions/functions.c **** {
 124              	 .loc 1 29 0
 125              	 .cfi_startproc
 126              	 
 127              	 
 128 0000 90B5     	 push {r4,r7,lr}
 129              	.LCFI5:
 130              	 .cfi_def_cfa_offset 12
 131              	 .cfi_offset 4,-12
 132              	 .cfi_offset 7,-8
 133              	 .cfi_offset 14,-4
 134 0002 85B0     	 sub sp,sp,#20
 135              	.LCFI6:
 136              	 .cfi_def_cfa_offset 32
 137 0004 00AF     	 add r7,sp,#0
 138              	.LCFI7:
 139              	 .cfi_def_cfa_register 7
 140 0006 7860     	 str r0,[r7,#4]
  30:../Libraries/OEMLib/Functions/functions.c **** 	uint16_t i;
  31:../Libraries/OEMLib/Functions/functions.c **** 
  32:../Libraries/OEMLib/Functions/functions.c **** 	i=0;
 141              	 .loc 1 32 0
 142 0008 0023     	 movs r3,#0
 143 000a FB81     	 strh r3,[r7,#14]
  33:../Libraries/OEMLib/Functions/functions.c **** 	while(i < strlen(text))
 144              	 .loc 1 33 0
 145 000c 1AE0     	 b .L10
 146              	.L13:
  34:../Libraries/OEMLib/Functions/functions.c **** 	{
  35:../Libraries/OEMLib/Functions/functions.c **** 		text[i] = (char) tolower((int)text[i]);
 147              	 .loc 1 35 0
 148 000e FB89     	 ldrh r3,[r7,#14]
 149 0010 7A68     	 ldr r2,[r7,#4]
 150 0012 1A44     	 add r2,r2,r3
 151              	.LBB3:
 152 0014 FB89     	 ldrh r3,[r7,#14]
 153 0016 7968     	 ldr r1,[r7,#4]
 154 0018 0B44     	 add r3,r3,r1
 155 001a 1B78     	 ldrb r3,[r3]
 156 001c BB60     	 str r3,[r7,#8]
 157 001e 0F4B     	 ldr r3,.L15
 158 0020 1968     	 ldr r1,[r3]
 159 0022 BB68     	 ldr r3,[r7,#8]
 160 0024 0133     	 adds r3,r3,#1
 161 0026 0B44     	 add r3,r3,r1
 162 0028 1B78     	 ldrb r3,[r3]
 163 002a 03F00303 	 and r3,r3,#3
 164 002e 012B     	 cmp r3,#1
 165 0030 02D1     	 bne .L11
 166              	 .loc 1 35 0 is_stmt 0 discriminator 1
 167 0032 BB68     	 ldr r3,[r7,#8]
 168 0034 2033     	 adds r3,r3,#32
 169 0036 00E0     	 b .L12
 170              	.L11:
 171              	 .loc 1 35 0 discriminator 2
 172 0038 BB68     	 ldr r3,[r7,#8]
 173              	.L12:
 174              	.LBE3:
 175              	 .loc 1 35 0 discriminator 4
 176 003a DBB2     	 uxtb r3,r3
 177 003c 1370     	 strb r3,[r2]
  36:../Libraries/OEMLib/Functions/functions.c **** 	    i++;
 178              	 .loc 1 36 0 is_stmt 1 discriminator 4
 179 003e FB89     	 ldrh r3,[r7,#14]
 180 0040 0133     	 adds r3,r3,#1
 181 0042 FB81     	 strh r3,[r7,#14]
 182              	.L10:
  33:../Libraries/OEMLib/Functions/functions.c **** 	while(i < strlen(text))
 183              	 .loc 1 33 0
 184 0044 FC89     	 ldrh r4,[r7,#14]
 185 0046 7868     	 ldr r0,[r7,#4]
 186 0048 FFF7FEFF 	 bl strlen
 187 004c 0346     	 mov r3,r0
 188 004e 9C42     	 cmp r4,r3
 189 0050 DDD3     	 bcc .L13
  37:../Libraries/OEMLib/Functions/functions.c **** 	}
  38:../Libraries/OEMLib/Functions/functions.c **** 
  39:../Libraries/OEMLib/Functions/functions.c **** 	return text;
 190              	 .loc 1 39 0
 191 0052 7B68     	 ldr r3,[r7,#4]
  40:../Libraries/OEMLib/Functions/functions.c **** }
 192              	 .loc 1 40 0
 193 0054 1846     	 mov r0,r3
 194 0056 1437     	 adds r7,r7,#20
 195              	.LCFI8:
 196              	 .cfi_def_cfa_offset 12
 197 0058 BD46     	 mov sp,r7
 198              	.LCFI9:
 199              	 .cfi_def_cfa_register 13
 200              	 
 201 005a 90BD     	 pop {r4,r7,pc}
 202              	.L16:
 203              	 .align 2
 204              	.L15:
 205 005c 00000000 	 .word __ctype_ptr__
 206              	 .cfi_endproc
 207              	.LFE350:
 209              	 .section .rodata
 210              	 .align 2
 211              	.LC0:
 212 0000 256C7500 	 .ascii "%lu\000"
 213              	 .section .text.increase_transaction_nr,"ax",%progbits
 214              	 .align 2
 215              	 .global increase_transaction_nr
 216              	 .thumb
 217              	 .thumb_func
 219              	increase_transaction_nr:
 220              	.LFB351:
  41:../Libraries/OEMLib/Functions/functions.c **** 
  42:../Libraries/OEMLib/Functions/functions.c **** //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  43:../Libraries/OEMLib/Functions/functions.c **** // increase transaction number
  44:../Libraries/OEMLib/Functions/functions.c **** void increase_transaction_nr(void)
  45:../Libraries/OEMLib/Functions/functions.c **** {
 221              	 .loc 1 45 0
 222              	 .cfi_startproc
 223              	 
 224              	 
 225 0000 80B5     	 push {r7,lr}
 226              	.LCFI10:
 227              	 .cfi_def_cfa_offset 8
 228              	 .cfi_offset 7,-8
 229              	 .cfi_offset 14,-4
 230 0002 00AF     	 add r7,sp,#0
 231              	.LCFI11:
 232              	 .cfi_def_cfa_register 7
  46:../Libraries/OEMLib/Functions/functions.c **** 	transaction_nr_dec++;
 233              	 .loc 1 46 0
 234 0004 0C4B     	 ldr r3,.L19
 235 0006 1B68     	 ldr r3,[r3]
 236 0008 0133     	 adds r3,r3,#1
 237 000a 0B4A     	 ldr r2,.L19
 238 000c 1360     	 str r3,[r2]
  47:../Libraries/OEMLib/Functions/functions.c **** 	if (transaction_nr_dec >= 1000000)
 239              	 .loc 1 47 0
 240 000e 0A4B     	 ldr r3,.L19
 241 0010 1B68     	 ldr r3,[r3]
 242 0012 0A4A     	 ldr r2,.L19+4
 243 0014 9342     	 cmp r3,r2
 244 0016 02D9     	 bls .L18
  48:../Libraries/OEMLib/Functions/functions.c **** 	{
  49:../Libraries/OEMLib/Functions/functions.c **** 		transaction_nr_dec = 0;
 245              	 .loc 1 49 0
 246 0018 074B     	 ldr r3,.L19
 247 001a 0022     	 movs r2,#0
 248 001c 1A60     	 str r2,[r3]
 249              	.L18:
  50:../Libraries/OEMLib/Functions/functions.c **** 	}
  51:../Libraries/OEMLib/Functions/functions.c **** 	memset(transaction_nr_string,0x0,7);
 250              	 .loc 1 51 0
 251 001e 0848     	 ldr r0,.L19+8
 252 0020 0021     	 movs r1,#0
 253 0022 0722     	 movs r2,#7
 254 0024 FFF7FEFF 	 bl memset
  52:../Libraries/OEMLib/Functions/functions.c **** 	sprintf(transaction_nr_string, "%"PRIu32"",transaction_nr_dec);
 255              	 .loc 1 52 0
 256 0028 034B     	 ldr r3,.L19
 257 002a 1B68     	 ldr r3,[r3]
 258 002c 0448     	 ldr r0,.L19+8
 259 002e 0549     	 ldr r1,.L19+12
 260 0030 1A46     	 mov r2,r3
 261 0032 FFF7FEFF 	 bl sprintf
  53:../Libraries/OEMLib/Functions/functions.c **** }
 262              	 .loc 1 53 0
 263 0036 80BD     	 pop {r7,pc}
 264              	.L20:
 265              	 .align 2
 266              	.L19:
 267 0038 00000000 	 .word transaction_nr_dec
 268 003c 3F420F00 	 .word 999999
 269 0040 00000000 	 .word transaction_nr_string
 270 0044 00000000 	 .word .LC0
 271              	 .cfi_endproc
 272              	.LFE351:
 274              	 .section .text.get_time,"ax",%progbits
 275              	 .align 2
 276              	 .global get_time
 277              	 .thumb
 278              	 .thumb_func
 280              	get_time:
 281              	.LFB352:
  54:../Libraries/OEMLib/Functions/functions.c **** 
  55:../Libraries/OEMLib/Functions/functions.c **** //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  56:../Libraries/OEMLib/Functions/functions.c **** // Get Time
  57:../Libraries/OEMLib/Functions/functions.c **** time_t get_time(void)
  58:../Libraries/OEMLib/Functions/functions.c **** {
 282              	 .loc 1 58 0
 283              	 .cfi_startproc
 284              	 
 285              	 
 286 0000 80B5     	 push {r7,lr}
 287              	.LCFI12:
 288              	 .cfi_def_cfa_offset 8
 289              	 .cfi_offset 7,-8
 290              	 .cfi_offset 14,-4
 291 0002 82B0     	 sub sp,sp,#8
 292              	.LCFI13:
 293              	 .cfi_def_cfa_offset 16
 294 0004 00AF     	 add r7,sp,#0
 295              	.LCFI14:
 296              	 .cfi_def_cfa_register 7
  59:../Libraries/OEMLib/Functions/functions.c **** 	time_t Time_Sec;
  60:../Libraries/OEMLib/Functions/functions.c **** 
  61:../Libraries/OEMLib/Functions/functions.c **** 	RTC_Time(&Time_Sec);
 297              	 .loc 1 61 0
 298 0006 3B1D     	 adds r3,r7,#4
 299 0008 1846     	 mov r0,r3
 300 000a FFF7FEFF 	 bl RTC_Time
  62:../Libraries/OEMLib/Functions/functions.c **** 
  63:../Libraries/OEMLib/Functions/functions.c **** 	return Time_Sec;
 301              	 .loc 1 63 0
 302 000e 7B68     	 ldr r3,[r7,#4]
  64:../Libraries/OEMLib/Functions/functions.c **** }
 303              	 .loc 1 64 0
 304 0010 1846     	 mov r0,r3
 305 0012 0837     	 adds r7,r7,#8
 306              	.LCFI15:
 307              	 .cfi_def_cfa_offset 8
 308 0014 BD46     	 mov sp,r7
 309              	.LCFI16:
 310              	 .cfi_def_cfa_register 13
 311              	 
 312 0016 80BD     	 pop {r7,pc}
 313              	 .cfi_endproc
 314              	.LFE352:
 316              	 .section .text.delay_ms,"ax",%progbits
 317              	 .align 2
 318              	 .global delay_ms
 319              	 .thumb
 320              	 .thumb_func
 322              	delay_ms:
 323              	.LFB353:
  65:../Libraries/OEMLib/Functions/functions.c **** 
  66:../Libraries/OEMLib/Functions/functions.c **** //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  67:../Libraries/OEMLib/Functions/functions.c **** // Delay ms and us
  68:../Libraries/OEMLib/Functions/functions.c **** void delay_ms(uint32_t ms)
  69:../Libraries/OEMLib/Functions/functions.c **** {
 324              	 .loc 1 69 0
 325              	 .cfi_startproc
 326              	 
 327              	 
 328              	 
 329 0000 80B4     	 push {r7}
 330              	.LCFI17:
 331              	 .cfi_def_cfa_offset 4
 332              	 .cfi_offset 7,-4
 333 0002 85B0     	 sub sp,sp,#20
 334              	.LCFI18:
 335              	 .cfi_def_cfa_offset 24
 336 0004 00AF     	 add r7,sp,#0
 337              	.LCFI19:
 338              	 .cfi_def_cfa_register 7
 339 0006 7860     	 str r0,[r7,#4]
  70:../Libraries/OEMLib/Functions/functions.c **** 	uint32_t now = _msCounter;
 340              	 .loc 1 70 0
 341 0008 084B     	 ldr r3,.L26
 342 000a 1B68     	 ldr r3,[r3]
 343 000c FB60     	 str r3,[r7,#12]
  71:../Libraries/OEMLib/Functions/functions.c **** 
  72:../Libraries/OEMLib/Functions/functions.c **** 	while (now + ms > _msCounter)
 344              	 .loc 1 72 0
 345 000e 00E0     	 b .L24
 346              	.L25:
  73:../Libraries/OEMLib/Functions/functions.c **** 					__NOP();
 347              	 .loc 1 73 0
 348              	
 349 0010 00BF     	 nop
 350              	
 351              	 .thumb
 352              	.L24:
  72:../Libraries/OEMLib/Functions/functions.c **** 					__NOP();
 353              	 .loc 1 72 0
 354 0012 FA68     	 ldr r2,[r7,#12]
 355 0014 7B68     	 ldr r3,[r7,#4]
 356 0016 1A44     	 add r2,r2,r3
 357 0018 044B     	 ldr r3,.L26
 358 001a 1B68     	 ldr r3,[r3]
 359 001c 9A42     	 cmp r2,r3
 360 001e F7D8     	 bhi .L25
  74:../Libraries/OEMLib/Functions/functions.c **** }
 361              	 .loc 1 74 0
 362 0020 1437     	 adds r7,r7,#20
 363              	.LCFI20:
 364              	 .cfi_def_cfa_offset 4
 365 0022 BD46     	 mov sp,r7
 366              	.LCFI21:
 367              	 .cfi_def_cfa_register 13
 368              	 
 369 0024 5DF8047B 	 ldr r7,[sp],#4
 370              	.LCFI22:
 371              	 .cfi_restore 7
 372              	 .cfi_def_cfa_offset 0
 373 0028 7047     	 bx lr
 374              	.L27:
 375 002a 00BF     	 .align 2
 376              	.L26:
 377 002c 00000000 	 .word _msCounter
 378              	 .cfi_endproc
 379              	.LFE353:
 381              	 .text
 382              	.Letext0:
 383              	 .file 2 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 384              	 .file 3 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 385              	 .file 4 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\sys\\types.h"
 386              	 .file 5 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 387              	 .file 6 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usic.h"
 388              	 .file 7 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 389              	 .file 8 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usbd.h"
 390              	 .file 9 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/USBD/usbd.h"
 391              	 .file 10 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/cmsis_gcc.h"
 392              	 .file 11 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\ctype.h"
 393              	 .file 12 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/core_cm4.h"
 394              	 .file 13 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 395              	 .file 14 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/USBD/usbd_extern.h"
 396              	 .file 15 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/OEMLib/Functions/functions.h"
DEFINED SYMBOLS
                            *ABS*:00000000 functions.c
                            *COM*:00000004 transaction_nr_dec
                            *COM*:00000007 transaction_nr_string
                            *COM*:00000004 _msCounter
    {standard input}:23     .text.to_upper_case:00000000 $t
    {standard input}:28     .text.to_upper_case:00000000 to_upper_case
    {standard input}:112    .text.to_upper_case:0000005c $d
    {standard input}:117    .text.to_lower_case:00000000 $t
    {standard input}:122    .text.to_lower_case:00000000 to_lower_case
    {standard input}:205    .text.to_lower_case:0000005c $d
    {standard input}:210    .rodata:00000000 $d
    {standard input}:214    .text.increase_transaction_nr:00000000 $t
    {standard input}:219    .text.increase_transaction_nr:00000000 increase_transaction_nr
    {standard input}:267    .text.increase_transaction_nr:00000038 $d
    {standard input}:275    .text.get_time:00000000 $t
    {standard input}:280    .text.get_time:00000000 get_time
    {standard input}:317    .text.delay_ms:00000000 $t
    {standard input}:322    .text.delay_ms:00000000 delay_ms
    {standard input}:377    .text.delay_ms:0000002c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
strlen
__ctype_ptr__
memset
sprintf
RTC_Time
