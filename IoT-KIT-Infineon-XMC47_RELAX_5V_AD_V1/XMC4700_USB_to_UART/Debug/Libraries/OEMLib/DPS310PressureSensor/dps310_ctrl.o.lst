   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "dps310_ctrl.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm transaction_nr_dec,4,4
  20              	 .comm transaction_nr_string,7,4
  21              	 .comm _msCounter,4,4
  22              	 .global scaling_facts
  23              	 .section .rodata.scaling_facts,"a",%progbits
  24              	 .align 2
  27              	scaling_facts:
  28 0000 00000800 	 .word 524288
  29 0004 00001800 	 .word 1572864
  30 0008 00003800 	 .word 3670016
  31 000c 00007800 	 .word 7864320
  32 0010 00E00300 	 .word 253952
  33 0014 00E00700 	 .word 516096
  34 0018 00E00F00 	 .word 1040384
  35 001c 00E01F00 	 .word 2088960
  36              	 .global dps310_status
  37              	 .section .data.dps310_status,"aw",%progbits
  38              	 .align 2
  41              	dps310_status:
  42 0000 00       	 .byte 0
  43 0001 00       	 .byte 0
  44 0002 00       	 .byte 0
  45 0003 01       	 .byte 1
  46 0004 00       	 .byte 0
  47 0005 01       	 .byte 1
  48 0006 04       	 .byte 4
  49 0007 00       	 .space 1
  50 0008 00000000 	 .word 0
  51 000c 00000000 	 .word 0
  52              	 .global dps310_coeff
  53              	 .section .bss.dps310_coeff,"aw",%nobits
  54              	 .align 2
  57              	dps310_coeff:
  58 0000 00000000 	 .space 40
  58      00000000 
  58      00000000 
  58      00000000 
  58      00000000 
  59              	 .global coeff_block
  60              	 .section .data.coeff_block,"aw",%progbits
  61              	 .align 2
  64              	coeff_block:
  65 0000 10       	 .byte 16
  66 0001 12       	 .byte 18
  67 0002 0000     	 .section .text.dps310_read_byte_bitfield,"ax",%progbits
  68              	 .align 2
  69              	 .global dps310_read_byte_bitfield
  70              	 .thumb
  71              	 .thumb_func
  73              	dps310_read_byte_bitfield:
  74              	.LFB349:
  75              	 .file 1 "../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c"
   1:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** /*
   2:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c ****  * 	dps310.c *
   3:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c ****  *  Created on: 2020 Aug 13
   4:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c ****  *  Author: AEASCHER
   5:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c ****  */
   6:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
   7:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** #include <functions.h>
   8:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
   9:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** #include "i2c_master_ctrl.h"
  10:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** #include "stddef.h"
  11:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** #include "stdbool.h"
  12:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** #include "stdint.h"
  13:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** #include "stdio.h"
  14:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** #include "dps_register.h"
  15:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** #include "dps310_config.h"
  16:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** #include "dps310_ctrl.h"
  17:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //#include "USB_Glue.h"
  18:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
  19:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** const int32_t scaling_facts[DPS310_NUM_OF_SCAL_FACTS] =
  20:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {	524288,
  21:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	1572864,
  22:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	3670016,
  23:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	7864320,
  24:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	253952,
  25:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	516096,
  26:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	1040384,
  27:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	2088960
  28:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** };
  29:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
  30:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** dps310_state_t dps310_status =
  31:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
  32:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.init_flag 		= false,
  33:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.mode_flag 		= 0,
  34:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.temp_Sensor 	= 0,
  35:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
  36:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//settings
  37:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//temperature measure rate (value from 0 to 7)
  38:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//2^temp_mr temperature measurement results per second
  39:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.temp_mr = DPS310_OVERSAMPLING_RATE_2,
  40:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//temperature oversampling rate (value from 0 to 7)
  41:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//2^temp_osr internal temperature measurements per result
  42:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//A higher value increases precision
  43:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.temp_osr = DPS310_PRESCISSION_1x,
  44:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//pressure measure rate (value from 0 to 7)
  45:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//2^prs_mr pressure measurement results per second
  46:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.prs_mr = DPS310_OVERSAMPLING_RATE_2,
  47:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//pressure oversampling rate (value from 0 to 7)
  48:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//2^prs_osr internal pressure measurements per result
  49:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//A higher value increases precision
  50:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.prs_osr = DPS310_PRESCISSION_16x,
  51:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
  52:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//last measurements
  53:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.pres_meas = 0,
  54:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.temp_meas = 0,
  55:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** };
  56:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
  57:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** dps310_comp_coeff_t dps310_coeff =
  58:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
  59:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	// compensation coefficients for both dps310 and dps422
  60:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.c0_half = 0,
  61:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.c1 = 0,
  62:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.c00 = 0,
  63:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.c10 = 0,
  64:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.c01 = 0,
  65:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.c11 = 0,
  66:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.c20 = 0,
  67:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.c21 = 0,
  68:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.c30 = 0,
  69:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
  70:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
  71:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	// last measured scaled temperature (necessary for pressure compensation)
  72:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	.last_temp_scal = 0,
  73:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** };
  74:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
  75:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** reg_block_t coeff_block = {0x10, 18};
  76:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
  77:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_read_byte_bitfield(reg_mask_t reg_mask, bool comparison_timer)
  78:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
  76              	 .loc 1 78 0
  77              	 .cfi_startproc
  78              	 
  79              	 
  80 0000 80B5     	 push {r7,lr}
  81              	.LCFI0:
  82              	 .cfi_def_cfa_offset 8
  83              	 .cfi_offset 7,-8
  84              	 .cfi_offset 14,-4
  85 0002 84B0     	 sub sp,sp,#16
  86              	.LCFI1:
  87              	 .cfi_def_cfa_offset 24
  88 0004 00AF     	 add r7,sp,#0
  89              	.LCFI2:
  90              	 .cfi_def_cfa_register 7
  91 0006 7860     	 str r0,[r7,#4]
  92 0008 0B46     	 mov r3,r1
  93 000a FB70     	 strb r3,[r7,#3]
  79:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t return_value = i2c_read_byte(DPS310_ADDRESS_SDO_FLOAT, reg_mask.register_address, comparis
  94              	 .loc 1 79 0
  95 000c 3A79     	 ldrb r2,[r7,#4]
  96 000e FB78     	 ldrb r3,[r7,#3]
  97 0010 7720     	 movs r0,#119
  98 0012 1146     	 mov r1,r2
  99 0014 1A46     	 mov r2,r3
 100 0016 FFF7FEFF 	 bl i2c_read_byte
 101 001a 0346     	 mov r3,r0
 102 001c FB81     	 strh r3,[r7,#14]
  80:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (return_value < 0)
 103              	 .loc 1 80 0
 104 001e B7F90E30 	 ldrsh r3,[r7,#14]
 105 0022 002B     	 cmp r3,#0
 106 0024 01DA     	 bge .L2
  81:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
  82:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return return_value;
 107              	 .loc 1 82 0
 108 0026 FB89     	 ldrh r3,[r7,#14]
 109 0028 09E0     	 b .L3
 110              	.L2:
  83:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
  84:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return (((uint8_t)return_value) & reg_mask.mask) >> reg_mask.shift;
 111              	 .loc 1 84 0
 112 002a FB89     	 ldrh r3,[r7,#14]
 113 002c DAB2     	 uxtb r2,r3
 114 002e 7B79     	 ldrb r3,[r7,#5]
 115 0030 1340     	 ands r3,r3,r2
 116 0032 DBB2     	 uxtb r3,r3
 117 0034 1A46     	 mov r2,r3
 118 0036 BB79     	 ldrb r3,[r7,#6]
 119 0038 42FA03F3 	 asr r3,r2,r3
 120 003c 9BB2     	 uxth r3,r3
 121              	.L3:
 122 003e 1BB2     	 sxth r3,r3
  85:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 123              	 .loc 1 85 0
 124 0040 1846     	 mov r0,r3
 125 0042 1037     	 adds r7,r7,#16
 126              	.LCFI3:
 127              	 .cfi_def_cfa_offset 8
 128 0044 BD46     	 mov sp,r7
 129              	.LCFI4:
 130              	 .cfi_def_cfa_register 13
 131              	 
 132 0046 80BD     	 pop {r7,pc}
 133              	 .cfi_endproc
 134              	.LFE349:
 136              	 .section .text.dps310_write_byte_bitfield,"ax",%progbits
 137              	 .align 2
 138              	 .global dps310_write_byte_bitfield
 139              	 .thumb
 140              	 .thumb_func
 142              	dps310_write_byte_bitfield:
 143              	.LFB350:
  86:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
  87:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_write_byte_bitfield(uint8_t data, reg_mask_t reg_mask, bool comparison_timer)
  88:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 144              	 .loc 1 88 0
 145              	 .cfi_startproc
 146              	 
 147              	 
 148 0000 80B5     	 push {r7,lr}
 149              	.LCFI5:
 150              	 .cfi_def_cfa_offset 8
 151              	 .cfi_offset 7,-8
 152              	 .cfi_offset 14,-4
 153 0002 86B0     	 sub sp,sp,#24
 154              	.LCFI6:
 155              	 .cfi_def_cfa_offset 32
 156 0004 02AF     	 add r7,sp,#8
 157              	.LCFI7:
 158              	 .cfi_def_cfa 7,24
 159 0006 0346     	 mov r3,r0
 160 0008 3960     	 str r1,[r7]
 161 000a FB71     	 strb r3,[r7,#7]
 162 000c 1346     	 mov r3,r2
 163 000e BB71     	 strb r3,[r7,#6]
  89:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	uint8_t tx_data[2] = {0};
 164              	 .loc 1 89 0
 165 0010 0023     	 movs r3,#0
 166 0012 3B81     	 strh r3,[r7,#8]
  90:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t error_code = 1;
 167              	 .loc 1 90 0
 168 0014 0123     	 movs r3,#1
 169 0016 FB81     	 strh r3,[r7,#14]
  91:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t old = i2c_read_byte(DPS310_ADDRESS_SDO_FLOAT, reg_mask.register_address, comparison_timer)
 170              	 .loc 1 91 0
 171 0018 3A78     	 ldrb r2,[r7]
 172 001a BB79     	 ldrb r3,[r7,#6]
 173 001c 7720     	 movs r0,#119
 174 001e 1146     	 mov r1,r2
 175 0020 1A46     	 mov r2,r3
 176 0022 FFF7FEFF 	 bl i2c_read_byte
 177 0026 0346     	 mov r3,r0
 178 0028 BB81     	 strh r3,[r7,#12]
  92:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (old < 0)
 179              	 .loc 1 92 0
 180 002a B7F90C30 	 ldrsh r3,[r7,#12]
 181 002e 002B     	 cmp r3,#0
 182 0030 01DA     	 bge .L5
  93:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
  94:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		//fail while reading
  95:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return old;
 183              	 .loc 1 95 0
 184 0032 BB89     	 ldrh r3,[r7,#12]
 185 0034 2BE0     	 b .L8
 186              	.L5:
  96:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
  97:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	tx_data[0] = reg_mask.register_address;
 187              	 .loc 1 97 0
 188 0036 3B78     	 ldrb r3,[r7]
 189 0038 3B72     	 strb r3,[r7,#8]
  98:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	tx_data[1] = ((uint8_t)old & ~reg_mask.mask) | ((data << reg_mask.shift) & reg_mask.mask);
 190              	 .loc 1 98 0
 191 003a BB89     	 ldrh r3,[r7,#12]
 192 003c DAB2     	 uxtb r2,r3
 193 003e 7B78     	 ldrb r3,[r7,#1]
 194 0040 DBB2     	 uxtb r3,r3
 195 0042 DB43     	 mvns r3,r3
 196 0044 DBB2     	 uxtb r3,r3
 197 0046 1340     	 ands r3,r3,r2
 198 0048 DAB2     	 uxtb r2,r3
 199 004a FB79     	 ldrb r3,[r7,#7]
 200 004c B978     	 ldrb r1,[r7,#2]
 201 004e 8B40     	 lsls r3,r3,r1
 202 0050 D9B2     	 uxtb r1,r3
 203 0052 7B78     	 ldrb r3,[r7,#1]
 204 0054 DBB2     	 uxtb r3,r3
 205 0056 0B40     	 ands r3,r3,r1
 206 0058 DBB2     	 uxtb r3,r3
 207 005a 1343     	 orrs r3,r3,r2
 208 005c DBB2     	 uxtb r3,r3
 209 005e DBB2     	 uxtb r3,r3
 210 0060 7B72     	 strb r3,[r7,#9]
  99:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	error_code = i2c_transmit_data(DPS310_ADDRESS_SDO_FLOAT, tx_data, 2, true, true, comparison_timer)
 211              	 .loc 1 99 0
 212 0062 07F10802 	 add r2,r7,#8
 213 0066 0123     	 movs r3,#1
 214 0068 0093     	 str r3,[sp]
 215 006a BB79     	 ldrb r3,[r7,#6]
 216 006c 0193     	 str r3,[sp,#4]
 217 006e 7720     	 movs r0,#119
 218 0070 1146     	 mov r1,r2
 219 0072 0222     	 movs r2,#2
 220 0074 0123     	 movs r3,#1
 221 0076 FFF7FEFF 	 bl i2c_transmit_data
 222 007a 0346     	 mov r3,r0
 223 007c FB81     	 strh r3,[r7,#14]
 100:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(error_code != 0)
 224              	 .loc 1 100 0
 225 007e B7F90E30 	 ldrsh r3,[r7,#14]
 226 0082 002B     	 cmp r3,#0
 227 0084 02D0     	 beq .L7
 101:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{return -1;}
 228              	 .loc 1 101 0
 229 0086 4FF6FF73 	 movw r3,#65535
 230 008a 00E0     	 b .L8
 231              	.L7:
 102:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	error_code = i2c_transmit_data(DPS310_ADDRESS_SDO_FLOAT, &tx_data[1], 1, false, true);
 103:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	if(error_code != 0)
 104:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //		{return -1;}
 105:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return error_code;
 232              	 .loc 1 105 0
 233 008c FB89     	 ldrh r3,[r7,#14]
 234              	.L8:
 235 008e 1BB2     	 sxth r3,r3
 106:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 236              	 .loc 1 106 0 discriminator 1
 237 0090 1846     	 mov r0,r3
 238 0092 1037     	 adds r7,r7,#16
 239              	.LCFI8:
 240              	 .cfi_def_cfa_offset 8
 241 0094 BD46     	 mov sp,r7
 242              	.LCFI9:
 243              	 .cfi_def_cfa_register 13
 244              	 
 245 0096 80BD     	 pop {r7,pc}
 246              	 .cfi_endproc
 247              	.LFE350:
 249              	 .section .text.dps310_write_byte,"ax",%progbits
 250              	 .align 2
 251              	 .global dps310_write_byte
 252              	 .thumb
 253              	 .thumb_func
 255              	dps310_write_byte:
 256              	.LFB351:
 107:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 108:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_write_byte(uint8_t reg_address, uint8_t data, bool check, bool comparison_timer)
 109:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 257              	 .loc 1 109 0
 258              	 .cfi_startproc
 259              	 
 260              	 
 261 0000 90B5     	 push {r4,r7,lr}
 262              	.LCFI10:
 263              	 .cfi_def_cfa_offset 12
 264              	 .cfi_offset 4,-12
 265              	 .cfi_offset 7,-8
 266              	 .cfi_offset 14,-4
 267 0002 87B0     	 sub sp,sp,#28
 268              	.LCFI11:
 269              	 .cfi_def_cfa_offset 40
 270 0004 02AF     	 add r7,sp,#8
 271              	.LCFI12:
 272              	 .cfi_def_cfa 7,32
 273 0006 0446     	 mov r4,r0
 274 0008 0846     	 mov r0,r1
 275 000a 1146     	 mov r1,r2
 276 000c 1A46     	 mov r2,r3
 277 000e 2346     	 mov r3,r4
 278 0010 FB71     	 strb r3,[r7,#7]
 279 0012 0346     	 mov r3,r0
 280 0014 BB71     	 strb r3,[r7,#6]
 281 0016 0B46     	 mov r3,r1
 282 0018 7B71     	 strb r3,[r7,#5]
 283 001a 1346     	 mov r3,r2
 284 001c 3B71     	 strb r3,[r7,#4]
 110:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	uint8_t tx_data[2] = {0};
 285              	 .loc 1 110 0
 286 001e 0023     	 movs r3,#0
 287 0020 3B81     	 strh r3,[r7,#8]
 111:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	tx_data[0] = reg_address;
 288              	 .loc 1 111 0
 289 0022 FB79     	 ldrb r3,[r7,#7]
 290 0024 3B72     	 strb r3,[r7,#8]
 112:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	tx_data[1] = data;
 291              	 .loc 1 112 0
 292 0026 BB79     	 ldrb r3,[r7,#6]
 293 0028 7B72     	 strb r3,[r7,#9]
 113:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t error_code = i2c_transmit_data(DPS310_ADDRESS_SDO_FLOAT, tx_data, 2, true, true, compariso
 294              	 .loc 1 113 0
 295 002a 07F10802 	 add r2,r7,#8
 296 002e 0123     	 movs r3,#1
 297 0030 0093     	 str r3,[sp]
 298 0032 3B79     	 ldrb r3,[r7,#4]
 299 0034 0193     	 str r3,[sp,#4]
 300 0036 7720     	 movs r0,#119
 301 0038 1146     	 mov r1,r2
 302 003a 0222     	 movs r2,#2
 303 003c 0123     	 movs r3,#1
 304 003e FFF7FEFF 	 bl i2c_transmit_data
 305 0042 0346     	 mov r3,r0
 306 0044 FB81     	 strh r3,[r7,#14]
 114:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (error_code < 0)
 307              	 .loc 1 114 0
 308 0046 B7F90E30 	 ldrsh r3,[r7,#14]
 309 004a 002B     	 cmp r3,#0
 310 004c 01DA     	 bge .L10
 115:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 116:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return error_code;
 311              	 .loc 1 116 0
 312 004e FB89     	 ldrh r3,[r7,#14]
 313 0050 19E0     	 b .L14
 314              	.L10:
 117:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 118:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (check == false)
 315              	 .loc 1 118 0
 316 0052 7B79     	 ldrb r3,[r7,#5]
 317 0054 83F00103 	 eor r3,r3,#1
 318 0058 DBB2     	 uxtb r3,r3
 319 005a 002B     	 cmp r3,#0
 320 005c 01D0     	 beq .L12
 119:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 120:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return 0;					  //no checking
 321              	 .loc 1 120 0
 322 005e 0023     	 movs r3,#0
 323 0060 11E0     	 b .L14
 324              	.L12:
 121:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 122:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t eval_data = i2c_read_byte(DPS310_ADDRESS_SDO_FLOAT, reg_address, comparison_timer);
 325              	 .loc 1 122 0
 326 0062 FA79     	 ldrb r2,[r7,#7]
 327 0064 3B79     	 ldrb r3,[r7,#4]
 328 0066 7720     	 movs r0,#119
 329 0068 1146     	 mov r1,r2
 330 006a 1A46     	 mov r2,r3
 331 006c FFF7FEFF 	 bl i2c_read_byte
 332 0070 0346     	 mov r3,r0
 333 0072 BB81     	 strh r3,[r7,#12]
 123:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (eval_data == data) //check if desired by calling function
 334              	 .loc 1 123 0
 335 0074 B7F90C20 	 ldrsh r2,[r7,#12]
 336 0078 BB79     	 ldrb r3,[r7,#6]
 337 007a 9A42     	 cmp r2,r3
 338 007c 01D1     	 bne .L13
 124:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 125:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 126:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_SUCCEEDED;
 339              	 .loc 1 126 0
 340 007e 0023     	 movs r3,#0
 341 0080 01E0     	 b .L14
 342              	.L13:
 127:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 128:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	else
 129:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 130:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 343              	 .loc 1 130 0
 344 0082 4FF6FF73 	 movw r3,#65535
 345              	.L14:
 346 0086 1BB2     	 sxth r3,r3
 131:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 132:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 347              	 .loc 1 132 0 discriminator 1
 348 0088 1846     	 mov r0,r3
 349 008a 1437     	 adds r7,r7,#20
 350              	.LCFI13:
 351              	 .cfi_def_cfa_offset 12
 352 008c BD46     	 mov sp,r7
 353              	.LCFI14:
 354              	 .cfi_def_cfa_register 13
 355              	 
 356 008e 90BD     	 pop {r4,r7,pc}
 357              	 .cfi_endproc
 358              	.LFE351:
 360              	 .section .text.dps310_read_register_block,"ax",%progbits
 361              	 .align 2
 362              	 .global dps310_read_register_block
 363              	 .thumb
 364              	 .thumb_func
 366              	dps310_read_register_block:
 367              	.LFB352:
 133:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 134:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_read_register_block(reg_block_t reg_block, uint8_t *buffer, bool comparison_timer)
 135:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 368              	 .loc 1 135 0
 369              	 .cfi_startproc
 370              	 
 371              	 
 372 0000 90B5     	 push {r4,r7,lr}
 373              	.LCFI15:
 374              	 .cfi_def_cfa_offset 12
 375              	 .cfi_offset 4,-12
 376              	 .cfi_offset 7,-8
 377              	 .cfi_offset 14,-4
 378 0002 89B0     	 sub sp,sp,#36
 379              	.LCFI16:
 380              	 .cfi_def_cfa_offset 48
 381 0004 02AF     	 add r7,sp,#8
 382              	.LCFI17:
 383              	 .cfi_def_cfa 7,40
 384 0006 B881     	 strh r0,[r7,#12]
 385 0008 B960     	 str r1,[r7,#8]
 386 000a 1346     	 mov r3,r2
 387 000c FB71     	 strb r3,[r7,#7]
 136:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//do not read if there is no buffer
 137:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(buffer == NULL)
 388              	 .loc 1 137 0
 389 000e BB68     	 ldr r3,[r7,#8]
 390 0010 002B     	 cmp r3,#0
 391 0012 02D1     	 bne .L16
 138:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 139:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return -1;
 392              	 .loc 1 139 0
 393 0014 4FF6FF73 	 movw r3,#65535
 394 0018 13E0     	 b .L17
 395              	.L16:
 140:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 141:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 142:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t error_code = i2c_read_block(DPS310_ADDRESS_SDO_FLOAT, reg_block.register_address, buffer, 
 396              	 .loc 1 142 0
 397 001a 3A7B     	 ldrb r2,[r7,#12]
 398 001c 7C7B     	 ldrb r4,[r7,#13]
 399 001e FB79     	 ldrb r3,[r7,#7]
 400 0020 0093     	 str r3,[sp]
 401 0022 7720     	 movs r0,#119
 402 0024 1146     	 mov r1,r2
 403 0026 BA68     	 ldr r2,[r7,#8]
 404 0028 2346     	 mov r3,r4
 405 002a FFF7FEFF 	 bl i2c_read_block
 406 002e 0346     	 mov r3,r0
 407 0030 FB82     	 strh r3,[r7,#22]
 143:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (error_code < 0)
 408              	 .loc 1 143 0
 409 0032 B7F91630 	 ldrsh r3,[r7,#22]
 410 0036 002B     	 cmp r3,#0
 411 0038 01DA     	 bge .L18
 144:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 145:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return error_code;
 412              	 .loc 1 145 0
 413 003a FB8A     	 ldrh r3,[r7,#22]
 414 003c 01E0     	 b .L17
 415              	.L18:
 146:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 147:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 148:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return reg_block.length;
 416              	 .loc 1 148 0
 417 003e 7B7B     	 ldrb r3,[r7,#13]
 418 0040 9BB2     	 uxth r3,r3
 419              	.L17:
 420 0042 1BB2     	 sxth r3,r3
 149:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 421              	 .loc 1 149 0
 422 0044 1846     	 mov r0,r3
 423 0046 1C37     	 adds r7,r7,#28
 424              	.LCFI18:
 425              	 .cfi_def_cfa_offset 12
 426 0048 BD46     	 mov sp,r7
 427              	.LCFI19:
 428              	 .cfi_def_cfa_register 13
 429              	 
 430 004a 90BD     	 pop {r4,r7,pc}
 431              	 .cfi_endproc
 432              	.LFE352:
 434              	 .section .text.get_twos_complement,"ax",%progbits
 435              	 .align 2
 436              	 .global get_twos_complement
 437              	 .thumb
 438              	 .thumb_func
 440              	get_twos_complement:
 441              	.LFB353:
 150:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 151:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** void get_twos_complement(int32_t *raw, uint8_t length)
 152:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 442              	 .loc 1 152 0
 443              	 .cfi_startproc
 444              	 
 445              	 
 446              	 
 447 0000 80B4     	 push {r7}
 448              	.LCFI20:
 449              	 .cfi_def_cfa_offset 4
 450              	 .cfi_offset 7,-4
 451 0002 83B0     	 sub sp,sp,#12
 452              	.LCFI21:
 453              	 .cfi_def_cfa_offset 16
 454 0004 00AF     	 add r7,sp,#0
 455              	.LCFI22:
 456              	 .cfi_def_cfa_register 7
 457 0006 7860     	 str r0,[r7,#4]
 458 0008 0B46     	 mov r3,r1
 459 000a FB70     	 strb r3,[r7,#3]
 153:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (*raw & ((uint32_t)1 << (length - 1)))
 460              	 .loc 1 153 0
 461 000c 7B68     	 ldr r3,[r7,#4]
 462 000e 1B68     	 ldr r3,[r3]
 463 0010 1A46     	 mov r2,r3
 464 0012 FB78     	 ldrb r3,[r7,#3]
 465 0014 013B     	 subs r3,r3,#1
 466 0016 22FA03F3 	 lsr r3,r2,r3
 467 001a 03F00103 	 and r3,r3,#1
 468 001e 002B     	 cmp r3,#0
 469 0020 0AD0     	 beq .L19
 154:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 155:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		*raw -= (uint32_t)1 << length;
 470              	 .loc 1 155 0
 471 0022 7B68     	 ldr r3,[r7,#4]
 472 0024 1B68     	 ldr r3,[r3]
 473 0026 1946     	 mov r1,r3
 474 0028 FB78     	 ldrb r3,[r7,#3]
 475 002a 0122     	 movs r2,#1
 476 002c 02FA03F3 	 lsl r3,r2,r3
 477 0030 CB1A     	 subs r3,r1,r3
 478 0032 1A46     	 mov r2,r3
 479 0034 7B68     	 ldr r3,[r7,#4]
 480 0036 1A60     	 str r2,[r3]
 481              	.L19:
 156:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 157:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 482              	 .loc 1 157 0
 483 0038 0C37     	 adds r7,r7,#12
 484              	.LCFI23:
 485              	 .cfi_def_cfa_offset 4
 486 003a BD46     	 mov sp,r7
 487              	.LCFI24:
 488              	 .cfi_def_cfa_register 13
 489              	 
 490 003c 5DF8047B 	 ldr r7,[sp],#4
 491              	.LCFI25:
 492              	 .cfi_restore 7
 493              	 .cfi_def_cfa_offset 0
 494 0040 7047     	 bx lr
 495              	 .cfi_endproc
 496              	.LFE353:
 498 0042 00BF     	 .section .text.calc_busy_time,"ax",%progbits
 499              	 .align 2
 500              	 .global calc_busy_time
 501              	 .thumb
 502              	 .thumb_func
 504              	calc_busy_time:
 505              	.LFB354:
 158:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 159:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** uint16_t calc_busy_time(uint16_t mr, uint16_t osr)
 160:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 506              	 .loc 1 160 0
 507              	 .cfi_startproc
 508              	 
 509              	 
 510              	 
 511 0000 80B4     	 push {r7}
 512              	.LCFI26:
 513              	 .cfi_def_cfa_offset 4
 514              	 .cfi_offset 7,-4
 515 0002 83B0     	 sub sp,sp,#12
 516              	.LCFI27:
 517              	 .cfi_def_cfa_offset 16
 518 0004 00AF     	 add r7,sp,#0
 519              	.LCFI28:
 520              	 .cfi_def_cfa_register 7
 521 0006 0346     	 mov r3,r0
 522 0008 0A46     	 mov r2,r1
 523 000a FB80     	 strh r3,[r7,#6]
 524 000c 1346     	 mov r3,r2
 525 000e BB80     	 strh r3,[r7,#4]
 161:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//formula from datasheet (optimized)
 162:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return ((uint32_t)20U << mr) + ((uint32_t)16U << (osr + mr));
 526              	 .loc 1 162 0
 527 0010 FB88     	 ldrh r3,[r7,#6]
 528 0012 1422     	 movs r2,#20
 529 0014 02FA03F3 	 lsl r3,r2,r3
 530 0018 9AB2     	 uxth r2,r3
 531 001a B988     	 ldrh r1,[r7,#4]
 532 001c FB88     	 ldrh r3,[r7,#6]
 533 001e 0B44     	 add r3,r3,r1
 534 0020 1021     	 movs r1,#16
 535 0022 01FA03F3 	 lsl r3,r1,r3
 536 0026 9BB2     	 uxth r3,r3
 537 0028 1344     	 add r3,r3,r2
 538 002a 9BB2     	 uxth r3,r3
 163:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 539              	 .loc 1 163 0
 540 002c 1846     	 mov r0,r3
 541 002e 0C37     	 adds r7,r7,#12
 542              	.LCFI29:
 543              	 .cfi_def_cfa_offset 4
 544 0030 BD46     	 mov sp,r7
 545              	.LCFI30:
 546              	 .cfi_def_cfa_register 13
 547              	 
 548 0032 5DF8047B 	 ldr r7,[sp],#4
 549              	.LCFI31:
 550              	 .cfi_restore 7
 551              	 .cfi_def_cfa_offset 0
 552 0036 7047     	 bx lr
 553              	 .cfi_endproc
 554              	.LFE354:
 556              	 .section .text.calc_temp,"ax",%progbits
 557              	 .align 2
 558              	 .global calc_temp
 559              	 .thumb
 560              	 .thumb_func
 562              	calc_temp:
 563              	.LFB355:
 164:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 165:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** float calc_temp(int32_t raw)
 166:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 564              	 .loc 1 166 0
 565              	 .cfi_startproc
 566              	 
 567              	 
 568              	 
 569 0000 80B4     	 push {r7}
 570              	.LCFI32:
 571              	 .cfi_def_cfa_offset 4
 572              	 .cfi_offset 7,-4
 573 0002 85B0     	 sub sp,sp,#20
 574              	.LCFI33:
 575              	 .cfi_def_cfa_offset 24
 576 0004 00AF     	 add r7,sp,#0
 577              	.LCFI34:
 578              	 .cfi_def_cfa_register 7
 579 0006 7860     	 str r0,[r7,#4]
 167:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	float temp = raw;
 580              	 .loc 1 167 0
 581 0008 7B68     	 ldr r3,[r7,#4]
 582 000a 07EE903A 	 fmsr s15,r3
 583 000e F8EEE77A 	 fsitos s15,s15
 584 0012 C7ED037A 	 fsts s15,[r7,#12]
 168:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 169:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//scale temperature according to scaling table and oversampling
 170:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	temp /= scaling_facts[dps310_status.temp_osr];
 585              	 .loc 1 170 0
 586 0016 174B     	 ldr r3,.L25
 587 0018 1B79     	 ldrb r3,[r3,#4]
 588 001a 1A46     	 mov r2,r3
 589 001c 164B     	 ldr r3,.L25+4
 590 001e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 591 0022 07EE903A 	 fmsr s15,r3
 592 0026 F8EEE77A 	 fsitos s15,s15
 593 002a 97ED037A 	 flds s14,[r7,#12]
 594 002e C7EE277A 	 fdivs s15,s14,s15
 595 0032 C7ED037A 	 fsts s15,[r7,#12]
 171:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 172:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//update last measured temperature
 173:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//it will be used for pressure compensation
 174:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_coeff.last_temp_scal = temp;
 596              	 .loc 1 174 0
 597 0036 114A     	 ldr r2,.L25+8
 598 0038 FB68     	 ldr r3,[r7,#12]
 599 003a 5362     	 str r3,[r2,#36]
 175:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 176:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//Calculate compensated temperature
 177:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	temp = dps310_coeff.c0_half + dps310_coeff.c1 * temp;
 600              	 .loc 1 177 0
 601 003c 0F4B     	 ldr r3,.L25+8
 602 003e 1B68     	 ldr r3,[r3]
 603 0040 07EE903A 	 fmsr s15,r3
 604 0044 B8EEE77A 	 fsitos s14,s15
 605 0048 0C4B     	 ldr r3,.L25+8
 606 004a 5B68     	 ldr r3,[r3,#4]
 607 004c 07EE903A 	 fmsr s15,r3
 608 0050 F8EEE76A 	 fsitos s13,s15
 609 0054 D7ED037A 	 flds s15,[r7,#12]
 610 0058 66EEA77A 	 fmuls s15,s13,s15
 611 005c 77EE277A 	 fadds s15,s14,s15
 612 0060 C7ED037A 	 fsts s15,[r7,#12]
 178:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 179:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return temp;
 613              	 .loc 1 179 0
 614 0064 FB68     	 ldr r3,[r7,#12]
 180:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 615              	 .loc 1 180 0
 616 0066 1846     	 mov r0,r3
 617 0068 1437     	 adds r7,r7,#20
 618              	.LCFI35:
 619              	 .cfi_def_cfa_offset 4
 620 006a BD46     	 mov sp,r7
 621              	.LCFI36:
 622              	 .cfi_def_cfa_register 13
 623              	 
 624 006c 5DF8047B 	 ldr r7,[sp],#4
 625              	.LCFI37:
 626              	 .cfi_restore 7
 627              	 .cfi_def_cfa_offset 0
 628 0070 7047     	 bx lr
 629              	.L26:
 630 0072 00BF     	 .align 2
 631              	.L25:
 632 0074 00000000 	 .word dps310_status
 633 0078 00000000 	 .word scaling_facts
 634 007c 00000000 	 .word dps310_coeff
 635              	 .cfi_endproc
 636              	.LFE355:
 638              	 .section .text.calc_preassure,"ax",%progbits
 639              	 .align 2
 640              	 .global calc_preassure
 641              	 .thumb
 642              	 .thumb_func
 644              	calc_preassure:
 645              	.LFB356:
 181:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 182:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** float calc_preassure(int32_t raw)
 183:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 646              	 .loc 1 183 0
 647              	 .cfi_startproc
 648              	 
 649              	 
 650              	 
 651 0000 80B4     	 push {r7}
 652              	.LCFI38:
 653              	 .cfi_def_cfa_offset 4
 654              	 .cfi_offset 7,-4
 655 0002 85B0     	 sub sp,sp,#20
 656              	.LCFI39:
 657              	 .cfi_def_cfa_offset 24
 658 0004 00AF     	 add r7,sp,#0
 659              	.LCFI40:
 660              	 .cfi_def_cfa_register 7
 661 0006 7860     	 str r0,[r7,#4]
 184:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	float prs = raw;
 662              	 .loc 1 184 0
 663 0008 7B68     	 ldr r3,[r7,#4]
 664 000a 07EE903A 	 fmsr s15,r3
 665 000e F8EEE77A 	 fsitos s15,s15
 666 0012 C7ED037A 	 fsts s15,[r7,#12]
 185:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 186:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//scale pressure according to scaling table and oversampling
 187:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	prs /= scaling_facts[dps310_status.prs_osr];
 667              	 .loc 1 187 0
 668 0016 344B     	 ldr r3,.L29
 669 0018 9B79     	 ldrb r3,[r3,#6]
 670 001a 1A46     	 mov r2,r3
 671 001c 334B     	 ldr r3,.L29+4
 672 001e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 673 0022 07EE903A 	 fmsr s15,r3
 674 0026 F8EEE77A 	 fsitos s15,s15
 675 002a 97ED037A 	 flds s14,[r7,#12]
 676 002e C7EE277A 	 fdivs s15,s14,s15
 677 0032 C7ED037A 	 fsts s15,[r7,#12]
 188:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 189:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//Calculate compensated pressure
 190:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	prs = dps310_coeff.c00 + prs * (dps310_coeff.c10 + prs * (dps310_coeff.c20 + prs * dps310_coeff.c3
 678              	 .loc 1 190 0
 679 0036 2E4B     	 ldr r3,.L29+8
 680 0038 9B68     	 ldr r3,[r3,#8]
 681 003a 07EE903A 	 fmsr s15,r3
 682 003e B8EEE77A 	 fsitos s14,s15
 683 0042 2B4B     	 ldr r3,.L29+8
 684 0044 DB68     	 ldr r3,[r3,#12]
 685 0046 07EE903A 	 fmsr s15,r3
 686 004a F8EEE76A 	 fsitos s13,s15
 687 004e 284B     	 ldr r3,.L29+8
 688 0050 9B69     	 ldr r3,[r3,#24]
 689 0052 07EE903A 	 fmsr s15,r3
 690 0056 B8EEE76A 	 fsitos s12,s15
 691 005a 254B     	 ldr r3,.L29+8
 692 005c 1B6A     	 ldr r3,[r3,#32]
 693 005e 07EE903A 	 fmsr s15,r3
 694 0062 F8EEE75A 	 fsitos s11,s15
 695 0066 D7ED037A 	 flds s15,[r7,#12]
 696 006a 65EEA77A 	 fmuls s15,s11,s15
 697 006e 36EE276A 	 fadds s12,s12,s15
 698 0072 D7ED037A 	 flds s15,[r7,#12]
 699 0076 66EE277A 	 fmuls s15,s12,s15
 700 007a 76EEA76A 	 fadds s13,s13,s15
 701 007e D7ED037A 	 flds s15,[r7,#12]
 702 0082 66EEA77A 	 fmuls s15,s13,s15
 703 0086 37EE277A 	 fadds s14,s14,s15
 704 008a 194B     	 ldr r3,.L29+8
 705 008c D3ED096A 	 flds s13,[r3,#36]
 706 0090 174B     	 ldr r3,.L29+8
 707 0092 1B69     	 ldr r3,[r3,#16]
 708 0094 07EE903A 	 fmsr s15,r3
 709 0098 B8EEE76A 	 fsitos s12,s15
 710 009c 144B     	 ldr r3,.L29+8
 711 009e 5B69     	 ldr r3,[r3,#20]
 712 00a0 07EE903A 	 fmsr s15,r3
 713 00a4 F8EEE75A 	 fsitos s11,s15
 714 00a8 114B     	 ldr r3,.L29+8
 715 00aa DB69     	 ldr r3,[r3,#28]
 716 00ac 07EE903A 	 fmsr s15,r3
 717 00b0 B8EEE75A 	 fsitos s10,s15
 718 00b4 D7ED037A 	 flds s15,[r7,#12]
 719 00b8 65EE277A 	 fmuls s15,s10,s15
 720 00bc 75EEA75A 	 fadds s11,s11,s15
 721 00c0 D7ED037A 	 flds s15,[r7,#12]
 722 00c4 65EEA77A 	 fmuls s15,s11,s15
 723 00c8 76EE277A 	 fadds s15,s12,s15
 724 00cc 66EEA77A 	 fmuls s15,s13,s15
 725 00d0 77EE277A 	 fadds s15,s14,s15
 726 00d4 C7ED037A 	 fsts s15,[r7,#12]
 191:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 192:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//return pressure
 193:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return prs;
 727              	 .loc 1 193 0
 728 00d8 FB68     	 ldr r3,[r7,#12]
 194:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 729              	 .loc 1 194 0
 730 00da 1846     	 mov r0,r3
 731 00dc 1437     	 adds r7,r7,#20
 732              	.LCFI41:
 733              	 .cfi_def_cfa_offset 4
 734 00de BD46     	 mov sp,r7
 735              	.LCFI42:
 736              	 .cfi_def_cfa_register 13
 737              	 
 738 00e0 5DF8047B 	 ldr r7,[sp],#4
 739              	.LCFI43:
 740              	 .cfi_restore 7
 741              	 .cfi_def_cfa_offset 0
 742 00e4 7047     	 bx lr
 743              	.L30:
 744 00e6 00BF     	 .align 2
 745              	.L29:
 746 00e8 00000000 	 .word dps310_status
 747 00ec 00000000 	 .word scaling_facts
 748 00f0 00000000 	 .word dps310_coeff
 749              	 .cfi_endproc
 750              	.LFE356:
 752              	 .section .text.dps310_init,"ax",%progbits
 753              	 .align 2
 754              	 .global dps310_init
 755              	 .thumb
 756              	 .thumb_func
 758              	dps310_init:
 759              	.LFB357:
 195:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 196:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_init()
 197:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 760              	 .loc 1 197 0
 761              	 .cfi_startproc
 762              	 
 763              	 
 764 0000 80B5     	 push {r7,lr}
 765              	.LCFI44:
 766              	 .cfi_def_cfa_offset 8
 767              	 .cfi_offset 7,-8
 768              	 .cfi_offset 14,-4
 769 0002 82B0     	 sub sp,sp,#8
 770              	.LCFI45:
 771              	 .cfi_def_cfa_offset 16
 772 0004 00AF     	 add r7,sp,#0
 773              	.LCFI46:
 774              	 .cfi_def_cfa_register 7
 198:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t state = 0;
 775              	 .loc 1 198 0
 776 0006 0023     	 movs r3,#0
 777 0008 FB80     	 strh r3,[r7,#6]
 199:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//start_up time of DPS310
 200:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	delay_ms(100);
 778              	 .loc 1 200 0
 779 000a 6420     	 movs r0,#100
 780 000c FFF7FEFF 	 bl delay_ms
 201:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 202:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(dps310_get_product_id() < 0)
 781              	 .loc 1 202 0
 782 0010 FFF7FEFF 	 bl dps310_get_product_id
 783 0014 0346     	 mov r3,r0
 784 0016 002B     	 cmp r3,#0
 785 0018 05DA     	 bge .L32
 203:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 204:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		//connected device is not a Dps310
 205:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_status.init_flag = false;
 786              	 .loc 1 205 0
 787 001a 3C4B     	 ldr r3,.L40
 788 001c 0022     	 movs r2,#0
 789 001e 1A70     	 strb r2,[r3]
 206:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 790              	 .loc 1 206 0
 791 0020 4FF6FE73 	 movw r3,#65534
 792 0024 6DE0     	 b .L33
 793              	.L32:
 207:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 208:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//Softreset to see if everything is in order
 209:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 210:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_write_byte(0x0C, 0b1001, false, false);
 794              	 .loc 1 210 0
 795 0026 0C20     	 movs r0,#12
 796 0028 0921     	 movs r1,#9
 797 002a 0022     	 movs r2,#0
 798 002c 0023     	 movs r3,#0
 799 002e FFF7FEFF 	 bl dps310_write_byte
 800              	.L34:
 211:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	do
 212:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 213:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		delay_ms(200);
 801              	 .loc 1 213 0 discriminator 1
 802 0032 C820     	 movs r0,#200
 803 0034 FFF7FEFF 	 bl delay_ms
 214:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		state = i2c_read_byte(DPS310_ADDRESS_SDO_FLOAT, 0x08, false);
 804              	 .loc 1 214 0 discriminator 1
 805 0038 7720     	 movs r0,#119
 806 003a 0821     	 movs r1,#8
 807 003c 0022     	 movs r2,#0
 808 003e FFF7FEFF 	 bl i2c_read_byte
 809 0042 0346     	 mov r3,r0
 810 0044 FB80     	 strh r3,[r7,#6]
 215:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}while(!(state & (0x80 | 0x40)));
 811              	 .loc 1 215 0 discriminator 1
 812 0046 FB88     	 ldrh r3,[r7,#6]
 813 0048 03F0C003 	 and r3,r3,#192
 814 004c 002B     	 cmp r3,#0
 815 004e F0D0     	 beq .L34
 216:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 217:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 218:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 219:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(dps310_get_revision_id() < 0)
 816              	 .loc 1 219 0
 817 0050 FFF7FEFF 	 bl dps310_get_revision_id
 818 0054 0346     	 mov r3,r0
 819 0056 002B     	 cmp r3,#0
 820 0058 05DA     	 bge .L35
 220:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 221:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_status.init_flag = false;
 821              	 .loc 1 221 0
 822 005a 2C4B     	 ldr r3,.L40
 823 005c 0022     	 movs r2,#0
 824 005e 1A70     	 strb r2,[r3]
 222:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 825              	 .loc 1 222 0
 826 0060 4FF6FE73 	 movw r3,#65534
 827 0064 4DE0     	 b .L33
 828              	.L35:
 223:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 224:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 225:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//find out which temperature sensor is calibrated with coefficients...
 226:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t sensor = dps310_get_calibrated_temp_sensor();
 829              	 .loc 1 226 0
 830 0066 FFF7FEFF 	 bl dps310_get_calibrated_temp_sensor
 831 006a 0346     	 mov r3,r0
 832 006c BB80     	 strh r3,[r7,#4]
 227:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(sensor < 0)
 833              	 .loc 1 227 0
 834 006e B7F90430 	 ldrsh r3,[r7,#4]
 835 0072 002B     	 cmp r3,#0
 836 0074 05DA     	 bge .L36
 228:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 229:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_status.init_flag = false;
 837              	 .loc 1 229 0
 838 0076 254B     	 ldr r3,.L40
 839 0078 0022     	 movs r2,#0
 840 007a 1A70     	 strb r2,[r3]
 230:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 841              	 .loc 1 230 0
 842 007c 4FF6FE73 	 movw r3,#65534
 843 0080 3FE0     	 b .L33
 844              	.L36:
 231:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 232:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 233:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	// use that sensor for temperature measurement
 234:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(dps310_write_byte_bitfield((uint8_t)sensor, registers[TEMP_SENSOR], false) < 0)
 845              	 .loc 1 234 0
 846 0082 BB88     	 ldrh r3,[r7,#4]
 847 0084 D8B2     	 uxtb r0,r3
 848 0086 224B     	 ldr r3,.L40+4
 849 0088 9A79     	 ldrb r2,[r3,#6]
 850 008a D979     	 ldrb r1,[r3,#7]
 851 008c 0902     	 lsls r1,r1,#8
 852 008e 0A43     	 orrs r2,r2,r1
 853 0090 1B7A     	 ldrb r3,[r3,#8]
 854 0092 1B04     	 lsls r3,r3,#16
 855 0094 1A43     	 orrs r2,r2,r3
 856 0096 0023     	 movs r3,#0
 857 0098 62F31703 	 bfi r3,r2,#0,#24
 858 009c 1946     	 mov r1,r3
 859 009e 0022     	 movs r2,#0
 860 00a0 FFF7FEFF 	 bl dps310_write_byte_bitfield
 861 00a4 0346     	 mov r3,r0
 862 00a6 002B     	 cmp r3,#0
 863 00a8 05DA     	 bge .L37
 235:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 236:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_status.init_flag = false;
 864              	 .loc 1 236 0
 865 00aa 184B     	 ldr r3,.L40
 866 00ac 0022     	 movs r2,#0
 867 00ae 1A70     	 strb r2,[r3]
 237:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 868              	 .loc 1 237 0
 869 00b0 4FF6FE73 	 movw r3,#65534
 870 00b4 25E0     	 b .L33
 871              	.L37:
 238:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 239:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 240:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//read coefficients
 241:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_get_temp_sensor_coeff() < 0)
 872              	 .loc 1 241 0
 873 00b6 FFF7FEFF 	 bl dps310_get_temp_sensor_coeff
 874 00ba 0346     	 mov r3,r0
 875 00bc 002B     	 cmp r3,#0
 876 00be 05DA     	 bge .L38
 242:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 243:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_status.init_flag = false;
 877              	 .loc 1 243 0
 878 00c0 124B     	 ldr r3,.L40
 879 00c2 0022     	 movs r2,#0
 880 00c4 1A70     	 strb r2,[r3]
 244:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 881              	 .loc 1 244 0
 882 00c6 4FF6FE73 	 movw r3,#65534
 883 00ca 1AE0     	 b .L33
 884              	.L38:
 245:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 246:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 247:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.init_flag = true;
 885              	 .loc 1 247 0
 886 00cc 0F4B     	 ldr r3,.L40
 887 00ce 0122     	 movs r2,#1
 888 00d0 1A70     	 strb r2,[r3]
 248:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_set_standby_mode();
 889              	 .loc 1 248 0
 890 00d2 FFF7FEFF 	 bl dps310_set_standby_mode
 249:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 250:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//	// Fix IC with a fuse bit problem, which lead to a wrong temperature
 251:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//	// Should not affect ICs without this problem
 252:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_correct_temperature();
 891              	 .loc 1 252 0
 892 00d6 FFF7FEFF 	 bl dps310_correct_temperature
 253:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 254:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(dps310_start_measure_both_cont(dps310_status.temp_mr, dps310_status.temp_osr, dps310_status.prs
 893              	 .loc 1 254 0
 894 00da 0C4B     	 ldr r3,.L40
 895 00dc D878     	 ldrb r0,[r3,#3]
 896 00de 0B4B     	 ldr r3,.L40
 897 00e0 1979     	 ldrb r1,[r3,#4]
 898 00e2 0A4B     	 ldr r3,.L40
 899 00e4 5A79     	 ldrb r2,[r3,#5]
 900 00e6 094B     	 ldr r3,.L40
 901 00e8 9B79     	 ldrb r3,[r3,#6]
 902 00ea FFF7FEFF 	 bl dps310_start_measure_both_cont
 903 00ee 0346     	 mov r3,r0
 904 00f0 002B     	 cmp r3,#0
 905 00f2 05DA     	 bge .L39
 255:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 256:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_status.init_flag = false;
 906              	 .loc 1 256 0
 907 00f4 054B     	 ldr r3,.L40
 908 00f6 0022     	 movs r2,#0
 909 00f8 1A70     	 strb r2,[r3]
 257:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 910              	 .loc 1 257 0
 911 00fa 4FF6FE73 	 movw r3,#65534
 912 00fe 00E0     	 b .L33
 913              	.L39:
 258:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 259:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 260:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 261:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return DPS310_SUCCEEDED;
 914              	 .loc 1 261 0
 915 0100 0023     	 movs r3,#0
 916              	.L33:
 917 0102 1BB2     	 sxth r3,r3
 262:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 918              	 .loc 1 262 0
 919 0104 1846     	 mov r0,r3
 920 0106 0837     	 adds r7,r7,#8
 921              	.LCFI47:
 922              	 .cfi_def_cfa_offset 8
 923 0108 BD46     	 mov sp,r7
 924              	.LCFI48:
 925              	 .cfi_def_cfa_register 13
 926              	 
 927 010a 80BD     	 pop {r7,pc}
 928              	.L41:
 929              	 .align 2
 930              	.L40:
 931 010c 00000000 	 .word dps310_status
 932 0110 00000000 	 .word registers
 933              	 .cfi_endproc
 934              	.LFE357:
 936              	 .section .text.dps310_deinit,"ax",%progbits
 937              	 .align 2
 938              	 .global dps310_deinit
 939              	 .thumb
 940              	 .thumb_func
 942              	dps310_deinit:
 943              	.LFB358:
 263:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 264:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** void dps310_deinit(void)
 265:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 944              	 .loc 1 265 0
 945              	 .cfi_startproc
 946              	 
 947              	 
 948 0000 80B5     	 push {r7,lr}
 949              	.LCFI49:
 950              	 .cfi_def_cfa_offset 8
 951              	 .cfi_offset 7,-8
 952              	 .cfi_offset 14,-4
 953 0002 00AF     	 add r7,sp,#0
 954              	.LCFI50:
 955              	 .cfi_def_cfa_register 7
 266:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//Softreset to reset the chip
 267:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//A softreset will run through the same sequence as in power-on reset
 268:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 269:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_write_byte(0x0C, 0b1001, false, false);
 956              	 .loc 1 269 0
 957 0004 0C20     	 movs r0,#12
 958 0006 0921     	 movs r1,#9
 959 0008 0022     	 movs r2,#0
 960 000a 0023     	 movs r3,#0
 961 000c FFF7FEFF 	 bl dps310_write_byte
 270:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 271:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	// reset init status
 272:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.init_flag = 		false;
 962              	 .loc 1 272 0
 963 0010 0E4B     	 ldr r3,.L43
 964 0012 0022     	 movs r2,#0
 965 0014 1A70     	 strb r2,[r3]
 273:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.mode_flag = 		0;
 966              	 .loc 1 273 0
 967 0016 0D4B     	 ldr r3,.L43
 968 0018 0022     	 movs r2,#0
 969 001a 5A70     	 strb r2,[r3,#1]
 274:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.temp_Sensor = 	0;
 970              	 .loc 1 274 0
 971 001c 0B4B     	 ldr r3,.L43
 972 001e 0022     	 movs r2,#0
 973 0020 9A70     	 strb r2,[r3,#2]
 275:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.temp_mr = 		DPS310_OVERSAMPLING_RATE_2;
 974              	 .loc 1 275 0
 975 0022 0A4B     	 ldr r3,.L43
 976 0024 0122     	 movs r2,#1
 977 0026 DA70     	 strb r2,[r3,#3]
 276:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.temp_osr = 		DPS310_PRESCISSION_1x;
 978              	 .loc 1 276 0
 979 0028 084B     	 ldr r3,.L43
 980 002a 0022     	 movs r2,#0
 981 002c 1A71     	 strb r2,[r3,#4]
 277:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.prs_mr = 			DPS310_OVERSAMPLING_RATE_2;
 982              	 .loc 1 277 0
 983 002e 074B     	 ldr r3,.L43
 984 0030 0122     	 movs r2,#1
 985 0032 5A71     	 strb r2,[r3,#5]
 278:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.prs_osr = 		DPS310_PRESCISSION_16x;
 986              	 .loc 1 278 0
 987 0034 054B     	 ldr r3,.L43
 988 0036 0422     	 movs r2,#4
 989 0038 9A71     	 strb r2,[r3,#6]
 279:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.pres_meas = 		0;
 990              	 .loc 1 279 0
 991 003a 044B     	 ldr r3,.L43
 992 003c 4FF00002 	 mov r2,#0
 993 0040 DA60     	 str r2,[r3,#12]
 280:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.temp_meas = 		0;
 994              	 .loc 1 280 0
 995 0042 024B     	 ldr r3,.L43
 996 0044 4FF00002 	 mov r2,#0
 997 0048 9A60     	 str r2,[r3,#8]
 281:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 998              	 .loc 1 281 0
 999 004a 80BD     	 pop {r7,pc}
 1000              	.L44:
 1001              	 .align 2
 1002              	.L43:
 1003 004c 00000000 	 .word dps310_status
 1004              	 .cfi_endproc
 1005              	.LFE358:
 1007              	 .section .text.dps310_get_product_id,"ax",%progbits
 1008              	 .align 2
 1009              	 .global dps310_get_product_id
 1010              	 .thumb
 1011              	 .thumb_func
 1013              	dps310_get_product_id:
 1014              	.LFB359:
 282:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 283:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_get_product_id(void)
 284:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 1015              	 .loc 1 284 0
 1016              	 .cfi_startproc
 1017              	 
 1018              	 
 1019 0000 80B5     	 push {r7,lr}
 1020              	.LCFI51:
 1021              	 .cfi_def_cfa_offset 8
 1022              	 .cfi_offset 7,-8
 1023              	 .cfi_offset 14,-4
 1024 0002 82B0     	 sub sp,sp,#8
 1025              	.LCFI52:
 1026              	 .cfi_def_cfa_offset 16
 1027 0004 00AF     	 add r7,sp,#0
 1028              	.LCFI53:
 1029              	 .cfi_def_cfa_register 7
 285:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t product_id = dps310_read_byte_bitfield(registers[PROD_ID], false);
 1030              	 .loc 1 285 0
 1031 0006 0F4B     	 ldr r3,.L48
 1032 0008 1A78     	 ldrb r2,[r3]
 1033 000a 5978     	 ldrb r1,[r3,#1]
 1034 000c 0902     	 lsls r1,r1,#8
 1035 000e 0A43     	 orrs r2,r2,r1
 1036 0010 9B78     	 ldrb r3,[r3,#2]
 1037 0012 1B04     	 lsls r3,r3,#16
 1038 0014 1A43     	 orrs r2,r2,r3
 1039 0016 0023     	 movs r3,#0
 1040 0018 62F31703 	 bfi r3,r2,#0,#24
 1041 001c 1846     	 mov r0,r3
 1042 001e 0021     	 movs r1,#0
 1043 0020 FFF7FEFF 	 bl dps310_read_byte_bitfield
 1044 0024 0346     	 mov r3,r0
 1045 0026 FB80     	 strh r3,[r7,#6]
 286:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (product_id < 0)
 1046              	 .loc 1 286 0
 1047 0028 B7F90630 	 ldrsh r3,[r7,#6]
 1048 002c 002B     	 cmp r3,#0
 1049 002e 02DA     	 bge .L46
 287:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 288:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		//Connected device is not a Dps310
 289:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 1050              	 .loc 1 289 0
 1051 0030 4FF6FF73 	 movw r3,#65535
 1052 0034 00E0     	 b .L47
 1053              	.L46:
 290:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 291:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return product_id;
 1054              	 .loc 1 291 0
 1055 0036 FB88     	 ldrh r3,[r7,#6]
 1056              	.L47:
 1057 0038 1BB2     	 sxth r3,r3
 292:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 1058              	 .loc 1 292 0
 1059 003a 1846     	 mov r0,r3
 1060 003c 0837     	 adds r7,r7,#8
 1061              	.LCFI54:
 1062              	 .cfi_def_cfa_offset 8
 1063 003e BD46     	 mov sp,r7
 1064              	.LCFI55:
 1065              	 .cfi_def_cfa_register 13
 1066              	 
 1067 0040 80BD     	 pop {r7,pc}
 1068              	.L49:
 1069 0042 00BF     	 .align 2
 1070              	.L48:
 1071 0044 00000000 	 .word registers
 1072              	 .cfi_endproc
 1073              	.LFE359:
 1075              	 .section .text.dps310_get_revision_id,"ax",%progbits
 1076              	 .align 2
 1077              	 .global dps310_get_revision_id
 1078              	 .thumb
 1079              	 .thumb_func
 1081              	dps310_get_revision_id:
 1082              	.LFB360:
 293:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 294:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_get_revision_id(void)
 295:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 1083              	 .loc 1 295 0
 1084              	 .cfi_startproc
 1085              	 
 1086              	 
 1087 0000 80B5     	 push {r7,lr}
 1088              	.LCFI56:
 1089              	 .cfi_def_cfa_offset 8
 1090              	 .cfi_offset 7,-8
 1091              	 .cfi_offset 14,-4
 1092 0002 82B0     	 sub sp,sp,#8
 1093              	.LCFI57:
 1094              	 .cfi_def_cfa_offset 16
 1095 0004 00AF     	 add r7,sp,#0
 1096              	.LCFI58:
 1097              	 .cfi_def_cfa_register 7
 296:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t revision_id = dps310_read_byte_bitfield(registers[REV_ID], false);
 1098              	 .loc 1 296 0
 1099 0006 0F4B     	 ldr r3,.L53
 1100 0008 DA78     	 ldrb r2,[r3,#3]
 1101 000a 1979     	 ldrb r1,[r3,#4]
 1102 000c 0902     	 lsls r1,r1,#8
 1103 000e 0A43     	 orrs r2,r2,r1
 1104 0010 5B79     	 ldrb r3,[r3,#5]
 1105 0012 1B04     	 lsls r3,r3,#16
 1106 0014 1A43     	 orrs r2,r2,r3
 1107 0016 0023     	 movs r3,#0
 1108 0018 62F31703 	 bfi r3,r2,#0,#24
 1109 001c 1846     	 mov r0,r3
 1110 001e 0021     	 movs r1,#0
 1111 0020 FFF7FEFF 	 bl dps310_read_byte_bitfield
 1112 0024 0346     	 mov r3,r0
 1113 0026 FB80     	 strh r3,[r7,#6]
 297:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (revision_id < 0)
 1114              	 .loc 1 297 0
 1115 0028 B7F90630 	 ldrsh r3,[r7,#6]
 1116 002c 002B     	 cmp r3,#0
 1117 002e 02DA     	 bge .L51
 298:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 299:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 1118              	 .loc 1 299 0
 1119 0030 4FF6FF73 	 movw r3,#65535
 1120 0034 00E0     	 b .L52
 1121              	.L51:
 300:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 301:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return revision_id;
 1122              	 .loc 1 301 0
 1123 0036 FB88     	 ldrh r3,[r7,#6]
 1124              	.L52:
 1125 0038 1BB2     	 sxth r3,r3
 302:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 1126              	 .loc 1 302 0
 1127 003a 1846     	 mov r0,r3
 1128 003c 0837     	 adds r7,r7,#8
 1129              	.LCFI59:
 1130              	 .cfi_def_cfa_offset 8
 1131 003e BD46     	 mov sp,r7
 1132              	.LCFI60:
 1133              	 .cfi_def_cfa_register 13
 1134              	 
 1135 0040 80BD     	 pop {r7,pc}
 1136              	.L54:
 1137 0042 00BF     	 .align 2
 1138              	.L53:
 1139 0044 00000000 	 .word registers
 1140              	 .cfi_endproc
 1141              	.LFE360:
 1143              	 .section .text.dps310_get_calibrated_temp_sensor,"ax",%progbits
 1144              	 .align 2
 1145              	 .global dps310_get_calibrated_temp_sensor
 1146              	 .thumb
 1147              	 .thumb_func
 1149              	dps310_get_calibrated_temp_sensor:
 1150              	.LFB361:
 303:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 304:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_get_calibrated_temp_sensor(void)
 305:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 1151              	 .loc 1 305 0
 1152              	 .cfi_startproc
 1153              	 
 1154              	 
 1155 0000 80B5     	 push {r7,lr}
 1156              	.LCFI61:
 1157              	 .cfi_def_cfa_offset 8
 1158              	 .cfi_offset 7,-8
 1159              	 .cfi_offset 14,-4
 1160 0002 82B0     	 sub sp,sp,#8
 1161              	.LCFI62:
 1162              	 .cfi_def_cfa_offset 16
 1163 0004 00AF     	 add r7,sp,#0
 1164              	.LCFI63:
 1165              	 .cfi_def_cfa_register 7
 306:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t sensor_calib = dps310_read_byte_bitfield(registers[TEMP_SENSORREC], false);
 1166              	 .loc 1 306 0
 1167 0006 0F4B     	 ldr r3,.L58
 1168 0008 5A7A     	 ldrb r2,[r3,#9]
 1169 000a 997A     	 ldrb r1,[r3,#10]
 1170 000c 0902     	 lsls r1,r1,#8
 1171 000e 0A43     	 orrs r2,r2,r1
 1172 0010 DB7A     	 ldrb r3,[r3,#11]
 1173 0012 1B04     	 lsls r3,r3,#16
 1174 0014 1A43     	 orrs r2,r2,r3
 1175 0016 0023     	 movs r3,#0
 1176 0018 62F31703 	 bfi r3,r2,#0,#24
 1177 001c 1846     	 mov r0,r3
 1178 001e 0021     	 movs r1,#0
 1179 0020 FFF7FEFF 	 bl dps310_read_byte_bitfield
 1180 0024 0346     	 mov r3,r0
 1181 0026 FB80     	 strh r3,[r7,#6]
 307:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (sensor_calib < 0)
 1182              	 .loc 1 307 0
 1183 0028 B7F90630 	 ldrsh r3,[r7,#6]
 1184 002c 002B     	 cmp r3,#0
 1185 002e 02DA     	 bge .L56
 308:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 309:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 1186              	 .loc 1 309 0
 1187 0030 4FF6FF73 	 movw r3,#65535
 1188 0034 00E0     	 b .L57
 1189              	.L56:
 310:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 311:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return sensor_calib;
 1190              	 .loc 1 311 0
 1191 0036 FB88     	 ldrh r3,[r7,#6]
 1192              	.L57:
 1193 0038 1BB2     	 sxth r3,r3
 312:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 1194              	 .loc 1 312 0
 1195 003a 1846     	 mov r0,r3
 1196 003c 0837     	 adds r7,r7,#8
 1197              	.LCFI64:
 1198              	 .cfi_def_cfa_offset 8
 1199 003e BD46     	 mov sp,r7
 1200              	.LCFI65:
 1201              	 .cfi_def_cfa_register 13
 1202              	 
 1203 0040 80BD     	 pop {r7,pc}
 1204              	.L59:
 1205 0042 00BF     	 .align 2
 1206              	.L58:
 1207 0044 00000000 	 .word registers
 1208              	 .cfi_endproc
 1209              	.LFE361:
 1211              	 .section .text.dps310_get_temp_sensor_coeff,"ax",%progbits
 1212              	 .align 2
 1213              	 .global dps310_get_temp_sensor_coeff
 1214              	 .thumb
 1215              	 .thumb_func
 1217              	dps310_get_temp_sensor_coeff:
 1218              	.LFB362:
 313:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 314:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_get_temp_sensor_coeff(void)
 315:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 1219              	 .loc 1 315 0
 1220              	 .cfi_startproc
 1221              	 
 1222              	 
 1223 0000 80B5     	 push {r7,lr}
 1224              	.LCFI66:
 1225              	 .cfi_def_cfa_offset 8
 1226              	 .cfi_offset 7,-8
 1227              	 .cfi_offset 14,-4
 1228 0002 86B0     	 sub sp,sp,#24
 1229              	.LCFI67:
 1230              	 .cfi_def_cfa_offset 32
 1231 0004 00AF     	 add r7,sp,#0
 1232              	.LCFI68:
 1233              	 .cfi_def_cfa_register 7
 316:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	uint8_t buffer[18] = {0};
 1234              	 .loc 1 316 0
 1235 0006 3B1D     	 adds r3,r7,#4
 1236 0008 0022     	 movs r2,#0
 1237 000a 1A60     	 str r2,[r3]
 1238 000c 0433     	 adds r3,r3,#4
 1239 000e 0022     	 movs r2,#0
 1240 0010 1A60     	 str r2,[r3]
 1241 0012 0433     	 adds r3,r3,#4
 1242 0014 0022     	 movs r2,#0
 1243 0016 1A60     	 str r2,[r3]
 1244 0018 0433     	 adds r3,r3,#4
 1245 001a 0022     	 movs r2,#0
 1246 001c 1A60     	 str r2,[r3]
 1247 001e 0433     	 adds r3,r3,#4
 1248 0020 0022     	 movs r2,#0
 1249 0022 1A80     	 strh r2,[r3]
 1250 0024 0233     	 adds r3,r3,#2
 317:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 318:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t error_code = dps310_read_register_block(coeff_block, buffer, false);
 1251              	 .loc 1 318 0
 1252 0026 484B     	 ldr r3,.L64
 1253 0028 3A1D     	 adds r2,r7,#4
 1254 002a 1868     	 ldr r0,[r3]
 1255 002c 1146     	 mov r1,r2
 1256 002e 0022     	 movs r2,#0
 1257 0030 FFF7FEFF 	 bl dps310_read_register_block
 1258 0034 0346     	 mov r3,r0
 1259 0036 FB82     	 strh r3,[r7,#22]
 319:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(error_code < 0)
 1260              	 .loc 1 319 0
 1261 0038 B7F91630 	 ldrsh r3,[r7,#22]
 1262 003c 002B     	 cmp r3,#0
 1263 003e 02DA     	 bge .L61
 320:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 321:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 1264              	 .loc 1 321 0
 1265 0040 4FF6FF73 	 movw r3,#65535
 1266 0044 7BE0     	 b .L63
 1267              	.L61:
 322:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 323:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//compose coefficients from buffer content
 324:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_coeff.c0_half = ((uint32_t)buffer[0] << 4) | (((uint32_t)buffer[1] >> 4) & 0x0F);
 1268              	 .loc 1 324 0
 1269 0046 3B79     	 ldrb r3,[r7,#4]
 1270 0048 1A01     	 lsls r2,r3,#4
 1271 004a 7B79     	 ldrb r3,[r7,#5]
 1272 004c 1B09     	 lsrs r3,r3,#4
 1273 004e DBB2     	 uxtb r3,r3
 1274 0050 03F00F03 	 and r3,r3,#15
 1275 0054 1343     	 orrs r3,r3,r2
 1276 0056 1A46     	 mov r2,r3
 1277 0058 3C4B     	 ldr r3,.L64+4
 1278 005a 1A60     	 str r2,[r3]
 325:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	get_twos_complement(&dps310_coeff.c0_half, 12);
 1279              	 .loc 1 325 0
 1280 005c 3B48     	 ldr r0,.L64+4
 1281 005e 0C21     	 movs r1,#12
 1282 0060 FFF7FEFF 	 bl get_twos_complement
 326:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//c0 is only used as c0*0.5, so c0_half is calculated immediately
 327:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_coeff.c0_half = dps310_coeff.c0_half / 2U;
 1283              	 .loc 1 327 0
 1284 0064 394B     	 ldr r3,.L64+4
 1285 0066 1B68     	 ldr r3,[r3]
 1286 0068 5B08     	 lsrs r3,r3,#1
 1287 006a 1A46     	 mov r2,r3
 1288 006c 374B     	 ldr r3,.L64+4
 1289 006e 1A60     	 str r2,[r3]
 328:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 329:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//now do the same thing for all other coefficients
 330:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_coeff.c1 = (((uint32_t)buffer[1] & 0x0F) << 8) | (uint32_t)buffer[2];
 1290              	 .loc 1 330 0
 1291 0070 7B79     	 ldrb r3,[r7,#5]
 1292 0072 03F00F03 	 and r3,r3,#15
 1293 0076 1B02     	 lsls r3,r3,#8
 1294 0078 BA79     	 ldrb r2,[r7,#6]
 1295 007a 1343     	 orrs r3,r3,r2
 1296 007c 1A46     	 mov r2,r3
 1297 007e 334B     	 ldr r3,.L64+4
 1298 0080 5A60     	 str r2,[r3,#4]
 331:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	get_twos_complement(&dps310_coeff.c1, 12);
 1299              	 .loc 1 331 0
 1300 0082 3348     	 ldr r0,.L64+8
 1301 0084 0C21     	 movs r1,#12
 1302 0086 FFF7FEFF 	 bl get_twos_complement
 332:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_coeff.c00 = ((uint32_t)buffer[3] << 12) | ((uint32_t)buffer[4] << 4) | (((uint32_t)buffer[5
 1303              	 .loc 1 332 0
 1304 008a FB79     	 ldrb r3,[r7,#7]
 1305 008c 1A03     	 lsls r2,r3,#12
 1306 008e 3B7A     	 ldrb r3,[r7,#8]
 1307 0090 1B01     	 lsls r3,r3,#4
 1308 0092 1A43     	 orrs r2,r2,r3
 1309 0094 7B7A     	 ldrb r3,[r7,#9]
 1310 0096 1B09     	 lsrs r3,r3,#4
 1311 0098 DBB2     	 uxtb r3,r3
 1312 009a 03F00F03 	 and r3,r3,#15
 1313 009e 1343     	 orrs r3,r3,r2
 1314 00a0 1A46     	 mov r2,r3
 1315 00a2 2A4B     	 ldr r3,.L64+4
 1316 00a4 9A60     	 str r2,[r3,#8]
 333:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	get_twos_complement(&dps310_coeff.c00, 20);
 1317              	 .loc 1 333 0
 1318 00a6 2B48     	 ldr r0,.L64+12
 1319 00a8 1421     	 movs r1,#20
 1320 00aa FFF7FEFF 	 bl get_twos_complement
 334:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_coeff.c10 = (((uint32_t)buffer[5] & 0x0F) << 16) | ((uint32_t)buffer[6] << 8) | (uint32_t)b
 1321              	 .loc 1 334 0
 1322 00ae 7B7A     	 ldrb r3,[r7,#9]
 1323 00b0 03F00F03 	 and r3,r3,#15
 1324 00b4 1A04     	 lsls r2,r3,#16
 1325 00b6 BB7A     	 ldrb r3,[r7,#10]
 1326 00b8 1B02     	 lsls r3,r3,#8
 1327 00ba 1343     	 orrs r3,r3,r2
 1328 00bc FA7A     	 ldrb r2,[r7,#11]
 1329 00be 1343     	 orrs r3,r3,r2
 1330 00c0 1A46     	 mov r2,r3
 1331 00c2 224B     	 ldr r3,.L64+4
 1332 00c4 DA60     	 str r2,[r3,#12]
 335:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	get_twos_complement(&dps310_coeff.c10, 20);
 1333              	 .loc 1 335 0
 1334 00c6 2448     	 ldr r0,.L64+16
 1335 00c8 1421     	 movs r1,#20
 1336 00ca FFF7FEFF 	 bl get_twos_complement
 336:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 337:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_coeff.c01 = ((uint32_t)buffer[8] << 8) | (uint32_t)buffer[9];
 1337              	 .loc 1 337 0
 1338 00ce 3B7B     	 ldrb r3,[r7,#12]
 1339 00d0 1B02     	 lsls r3,r3,#8
 1340 00d2 7A7B     	 ldrb r2,[r7,#13]
 1341 00d4 1343     	 orrs r3,r3,r2
 1342 00d6 1A46     	 mov r2,r3
 1343 00d8 1C4B     	 ldr r3,.L64+4
 1344 00da 1A61     	 str r2,[r3,#16]
 338:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	get_twos_complement(&dps310_coeff.c01, 16);
 1345              	 .loc 1 338 0
 1346 00dc 1F48     	 ldr r0,.L64+20
 1347 00de 1021     	 movs r1,#16
 1348 00e0 FFF7FEFF 	 bl get_twos_complement
 339:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 340:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_coeff.c11 = ((uint32_t)buffer[10] << 8) | (uint32_t)buffer[11];
 1349              	 .loc 1 340 0
 1350 00e4 BB7B     	 ldrb r3,[r7,#14]
 1351 00e6 1B02     	 lsls r3,r3,#8
 1352 00e8 FA7B     	 ldrb r2,[r7,#15]
 1353 00ea 1343     	 orrs r3,r3,r2
 1354 00ec 1A46     	 mov r2,r3
 1355 00ee 174B     	 ldr r3,.L64+4
 1356 00f0 5A61     	 str r2,[r3,#20]
 341:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	get_twos_complement(&dps310_coeff.c11, 16);
 1357              	 .loc 1 341 0
 1358 00f2 1B48     	 ldr r0,.L64+24
 1359 00f4 1021     	 movs r1,#16
 1360 00f6 FFF7FEFF 	 bl get_twos_complement
 342:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_coeff.c20 = ((uint32_t)buffer[12] << 8) | (uint32_t)buffer[13];
 1361              	 .loc 1 342 0
 1362 00fa 3B7C     	 ldrb r3,[r7,#16]
 1363 00fc 1B02     	 lsls r3,r3,#8
 1364 00fe 7A7C     	 ldrb r2,[r7,#17]
 1365 0100 1343     	 orrs r3,r3,r2
 1366 0102 1A46     	 mov r2,r3
 1367 0104 114B     	 ldr r3,.L64+4
 1368 0106 9A61     	 str r2,[r3,#24]
 343:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	get_twos_complement(&dps310_coeff.c20, 16);
 1369              	 .loc 1 343 0
 1370 0108 1648     	 ldr r0,.L64+28
 1371 010a 1021     	 movs r1,#16
 1372 010c FFF7FEFF 	 bl get_twos_complement
 344:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_coeff.c21 = ((uint32_t)buffer[14] << 8) | (uint32_t)buffer[15];
 1373              	 .loc 1 344 0
 1374 0110 BB7C     	 ldrb r3,[r7,#18]
 1375 0112 1B02     	 lsls r3,r3,#8
 1376 0114 FA7C     	 ldrb r2,[r7,#19]
 1377 0116 1343     	 orrs r3,r3,r2
 1378 0118 1A46     	 mov r2,r3
 1379 011a 0C4B     	 ldr r3,.L64+4
 1380 011c DA61     	 str r2,[r3,#28]
 345:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	get_twos_complement(&dps310_coeff.c21, 16);
 1381              	 .loc 1 345 0
 1382 011e 1248     	 ldr r0,.L64+32
 1383 0120 1021     	 movs r1,#16
 1384 0122 FFF7FEFF 	 bl get_twos_complement
 346:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_coeff.c30 = ((uint32_t)buffer[16] << 8) | (uint32_t)buffer[17];
 1385              	 .loc 1 346 0
 1386 0126 3B7D     	 ldrb r3,[r7,#20]
 1387 0128 1B02     	 lsls r3,r3,#8
 1388 012a 7A7D     	 ldrb r2,[r7,#21]
 1389 012c 1343     	 orrs r3,r3,r2
 1390 012e 1A46     	 mov r2,r3
 1391 0130 064B     	 ldr r3,.L64+4
 1392 0132 1A62     	 str r2,[r3,#32]
 347:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	get_twos_complement(&dps310_coeff.c30, 16);
 1393              	 .loc 1 347 0
 1394 0134 0D48     	 ldr r0,.L64+36
 1395 0136 1021     	 movs r1,#16
 1396 0138 FFF7FEFF 	 bl get_twos_complement
 348:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return 0;
 1397              	 .loc 1 348 0
 1398 013c 0023     	 movs r3,#0
 1399              	.L63:
 1400 013e 1BB2     	 sxth r3,r3
 349:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 1401              	 .loc 1 349 0 discriminator 1
 1402 0140 1846     	 mov r0,r3
 1403 0142 1837     	 adds r7,r7,#24
 1404              	.LCFI69:
 1405              	 .cfi_def_cfa_offset 8
 1406 0144 BD46     	 mov sp,r7
 1407              	.LCFI70:
 1408              	 .cfi_def_cfa_register 13
 1409              	 
 1410 0146 80BD     	 pop {r7,pc}
 1411              	.L65:
 1412              	 .align 2
 1413              	.L64:
 1414 0148 00000000 	 .word coeff_block
 1415 014c 00000000 	 .word dps310_coeff
 1416 0150 04000000 	 .word dps310_coeff+4
 1417 0154 08000000 	 .word dps310_coeff+8
 1418 0158 0C000000 	 .word dps310_coeff+12
 1419 015c 10000000 	 .word dps310_coeff+16
 1420 0160 14000000 	 .word dps310_coeff+20
 1421 0164 18000000 	 .word dps310_coeff+24
 1422 0168 1C000000 	 .word dps310_coeff+28
 1423 016c 20000000 	 .word dps310_coeff+32
 1424              	 .cfi_endproc
 1425              	.LFE362:
 1427              	 .section .text.dps310_configure_temp_meas,"ax",%progbits
 1428              	 .align 2
 1429              	 .global dps310_configure_temp_meas
 1430              	 .thumb
 1431              	 .thumb_func
 1433              	dps310_configure_temp_meas:
 1434              	.LFB363:
 350:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 351:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_configure_temp_meas(uint8_t temp_mr, uint8_t temp_osr)
 352:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 1435              	 .loc 1 352 0
 1436              	 .cfi_startproc
 1437              	 
 1438              	 
 1439 0000 80B5     	 push {r7,lr}
 1440              	.LCFI71:
 1441              	 .cfi_def_cfa_offset 8
 1442              	 .cfi_offset 7,-8
 1443              	 .cfi_offset 14,-4
 1444 0002 84B0     	 sub sp,sp,#16
 1445              	.LCFI72:
 1446              	 .cfi_def_cfa_offset 24
 1447 0004 00AF     	 add r7,sp,#0
 1448              	.LCFI73:
 1449              	 .cfi_def_cfa_register 7
 1450 0006 0346     	 mov r3,r0
 1451 0008 0A46     	 mov r2,r1
 1452 000a FB71     	 strb r3,[r7,#7]
 1453 000c 1346     	 mov r3,r2
 1454 000e BB71     	 strb r3,[r7,#6]
 353:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	temp_mr &= 0x07;
 1455              	 .loc 1 353 0
 1456 0010 FB79     	 ldrb r3,[r7,#7]
 1457 0012 03F00703 	 and r3,r3,#7
 1458 0016 FB71     	 strb r3,[r7,#7]
 354:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	temp_osr &= 0x07;
 1459              	 .loc 1 354 0
 1460 0018 BB79     	 ldrb r3,[r7,#6]
 1461 001a 03F00703 	 and r3,r3,#7
 1462 001e BB71     	 strb r3,[r7,#6]
 355:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	// two accesses to the same register; for readability
 356:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t error_code = dps310_write_byte_bitfield(temp_mr, config_registers[TEMP_MR], false);
 1463              	 .loc 1 356 0
 1464 0020 F879     	 ldrb r0,[r7,#7]
 1465 0022 1E4B     	 ldr r3,.L70
 1466 0024 1A78     	 ldrb r2,[r3]
 1467 0026 5978     	 ldrb r1,[r3,#1]
 1468 0028 0902     	 lsls r1,r1,#8
 1469 002a 0A43     	 orrs r2,r2,r1
 1470 002c 9B78     	 ldrb r3,[r3,#2]
 1471 002e 1B04     	 lsls r3,r3,#16
 1472 0030 1A43     	 orrs r2,r2,r3
 1473 0032 0023     	 movs r3,#0
 1474 0034 62F31703 	 bfi r3,r2,#0,#24
 1475 0038 1946     	 mov r1,r3
 1476 003a 0022     	 movs r2,#0
 1477 003c FFF7FEFF 	 bl dps310_write_byte_bitfield
 1478 0040 0346     	 mov r3,r0
 1479 0042 FB81     	 strh r3,[r7,#14]
 357:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort immediately on fail
 358:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (error_code != DPS310_SUCCEEDED)
 1480              	 .loc 1 358 0
 1481 0044 B7F90E30 	 ldrsh r3,[r7,#14]
 1482 0048 002B     	 cmp r3,#0
 1483 004a 02D0     	 beq .L67
 359:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 360:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 1484              	 .loc 1 360 0
 1485 004c 4FF6FF73 	 movw r3,#65535
 1486 0050 1EE0     	 b .L68
 1487              	.L67:
 361:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 362:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 363:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	error_code = dps310_write_byte_bitfield(temp_osr, config_registers[TEMP_OSR], false);
 1488              	 .loc 1 363 0
 1489 0052 B879     	 ldrb r0,[r7,#6]
 1490 0054 114B     	 ldr r3,.L70
 1491 0056 DA78     	 ldrb r2,[r3,#3]
 1492 0058 1979     	 ldrb r1,[r3,#4]
 1493 005a 0902     	 lsls r1,r1,#8
 1494 005c 0A43     	 orrs r2,r2,r1
 1495 005e 5B79     	 ldrb r3,[r3,#5]
 1496 0060 1B04     	 lsls r3,r3,#16
 1497 0062 1A43     	 orrs r2,r2,r3
 1498 0064 0023     	 movs r3,#0
 1499 0066 62F31703 	 bfi r3,r2,#0,#24
 1500 006a 1946     	 mov r1,r3
 1501 006c 0022     	 movs r2,#0
 1502 006e FFF7FEFF 	 bl dps310_write_byte_bitfield
 1503 0072 0346     	 mov r3,r0
 1504 0074 FB81     	 strh r3,[r7,#14]
 364:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort immediately on fail
 365:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (error_code != DPS310_SUCCEEDED)
 1505              	 .loc 1 365 0
 1506 0076 B7F90E30 	 ldrsh r3,[r7,#14]
 1507 007a 002B     	 cmp r3,#0
 1508 007c 01D0     	 beq .L69
 366:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 367:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return error_code;
 1509              	 .loc 1 367 0
 1510 007e FB89     	 ldrh r3,[r7,#14]
 1511 0080 06E0     	 b .L68
 1512              	.L69:
 368:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 369:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	error_code = i2c_read_byte(DPS310_ADDRESS_SDO_FLOAT, config_registers[TEMP_OSR].register_address
 370:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	if(error_code != 0)
 371:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	{
 372:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //		return error_code;
 373:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	}
 374:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.temp_mr = temp_mr;
 1513              	 .loc 1 374 0
 1514 0082 074A     	 ldr r2,.L70+4
 1515 0084 FB79     	 ldrb r3,[r7,#7]
 1516 0086 D370     	 strb r3,[r2,#3]
 375:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.temp_osr = temp_osr;
 1517              	 .loc 1 375 0
 1518 0088 054A     	 ldr r2,.L70+4
 1519 008a BB79     	 ldrb r3,[r7,#6]
 1520 008c 1371     	 strb r3,[r2,#4]
 376:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 377:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return DPS310_SUCCEEDED;
 1521              	 .loc 1 377 0
 1522 008e 0023     	 movs r3,#0
 1523              	.L68:
 1524 0090 1BB2     	 sxth r3,r3
 378:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 1525              	 .loc 1 378 0
 1526 0092 1846     	 mov r0,r3
 1527 0094 1037     	 adds r7,r7,#16
 1528              	.LCFI74:
 1529              	 .cfi_def_cfa_offset 8
 1530 0096 BD46     	 mov sp,r7
 1531              	.LCFI75:
 1532              	 .cfi_def_cfa_register 13
 1533              	 
 1534 0098 80BD     	 pop {r7,pc}
 1535              	.L71:
 1536 009a 00BF     	 .align 2
 1537              	.L70:
 1538 009c 00000000 	 .word config_registers
 1539 00a0 00000000 	 .word dps310_status
 1540              	 .cfi_endproc
 1541              	.LFE363:
 1543              	 .section .text.dps310_configure_pressure_meas,"ax",%progbits
 1544              	 .align 2
 1545              	 .global dps310_configure_pressure_meas
 1546              	 .thumb
 1547              	 .thumb_func
 1549              	dps310_configure_pressure_meas:
 1550              	.LFB364:
 379:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 380:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_configure_pressure_meas(uint8_t prs_mr, uint8_t prs_osr)
 381:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 1551              	 .loc 1 381 0
 1552              	 .cfi_startproc
 1553              	 
 1554              	 
 1555 0000 80B5     	 push {r7,lr}
 1556              	.LCFI76:
 1557              	 .cfi_def_cfa_offset 8
 1558              	 .cfi_offset 7,-8
 1559              	 .cfi_offset 14,-4
 1560 0002 84B0     	 sub sp,sp,#16
 1561              	.LCFI77:
 1562              	 .cfi_def_cfa_offset 24
 1563 0004 00AF     	 add r7,sp,#0
 1564              	.LCFI78:
 1565              	 .cfi_def_cfa_register 7
 1566 0006 0346     	 mov r3,r0
 1567 0008 0A46     	 mov r2,r1
 1568 000a FB71     	 strb r3,[r7,#7]
 1569 000c 1346     	 mov r3,r2
 1570 000e BB71     	 strb r3,[r7,#6]
 382:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	prs_mr &= 0x07;
 1571              	 .loc 1 382 0
 1572 0010 FB79     	 ldrb r3,[r7,#7]
 1573 0012 03F00703 	 and r3,r3,#7
 1574 0016 FB71     	 strb r3,[r7,#7]
 383:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	prs_osr &= 0x07;
 1575              	 .loc 1 383 0
 1576 0018 BB79     	 ldrb r3,[r7,#6]
 1577 001a 03F00703 	 and r3,r3,#7
 1578 001e BB71     	 strb r3,[r7,#6]
 384:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t error_code = dps310_write_byte_bitfield(prs_mr, config_registers[PRS_MR], false);
 1579              	 .loc 1 384 0
 1580 0020 F879     	 ldrb r0,[r7,#7]
 1581 0022 1E4B     	 ldr r3,.L76
 1582 0024 9A79     	 ldrb r2,[r3,#6]
 1583 0026 D979     	 ldrb r1,[r3,#7]
 1584 0028 0902     	 lsls r1,r1,#8
 1585 002a 0A43     	 orrs r2,r2,r1
 1586 002c 1B7A     	 ldrb r3,[r3,#8]
 1587 002e 1B04     	 lsls r3,r3,#16
 1588 0030 1A43     	 orrs r2,r2,r3
 1589 0032 0023     	 movs r3,#0
 1590 0034 62F31703 	 bfi r3,r2,#0,#24
 1591 0038 1946     	 mov r1,r3
 1592 003a 0022     	 movs r2,#0
 1593 003c FFF7FEFF 	 bl dps310_write_byte_bitfield
 1594 0040 0346     	 mov r3,r0
 1595 0042 FB81     	 strh r3,[r7,#14]
 385:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort immediately on fail
 386:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (error_code != DPS310_SUCCEEDED)
 1596              	 .loc 1 386 0
 1597 0044 B7F90E30 	 ldrsh r3,[r7,#14]
 1598 0048 002B     	 cmp r3,#0
 1599 004a 02D0     	 beq .L73
 387:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 388:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 1600              	 .loc 1 388 0
 1601 004c 4FF6FF73 	 movw r3,#65535
 1602 0050 1FE0     	 b .L74
 1603              	.L73:
 389:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 390:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 391:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	error_code = dps310_write_byte_bitfield(prs_osr, config_registers[PRS_OSR], false);
 1604              	 .loc 1 391 0
 1605 0052 B879     	 ldrb r0,[r7,#6]
 1606 0054 114B     	 ldr r3,.L76
 1607 0056 5A7A     	 ldrb r2,[r3,#9]
 1608 0058 997A     	 ldrb r1,[r3,#10]
 1609 005a 0902     	 lsls r1,r1,#8
 1610 005c 0A43     	 orrs r2,r2,r1
 1611 005e DB7A     	 ldrb r3,[r3,#11]
 1612 0060 1B04     	 lsls r3,r3,#16
 1613 0062 1A43     	 orrs r2,r2,r3
 1614 0064 0023     	 movs r3,#0
 1615 0066 62F31703 	 bfi r3,r2,#0,#24
 1616 006a 1946     	 mov r1,r3
 1617 006c 0022     	 movs r2,#0
 1618 006e FFF7FEFF 	 bl dps310_write_byte_bitfield
 1619 0072 0346     	 mov r3,r0
 1620 0074 FB81     	 strh r3,[r7,#14]
 392:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort immediately on fail
 393:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (error_code != DPS310_SUCCEEDED)
 1621              	 .loc 1 393 0
 1622 0076 B7F90E30 	 ldrsh r3,[r7,#14]
 1623 007a 002B     	 cmp r3,#0
 1624 007c 02D0     	 beq .L75
 394:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 395:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 1625              	 .loc 1 395 0
 1626 007e 4FF6FF73 	 movw r3,#65535
 1627 0082 06E0     	 b .L74
 1628              	.L75:
 396:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 397:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.prs_mr = prs_mr;
 1629              	 .loc 1 397 0
 1630 0084 064A     	 ldr r2,.L76+4
 1631 0086 FB79     	 ldrb r3,[r7,#7]
 1632 0088 5371     	 strb r3,[r2,#5]
 398:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.prs_osr = prs_osr;
 1633              	 .loc 1 398 0
 1634 008a 054A     	 ldr r2,.L76+4
 1635 008c BB79     	 ldrb r3,[r7,#6]
 1636 008e 9371     	 strb r3,[r2,#6]
 399:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return DPS310_SUCCEEDED;
 1637              	 .loc 1 399 0
 1638 0090 0023     	 movs r3,#0
 1639              	.L74:
 1640 0092 1BB2     	 sxth r3,r3
 400:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 1641              	 .loc 1 400 0
 1642 0094 1846     	 mov r0,r3
 1643 0096 1037     	 adds r7,r7,#16
 1644              	.LCFI79:
 1645              	 .cfi_def_cfa_offset 8
 1646 0098 BD46     	 mov sp,r7
 1647              	.LCFI80:
 1648              	 .cfi_def_cfa_register 13
 1649              	 
 1650 009a 80BD     	 pop {r7,pc}
 1651              	.L77:
 1652              	 .align 2
 1653              	.L76:
 1654 009c 00000000 	 .word config_registers
 1655 00a0 00000000 	 .word dps310_status
 1656              	 .cfi_endproc
 1657              	.LFE364:
 1659              	 .section .text.dps310_start_meas_temp_once,"ax",%progbits
 1660              	 .align 2
 1661              	 .global dps310_start_meas_temp_once
 1662              	 .thumb
 1663              	 .thumb_func
 1665              	dps310_start_meas_temp_once:
 1666              	.LFB365:
 401:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 402:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_start_meas_temp_once(uint8_t oversampling_rate)
 403:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 1667              	 .loc 1 403 0
 1668              	 .cfi_startproc
 1669              	 
 1670              	 
 1671 0000 80B5     	 push {r7,lr}
 1672              	.LCFI81:
 1673              	 .cfi_def_cfa_offset 8
 1674              	 .cfi_offset 7,-8
 1675              	 .cfi_offset 14,-4
 1676 0002 82B0     	 sub sp,sp,#8
 1677              	.LCFI82:
 1678              	 .cfi_def_cfa_offset 16
 1679 0004 00AF     	 add r7,sp,#0
 1680              	.LCFI83:
 1681              	 .cfi_def_cfa_register 7
 1682 0006 0346     	 mov r3,r0
 1683 0008 FB71     	 strb r3,[r7,#7]
 404:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort if initialization failed
 405:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_status.init_flag == false)
 1684              	 .loc 1 405 0
 1685 000a 154B     	 ldr r3,.L83
 1686 000c 1B78     	 ldrb r3,[r3]
 1687 000e 83F00103 	 eor r3,r3,#1
 1688 0012 DBB2     	 uxtb r3,r3
 1689 0014 002B     	 cmp r3,#0
 1690 0016 02D0     	 beq .L79
 406:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 407:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 1691              	 .loc 1 407 0
 1692 0018 4FF6FE73 	 movw r3,#65534
 1693 001c 1AE0     	 b .L80
 1694              	.L79:
 408:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 409:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort if device is not in idling mode
 410:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_status.mode_flag != IDLE)
 1695              	 .loc 1 410 0
 1696 001e 104B     	 ldr r3,.L83
 1697 0020 5B78     	 ldrb r3,[r3,#1]
 1698 0022 002B     	 cmp r3,#0
 1699 0024 02D0     	 beq .L81
 411:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 412:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_TOOBUSY;
 1700              	 .loc 1 412 0
 1701 0026 4FF6FD73 	 movw r3,#65533
 1702 002a 13E0     	 b .L80
 1703              	.L81:
 413:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 414:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 415:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (oversampling_rate != dps310_status.temp_osr)
 1704              	 .loc 1 415 0
 1705 002c 0C4B     	 ldr r3,.L83
 1706 002e 1B79     	 ldrb r3,[r3,#4]
 1707 0030 FA79     	 ldrb r2,[r7,#7]
 1708 0032 9A42     	 cmp r2,r3
 1709 0034 0AD0     	 beq .L82
 416:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 417:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		//configuration of oversampling rate
 418:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		if (dps310_configure_temp_meas(0U, oversampling_rate) != DPS310_SUCCEEDED)
 1710              	 .loc 1 418 0
 1711 0036 FB79     	 ldrb r3,[r7,#7]
 1712 0038 0020     	 movs r0,#0
 1713 003a 1946     	 mov r1,r3
 1714 003c FFF7FEFF 	 bl dps310_configure_temp_meas
 1715 0040 0346     	 mov r3,r0
 1716 0042 002B     	 cmp r3,#0
 1717 0044 02D0     	 beq .L82
 419:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		{
 420:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 			return DPS310_FAIL_UNKNOWN;
 1718              	 .loc 1 420 0
 1719 0046 4FF6FF73 	 movw r3,#65535
 1720 004a 03E0     	 b .L80
 1721              	.L82:
 421:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		}
 422:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 423:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 424:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//set device to temperature measuring mode
 425:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return dps310_set_operation_mode(CMD_TEMP);
 1722              	 .loc 1 425 0
 1723 004c 0220     	 movs r0,#2
 1724 004e FFF7FEFF 	 bl dps310_set_operation_mode
 1725 0052 0346     	 mov r3,r0
 1726              	.L80:
 1727 0054 1BB2     	 sxth r3,r3
 426:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 1728              	 .loc 1 426 0
 1729 0056 1846     	 mov r0,r3
 1730 0058 0837     	 adds r7,r7,#8
 1731              	.LCFI84:
 1732              	 .cfi_def_cfa_offset 8
 1733 005a BD46     	 mov sp,r7
 1734              	.LCFI85:
 1735              	 .cfi_def_cfa_register 13
 1736              	 
 1737 005c 80BD     	 pop {r7,pc}
 1738              	.L84:
 1739 005e 00BF     	 .align 2
 1740              	.L83:
 1741 0060 00000000 	 .word dps310_status
 1742              	 .cfi_endproc
 1743              	.LFE365:
 1745              	 .section .text.dps310_start_meas_pres_once,"ax",%progbits
 1746              	 .align 2
 1747              	 .global dps310_start_meas_pres_once
 1748              	 .thumb
 1749              	 .thumb_func
 1751              	dps310_start_meas_pres_once:
 1752              	.LFB366:
 427:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 428:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_start_meas_pres_once(uint8_t oversampling_rate)
 429:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 1753              	 .loc 1 429 0
 1754              	 .cfi_startproc
 1755              	 
 1756              	 
 1757 0000 80B5     	 push {r7,lr}
 1758              	.LCFI86:
 1759              	 .cfi_def_cfa_offset 8
 1760              	 .cfi_offset 7,-8
 1761              	 .cfi_offset 14,-4
 1762 0002 82B0     	 sub sp,sp,#8
 1763              	.LCFI87:
 1764              	 .cfi_def_cfa_offset 16
 1765 0004 00AF     	 add r7,sp,#0
 1766              	.LCFI88:
 1767              	 .cfi_def_cfa_register 7
 1768 0006 0346     	 mov r3,r0
 1769 0008 FB71     	 strb r3,[r7,#7]
 430:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort if initialization failed
 431:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_status.init_flag == false)
 1770              	 .loc 1 431 0
 1771 000a 154B     	 ldr r3,.L90
 1772 000c 1B78     	 ldrb r3,[r3]
 1773 000e 83F00103 	 eor r3,r3,#1
 1774 0012 DBB2     	 uxtb r3,r3
 1775 0014 002B     	 cmp r3,#0
 1776 0016 02D0     	 beq .L86
 432:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 433:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 1777              	 .loc 1 433 0
 1778 0018 4FF6FE73 	 movw r3,#65534
 1779 001c 1AE0     	 b .L87
 1780              	.L86:
 434:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 435:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort if device is not in idling mode
 436:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_status.mode_flag != IDLE)
 1781              	 .loc 1 436 0
 1782 001e 104B     	 ldr r3,.L90
 1783 0020 5B78     	 ldrb r3,[r3,#1]
 1784 0022 002B     	 cmp r3,#0
 1785 0024 02D0     	 beq .L88
 437:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 438:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_TOOBUSY;
 1786              	 .loc 1 438 0
 1787 0026 4FF6FD73 	 movw r3,#65533
 1788 002a 13E0     	 b .L87
 1789              	.L88:
 439:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 440:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//configuration of oversampling rate, lowest measure rate to avoid conflicts
 441:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (oversampling_rate != dps310_status.prs_osr)
 1790              	 .loc 1 441 0
 1791 002c 0C4B     	 ldr r3,.L90
 1792 002e 9B79     	 ldrb r3,[r3,#6]
 1793 0030 FA79     	 ldrb r2,[r7,#7]
 1794 0032 9A42     	 cmp r2,r3
 1795 0034 0AD0     	 beq .L89
 442:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 443:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		if (dps310_configure_pressure_meas(0U, oversampling_rate))
 1796              	 .loc 1 443 0
 1797 0036 FB79     	 ldrb r3,[r7,#7]
 1798 0038 0020     	 movs r0,#0
 1799 003a 1946     	 mov r1,r3
 1800 003c FFF7FEFF 	 bl dps310_configure_pressure_meas
 1801 0040 0346     	 mov r3,r0
 1802 0042 002B     	 cmp r3,#0
 1803 0044 02D0     	 beq .L89
 444:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		{
 445:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 			return DPS310_FAIL_UNKNOWN;
 1804              	 .loc 1 445 0
 1805 0046 4FF6FF73 	 movw r3,#65535
 1806 004a 03E0     	 b .L87
 1807              	.L89:
 446:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		}
 447:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 448:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//set device to pressure measuring mode
 449:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return dps310_set_operation_mode(CMD_PRS);
 1808              	 .loc 1 449 0
 1809 004c 0120     	 movs r0,#1
 1810 004e FFF7FEFF 	 bl dps310_set_operation_mode
 1811 0052 0346     	 mov r3,r0
 1812              	.L87:
 1813 0054 1BB2     	 sxth r3,r3
 450:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 1814              	 .loc 1 450 0
 1815 0056 1846     	 mov r0,r3
 1816 0058 0837     	 adds r7,r7,#8
 1817              	.LCFI89:
 1818              	 .cfi_def_cfa_offset 8
 1819 005a BD46     	 mov sp,r7
 1820              	.LCFI90:
 1821              	 .cfi_def_cfa_register 13
 1822              	 
 1823 005c 80BD     	 pop {r7,pc}
 1824              	.L91:
 1825 005e 00BF     	 .align 2
 1826              	.L90:
 1827 0060 00000000 	 .word dps310_status
 1828              	 .cfi_endproc
 1829              	.LFE366:
 1831              	 .section .text.dps310_measure_temp_once,"ax",%progbits
 1832              	 .align 2
 1833              	 .global dps310_measure_temp_once
 1834              	 .thumb
 1835              	 .thumb_func
 1837              	dps310_measure_temp_once:
 1838              	.LFB367:
 451:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 452:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_measure_temp_once(float *result, uint8_t oversampling_rate)
 453:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 1839              	 .loc 1 453 0
 1840              	 .cfi_startproc
 1841              	 
 1842              	 
 1843 0000 80B5     	 push {r7,lr}
 1844              	.LCFI91:
 1845              	 .cfi_def_cfa_offset 8
 1846              	 .cfi_offset 7,-8
 1847              	 .cfi_offset 14,-4
 1848 0002 84B0     	 sub sp,sp,#16
 1849              	.LCFI92:
 1850              	 .cfi_def_cfa_offset 24
 1851 0004 00AF     	 add r7,sp,#0
 1852              	.LCFI93:
 1853              	 .cfi_def_cfa_register 7
 1854 0006 7860     	 str r0,[r7,#4]
 1855 0008 0B46     	 mov r3,r1
 1856 000a FB70     	 strb r3,[r7,#3]
 454:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//Start measurement
 455:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t error_code = dps310_start_meas_temp_once(oversampling_rate);
 1857              	 .loc 1 455 0
 1858 000c FB78     	 ldrb r3,[r7,#3]
 1859 000e 1846     	 mov r0,r3
 1860 0010 FFF7FEFF 	 bl dps310_start_meas_temp_once
 1861 0014 0346     	 mov r3,r0
 1862 0016 FB81     	 strh r3,[r7,#14]
 456:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (error_code != DPS310_SUCCEEDED)
 1863              	 .loc 1 456 0
 1864 0018 B7F90E30 	 ldrsh r3,[r7,#14]
 1865 001c 002B     	 cmp r3,#0
 1866 001e 01D0     	 beq .L93
 457:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 458:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return error_code;
 1867              	 .loc 1 458 0
 1868 0020 FB89     	 ldrh r3,[r7,#14]
 1869 0022 20E0     	 b .L94
 1870              	.L93:
 459:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 460:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 461:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	uint32_t busy_time = calc_busy_time(0U, dps310_status.temp_osr) / DPS310_BUSYTIME_SCALING;
 1871              	 .loc 1 461 0
 1872 0024 124B     	 ldr r3,.L96
 1873 0026 1B79     	 ldrb r3,[r3,#4]
 1874 0028 9BB2     	 uxth r3,r3
 1875 002a 0020     	 movs r0,#0
 1876 002c 1946     	 mov r1,r3
 1877 002e FFF7FEFF 	 bl calc_busy_time
 1878 0032 0346     	 mov r3,r0
 1879 0034 1A46     	 mov r2,r3
 1880 0036 0F4B     	 ldr r3,.L96+4
 1881 0038 A3FB0223 	 umull r2,r3,r3,r2
 1882 003c DB08     	 lsrs r3,r3,#3
 1883 003e 9BB2     	 uxth r3,r3
 1884 0040 BB60     	 str r3,[r7,#8]
 462:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//wait until measurement is finished
 463:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	delay_ms(busy_time);
 1885              	 .loc 1 463 0
 1886 0042 B868     	 ldr r0,[r7,#8]
 1887 0044 FFF7FEFF 	 bl delay_ms
 464:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	delay_ms(DPS310__BUSYTIME_FAILSAFE);
 1888              	 .loc 1 464 0
 1889 0048 0A20     	 movs r0,#10
 1890 004a FFF7FEFF 	 bl delay_ms
 465:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 466:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	error_code = dps310_get_single_result(result);
 1891              	 .loc 1 466 0
 1892 004e 7868     	 ldr r0,[r7,#4]
 1893 0050 FFF7FEFF 	 bl dps310_get_single_result
 1894 0054 0346     	 mov r3,r0
 1895 0056 FB81     	 strh r3,[r7,#14]
 467:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (error_code != DPS310_SUCCEEDED)
 1896              	 .loc 1 467 0
 1897 0058 B7F90E30 	 ldrsh r3,[r7,#14]
 1898 005c 002B     	 cmp r3,#0
 1899 005e 01D0     	 beq .L95
 468:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 469:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_set_standby_mode();
 1900              	 .loc 1 469 0
 1901 0060 FFF7FEFF 	 bl dps310_set_standby_mode
 1902              	.L95:
 470:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 471:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return error_code;
 1903              	 .loc 1 471 0
 1904 0064 FB89     	 ldrh r3,[r7,#14]
 1905              	.L94:
 1906 0066 1BB2     	 sxth r3,r3
 472:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 1907              	 .loc 1 472 0
 1908 0068 1846     	 mov r0,r3
 1909 006a 1037     	 adds r7,r7,#16
 1910              	.LCFI94:
 1911              	 .cfi_def_cfa_offset 8
 1912 006c BD46     	 mov sp,r7
 1913              	.LCFI95:
 1914              	 .cfi_def_cfa_register 13
 1915              	 
 1916 006e 80BD     	 pop {r7,pc}
 1917              	.L97:
 1918              	 .align 2
 1919              	.L96:
 1920 0070 00000000 	 .word dps310_status
 1921 0074 CDCCCCCC 	 .word -858993459
 1922              	 .cfi_endproc
 1923              	.LFE367:
 1925              	 .section .text.dps310_measure_pres_once,"ax",%progbits
 1926              	 .align 2
 1927              	 .global dps310_measure_pres_once
 1928              	 .thumb
 1929              	 .thumb_func
 1931              	dps310_measure_pres_once:
 1932              	.LFB368:
 473:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 474:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_measure_pres_once(float *result, uint8_t oversampling_rate)
 475:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 1933              	 .loc 1 475 0
 1934              	 .cfi_startproc
 1935              	 
 1936              	 
 1937 0000 80B5     	 push {r7,lr}
 1938              	.LCFI96:
 1939              	 .cfi_def_cfa_offset 8
 1940              	 .cfi_offset 7,-8
 1941              	 .cfi_offset 14,-4
 1942 0002 84B0     	 sub sp,sp,#16
 1943              	.LCFI97:
 1944              	 .cfi_def_cfa_offset 24
 1945 0004 00AF     	 add r7,sp,#0
 1946              	.LCFI98:
 1947              	 .cfi_def_cfa_register 7
 1948 0006 7860     	 str r0,[r7,#4]
 1949 0008 0B46     	 mov r3,r1
 1950 000a FB70     	 strb r3,[r7,#3]
 476:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//start the measurement
 477:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t ret = dps310_start_meas_pres_once(oversampling_rate);
 1951              	 .loc 1 477 0
 1952 000c FB78     	 ldrb r3,[r7,#3]
 1953 000e 1846     	 mov r0,r3
 1954 0010 FFF7FEFF 	 bl dps310_start_meas_pres_once
 1955 0014 0346     	 mov r3,r0
 1956 0016 FB81     	 strh r3,[r7,#14]
 478:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (ret != DPS310_SUCCEEDED)
 1957              	 .loc 1 478 0
 1958 0018 B7F90E30 	 ldrsh r3,[r7,#14]
 1959 001c 002B     	 cmp r3,#0
 1960 001e 01D0     	 beq .L99
 479:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 480:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return ret;
 1961              	 .loc 1 480 0
 1962 0020 FB89     	 ldrh r3,[r7,#14]
 1963 0022 20E0     	 b .L100
 1964              	.L99:
 481:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 482:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 483:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	uint32_t busy_time = calc_busy_time(0U, dps310_status.temp_osr) / DPS310_BUSYTIME_SCALING;
 1965              	 .loc 1 483 0
 1966 0024 124B     	 ldr r3,.L102
 1967 0026 1B79     	 ldrb r3,[r3,#4]
 1968 0028 9BB2     	 uxth r3,r3
 1969 002a 0020     	 movs r0,#0
 1970 002c 1946     	 mov r1,r3
 1971 002e FFF7FEFF 	 bl calc_busy_time
 1972 0032 0346     	 mov r3,r0
 1973 0034 1A46     	 mov r2,r3
 1974 0036 0F4B     	 ldr r3,.L102+4
 1975 0038 A3FB0223 	 umull r2,r3,r3,r2
 1976 003c DB08     	 lsrs r3,r3,#3
 1977 003e 9BB2     	 uxth r3,r3
 1978 0040 BB60     	 str r3,[r7,#8]
 484:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//wait until measurement is finished
 485:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	delay_ms(busy_time);
 1979              	 .loc 1 485 0
 1980 0042 B868     	 ldr r0,[r7,#8]
 1981 0044 FFF7FEFF 	 bl delay_ms
 486:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	delay_ms(DPS310__BUSYTIME_FAILSAFE);
 1982              	 .loc 1 486 0
 1983 0048 0A20     	 movs r0,#10
 1984 004a FFF7FEFF 	 bl delay_ms
 487:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 488:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	ret = dps310_get_single_result(result);
 1985              	 .loc 1 488 0
 1986 004e 7868     	 ldr r0,[r7,#4]
 1987 0050 FFF7FEFF 	 bl dps310_get_single_result
 1988 0054 0346     	 mov r3,r0
 1989 0056 FB81     	 strh r3,[r7,#14]
 489:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (ret != DPS310_SUCCEEDED)
 1990              	 .loc 1 489 0
 1991 0058 B7F90E30 	 ldrsh r3,[r7,#14]
 1992 005c 002B     	 cmp r3,#0
 1993 005e 01D0     	 beq .L101
 490:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 491:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_set_standby_mode();
 1994              	 .loc 1 491 0
 1995 0060 FFF7FEFF 	 bl dps310_set_standby_mode
 1996              	.L101:
 492:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 493:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return ret;
 1997              	 .loc 1 493 0
 1998 0064 FB89     	 ldrh r3,[r7,#14]
 1999              	.L100:
 2000 0066 1BB2     	 sxth r3,r3
 494:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 2001              	 .loc 1 494 0
 2002 0068 1846     	 mov r0,r3
 2003 006a 1037     	 adds r7,r7,#16
 2004              	.LCFI99:
 2005              	 .cfi_def_cfa_offset 8
 2006 006c BD46     	 mov sp,r7
 2007              	.LCFI100:
 2008              	 .cfi_def_cfa_register 13
 2009              	 
 2010 006e 80BD     	 pop {r7,pc}
 2011              	.L103:
 2012              	 .align 2
 2013              	.L102:
 2014 0070 00000000 	 .word dps310_status
 2015 0074 CDCCCCCC 	 .word -858993459
 2016              	 .cfi_endproc
 2017              	.LFE368:
 2019              	 .section .text.dps310_disable_FIFO,"ax",%progbits
 2020              	 .align 2
 2021              	 .global dps310_disable_FIFO
 2022              	 .thumb
 2023              	 .thumb_func
 2025              	dps310_disable_FIFO:
 2026              	.LFB369:
 495:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 496:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_disable_FIFO(void)
 497:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 2027              	 .loc 1 497 0
 2028              	 .cfi_startproc
 2029              	 
 2030              	 
 2031 0000 80B5     	 push {r7,lr}
 2032              	.LCFI101:
 2033              	 .cfi_def_cfa_offset 8
 2034              	 .cfi_offset 7,-8
 2035              	 .cfi_offset 14,-4
 2036 0002 82B0     	 sub sp,sp,#8
 2037              	.LCFI102:
 2038              	 .cfi_def_cfa_offset 16
 2039 0004 00AF     	 add r7,sp,#0
 2040              	.LCFI103:
 2041              	 .cfi_def_cfa_register 7
 498:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t error_code = dps310_flush_FIFO();
 2042              	 .loc 1 498 0
 2043 0006 FFF7FEFF 	 bl dps310_flush_FIFO
 2044 000a 0346     	 mov r3,r0
 2045 000c FB80     	 strh r3,[r7,#6]
 499:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	error_code = dps310_write_byte_bitfield(0U, config_registers[FIFO_EN], false);
 2046              	 .loc 1 499 0
 2047 000e 0C4B     	 ldr r3,.L106
 2048 0010 DA7B     	 ldrb r2,[r3,#15]
 2049 0012 197C     	 ldrb r1,[r3,#16]
 2050 0014 0902     	 lsls r1,r1,#8
 2051 0016 0A43     	 orrs r2,r2,r1
 2052 0018 5B7C     	 ldrb r3,[r3,#17]
 2053 001a 1B04     	 lsls r3,r3,#16
 2054 001c 1A43     	 orrs r2,r2,r3
 2055 001e 0023     	 movs r3,#0
 2056 0020 62F31703 	 bfi r3,r2,#0,#24
 2057 0024 0020     	 movs r0,#0
 2058 0026 1946     	 mov r1,r3
 2059 0028 0022     	 movs r2,#0
 2060 002a FFF7FEFF 	 bl dps310_write_byte_bitfield
 2061 002e 0346     	 mov r3,r0
 2062 0030 FB80     	 strh r3,[r7,#6]
 500:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return error_code;
 2063              	 .loc 1 500 0
 2064 0032 FB88     	 ldrh r3,[r7,#6]
 2065 0034 1BB2     	 sxth r3,r3
 501:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 2066              	 .loc 1 501 0
 2067 0036 1846     	 mov r0,r3
 2068 0038 0837     	 adds r7,r7,#8
 2069              	.LCFI104:
 2070              	 .cfi_def_cfa_offset 8
 2071 003a BD46     	 mov sp,r7
 2072              	.LCFI105:
 2073              	 .cfi_def_cfa_register 13
 2074              	 
 2075 003c 80BD     	 pop {r7,pc}
 2076              	.L107:
 2077 003e 00BF     	 .align 2
 2078              	.L106:
 2079 0040 00000000 	 .word config_registers
 2080              	 .cfi_endproc
 2081              	.LFE369:
 2083              	 .section .text.dps310_enable_FIFO,"ax",%progbits
 2084              	 .align 2
 2085              	 .global dps310_enable_FIFO
 2086              	 .thumb
 2087              	 .thumb_func
 2089              	dps310_enable_FIFO:
 2090              	.LFB370:
 502:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 503:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_enable_FIFO(void)
 504:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 2091              	 .loc 1 504 0
 2092              	 .cfi_startproc
 2093              	 
 2094              	 
 2095 0000 80B5     	 push {r7,lr}
 2096              	.LCFI106:
 2097              	 .cfi_def_cfa_offset 8
 2098              	 .cfi_offset 7,-8
 2099              	 .cfi_offset 14,-4
 2100 0002 00AF     	 add r7,sp,#0
 2101              	.LCFI107:
 2102              	 .cfi_def_cfa_register 7
 505:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	int16_t test = 0;
 506:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	test = i2c_read_byte(DPS310_ADDRESS_SDO_FLOAT, config_registers[FIFO_EN].register_address);
 507:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return dps310_write_byte_bitfield(1U, config_registers[FIFO_EN], false);
 2103              	 .loc 1 507 0
 2104 0004 094B     	 ldr r3,.L110
 2105 0006 DA7B     	 ldrb r2,[r3,#15]
 2106 0008 197C     	 ldrb r1,[r3,#16]
 2107 000a 0902     	 lsls r1,r1,#8
 2108 000c 0A43     	 orrs r2,r2,r1
 2109 000e 5B7C     	 ldrb r3,[r3,#17]
 2110 0010 1B04     	 lsls r3,r3,#16
 2111 0012 1A43     	 orrs r2,r2,r3
 2112 0014 0023     	 movs r3,#0
 2113 0016 62F31703 	 bfi r3,r2,#0,#24
 2114 001a 0120     	 movs r0,#1
 2115 001c 1946     	 mov r1,r3
 2116 001e 0022     	 movs r2,#0
 2117 0020 FFF7FEFF 	 bl dps310_write_byte_bitfield
 2118 0024 0346     	 mov r3,r0
 508:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 2119              	 .loc 1 508 0
 2120 0026 1846     	 mov r0,r3
 2121 0028 80BD     	 pop {r7,pc}
 2122              	.L111:
 2123 002a 00BF     	 .align 2
 2124              	.L110:
 2125 002c 00000000 	 .word config_registers
 2126              	 .cfi_endproc
 2127              	.LFE370:
 2129              	 .section .text.dps310_flush_FIFO,"ax",%progbits
 2130              	 .align 2
 2131              	 .global dps310_flush_FIFO
 2132              	 .thumb
 2133              	 .thumb_func
 2135              	dps310_flush_FIFO:
 2136              	.LFB371:
 509:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 510:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_flush_FIFO(void)
 511:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 2137              	 .loc 1 511 0
 2138              	 .cfi_startproc
 2139              	 
 2140              	 
 2141 0000 80B5     	 push {r7,lr}
 2142              	.LCFI108:
 2143              	 .cfi_def_cfa_offset 8
 2144              	 .cfi_offset 7,-8
 2145              	 .cfi_offset 14,-4
 2146 0002 00AF     	 add r7,sp,#0
 2147              	.LCFI109:
 2148              	 .cfi_def_cfa_register 7
 512:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return dps310_write_byte_bitfield(1U, registers[FIFO_FL], true);
 2149              	 .loc 1 512 0
 2150 0004 094B     	 ldr r3,.L114
 2151 0006 9A7C     	 ldrb r2,[r3,#18]
 2152 0008 D97C     	 ldrb r1,[r3,#19]
 2153 000a 0902     	 lsls r1,r1,#8
 2154 000c 0A43     	 orrs r2,r2,r1
 2155 000e 1B7D     	 ldrb r3,[r3,#20]
 2156 0010 1B04     	 lsls r3,r3,#16
 2157 0012 1A43     	 orrs r2,r2,r3
 2158 0014 0023     	 movs r3,#0
 2159 0016 62F31703 	 bfi r3,r2,#0,#24
 2160 001a 0120     	 movs r0,#1
 2161 001c 1946     	 mov r1,r3
 2162 001e 0122     	 movs r2,#1
 2163 0020 FFF7FEFF 	 bl dps310_write_byte_bitfield
 2164 0024 0346     	 mov r3,r0
 513:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 2165              	 .loc 1 513 0
 2166 0026 1846     	 mov r0,r3
 2167 0028 80BD     	 pop {r7,pc}
 2168              	.L115:
 2169 002a 00BF     	 .align 2
 2170              	.L114:
 2171 002c 00000000 	 .word registers
 2172              	 .cfi_endproc
 2173              	.LFE371:
 2175              	 .section .text.dps310_read_FIFO_state,"ax",%progbits
 2176              	 .align 2
 2177              	 .global dps310_read_FIFO_state
 2178              	 .thumb
 2179              	 .thumb_func
 2181              	dps310_read_FIFO_state:
 2182              	.LFB372:
 514:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 515:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_read_FIFO_state(void)
 516:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 2183              	 .loc 1 516 0
 2184              	 .cfi_startproc
 2185              	 
 2186              	 
 2187 0000 80B5     	 push {r7,lr}
 2188              	.LCFI110:
 2189              	 .cfi_def_cfa_offset 8
 2190              	 .cfi_offset 7,-8
 2191              	 .cfi_offset 14,-4
 2192 0002 00AF     	 add r7,sp,#0
 2193              	.LCFI111:
 2194              	 .cfi_def_cfa_register 7
 517:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return dps310_read_byte_bitfield(registers[FIFO_FULL], true);
 2195              	 .loc 1 517 0
 2196 0004 084B     	 ldr r3,.L118
 2197 0006 1A7E     	 ldrb r2,[r3,#24]
 2198 0008 597E     	 ldrb r1,[r3,#25]
 2199 000a 0902     	 lsls r1,r1,#8
 2200 000c 0A43     	 orrs r2,r2,r1
 2201 000e 9B7E     	 ldrb r3,[r3,#26]
 2202 0010 1B04     	 lsls r3,r3,#16
 2203 0012 1A43     	 orrs r2,r2,r3
 2204 0014 0023     	 movs r3,#0
 2205 0016 62F31703 	 bfi r3,r2,#0,#24
 2206 001a 1846     	 mov r0,r3
 2207 001c 0121     	 movs r1,#1
 2208 001e FFF7FEFF 	 bl dps310_read_byte_bitfield
 2209 0022 0346     	 mov r3,r0
 518:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 2210              	 .loc 1 518 0
 2211 0024 1846     	 mov r0,r3
 2212 0026 80BD     	 pop {r7,pc}
 2213              	.L119:
 2214              	 .align 2
 2215              	.L118:
 2216 0028 00000000 	 .word registers
 2217              	 .cfi_endproc
 2218              	.LFE372:
 2220              	 .section .text.get_FIFO_value,"ax",%progbits
 2221              	 .align 2
 2222              	 .global get_FIFO_value
 2223              	 .thumb
 2224              	 .thumb_func
 2226              	get_FIFO_value:
 2227              	.LFB373:
 519:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 520:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t get_FIFO_value(int32_t *value)
 521:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 2228              	 .loc 1 521 0
 2229              	 .cfi_startproc
 2230              	 
 2231              	 
 2232 0000 80B5     	 push {r7,lr}
 2233              	.LCFI112:
 2234              	 .cfi_def_cfa_offset 8
 2235              	 .cfi_offset 7,-8
 2236              	 .cfi_offset 14,-4
 2237 0002 84B0     	 sub sp,sp,#16
 2238              	.LCFI113:
 2239              	 .cfi_def_cfa_offset 24
 2240 0004 00AF     	 add r7,sp,#0
 2241              	.LCFI114:
 2242              	 .cfi_def_cfa_register 7
 2243 0006 7860     	 str r0,[r7,#4]
 522:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	uint8_t buffer[DPS310_RESULT_BLOCK_LENGTH] = {0};
 2244              	 .loc 1 522 0
 2245 0008 0023     	 movs r3,#0
 2246 000a BB81     	 strh r3,[r7,#12]
 2247 000c 0023     	 movs r3,#0
 2248 000e BB73     	 strb r3,[r7,#14]
 523:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 524:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort on invalid argument or failed block reading
 525:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (value == NULL || dps310_read_register_block(registerBlocks[PRS], buffer, false) != DPS310_RESU
 2249              	 .loc 1 525 0
 2250 0010 7B68     	 ldr r3,[r7,#4]
 2251 0012 002B     	 cmp r3,#0
 2252 0014 10D0     	 beq .L121
 2253              	 .loc 1 525 0 is_stmt 0 discriminator 1
 2254 0016 164B     	 ldr r3,.L125
 2255 0018 07F10C01 	 add r1,r7,#12
 2256 001c 1A78     	 ldrb r2,[r3]
 2257 001e 5B78     	 ldrb r3,[r3,#1]
 2258 0020 1B02     	 lsls r3,r3,#8
 2259 0022 1A43     	 orrs r2,r2,r3
 2260 0024 0023     	 movs r3,#0
 2261 0026 62F30F03 	 bfi r3,r2,#0,#16
 2262 002a 1846     	 mov r0,r3
 2263 002c 0022     	 movs r2,#0
 2264 002e FFF7FEFF 	 bl dps310_read_register_block
 2265 0032 0346     	 mov r3,r0
 2266 0034 032B     	 cmp r3,#3
 2267 0036 02D0     	 beq .L122
 2268              	.L121:
 526:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 2269              	 .loc 1 526 0 is_stmt 1
 2270 0038 4FF6FF73 	 movw r3,#65535
 2271 003c 12E0     	 b .L124
 2272              	.L122:
 527:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	*value = (uint32_t)buffer[0] << 16 | (uint32_t)buffer[1] << 8 | (uint32_t)buffer[2];
 2273              	 .loc 1 527 0
 2274 003e 3B7B     	 ldrb r3,[r7,#12]
 2275 0040 1A04     	 lsls r2,r3,#16
 2276 0042 7B7B     	 ldrb r3,[r7,#13]
 2277 0044 1B02     	 lsls r3,r3,#8
 2278 0046 1343     	 orrs r3,r3,r2
 2279 0048 BA7B     	 ldrb r2,[r7,#14]
 2280 004a 1343     	 orrs r3,r3,r2
 2281 004c 1A46     	 mov r2,r3
 2282 004e 7B68     	 ldr r3,[r7,#4]
 2283 0050 1A60     	 str r2,[r3]
 528:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	get_twos_complement(value, 24);
 2284              	 .loc 1 528 0
 2285 0052 7868     	 ldr r0,[r7,#4]
 2286 0054 1821     	 movs r1,#24
 2287 0056 FFF7FEFF 	 bl get_twos_complement
 529:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return buffer[2] & 0x01;
 2288              	 .loc 1 529 0
 2289 005a BB7B     	 ldrb r3,[r7,#14]
 2290 005c 9BB2     	 uxth r3,r3
 2291 005e 03F00103 	 and r3,r3,#1
 2292 0062 9BB2     	 uxth r3,r3
 2293              	.L124:
 2294 0064 1BB2     	 sxth r3,r3
 530:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 2295              	 .loc 1 530 0 discriminator 1
 2296 0066 1846     	 mov r0,r3
 2297 0068 1037     	 adds r7,r7,#16
 2298              	.LCFI115:
 2299              	 .cfi_def_cfa_offset 8
 2300 006a BD46     	 mov sp,r7
 2301              	.LCFI116:
 2302              	 .cfi_def_cfa_register 13
 2303              	 
 2304 006c 80BD     	 pop {r7,pc}
 2305              	.L126:
 2306 006e 00BF     	 .align 2
 2307              	.L125:
 2308 0070 00000000 	 .word registerBlocks
 2309              	 .cfi_endproc
 2310              	.LFE373:
 2312              	 .section .text.dps310_correct_temperature,"ax",%progbits
 2313              	 .align 2
 2314              	 .global dps310_correct_temperature
 2315              	 .thumb
 2316              	 .thumb_func
 2318              	dps310_correct_temperature:
 2319              	.LFB374:
 531:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 532:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_correct_temperature(void)
 533:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 2320              	 .loc 1 533 0
 2321              	 .cfi_startproc
 2322              	 
 2323              	 
 2324 0000 80B5     	 push {r7,lr}
 2325              	.LCFI117:
 2326              	 .cfi_def_cfa_offset 8
 2327              	 .cfi_offset 7,-8
 2328              	 .cfi_offset 14,-4
 2329 0002 82B0     	 sub sp,sp,#8
 2330              	.LCFI118:
 2331              	 .cfi_def_cfa_offset 16
 2332 0004 00AF     	 add r7,sp,#0
 2333              	.LCFI119:
 2334              	 .cfi_def_cfa_register 7
 534:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_status.init_flag == false)
 2335              	 .loc 1 534 0
 2336 0006 1A4B     	 ldr r3,.L131
 2337 0008 1B78     	 ldrb r3,[r3]
 2338 000a 83F00103 	 eor r3,r3,#1
 2339 000e DBB2     	 uxtb r3,r3
 2340 0010 002B     	 cmp r3,#0
 2341 0012 02D0     	 beq .L128
 535:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 536:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 2342              	 .loc 1 536 0
 2343 0014 4FF6FE73 	 movw r3,#65534
 2344 0018 25E0     	 b .L130
 2345              	.L128:
 537:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 538:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_write_byte(0x0E, 0xA5, false, false);
 2346              	 .loc 1 538 0
 2347 001a 0E20     	 movs r0,#14
 2348 001c A521     	 movs r1,#165
 2349 001e 0022     	 movs r2,#0
 2350 0020 0023     	 movs r3,#0
 2351 0022 FFF7FEFF 	 bl dps310_write_byte
 539:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_write_byte(0x0F, 0x96, false, false);
 2352              	 .loc 1 539 0
 2353 0026 0F20     	 movs r0,#15
 2354 0028 9621     	 movs r1,#150
 2355 002a 0022     	 movs r2,#0
 2356 002c 0023     	 movs r3,#0
 2357 002e FFF7FEFF 	 bl dps310_write_byte
 540:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_write_byte(0x62, 0x02, false, false);
 2358              	 .loc 1 540 0
 2359 0032 6220     	 movs r0,#98
 2360 0034 0221     	 movs r1,#2
 2361 0036 0022     	 movs r2,#0
 2362 0038 0023     	 movs r3,#0
 2363 003a FFF7FEFF 	 bl dps310_write_byte
 541:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_write_byte(0x0E, 0x00, false, false);
 2364              	 .loc 1 541 0
 2365 003e 0E20     	 movs r0,#14
 2366 0040 0021     	 movs r1,#0
 2367 0042 0022     	 movs r2,#0
 2368 0044 0023     	 movs r3,#0
 2369 0046 FFF7FEFF 	 bl dps310_write_byte
 542:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_write_byte(0x0F, 0x00, false, false);
 2370              	 .loc 1 542 0
 2371 004a 0F20     	 movs r0,#15
 2372 004c 0021     	 movs r1,#0
 2373 004e 0022     	 movs r2,#0
 2374 0050 0023     	 movs r3,#0
 2375 0052 FFF7FEFF 	 bl dps310_write_byte
 543:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 544:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//perform a first temperature measurement (again)
 545:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//the most recent temperature will be saved internally
 546:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//and used for compensation when calculating pressure
 547:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	float trash;
 548:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_measure_temp_once(&trash, dps310_status.temp_osr);
 2376              	 .loc 1 548 0
 2377 0056 064B     	 ldr r3,.L131
 2378 0058 1B79     	 ldrb r3,[r3,#4]
 2379 005a 3A1D     	 adds r2,r7,#4
 2380 005c 1046     	 mov r0,r2
 2381 005e 1946     	 mov r1,r3
 2382 0060 FFF7FEFF 	 bl dps310_measure_temp_once
 549:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 550:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return DPS310_SUCCEEDED;
 2383              	 .loc 1 550 0
 2384 0064 0023     	 movs r3,#0
 2385              	.L130:
 2386 0066 1BB2     	 sxth r3,r3
 551:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 2387              	 .loc 1 551 0 discriminator 1
 2388 0068 1846     	 mov r0,r3
 2389 006a 0837     	 adds r7,r7,#8
 2390              	.LCFI120:
 2391              	 .cfi_def_cfa_offset 8
 2392 006c BD46     	 mov sp,r7
 2393              	.LCFI121:
 2394              	 .cfi_def_cfa_register 13
 2395              	 
 2396 006e 80BD     	 pop {r7,pc}
 2397              	.L132:
 2398              	 .align 2
 2399              	.L131:
 2400 0070 00000000 	 .word dps310_status
 2401              	 .cfi_endproc
 2402              	.LFE374:
 2404              	 .section .text.dps310_get_single_result,"ax",%progbits
 2405              	 .align 2
 2406              	 .global dps310_get_single_result
 2407              	 .thumb
 2408              	 .thumb_func
 2410              	dps310_get_single_result:
 2411              	.LFB375:
 552:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 553:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_get_single_result(float *result)
 554:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 2412              	 .loc 1 554 0
 2413              	 .cfi_startproc
 2414              	 
 2415              	 
 2416 0000 80B5     	 push {r7,lr}
 2417              	.LCFI122:
 2418              	 .cfi_def_cfa_offset 8
 2419              	 .cfi_offset 7,-8
 2420              	 .cfi_offset 14,-4
 2421 0002 84B0     	 sub sp,sp,#16
 2422              	.LCFI123:
 2423              	 .cfi_def_cfa_offset 24
 2424 0004 00AF     	 add r7,sp,#0
 2425              	.LCFI124:
 2426              	 .cfi_def_cfa_register 7
 2427 0006 7860     	 str r0,[r7,#4]
 555:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort if initialization failed
 556:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_status.init_flag == false)
 2428              	 .loc 1 556 0
 2429 0008 464B     	 ldr r3,.L151
 2430 000a 1B78     	 ldrb r3,[r3]
 2431 000c 83F00103 	 eor r3,r3,#1
 2432 0010 DBB2     	 uxtb r3,r3
 2433 0012 002B     	 cmp r3,#0
 2434 0014 02D0     	 beq .L134
 557:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 558:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 2435              	 .loc 1 558 0
 2436 0016 4FF6FE73 	 movw r3,#65534
 2437 001a 7DE0     	 b .L135
 2438              	.L134:
 559:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 560:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 561:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//read finished bit for current opMode
 562:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t rdy;
 563:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	switch (dps310_status.mode_flag)
 2439              	 .loc 1 563 0
 2440 001c 414B     	 ldr r3,.L151
 2441 001e 5B78     	 ldrb r3,[r3,#1]
 2442 0020 5BB2     	 sxtb r3,r3
 2443 0022 012B     	 cmp r3,#1
 2444 0024 13D0     	 beq .L137
 2445 0026 022B     	 cmp r3,#2
 2446 0028 23D1     	 bne .L148
 564:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 565:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	case CMD_TEMP: //temperature
 566:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		rdy = dps310_read_byte_bitfield(config_registers[TEMP_RDY], true);
 2447              	 .loc 1 566 0
 2448 002a 3F4B     	 ldr r3,.L151+4
 2449 002c 9A7C     	 ldrb r2,[r3,#18]
 2450 002e D97C     	 ldrb r1,[r3,#19]
 2451 0030 0902     	 lsls r1,r1,#8
 2452 0032 0A43     	 orrs r2,r2,r1
 2453 0034 1B7D     	 ldrb r3,[r3,#20]
 2454 0036 1B04     	 lsls r3,r3,#16
 2455 0038 1A43     	 orrs r2,r2,r3
 2456 003a 0023     	 movs r3,#0
 2457 003c 62F31703 	 bfi r3,r2,#0,#24
 2458 0040 1846     	 mov r0,r3
 2459 0042 0121     	 movs r1,#1
 2460 0044 FFF7FEFF 	 bl dps310_read_byte_bitfield
 2461 0048 0346     	 mov r3,r0
 2462 004a FB81     	 strh r3,[r7,#14]
 567:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		break;
 2463              	 .loc 1 567 0
 2464 004c 14E0     	 b .L139
 2465              	.L137:
 568:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	case CMD_PRS: //pressure
 569:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		rdy = dps310_read_byte_bitfield(config_registers[PRS_RDY], true);
 2466              	 .loc 1 569 0
 2467 004e 364B     	 ldr r3,.L151+4
 2468 0050 5A7D     	 ldrb r2,[r3,#21]
 2469 0052 997D     	 ldrb r1,[r3,#22]
 2470 0054 0902     	 lsls r1,r1,#8
 2471 0056 0A43     	 orrs r2,r2,r1
 2472 0058 DB7D     	 ldrb r3,[r3,#23]
 2473 005a 1B04     	 lsls r3,r3,#16
 2474 005c 1A43     	 orrs r2,r2,r3
 2475 005e 0023     	 movs r3,#0
 2476 0060 62F31703 	 bfi r3,r2,#0,#24
 2477 0064 1846     	 mov r0,r3
 2478 0066 0121     	 movs r1,#1
 2479 0068 FFF7FEFF 	 bl dps310_read_byte_bitfield
 2480 006c 0346     	 mov r3,r0
 2481 006e FB81     	 strh r3,[r7,#14]
 570:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		break;
 2482              	 .loc 1 570 0
 2483 0070 02E0     	 b .L139
 2484              	.L148:
 571:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	default: //DPS310 not in command mode
 572:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_TOOBUSY;
 2485              	 .loc 1 572 0
 2486 0072 4FF6FD73 	 movw r3,#65533
 2487 0076 4FE0     	 b .L135
 2488              	.L139:
 573:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 574:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 575:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int8_t oldMode = 0;
 2489              	 .loc 1 575 0
 2490 0078 0023     	 movs r3,#0
 2491 007a 7B73     	 strb r3,[r7,#13]
 576:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//read new measurement result
 577:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	switch (rdy)
 2492              	 .loc 1 577 0
 2493 007c B7F90E30 	 ldrsh r3,[r7,#14]
 2494 0080 002B     	 cmp r3,#0
 2495 0082 07D0     	 beq .L141
 2496 0084 012B     	 cmp r3,#1
 2497 0086 08D0     	 beq .L142
 2498 0088 B3F1FF3F 	 cmp r3,#-1
 2499 008c 42D1     	 bne .L149
 2500              	.LBB2:
 578:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 579:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	case DPS310_FAIL_UNKNOWN: //could not read ready flag
 580:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 2501              	 .loc 1 580 0
 2502 008e 4FF6FF73 	 movw r3,#65535
 2503 0092 41E0     	 b .L135
 2504              	.L141:
 581:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	case 0: //ready flag not set, measurement still in progress
 582:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNFINISHED;
 2505              	 .loc 1 582 0
 2506 0094 4FF6FC73 	 movw r3,#65532
 2507 0098 3EE0     	 b .L135
 2508              	.L142:
 583:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	case 1: //measurement ready, expected case
 584:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 585:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		oldMode = dps310_status.mode_flag;
 2509              	 .loc 1 585 0
 2510 009a 224B     	 ldr r3,.L151
 2511 009c 5B78     	 ldrb r3,[r3,#1]
 2512 009e 7B73     	 strb r3,[r7,#13]
 586:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_status.mode_flag = IDLE; //opcode was automatically reseted by DPS310
 2513              	 .loc 1 586 0
 2514 00a0 204B     	 ldr r3,.L151
 2515 00a2 0022     	 movs r2,#0
 2516 00a4 5A70     	 strb r2,[r3,#1]
 587:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		int32_t raw_val;
 588:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		switch (oldMode)
 2517              	 .loc 1 588 0
 2518 00a6 97F90D30 	 ldrsb r3,[r7,#13]
 2519 00aa 012B     	 cmp r3,#1
 2520 00ac 18D0     	 beq .L146
 2521 00ae 022B     	 cmp r3,#2
 2522 00b0 2DD1     	 bne .L150
 589:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		{
 590:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		case CMD_TEMP: //temperature
 591:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 			dps310_get_raw_result(&raw_val, registerBlocks[TEMP]);
 2523              	 .loc 1 591 0
 2524 00b2 07F10801 	 add r1,r7,#8
 2525 00b6 1D4B     	 ldr r3,.L151+8
 2526 00b8 9A78     	 ldrb r2,[r3,#2]
 2527 00ba DB78     	 ldrb r3,[r3,#3]
 2528 00bc 1B02     	 lsls r3,r3,#8
 2529 00be 1A43     	 orrs r2,r2,r3
 2530 00c0 0023     	 movs r3,#0
 2531 00c2 62F30F03 	 bfi r3,r2,#0,#16
 2532 00c6 0846     	 mov r0,r1
 2533 00c8 1946     	 mov r1,r3
 2534 00ca FFF7FEFF 	 bl dps310_get_raw_result
 592:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 			*result = calc_temp(raw_val);
 2535              	 .loc 1 592 0
 2536 00ce BB68     	 ldr r3,[r7,#8]
 2537 00d0 1846     	 mov r0,r3
 2538 00d2 FFF7FEFF 	 bl calc_temp
 2539 00d6 0246     	 mov r2,r0
 2540 00d8 7B68     	 ldr r3,[r7,#4]
 2541 00da 1A60     	 str r2,[r3]
 593:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 			return DPS310_SUCCEEDED; // TODO
 2542              	 .loc 1 593 0
 2543 00dc 0023     	 movs r3,#0
 2544 00de 1BE0     	 b .L135
 2545              	.L146:
 594:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		case CMD_PRS:			   //pressure
 595:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 			dps310_get_raw_result(&raw_val, registerBlocks[PRS]);
 2546              	 .loc 1 595 0
 2547 00e0 07F10801 	 add r1,r7,#8
 2548 00e4 114B     	 ldr r3,.L151+8
 2549 00e6 1A78     	 ldrb r2,[r3]
 2550 00e8 5B78     	 ldrb r3,[r3,#1]
 2551 00ea 1B02     	 lsls r3,r3,#8
 2552 00ec 1A43     	 orrs r2,r2,r3
 2553 00ee 0023     	 movs r3,#0
 2554 00f0 62F30F03 	 bfi r3,r2,#0,#16
 2555 00f4 0846     	 mov r0,r1
 2556 00f6 1946     	 mov r1,r3
 2557 00f8 FFF7FEFF 	 bl dps310_get_raw_result
 596:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 			*result = calc_preassure(raw_val);
 2558              	 .loc 1 596 0
 2559 00fc BB68     	 ldr r3,[r7,#8]
 2560 00fe 1846     	 mov r0,r3
 2561 0100 FFF7FEFF 	 bl calc_preassure
 2562 0104 0246     	 mov r2,r0
 2563 0106 7B68     	 ldr r3,[r7,#4]
 2564 0108 1A60     	 str r2,[r3]
 597:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 			return DPS310_SUCCEEDED; // TODO
 2565              	 .loc 1 597 0
 2566 010a 0023     	 movs r3,#0
 2567 010c 04E0     	 b .L135
 2568              	.L150:
 598:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		default:
 599:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 			return DPS310_FAIL_UNKNOWN; //should already be filtered above
 2569              	 .loc 1 599 0
 2570 010e 4FF6FF73 	 movw r3,#65535
 2571 0112 01E0     	 b .L135
 2572              	.L149:
 2573              	.LBE2:
 600:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		}
 601:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 602:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return DPS310_FAIL_UNKNOWN;
 2574              	 .loc 1 602 0
 2575 0114 4FF6FF73 	 movw r3,#65535
 2576              	.L135:
 2577 0118 1BB2     	 sxth r3,r3
 603:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 2578              	 .loc 1 603 0 discriminator 1
 2579 011a 1846     	 mov r0,r3
 2580 011c 1037     	 adds r7,r7,#16
 2581              	.LCFI125:
 2582              	 .cfi_def_cfa_offset 8
 2583 011e BD46     	 mov sp,r7
 2584              	.LCFI126:
 2585              	 .cfi_def_cfa_register 13
 2586              	 
 2587 0120 80BD     	 pop {r7,pc}
 2588              	.L152:
 2589 0122 00BF     	 .align 2
 2590              	.L151:
 2591 0124 00000000 	 .word dps310_status
 2592 0128 00000000 	 .word config_registers
 2593 012c 00000000 	 .word registerBlocks
 2594              	 .cfi_endproc
 2595              	.LFE375:
 2597              	 .section .text.dps310_get_raw_result,"ax",%progbits
 2598              	 .align 2
 2599              	 .global dps310_get_raw_result
 2600              	 .thumb
 2601              	 .thumb_func
 2603              	dps310_get_raw_result:
 2604              	.LFB376:
 604:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 605:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_get_raw_result(int32_t *raw, reg_block_t reg)
 606:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 2605              	 .loc 1 606 0
 2606              	 .cfi_startproc
 2607              	 
 2608              	 
 2609 0000 80B5     	 push {r7,lr}
 2610              	.LCFI127:
 2611              	 .cfi_def_cfa_offset 8
 2612              	 .cfi_offset 7,-8
 2613              	 .cfi_offset 14,-4
 2614 0002 84B0     	 sub sp,sp,#16
 2615              	.LCFI128:
 2616              	 .cfi_def_cfa_offset 24
 2617 0004 00AF     	 add r7,sp,#0
 2618              	.LCFI129:
 2619              	 .cfi_def_cfa_register 7
 2620 0006 7860     	 str r0,[r7,#4]
 2621 0008 3980     	 strh r1,[r7]
 607:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	uint8_t buffer[DPS310_RESULT_BLOCK_LENGTH] = {0};
 2622              	 .loc 1 607 0
 2623 000a 0023     	 movs r3,#0
 2624 000c BB81     	 strh r3,[r7,#12]
 2625 000e 0023     	 movs r3,#0
 2626 0010 BB73     	 strb r3,[r7,#14]
 608:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_read_register_block(reg, buffer, true) != DPS310_RESULT_BLOCK_LENGTH)
 2627              	 .loc 1 608 0
 2628 0012 07F10C03 	 add r3,r7,#12
 2629 0016 3868     	 ldr r0,[r7]
 2630 0018 1946     	 mov r1,r3
 2631 001a 0122     	 movs r2,#1
 2632 001c FFF7FEFF 	 bl dps310_read_register_block
 2633 0020 0346     	 mov r3,r0
 2634 0022 032B     	 cmp r3,#3
 2635 0024 02D0     	 beq .L154
 609:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 2636              	 .loc 1 609 0
 2637 0026 4FF6FF73 	 movw r3,#65535
 2638 002a 0EE0     	 b .L156
 2639              	.L154:
 610:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 611:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	*raw = (uint32_t)buffer[0] << 16 | (uint32_t)buffer[1] << 8 | (uint32_t)buffer[2];
 2640              	 .loc 1 611 0
 2641 002c 3B7B     	 ldrb r3,[r7,#12]
 2642 002e 1A04     	 lsls r2,r3,#16
 2643 0030 7B7B     	 ldrb r3,[r7,#13]
 2644 0032 1B02     	 lsls r3,r3,#8
 2645 0034 1343     	 orrs r3,r3,r2
 2646 0036 BA7B     	 ldrb r2,[r7,#14]
 2647 0038 1343     	 orrs r3,r3,r2
 2648 003a 1A46     	 mov r2,r3
 2649 003c 7B68     	 ldr r3,[r7,#4]
 2650 003e 1A60     	 str r2,[r3]
 612:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	get_twos_complement(raw, 24);
 2651              	 .loc 1 612 0
 2652 0040 7868     	 ldr r0,[r7,#4]
 2653 0042 1821     	 movs r1,#24
 2654 0044 FFF7FEFF 	 bl get_twos_complement
 613:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return DPS310_SUCCEEDED;
 2655              	 .loc 1 613 0
 2656 0048 0023     	 movs r3,#0
 2657              	.L156:
 2658 004a 1BB2     	 sxth r3,r3
 614:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 2659              	 .loc 1 614 0 discriminator 1
 2660 004c 1846     	 mov r0,r3
 2661 004e 1037     	 adds r7,r7,#16
 2662              	.LCFI130:
 2663              	 .cfi_def_cfa_offset 8
 2664 0050 BD46     	 mov sp,r7
 2665              	.LCFI131:
 2666              	 .cfi_def_cfa_register 13
 2667              	 
 2668 0052 80BD     	 pop {r7,pc}
 2669              	 .cfi_endproc
 2670              	.LFE376:
 2672              	 .section .rodata
 2673              	 .align 2
 2674              	.LC0:
 2675 0000 09       	 .byte 9
 2676 0001 08       	 .byte 8
 2677 0002 03       	 .byte 3
 2678 0003 00       	 .align 2
 2679              	.LC1:
 2680 0004 09       	 .byte 9
 2681 0005 04       	 .byte 4
 2682 0006 02       	 .byte 2
 2683 0007 00       	 .section .text.dps310_start_measure_both_cont,"ax",%progbits
 2684              	 .align 2
 2685              	 .global dps310_start_measure_both_cont
 2686              	 .thumb
 2687              	 .thumb_func
 2689              	dps310_start_measure_both_cont:
 2690              	.LFB377:
 615:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 616:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_start_measure_both_cont(uint8_t temp_mr,
 617:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 									   uint8_t temp_osr,
 618:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 									   uint8_t prs_mr,
 619:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 									   uint8_t prs_osr)
 620:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 2691              	 .loc 1 620 0
 2692              	 .cfi_startproc
 2693              	 
 2694              	 
 2695 0000 90B5     	 push {r4,r7,lr}
 2696              	.LCFI132:
 2697              	 .cfi_def_cfa_offset 12
 2698              	 .cfi_offset 4,-12
 2699              	 .cfi_offset 7,-8
 2700              	 .cfi_offset 14,-4
 2701 0002 87B0     	 sub sp,sp,#28
 2702              	.LCFI133:
 2703              	 .cfi_def_cfa_offset 40
 2704 0004 00AF     	 add r7,sp,#0
 2705              	.LCFI134:
 2706              	 .cfi_def_cfa_register 7
 2707 0006 0446     	 mov r4,r0
 2708 0008 0846     	 mov r0,r1
 2709 000a 1146     	 mov r1,r2
 2710 000c 1A46     	 mov r2,r3
 2711 000e 2346     	 mov r3,r4
 2712 0010 FB71     	 strb r3,[r7,#7]
 2713 0012 0346     	 mov r3,r0
 2714 0014 BB71     	 strb r3,[r7,#6]
 2715 0016 0B46     	 mov r3,r1
 2716 0018 7B71     	 strb r3,[r7,#5]
 2717 001a 1346     	 mov r3,r2
 2718 001c 3B71     	 strb r3,[r7,#4]
 621:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort if initialization failed
 622:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_status.init_flag == false)
 2719              	 .loc 1 622 0
 2720 001e 464B     	 ldr r3,.L169
 2721 0020 1B78     	 ldrb r3,[r3]
 2722 0022 83F00103 	 eor r3,r3,#1
 2723 0026 DBB2     	 uxtb r3,r3
 2724 0028 002B     	 cmp r3,#0
 2725 002a 02D0     	 beq .L158
 623:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 624:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 2726              	 .loc 1 624 0
 2727 002c 4FF6FE73 	 movw r3,#65534
 2728 0030 7CE0     	 b .L159
 2729              	.L158:
 625:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 626:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort if device is not in idling mode
 627:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_status.mode_flag != IDLE)
 2730              	 .loc 1 627 0
 2731 0032 414B     	 ldr r3,.L169
 2732 0034 5B78     	 ldrb r3,[r3,#1]
 2733 0036 002B     	 cmp r3,#0
 2734 0038 02D0     	 beq .L160
 628:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 629:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_TOOBUSY;
 2735              	 .loc 1 629 0
 2736 003a 4FF6FD73 	 movw r3,#65533
 2737 003e 75E0     	 b .L159
 2738              	.L160:
 630:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 631:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort if speed and precision are too high
 632:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (calc_busy_time(temp_mr, temp_osr) + calc_busy_time(prs_mr, prs_osr) >= DPS310__MAX_BUSYTIME)
 2739              	 .loc 1 632 0
 2740 0040 FB79     	 ldrb r3,[r7,#7]
 2741 0042 9AB2     	 uxth r2,r3
 2742 0044 BB79     	 ldrb r3,[r7,#6]
 2743 0046 9BB2     	 uxth r3,r3
 2744 0048 1046     	 mov r0,r2
 2745 004a 1946     	 mov r1,r3
 2746 004c FFF7FEFF 	 bl calc_busy_time
 2747 0050 0346     	 mov r3,r0
 2748 0052 1C46     	 mov r4,r3
 2749 0054 7B79     	 ldrb r3,[r7,#5]
 2750 0056 9AB2     	 uxth r2,r3
 2751 0058 3B79     	 ldrb r3,[r7,#4]
 2752 005a 9BB2     	 uxth r3,r3
 2753 005c 1046     	 mov r0,r2
 2754 005e 1946     	 mov r1,r3
 2755 0060 FFF7FEFF 	 bl calc_busy_time
 2756 0064 0346     	 mov r3,r0
 2757 0066 2344     	 add r3,r3,r4
 2758 0068 1A46     	 mov r2,r3
 2759 006a 42F2AB63 	 movw r3,#9899
 2760 006e 9A42     	 cmp r2,r3
 2761 0070 02D9     	 bls .L161
 633:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 634:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNFINISHED;
 2762              	 .loc 1 634 0
 2763 0072 4FF6FC73 	 movw r3,#65532
 2764 0076 59E0     	 b .L159
 2765              	.L161:
 635:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 636:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	//clean temp_config reg and pressure_config reg
 637:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	dps310_write_byte(config_registers[TEMP_MR].register_address, 0b10000000, true);
 638:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	//clean config register
 639:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	dps310_write_byte(0x09, 0x03, true);
 640:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//update precision and measuring rate
 641:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_configure_temp_meas(temp_mr, temp_osr))
 2766              	 .loc 1 641 0
 2767 0078 FA79     	 ldrb r2,[r7,#7]
 2768 007a BB79     	 ldrb r3,[r7,#6]
 2769 007c 1046     	 mov r0,r2
 2770 007e 1946     	 mov r1,r3
 2771 0080 FFF7FEFF 	 bl dps310_configure_temp_meas
 2772 0084 0346     	 mov r3,r0
 2773 0086 002B     	 cmp r3,#0
 2774 0088 02D0     	 beq .L162
 642:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 643:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 2775              	 .loc 1 643 0
 2776 008a 4FF6FF73 	 movw r3,#65535
 2777 008e 4DE0     	 b .L159
 2778              	.L162:
 644:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 645:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(temp_osr > DPS310_OVERSAMPLING_RATE_8)
 2779              	 .loc 1 645 0
 2780 0090 BB79     	 ldrb r3,[r7,#6]
 2781 0092 032B     	 cmp r3,#3
 2782 0094 0CD9     	 bls .L163
 2783              	.LBB3:
 646:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 647:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		reg_mask_t reg_mask = {0x09, 0x08, 3};
 2784              	 .loc 1 647 0
 2785 0096 294A     	 ldr r2,.L169+4
 2786 0098 07F11403 	 add r3,r7,#20
 2787 009c 1188     	 ldrh r1,[r2]
 2788 009e 9278     	 ldrb r2,[r2,#2]
 2789 00a0 1980     	 strh r1,[r3]
 2790 00a2 9A70     	 strb r2,[r3,#2]
 648:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_write_byte_bitfield(1U, reg_mask, false);
 2791              	 .loc 1 648 0
 2792 00a4 0120     	 movs r0,#1
 2793 00a6 7969     	 ldr r1,[r7,#20]
 2794 00a8 0022     	 movs r2,#0
 2795 00aa FFF7FEFF 	 bl dps310_write_byte_bitfield
 2796              	.LBE3:
 2797 00ae 0BE0     	 b .L164
 2798              	.L163:
 2799              	.LBB4:
 649:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 650:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	else
 651:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 652:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		reg_mask_t reg_mask = {0x09, 0x08, 3};
 2800              	 .loc 1 652 0
 2801 00b0 224A     	 ldr r2,.L169+4
 2802 00b2 07F11003 	 add r3,r7,#16
 2803 00b6 1188     	 ldrh r1,[r2]
 2804 00b8 9278     	 ldrb r2,[r2,#2]
 2805 00ba 1980     	 strh r1,[r3]
 2806 00bc 9A70     	 strb r2,[r3,#2]
 653:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_write_byte_bitfield(0U, reg_mask, false);
 2807              	 .loc 1 653 0
 2808 00be 0020     	 movs r0,#0
 2809 00c0 3969     	 ldr r1,[r7,#16]
 2810 00c2 0022     	 movs r2,#0
 2811 00c4 FFF7FEFF 	 bl dps310_write_byte_bitfield
 2812              	.L164:
 2813              	.LBE4:
 654:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 655:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 656:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//update precision and measuring rate
 657:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_configure_pressure_meas(prs_mr, prs_osr))
 2814              	 .loc 1 657 0
 2815 00c8 7A79     	 ldrb r2,[r7,#5]
 2816 00ca 3B79     	 ldrb r3,[r7,#4]
 2817 00cc 1046     	 mov r0,r2
 2818 00ce 1946     	 mov r1,r3
 2819 00d0 FFF7FEFF 	 bl dps310_configure_pressure_meas
 2820 00d4 0346     	 mov r3,r0
 2821 00d6 002B     	 cmp r3,#0
 2822 00d8 02D0     	 beq .L165
 658:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 659:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 2823              	 .loc 1 659 0
 2824 00da 4FF6FF73 	 movw r3,#65535
 2825 00de 25E0     	 b .L159
 2826              	.L165:
 660:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 661:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(prs_osr > DPS310_OVERSAMPLING_RATE_8)
 2827              	 .loc 1 661 0
 2828 00e0 3B79     	 ldrb r3,[r7,#4]
 2829 00e2 032B     	 cmp r3,#3
 2830 00e4 0CD9     	 bls .L166
 2831              	.LBB5:
 662:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 663:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		reg_mask_t reg_mask = {0x09, 0x04, 2};
 2832              	 .loc 1 663 0
 2833 00e6 164A     	 ldr r2,.L169+8
 2834 00e8 07F10C03 	 add r3,r7,#12
 2835 00ec 1188     	 ldrh r1,[r2]
 2836 00ee 9278     	 ldrb r2,[r2,#2]
 2837 00f0 1980     	 strh r1,[r3]
 2838 00f2 9A70     	 strb r2,[r3,#2]
 664:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_write_byte_bitfield(1U, reg_mask, false);
 2839              	 .loc 1 664 0
 2840 00f4 0120     	 movs r0,#1
 2841 00f6 F968     	 ldr r1,[r7,#12]
 2842 00f8 0022     	 movs r2,#0
 2843 00fa FFF7FEFF 	 bl dps310_write_byte_bitfield
 2844              	.LBE5:
 2845 00fe 0BE0     	 b .L167
 2846              	.L166:
 2847              	.LBB6:
 665:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 666:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	else
 667:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 668:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		reg_mask_t reg_mask = {0x09, 0x04, 2};
 2848              	 .loc 1 668 0
 2849 0100 0F4A     	 ldr r2,.L169+8
 2850 0102 07F10803 	 add r3,r7,#8
 2851 0106 1188     	 ldrh r1,[r2]
 2852 0108 9278     	 ldrb r2,[r2,#2]
 2853 010a 1980     	 strh r1,[r3]
 2854 010c 9A70     	 strb r2,[r3,#2]
 669:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_write_byte_bitfield(0U, reg_mask, false);
 2855              	 .loc 1 669 0
 2856 010e 0020     	 movs r0,#0
 2857 0110 B968     	 ldr r1,[r7,#8]
 2858 0112 0022     	 movs r2,#0
 2859 0114 FFF7FEFF 	 bl dps310_write_byte_bitfield
 2860              	.L167:
 2861              	.LBE6:
 670:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 671:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	//enable result FIFO
 672:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	if (dps310_enable_FIFO())
 673:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	{
 674:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //		return DPS310_FAIL_UNKNOWN;
 675:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	}
 676:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//Start measuring in background mode
 677:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_set_operation_mode(CONT_BOTH))
 2862              	 .loc 1 677 0
 2863 0118 0720     	 movs r0,#7
 2864 011a FFF7FEFF 	 bl dps310_set_operation_mode
 2865 011e 0346     	 mov r3,r0
 2866 0120 002B     	 cmp r3,#0
 2867 0122 02D0     	 beq .L168
 678:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 679:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 2868              	 .loc 1 679 0
 2869 0124 4FF6FF73 	 movw r3,#65535
 2870 0128 00E0     	 b .L159
 2871              	.L168:
 680:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 681:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return DPS310_SUCCEEDED;
 2872              	 .loc 1 681 0
 2873 012a 0023     	 movs r3,#0
 2874              	.L159:
 2875 012c 1BB2     	 sxth r3,r3
 682:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 2876              	 .loc 1 682 0
 2877 012e 1846     	 mov r0,r3
 2878 0130 1C37     	 adds r7,r7,#28
 2879              	.LCFI135:
 2880              	 .cfi_def_cfa_offset 12
 2881 0132 BD46     	 mov sp,r7
 2882              	.LCFI136:
 2883              	 .cfi_def_cfa_register 13
 2884              	 
 2885 0134 90BD     	 pop {r4,r7,pc}
 2886              	.L170:
 2887 0136 00BF     	 .align 2
 2888              	.L169:
 2889 0138 00000000 	 .word dps310_status
 2890 013c 00000000 	 .word .LC0
 2891 0140 04000000 	 .word .LC1
 2892              	 .cfi_endproc
 2893              	.LFE377:
 2895              	 .section .text.dps310_get_cont_results,"ax",%progbits
 2896              	 .align 2
 2897              	 .global dps310_get_cont_results
 2898              	 .thumb
 2899              	 .thumb_func
 2901              	dps310_get_cont_results:
 2902              	.LFB378:
 683:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 684:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_get_cont_results()
 685:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 2903              	 .loc 1 685 0
 2904              	 .cfi_startproc
 2905              	 
 2906              	 
 2907 0000 90B5     	 push {r4,r7,lr}
 2908              	.LCFI137:
 2909              	 .cfi_def_cfa_offset 12
 2910              	 .cfi_offset 4,-12
 2911              	 .cfi_offset 7,-8
 2912              	 .cfi_offset 14,-4
 2913 0002 87B0     	 sub sp,sp,#28
 2914              	.LCFI138:
 2915              	 .cfi_def_cfa_offset 40
 2916 0004 02AF     	 add r7,sp,#8
 2917              	.LCFI139:
 2918              	 .cfi_def_cfa 7,32
 686:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	uint8_t buffer[3] = {0};
 2919              	 .loc 1 686 0
 2920 0006 0023     	 movs r3,#0
 2921 0008 3B81     	 strh r3,[r7,#8]
 2922 000a 0023     	 movs r3,#0
 2923 000c BB72     	 strb r3,[r7,#10]
 687:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int32_t value = 0;
 2924              	 .loc 1 687 0
 2925 000e 0023     	 movs r3,#0
 2926 0010 7B60     	 str r3,[r7,#4]
 688:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(dps310_status.init_flag != true)
 2927              	 .loc 1 688 0
 2928 0012 3A4B     	 ldr r3,.L179
 2929 0014 1B78     	 ldrb r3,[r3]
 2930 0016 83F00103 	 eor r3,r3,#1
 2931 001a DBB2     	 uxtb r3,r3
 2932 001c 002B     	 cmp r3,#0
 2933 001e 02D0     	 beq .L172
 689:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 690:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_INIT_FAILED;
 2934              	 .loc 1 690 0
 2935 0020 4FF6FE73 	 movw r3,#65534
 2936 0024 64E0     	 b .L178
 2937              	.L172:
 691:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 692:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//abort if device is not in background mode
 693:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (!(dps310_status.mode_flag & 0x04))
 2938              	 .loc 1 693 0
 2939 0026 354B     	 ldr r3,.L179
 2940 0028 5B78     	 ldrb r3,[r3,#1]
 2941 002a DBB2     	 uxtb r3,r3
 2942 002c 03F00403 	 and r3,r3,#4
 2943 0030 002B     	 cmp r3,#0
 2944 0032 02D1     	 bne .L174
 694:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 695:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_TOOBUSY;
 2945              	 .loc 1 695 0
 2946 0034 4FF6FD73 	 movw r3,#65533
 2947 0038 5AE0     	 b .L178
 2948              	.L174:
 696:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 697:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(dps310_read_FIFO_state() == 1)
 2949              	 .loc 1 697 0
 2950 003a FFF7FEFF 	 bl dps310_read_FIFO_state
 2951 003e 0346     	 mov r3,r0
 2952 0040 012B     	 cmp r3,#1
 2953 0042 01D1     	 bne .L175
 698:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 699:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_flush_FIFO();
 2954              	 .loc 1 699 0
 2955 0044 FFF7FEFF 	 bl dps310_flush_FIFO
 2956              	.L175:
 700:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 701:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t meas_state = (i2c_read_byte(DPS310_ADDRESS_SDO_FLOAT, config_registers[MSR_CTRL].register_
 2957              	 .loc 1 701 0
 2958 0048 2D4B     	 ldr r3,.L179+4
 2959 004a 1B7B     	 ldrb r3,[r3,#12]
 2960 004c 7720     	 movs r0,#119
 2961 004e 1946     	 mov r1,r3
 2962 0050 0122     	 movs r2,#1
 2963 0052 FFF7FEFF 	 bl i2c_read_byte
 2964 0056 0346     	 mov r3,r0
 2965 0058 FB81     	 strh r3,[r7,#14]
 702:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(meas_state & 0x20)
 2966              	 .loc 1 702 0
 2967 005a FB89     	 ldrh r3,[r7,#14]
 2968 005c 03F02003 	 and r3,r3,#32
 2969 0060 002B     	 cmp r3,#0
 2970 0062 1FD0     	 beq .L176
 703:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 704:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		i2c_read_block(DPS310_ADDRESS_SDO_FLOAT, registerBlocks[TEMP].register_address, buffer, registerB
 2971              	 .loc 1 704 0
 2972 0064 274B     	 ldr r3,.L179+8
 2973 0066 9978     	 ldrb r1,[r3,#2]
 2974 0068 264B     	 ldr r3,.L179+8
 2975 006a DC78     	 ldrb r4,[r3,#3]
 2976 006c 07F10802 	 add r2,r7,#8
 2977 0070 0123     	 movs r3,#1
 2978 0072 0093     	 str r3,[sp]
 2979 0074 7720     	 movs r0,#119
 2980 0076 2346     	 mov r3,r4
 2981 0078 FFF7FEFF 	 bl i2c_read_block
 705:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		value = (uint32_t)buffer[0] << 16 | (uint32_t)buffer[1] << 8 | (uint32_t)buffer[2];
 2982              	 .loc 1 705 0
 2983 007c 3B7A     	 ldrb r3,[r7,#8]
 2984 007e 1A04     	 lsls r2,r3,#16
 2985 0080 7B7A     	 ldrb r3,[r7,#9]
 2986 0082 1B02     	 lsls r3,r3,#8
 2987 0084 1343     	 orrs r3,r3,r2
 2988 0086 BA7A     	 ldrb r2,[r7,#10]
 2989 0088 1343     	 orrs r3,r3,r2
 2990 008a 7B60     	 str r3,[r7,#4]
 706:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		get_twos_complement(&value, 24);
 2991              	 .loc 1 706 0
 2992 008c 3B1D     	 adds r3,r7,#4
 2993 008e 1846     	 mov r0,r3
 2994 0090 1821     	 movs r1,#24
 2995 0092 FFF7FEFF 	 bl get_twos_complement
 707:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_status.temp_meas = calc_temp(value);
 2996              	 .loc 1 707 0
 2997 0096 7B68     	 ldr r3,[r7,#4]
 2998 0098 1846     	 mov r0,r3
 2999 009a FFF7FEFF 	 bl calc_temp
 3000 009e 0246     	 mov r2,r0
 3001 00a0 164B     	 ldr r3,.L179
 3002 00a2 9A60     	 str r2,[r3,#8]
 3003              	.L176:
 708:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 709:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (meas_state & 0x10)
 3004              	 .loc 1 709 0
 3005 00a4 FB89     	 ldrh r3,[r7,#14]
 3006 00a6 03F01003 	 and r3,r3,#16
 3007 00aa 002B     	 cmp r3,#0
 3008 00ac 1FD0     	 beq .L177
 710:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 711:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		i2c_read_block(DPS310_ADDRESS_SDO_FLOAT, registerBlocks[PRS].register_address, buffer, registerBl
 3009              	 .loc 1 711 0
 3010 00ae 154B     	 ldr r3,.L179+8
 3011 00b0 1978     	 ldrb r1,[r3]
 3012 00b2 144B     	 ldr r3,.L179+8
 3013 00b4 5C78     	 ldrb r4,[r3,#1]
 3014 00b6 07F10802 	 add r2,r7,#8
 3015 00ba 0123     	 movs r3,#1
 3016 00bc 0093     	 str r3,[sp]
 3017 00be 7720     	 movs r0,#119
 3018 00c0 2346     	 mov r3,r4
 3019 00c2 FFF7FEFF 	 bl i2c_read_block
 712:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		value = (uint32_t)buffer[0] << 16 | (uint32_t)buffer[1] << 8 | (uint32_t)buffer[2];
 3020              	 .loc 1 712 0
 3021 00c6 3B7A     	 ldrb r3,[r7,#8]
 3022 00c8 1A04     	 lsls r2,r3,#16
 3023 00ca 7B7A     	 ldrb r3,[r7,#9]
 3024 00cc 1B02     	 lsls r3,r3,#8
 3025 00ce 1343     	 orrs r3,r3,r2
 3026 00d0 BA7A     	 ldrb r2,[r7,#10]
 3027 00d2 1343     	 orrs r3,r3,r2
 3028 00d4 7B60     	 str r3,[r7,#4]
 713:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		get_twos_complement(&value, 24);
 3029              	 .loc 1 713 0
 3030 00d6 3B1D     	 adds r3,r7,#4
 3031 00d8 1846     	 mov r0,r3
 3032 00da 1821     	 movs r1,#24
 3033 00dc FFF7FEFF 	 bl get_twos_complement
 714:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		dps310_status.pres_meas = calc_preassure(value);
 3034              	 .loc 1 714 0
 3035 00e0 7B68     	 ldr r3,[r7,#4]
 3036 00e2 1846     	 mov r0,r3
 3037 00e4 FFF7FEFF 	 bl calc_preassure
 3038 00e8 0246     	 mov r2,r0
 3039 00ea 044B     	 ldr r3,.L179
 3040 00ec DA60     	 str r2,[r3,#12]
 3041              	.L177:
 715:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 716:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return DPS310_SUCCEEDED;
 3042              	 .loc 1 716 0
 3043 00ee 0023     	 movs r3,#0
 3044              	.L178:
 3045 00f0 1BB2     	 sxth r3,r3
 717:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 3046              	 .loc 1 717 0 discriminator 1
 3047 00f2 1846     	 mov r0,r3
 3048 00f4 1437     	 adds r7,r7,#20
 3049              	.LCFI140:
 3050              	 .cfi_def_cfa_offset 12
 3051 00f6 BD46     	 mov sp,r7
 3052              	.LCFI141:
 3053              	 .cfi_def_cfa_register 13
 3054              	 
 3055 00f8 90BD     	 pop {r4,r7,pc}
 3056              	.L180:
 3057 00fa 00BF     	 .align 2
 3058              	.L179:
 3059 00fc 00000000 	 .word dps310_status
 3060 0100 00000000 	 .word config_registers
 3061 0104 00000000 	 .word registerBlocks
 3062              	 .cfi_endproc
 3063              	.LFE378:
 3065              	 .section .text.dps310_set_operation_mode,"ax",%progbits
 3066              	 .align 2
 3067              	 .global dps310_set_operation_mode
 3068              	 .thumb
 3069              	 .thumb_func
 3071              	dps310_set_operation_mode:
 3072              	.LFB379:
 718:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 719:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_set_operation_mode(uint8_t op_mode)
 720:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 3073              	 .loc 1 720 0
 3074              	 .cfi_startproc
 3075              	 
 3076              	 
 3077 0000 80B5     	 push {r7,lr}
 3078              	.LCFI142:
 3079              	 .cfi_def_cfa_offset 8
 3080              	 .cfi_offset 7,-8
 3081              	 .cfi_offset 14,-4
 3082 0002 82B0     	 sub sp,sp,#8
 3083              	.LCFI143:
 3084              	 .cfi_def_cfa_offset 16
 3085 0004 00AF     	 add r7,sp,#0
 3086              	.LCFI144:
 3087              	 .cfi_def_cfa_register 7
 3088 0006 0346     	 mov r3,r0
 3089 0008 FB71     	 strb r3,[r7,#7]
 721:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (dps310_write_byte_bitfield(op_mode, config_registers[MSR_CTRL], false) == -1)
 3090              	 .loc 1 721 0
 3091 000a F879     	 ldrb r0,[r7,#7]
 3092 000c 0F4B     	 ldr r3,.L184
 3093 000e 1A7B     	 ldrb r2,[r3,#12]
 3094 0010 597B     	 ldrb r1,[r3,#13]
 3095 0012 0902     	 lsls r1,r1,#8
 3096 0014 0A43     	 orrs r2,r2,r1
 3097 0016 9B7B     	 ldrb r3,[r3,#14]
 3098 0018 1B04     	 lsls r3,r3,#16
 3099 001a 1A43     	 orrs r2,r2,r3
 3100 001c 0023     	 movs r3,#0
 3101 001e 62F31703 	 bfi r3,r2,#0,#24
 3102 0022 1946     	 mov r1,r3
 3103 0024 0022     	 movs r2,#0
 3104 0026 FFF7FEFF 	 bl dps310_write_byte_bitfield
 3105 002a 0346     	 mov r3,r0
 3106 002c B3F1FF3F 	 cmp r3,#-1
 3107 0030 02D1     	 bne .L182
 722:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 723:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 3108              	 .loc 1 723 0
 3109 0032 4FF6FF73 	 movw r3,#65535
 3110 0036 03E0     	 b .L183
 3111              	.L182:
 724:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 725:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	dps310_status.mode_flag = op_mode;
 3112              	 .loc 1 725 0
 3113 0038 FA79     	 ldrb r2,[r7,#7]
 3114 003a 054B     	 ldr r3,.L184+4
 3115 003c 5A70     	 strb r2,[r3,#1]
 726:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return DPS310_SUCCEEDED;
 3116              	 .loc 1 726 0
 3117 003e 0023     	 movs r3,#0
 3118              	.L183:
 3119 0040 1BB2     	 sxth r3,r3
 727:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 3120              	 .loc 1 727 0
 3121 0042 1846     	 mov r0,r3
 3122 0044 0837     	 adds r7,r7,#8
 3123              	.LCFI145:
 3124              	 .cfi_def_cfa_offset 8
 3125 0046 BD46     	 mov sp,r7
 3126              	.LCFI146:
 3127              	 .cfi_def_cfa_register 13
 3128              	 
 3129 0048 80BD     	 pop {r7,pc}
 3130              	.L185:
 3131 004a 00BF     	 .align 2
 3132              	.L184:
 3133 004c 00000000 	 .word config_registers
 3134 0050 00000000 	 .word dps310_status
 3135              	 .cfi_endproc
 3136              	.LFE379:
 3138              	 .section .text.dps310_set_standby_mode,"ax",%progbits
 3139              	 .align 2
 3140              	 .global dps310_set_standby_mode
 3141              	 .thumb
 3142              	 .thumb_func
 3144              	dps310_set_standby_mode:
 3145              	.LFB380:
 728:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 
 729:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** int16_t dps310_set_standby_mode(void)
 730:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** {
 3146              	 .loc 1 730 0
 3147              	 .cfi_startproc
 3148              	 
 3149              	 
 3150 0000 80B5     	 push {r7,lr}
 3151              	.LCFI147:
 3152              	 .cfi_def_cfa_offset 8
 3153              	 .cfi_offset 7,-8
 3154              	 .cfi_offset 14,-4
 3155 0002 82B0     	 sub sp,sp,#8
 3156              	.LCFI148:
 3157              	 .cfi_def_cfa_offset 16
 3158 0004 00AF     	 add r7,sp,#0
 3159              	.LCFI149:
 3160              	 .cfi_def_cfa_register 7
 731:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//failes if init flag is false
 732:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if(dps310_status.init_flag == false)
 3161              	 .loc 1 732 0
 3162 0006 0D4B     	 ldr r3,.L190
 3163 0008 1B78     	 ldrb r3,[r3]
 3164 000a 83F00103 	 eor r3,r3,#1
 3165 000e DBB2     	 uxtb r3,r3
 3166 0010 002B     	 cmp r3,#0
 3167 0012 02D0     	 beq .L187
 733:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 734:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return DPS310_FAIL_UNKNOWN;
 3168              	 .loc 1 734 0
 3169 0014 4FF6FF73 	 movw r3,#65535
 3170 0018 0BE0     	 b .L188
 3171              	.L187:
 735:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 736:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	//set device to idling mode
 737:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	int16_t error_code = dps310_set_operation_mode(IDLE);
 3172              	 .loc 1 737 0
 3173 001a 0020     	 movs r0,#0
 3174 001c FFF7FEFF 	 bl dps310_set_operation_mode
 3175 0020 0346     	 mov r3,r0
 3176 0022 FB80     	 strh r3,[r7,#6]
 738:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	if (error_code != DPS310_SUCCEEDED)
 3177              	 .loc 1 738 0
 3178 0024 B7F90630 	 ldrsh r3,[r7,#6]
 3179 0028 002B     	 cmp r3,#0
 3180 002a 01D0     	 beq .L189
 739:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	{
 740:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 		return error_code;
 3181              	 .loc 1 740 0
 3182 002c FB88     	 ldrh r3,[r7,#6]
 3183 002e 00E0     	 b .L188
 3184              	.L189:
 741:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	}
 742:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	// check if standby mode is achieved for testing
 743:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	int16_t check_meas_ctrl = i2c_read_byte(DPS310_ADDRESS_SDO_FLOAT, config_registers[MSR_CTRL].reg
 744:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** //	error_code = dps310_disable_FIFO();
 745:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** 	return error_code;
 3185              	 .loc 1 745 0
 3186 0030 FB88     	 ldrh r3,[r7,#6]
 3187              	.L188:
 3188 0032 1BB2     	 sxth r3,r3
 746:../Libraries/OEMLib/DPS310PressureSensor/dps310_ctrl.c **** }
 3189              	 .loc 1 746 0
 3190 0034 1846     	 mov r0,r3
 3191 0036 0837     	 adds r7,r7,#8
 3192              	.LCFI150:
 3193              	 .cfi_def_cfa_offset 8
 3194 0038 BD46     	 mov sp,r7
 3195              	.LCFI151:
 3196              	 .cfi_def_cfa_register 13
 3197              	 
 3198 003a 80BD     	 pop {r7,pc}
 3199              	.L191:
 3200              	 .align 2
 3201              	.L190:
 3202 003c 00000000 	 .word dps310_status
 3203              	 .cfi_endproc
 3204              	.LFE380:
 3206              	 .text
 3207              	.Letext0:
 3208              	 .file 2 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3209              	 .file 3 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3210              	 .file 4 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 3211              	 .file 5 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usic.h"
 3212              	 .file 6 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 3213              	 .file 7 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usbd.h"
 3214              	 .file 8 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/USBD/usbd.h"
 3215              	 .file 9 "../Libraries/OEMLib/DPS310PressureSensor/dps_register.h"
 3216              	 .file 10 "../Libraries/OEMLib/DPS310PressureSensor/dps310_config.h"
 3217              	 .file 11 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/cmsis_gcc.h"
 3218              	 .file 12 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/core_cm4.h"
 3219              	 .file 13 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 3220              	 .file 14 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Dave/Generated/USBD/usbd_extern.h"
 3221              	 .file 15 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/OEMLib/Functions/functions.h"
DEFINED SYMBOLS
                            *ABS*:00000000 dps310_ctrl.c
                            *COM*:00000004 transaction_nr_dec
                            *COM*:00000007 transaction_nr_string
                            *COM*:00000004 _msCounter
    {standard input}:27     .rodata.scaling_facts:00000000 scaling_facts
    {standard input}:24     .rodata.scaling_facts:00000000 $d
    {standard input}:41     .data.dps310_status:00000000 dps310_status
    {standard input}:38     .data.dps310_status:00000000 $d
    {standard input}:57     .bss.dps310_coeff:00000000 dps310_coeff
    {standard input}:54     .bss.dps310_coeff:00000000 $d
    {standard input}:64     .data.coeff_block:00000000 coeff_block
    {standard input}:61     .data.coeff_block:00000000 $d
    {standard input}:68     .text.dps310_read_byte_bitfield:00000000 $t
    {standard input}:73     .text.dps310_read_byte_bitfield:00000000 dps310_read_byte_bitfield
    {standard input}:137    .text.dps310_write_byte_bitfield:00000000 $t
    {standard input}:142    .text.dps310_write_byte_bitfield:00000000 dps310_write_byte_bitfield
    {standard input}:250    .text.dps310_write_byte:00000000 $t
    {standard input}:255    .text.dps310_write_byte:00000000 dps310_write_byte
    {standard input}:361    .text.dps310_read_register_block:00000000 $t
    {standard input}:366    .text.dps310_read_register_block:00000000 dps310_read_register_block
    {standard input}:435    .text.get_twos_complement:00000000 $t
    {standard input}:440    .text.get_twos_complement:00000000 get_twos_complement
    {standard input}:499    .text.calc_busy_time:00000000 $t
    {standard input}:504    .text.calc_busy_time:00000000 calc_busy_time
    {standard input}:557    .text.calc_temp:00000000 $t
    {standard input}:562    .text.calc_temp:00000000 calc_temp
    {standard input}:632    .text.calc_temp:00000074 $d
    {standard input}:639    .text.calc_preassure:00000000 $t
    {standard input}:644    .text.calc_preassure:00000000 calc_preassure
    {standard input}:746    .text.calc_preassure:000000e8 $d
    {standard input}:753    .text.dps310_init:00000000 $t
    {standard input}:758    .text.dps310_init:00000000 dps310_init
    {standard input}:1013   .text.dps310_get_product_id:00000000 dps310_get_product_id
    {standard input}:1081   .text.dps310_get_revision_id:00000000 dps310_get_revision_id
    {standard input}:1149   .text.dps310_get_calibrated_temp_sensor:00000000 dps310_get_calibrated_temp_sensor
    {standard input}:1217   .text.dps310_get_temp_sensor_coeff:00000000 dps310_get_temp_sensor_coeff
    {standard input}:3144   .text.dps310_set_standby_mode:00000000 dps310_set_standby_mode
    {standard input}:2318   .text.dps310_correct_temperature:00000000 dps310_correct_temperature
    {standard input}:2689   .text.dps310_start_measure_both_cont:00000000 dps310_start_measure_both_cont
    {standard input}:931    .text.dps310_init:0000010c $d
    {standard input}:937    .text.dps310_deinit:00000000 $t
    {standard input}:942    .text.dps310_deinit:00000000 dps310_deinit
    {standard input}:1003   .text.dps310_deinit:0000004c $d
    {standard input}:1008   .text.dps310_get_product_id:00000000 $t
    {standard input}:1071   .text.dps310_get_product_id:00000044 $d
    {standard input}:1076   .text.dps310_get_revision_id:00000000 $t
    {standard input}:1139   .text.dps310_get_revision_id:00000044 $d
    {standard input}:1144   .text.dps310_get_calibrated_temp_sensor:00000000 $t
    {standard input}:1207   .text.dps310_get_calibrated_temp_sensor:00000044 $d
    {standard input}:1212   .text.dps310_get_temp_sensor_coeff:00000000 $t
    {standard input}:1414   .text.dps310_get_temp_sensor_coeff:00000148 $d
    {standard input}:1428   .text.dps310_configure_temp_meas:00000000 $t
    {standard input}:1433   .text.dps310_configure_temp_meas:00000000 dps310_configure_temp_meas
    {standard input}:1538   .text.dps310_configure_temp_meas:0000009c $d
    {standard input}:1544   .text.dps310_configure_pressure_meas:00000000 $t
    {standard input}:1549   .text.dps310_configure_pressure_meas:00000000 dps310_configure_pressure_meas
    {standard input}:1654   .text.dps310_configure_pressure_meas:0000009c $d
    {standard input}:1660   .text.dps310_start_meas_temp_once:00000000 $t
    {standard input}:1665   .text.dps310_start_meas_temp_once:00000000 dps310_start_meas_temp_once
    {standard input}:3071   .text.dps310_set_operation_mode:00000000 dps310_set_operation_mode
    {standard input}:1741   .text.dps310_start_meas_temp_once:00000060 $d
    {standard input}:1746   .text.dps310_start_meas_pres_once:00000000 $t
    {standard input}:1751   .text.dps310_start_meas_pres_once:00000000 dps310_start_meas_pres_once
    {standard input}:1827   .text.dps310_start_meas_pres_once:00000060 $d
    {standard input}:1832   .text.dps310_measure_temp_once:00000000 $t
    {standard input}:1837   .text.dps310_measure_temp_once:00000000 dps310_measure_temp_once
    {standard input}:2410   .text.dps310_get_single_result:00000000 dps310_get_single_result
    {standard input}:1920   .text.dps310_measure_temp_once:00000070 $d
    {standard input}:1926   .text.dps310_measure_pres_once:00000000 $t
    {standard input}:1931   .text.dps310_measure_pres_once:00000000 dps310_measure_pres_once
    {standard input}:2014   .text.dps310_measure_pres_once:00000070 $d
    {standard input}:2020   .text.dps310_disable_FIFO:00000000 $t
    {standard input}:2025   .text.dps310_disable_FIFO:00000000 dps310_disable_FIFO
    {standard input}:2135   .text.dps310_flush_FIFO:00000000 dps310_flush_FIFO
    {standard input}:2079   .text.dps310_disable_FIFO:00000040 $d
    {standard input}:2084   .text.dps310_enable_FIFO:00000000 $t
    {standard input}:2089   .text.dps310_enable_FIFO:00000000 dps310_enable_FIFO
    {standard input}:2125   .text.dps310_enable_FIFO:0000002c $d
    {standard input}:2130   .text.dps310_flush_FIFO:00000000 $t
    {standard input}:2171   .text.dps310_flush_FIFO:0000002c $d
    {standard input}:2176   .text.dps310_read_FIFO_state:00000000 $t
    {standard input}:2181   .text.dps310_read_FIFO_state:00000000 dps310_read_FIFO_state
    {standard input}:2216   .text.dps310_read_FIFO_state:00000028 $d
    {standard input}:2221   .text.get_FIFO_value:00000000 $t
    {standard input}:2226   .text.get_FIFO_value:00000000 get_FIFO_value
    {standard input}:2308   .text.get_FIFO_value:00000070 $d
    {standard input}:2313   .text.dps310_correct_temperature:00000000 $t
    {standard input}:2400   .text.dps310_correct_temperature:00000070 $d
    {standard input}:2405   .text.dps310_get_single_result:00000000 $t
    {standard input}:2603   .text.dps310_get_raw_result:00000000 dps310_get_raw_result
    {standard input}:2591   .text.dps310_get_single_result:00000124 $d
    {standard input}:2598   .text.dps310_get_raw_result:00000000 $t
    {standard input}:2673   .rodata:00000000 $d
    {standard input}:2684   .text.dps310_start_measure_both_cont:00000000 $t
    {standard input}:2889   .text.dps310_start_measure_both_cont:00000138 $d
    {standard input}:2896   .text.dps310_get_cont_results:00000000 $t
    {standard input}:2901   .text.dps310_get_cont_results:00000000 dps310_get_cont_results
    {standard input}:3059   .text.dps310_get_cont_results:000000fc $d
    {standard input}:3066   .text.dps310_set_operation_mode:00000000 $t
    {standard input}:3133   .text.dps310_set_operation_mode:0000004c $d
    {standard input}:3139   .text.dps310_set_standby_mode:00000000 $t
    {standard input}:3202   .text.dps310_set_standby_mode:0000003c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
i2c_read_byte
i2c_transmit_data
i2c_read_block
delay_ms
registers
config_registers
registerBlocks
