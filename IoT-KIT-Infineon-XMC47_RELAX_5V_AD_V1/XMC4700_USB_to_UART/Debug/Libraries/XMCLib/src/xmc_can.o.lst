   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_can.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CAN_IsPanelControlReady,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CAN_IsPanelControlReady:
  25              	.LFB171:
  26              	 .file 1 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2019-07-02
   4:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
   7:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.
  11:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  12:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  14:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * do so, all subject to the following:
  20:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  21:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * a source language processor.
  27:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  28:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * at XMCSupport@infineon.com.
  39:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
  40:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  41:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  42:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  43:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  44:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  45:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  46:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  47:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  49:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  50:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  51:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  52:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  53:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  54:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  55:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  56:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  57:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  58:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  59:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  60:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  61:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  62:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  63:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  64:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  65:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  66:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  67:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  68:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  69:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * 2017-11-09:
  70:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  71:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  72:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  73:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * 2019-07-02:
  74:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_GetClockFrequency()
  75:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsListEmpty(), XMC_CAN_GetListBegin(), XMC_CAN_GetListSize(), XMC_CAN_MO_Get
  76:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  77:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  78:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  79:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  80:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  81:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  82:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  83:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  84:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
  85:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  86:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  87:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  88:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  89:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  90:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  91:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  92:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  93:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  94:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  95:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  96:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  97:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  98:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  99:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 100:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
 101:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>
 102:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
 103:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 104:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 105:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 106:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
 107:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
 108:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 109:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 110:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
 111:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 112:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 113:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 114:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 115:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 116:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 117:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 118:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 119:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 120:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 121:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 122:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 123:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 124:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 125:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 126:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 127:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 128:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 129:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 130:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 131:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 132:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes.
 133:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 134:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between
 135:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 136:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 137:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 138:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 139:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 140:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 141:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 142:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 143:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 144:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 145:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 146:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 147:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 148:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 149:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 150:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 151:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 152:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure().
 153:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 154:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 155:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 156:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 157:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions
 158:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 159:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent().
 160:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 161:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 162:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 163:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 164:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 165:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 166:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 167:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 168:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 169:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 170:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 171:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 172:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 173:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 174:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)   /**< Standard Identifier bitposition */
 175:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 176:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 177:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 178:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL) /**< Node event mask */
 179:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 180:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)  /**< Message Object event mask */
 181:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 182:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 183:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 184:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 185:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 186:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 187:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** */
 188:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 189:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 190:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 191:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 192:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 193:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 194:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 195:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 196:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 197:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 198:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 199:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** */
 200:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 201:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 202:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 203:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 204:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 205:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 206:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,   /**< Remove a message object from the list and insert
 207:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 208:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 209:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 210:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 211:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 212:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 213:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 214:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 215:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** */
 216:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 217:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 218:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 219:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 220:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 221:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 222:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 223:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 224:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 225:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 226:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 227:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 228:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 229:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 230:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 231:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 232:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 233:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 234:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 235:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 236:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 237:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 238:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 239:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 240:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 241:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 242:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 243:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 244:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 245:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 246:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 247:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 248:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 249:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 250:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 251:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 252:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 253:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 254:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 255:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 256:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U,       /**< Frame Count Mode */
 257:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 258:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 259:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 260:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 261:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 262:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 263:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 264:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 265:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 266:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 267:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 268:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 269:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 270:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 271:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 272:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 273:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 274:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 275:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 276:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 277:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 278:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 279:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 280:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 281:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 282:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 283:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 284:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 285:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 286:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 287:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 288:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 289:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 290:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 291:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 292:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 293:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 294:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 295:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 296:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 297:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 298:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 299:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 300:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 301:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 302:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 303:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 304:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 305:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 306:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 307:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 308:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 309:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 310:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 311:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 312:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 313:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 314:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 315:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 316:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 317:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 318:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 319:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 320:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 321:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 322:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 323:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 324:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 325:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 326:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 327:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,     /**< Pointer to previous 
 328:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 329:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 330:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 331:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 332:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 333:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 334:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 335:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 336:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 337:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 338:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 339:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 340:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 341:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF = CAN_NODE_NSR_BOFF_Msk,              /**< Bus-off status */
 342:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 343:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 344:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 345:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 346:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #endif
 347:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 348:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 349:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 350:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 351:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 352:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 353:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 354:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 355:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 356:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 357:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 358:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 359:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 360:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE = CAN_NODE_NCR_CCE_Msk,    /**< Configuration change enab
 361:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 362:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 363:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 364:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #endif
 365:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 366:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 367:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 368:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 369:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 370:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 371:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 372:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 373:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 374:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 375:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 376:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 377:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 378:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 379:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 380:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 381:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 382:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 383:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 384:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 385:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 386:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 387:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 388:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 389:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 390:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 391:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 392:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 393:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 394:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 395:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 396:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 397:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 398:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 399:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 400:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 401:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 402:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 403:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 404:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 405:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 406:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 407:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 408:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 409:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 410:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 411:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 412:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 413:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA,   /**< CAN Receive Input A */
 414:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,   /**< CAN Receive Input B */
 415:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,   /**< CAN Receive Input C */
 416:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,   /**< CAN Receive Input D */
 417:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,   /**< CAN Receive Input E */
 418:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,   /**< CAN Receive Input F */
 419:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,   /**< CAN Receive Input G */
 420:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH    /**< CAN Receive Input H */
 421:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 422:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 423:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 424:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 425:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 426:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 427:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 428:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 429:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 430:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 431:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 432:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 433:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 434:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 435:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 436:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 437:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 438:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 439:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 440:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 441:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 442:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 443:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 444:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 445:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 446:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 447:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 448:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 449:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 450:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 451:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 452:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 453:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 454:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 455:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 456:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 457:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 458:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN baudrate generator
 459:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 460:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 461:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 462:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 463:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #if (UC_FAMILY == XMC4)
 464:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 465:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #else
 466:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock. 
 467:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #endif
 468:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U, /**< Use high performance oscillator (fOHP) as MCAN baudrate gener
 469:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #else
 470:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 471:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #endif
 472:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 473:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 474:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 475:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 476:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 477:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 478:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 479:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** */
 480:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 481:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 482:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;     /**< Frequency of the CAN module(fCAN). \a can_frequency shall be ran
 483:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;          /**< Specifies the node baud rate. Unit: baud \a baudrate shall be ra
 484:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;      /**< Sample point is used to compensate mismatch between transmitter 
 485:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                                    the synchronization segment. Sample point. Range = [0, 10000] wi
 486:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;               /**< (Re) Synchronization Jump Width. Range:0-3 */
 487:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 488:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 489:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 490:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 491:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 492:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 493:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 494:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 495:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;    /**< points to the first element(slave object) in a FIFO structure.Range 
 496:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;     /**< points to the last element(slave object) in a FIFO structure. Range :0
 497:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;    /**< points to the actual target object(Base object) within a FIFO/Gateway 
 498:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 499:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 500:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 501:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 502:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 503:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 504:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 505:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 506:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom;       /**< points to the first element(gateway destination object) in a F
 507:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;        /**< points to the last element(gateway destination object) in a FIFO
 508:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;       /**< points to the actual target object within a FIFO/Gateway structu
 509:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;   /**< TXRQ updated in the gateway destination object after the int
 510:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object */
 511:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;   /**< The identifier of the gateway source object (after storing t
 512:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object. */
 513:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 514:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 515:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                                            gateway destination object */
 516:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 517:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                                 are copied to the gateway destination.*/
 518:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 519:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 520:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 521:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 522:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 523:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** */
 524:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 525:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 526:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 527:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 528:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #pragma push
 529:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #pragma anon_unions
 530:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 531:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning 586
 532:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #endif
 533:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 534:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 535:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 536:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 537:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 538:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** */
 539:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 540:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 541:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 542:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   union
 543:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   {
 544:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     struct
 545:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     {
 546:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 16;
 547:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_selection: 3;  /**<   Defines function of the frame counter  */
 548:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_mode: 2;     /**<   Determines the operation mode of the frame count
 549:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 11;
 550:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     };
 551:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t nfcr;
 552:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 553:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   };
 554:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 555:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 556:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 557:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 558:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** */
 559:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 560:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 561:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 562:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 563:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 564:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 565:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 566:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register *
 567:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   union
 568:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   {
 569:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     struct
 570:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     {
 571:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_identifier: 29;           /**< standard (11 bit)/Extended (29 bit) message ident
 572:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mode: 1;               /**< Standard/Extended identifier support */
 573:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_priority: 2;              /**< Arbitration Mode/Priority */
 574:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     };
 575:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_ar;
 576:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   };
 577:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   union
 578:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   {
 579:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     struct
 580:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     {
 581:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mask: 29;             /**< CAN Identifier of Message Object */
 582:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_ide_mask: 1;             /**< Identifier Extension Bit of Message Object */
 583:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     };
 584:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_amr;
 585:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   };
 586:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 587:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 588:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   union
 589:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   {
 590:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 591:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     uint8_t can_data_byte[8];                 /**< Each position of the array represents a data byt
 592:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bits 
 593:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_data[
 594:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                               of the data */
 595:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     uint64_t can_data_long;                   /** Data of the Message Object*/
 596:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   };
 597:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 598:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 599:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 600:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 601:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 602:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 603:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #pragma pop
 604:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 605:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning restore
 606:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #endif
 607:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 608:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 609:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 610:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 611:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 612:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #endif
 613:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 614:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 615:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 616:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 617:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 618:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 619:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 620:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 622:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 623:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 625:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 626:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 627:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 628:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 629:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 630:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 631:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 632:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 633:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 634:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *         for details.
 635:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 636:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 637:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 638:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 639:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 640:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 641:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 642:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 643:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 644:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 645:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 646:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 647:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 648:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 649:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 650:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 651:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 652:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 653:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 654:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num  CAN node number,Range : 0-2
 655:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num  CAN Message Object number,Range : 0-63
 656:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 657:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 658:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 659:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 660:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 661:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 662:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 663:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 664:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 665:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 666:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 667:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 668:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 669:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 670:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 671:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 672:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 673:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 674:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 675:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 676:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 677:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 678:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 679:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 680:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 681:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 682:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 683:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 684:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 685:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 686:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
  27              	 .loc 1 686 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 687:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
  43              	 .loc 1 687 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a D3F8C431 	 ldr r3,[r3,#452]
  46 000e 03F44073 	 and r3,r3,#768
  47 0012 002B     	 cmp r3,#0
  48 0014 0CBF     	 ite eq
  49 0016 0123     	 moveq r3,#1
  50 0018 0023     	 movne r3,#0
  51 001a DBB2     	 uxtb r3,r3
 688:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
  52              	 .loc 1 688 0
  53 001c 1846     	 mov r0,r3
  54 001e 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 0020 BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 0022 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 0026 7047     	 bx lr
  66              	 .cfi_endproc
  67              	.LFE171:
  69              	 .section .text.XMC_CAN_PanelControl,"ax",%progbits
  70              	 .align 2
  71              	 .thumb
  72              	 .thumb_func
  74              	XMC_CAN_PanelControl:
  75              	.LFB172:
 689:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 690:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 691:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 692:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 693:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 694:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 695:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 696:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1   Panel Argument 1,Range : 0-2
 697:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2   Panel Argument 2, Range : 0-63
 698:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 699:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 700:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 701:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 702:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 703:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 704:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 705:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 706:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 707:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 708:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 709:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 710:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 711:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 712:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 713:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 714:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_PANCMD_t pancmd,
 715:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg1,
 716:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg2)
 717:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
  76              	 .loc 1 717 0
  77              	 .cfi_startproc
  78              	 
  79              	 
  80              	 
  81 0000 80B4     	 push {r7}
  82              	.LCFI6:
  83              	 .cfi_def_cfa_offset 4
  84              	 .cfi_offset 7,-4
  85 0002 83B0     	 sub sp,sp,#12
  86              	.LCFI7:
  87              	 .cfi_def_cfa_offset 16
  88 0004 00AF     	 add r7,sp,#0
  89              	.LCFI8:
  90              	 .cfi_def_cfa_register 7
  91 0006 7860     	 str r0,[r7,#4]
  92 0008 0846     	 mov r0,r1
  93 000a 1146     	 mov r1,r2
  94 000c 1A46     	 mov r2,r3
  95 000e 0346     	 mov r3,r0
  96 0010 FB70     	 strb r3,[r7,#3]
  97 0012 0B46     	 mov r3,r1
  98 0014 BB70     	 strb r3,[r7,#2]
  99 0016 1346     	 mov r3,r2
 100 0018 7B70     	 strb r3,[r7,#1]
 718:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 101              	 .loc 1 718 0
 102 001a FA78     	 ldrb r2,[r7,#3]
 719:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 103              	 .loc 1 719 0
 104 001c BB78     	 ldrb r3,[r7,#2]
 105 001e 1B04     	 lsls r3,r3,#16
 106 0020 03F47F03 	 and r3,r3,#16711680
 718:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 107              	 .loc 1 718 0
 108 0024 1A43     	 orrs r2,r2,r3
 720:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 109              	 .loc 1 720 0
 110 0026 7B78     	 ldrb r3,[r7,#1]
 111 0028 1B06     	 lsls r3,r3,#24
 719:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 112              	 .loc 1 719 0
 113 002a 1A43     	 orrs r2,r2,r3
 718:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 114              	 .loc 1 718 0
 115 002c 7B68     	 ldr r3,[r7,#4]
 116 002e C3F8C421 	 str r2,[r3,#452]
 721:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
 117              	 .loc 1 721 0
 118 0032 0C37     	 adds r7,r7,#12
 119              	.LCFI9:
 120              	 .cfi_def_cfa_offset 4
 121 0034 BD46     	 mov sp,r7
 122              	.LCFI10:
 123              	 .cfi_def_cfa_register 13
 124              	 
 125 0036 5DF8047B 	 ldr r7,[sp],#4
 126              	.LCFI11:
 127              	 .cfi_restore 7
 128              	 .cfi_def_cfa_offset 0
 129 003a 7047     	 bx lr
 130              	 .cfi_endproc
 131              	.LFE172:
 133              	 .section .text.XMC_CAN_NODE_EnableConfigurationChange,"ax",%progbits
 134              	 .align 2
 135              	 .thumb
 136              	 .thumb_func
 138              	XMC_CAN_NODE_EnableConfigurationChange:
 139              	.LFB188:
 722:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 723:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 724:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 725:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 726:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 727:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 728:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 729:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr  Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_T
 730:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *               Multiple interrupt trigger events can be ORed.
 731:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 732:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 733:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 734:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 735:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 736:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 737:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 738:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 739:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 740:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 741:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 742:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 743:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj, const XMC_CAN_NODE_INTERRUPT_TRIGGE
 744:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 745:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 746:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
 747:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 748:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 749:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 750:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 751:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 752:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 753:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 754:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source
 755:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN).
 756:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fM
 757:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        it should be selected such that if fulfills the minimum operating frequency specified in 
 758:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        In addition the can_frequency shall be an integer multiple of the baudrate.
 759:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz the
 760:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 761:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return Actual frequency
 762:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 763:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 764:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_Init() configures clock rate of the module timer clock fCAN.
 765:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that only the normal divider is used to avoid jitter.
 766:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * In addition the actual achievable frequency is returned.
 767:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 768:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 769:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Altering CAN module \a can_frequency shall affects baud rate, call XMC_CAN_NODE_NominalBitTimeCo
 770:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 771:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 773:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx()\n\n\n
 774:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 775:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 776:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 777:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 778:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 779:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 780:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 781:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 782:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return Baudrate generator clock source
 783:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 784:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 785:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Returns CAN baudrate generator clock source
 786:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 787:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 788:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 789:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 790:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 791:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 792:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 793:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 794:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 795:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 796:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Sets CAN baudrate generator clock source
 797:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 798:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj, const XMC_CAN_CANCLKSRC_t source);
 799:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 800:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 801:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 802:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 803:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 804:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return baudrate generator input clock frequency
 805:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 806:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 807:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN baudrate generator input clock frequency
 808:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 809:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 810:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 811:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 812:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 813:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 814:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 815:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return fCAN clock frequency
 816:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 817:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 818:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN base clock frequency
 819:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 820:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 821:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj);
 822:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 823:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 824:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 825:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 826:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 827:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 828:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 829:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source.
 830:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. i
 831:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omi
 832:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 833:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 834:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 835:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 836:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 837:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() or XMC_CAN_NODE_NominalBitTimeConfigureEx() to confi
 838:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 839:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 840:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 841:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 842:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx(), XMC_CAN_InitEx
 844:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 845:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 846:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 847:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #else
 848:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 849:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** #endif
 850:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 851:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 852:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 853:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 854:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 855:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 856:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 857:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 858:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 859:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 860:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 861:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * None
 863:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 864:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 865:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 866:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 867:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /* NODE APIs */
 868:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 869:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 870:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 871:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node      Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 872:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event     CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_
 873:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 874:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 875:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 876:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 877:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 878:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 879:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 880:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 881:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * None
 882:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 883:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 884:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 885:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 886:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 887:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     const uint32_t service_request)
 888:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 889:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
 890:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
 891:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 892:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 893:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 894:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 896:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 897:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 898:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 899:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 900:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 901:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 902:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 903:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 904:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 905:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * None
 906:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 907:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 908:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure(XMC_CAN_NODE_t *const can_node,
 909:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 910:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 911:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 912:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 913:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 914:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 915:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 916:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t
 917:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 918:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 919:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_NODE_NominalBitTimeConfigure() configures the CAN node baudrate.
 920:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that allows bitrates below 100kpbs.
 921:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @note Consider using the new API for new projects. XMC_CAN_NODE_NominalBitTimeConfigure() is kep
 922:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 923:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 924:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 925:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 926:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 927:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_InitEx()
 928:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 929:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 930:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 931:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 932:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 933:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 934:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 935:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 936:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 937:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 938:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 939:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 940:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 941:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 942:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 943:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 944:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 945:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 946:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * None
 947:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 948:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 949:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 950:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 951:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 952:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 953:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 954:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 955:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 956:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 957:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 958:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
 959:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 960:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 961:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 962:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_
 963:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 964:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 965:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 966:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 967:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 968:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 969:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 970:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 971:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 972:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 973:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 974:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 975:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 976:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 977:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 978:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 979:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
 980:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 981:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 982:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 983:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 984:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
 985:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 986:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
 987:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
 988:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 989:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 990:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 991:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 992:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 993:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 994:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 995:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 996:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
 997:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 998:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 999:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1000:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1001:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1002:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
1003:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1004:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1005:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1006:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
1007:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
1008:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
1009:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
1010:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1011:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1012:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1013:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1014:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1015:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1016:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1017:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1018:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1019:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1020:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1021:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
1022:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1023:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1024:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
1025:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1026:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1027:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1028:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1029:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1030:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1031:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1032:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1033:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1034:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1035:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1036:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1037:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1038:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1039:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1040:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
1041:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1042:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1043:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
1044:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1045:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1046:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1047:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1048:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1049:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1050:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1051:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1052:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1053:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1054:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
1055:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1056:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1057:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
1058:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1059:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1060:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
1061:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1062:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1063:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1064:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
1065:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
1066:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
1067:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
1068:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1069:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1070:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1071:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1072:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1073:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1074:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
1075:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1076:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1077:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
1078:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1079:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1080:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
1081:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1082:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1083:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1084:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
1085:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
1086:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk) >> CAN_NODE_NEC
1087:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
1088:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1089:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1090:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1091:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1092:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1093:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level  Error Warning level value. Range :0-255.
1094:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1095:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1096:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1097:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1098:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
1099:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
1100:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1101:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1102:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1103:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1104:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1105:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1106:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1107:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1108:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1109:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1110:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
1111:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1112:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1113:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
1114:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1115:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1116:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1117:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1119:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1120:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1121:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1122:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1123:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1124:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1125:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1126:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1127:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1128:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1129:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1130:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1131:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1132:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1133:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1134:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1135:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1136:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1137:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
1138:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1139:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1140:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
1141:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1142:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1143:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1144:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1145:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1146:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1147:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1148:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1149:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1150:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1151:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1152:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1153:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1154:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1155:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1156:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1157:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1158:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1159:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1160:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1161:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1162:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1163:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
1164:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1165:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_M
1166:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
1167:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1168:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1169:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1170:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1171:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1172:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1173:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1174:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1175:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1176:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns error warning level. This determines the threshold value (warning level, default 96) to
1177:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  to set the corresponding error warning bit EWRN. It reads NECNT register.
1178:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1179:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1180:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1181:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1182:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1183:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1184:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1185:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1186:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
1187:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EW
1188:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
1189:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1190:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1191:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1192:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1193:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1194:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1195:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1196:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1197:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1198:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a trans
1199:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the err
1200:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1201:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1202:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1203:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1204:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1205:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1206:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1207:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1208:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1209:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1210:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1211:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
1212:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1213:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
1214:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1215:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1216:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1217:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1218:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1219:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1220:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t  receive error counter value.
1221:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1222:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1223:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Receive Error Counter value. It reads NECNT register.
1224:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1225:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1226:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1227:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1228:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1229:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1230:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1231:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
1232:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1233:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
1234:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1235:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1236:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1237:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1238:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1239:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1240:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1241:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1242:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1243:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1244:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1245:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1246:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1247:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1248:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1249:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1250:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1251:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
1252:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
1253:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
1254:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1255:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1256:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1257:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1258:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1259:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1260:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1261:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1262:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1263:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1264:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1265:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1266:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1267:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1268:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1269:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1270:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node, XMC_CAN_NODE_STATUS_t
1271:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
1272:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NSR &= ~(uint32_t)can_node_status;
1273:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
1274:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1275:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1276:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1277:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1278:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1279:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1280:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1281:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1282:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1283:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1284:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1285:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1286:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1287:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1288:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1289:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1290:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1291:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1292:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 140              	 .loc 1 1292 0
 141              	 .cfi_startproc
 142              	 
 143              	 
 144              	 
 145 0000 80B4     	 push {r7}
 146              	.LCFI12:
 147              	 .cfi_def_cfa_offset 4
 148              	 .cfi_offset 7,-4
 149 0002 83B0     	 sub sp,sp,#12
 150              	.LCFI13:
 151              	 .cfi_def_cfa_offset 16
 152 0004 00AF     	 add r7,sp,#0
 153              	.LCFI14:
 154              	 .cfi_def_cfa_register 7
 155 0006 7860     	 str r0,[r7,#4]
1293:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 156              	 .loc 1 1293 0
 157 0008 7B68     	 ldr r3,[r7,#4]
 158 000a 1B68     	 ldr r3,[r3]
 159 000c 43F04002 	 orr r2,r3,#64
 160 0010 7B68     	 ldr r3,[r7,#4]
 161 0012 1A60     	 str r2,[r3]
1294:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
 162              	 .loc 1 1294 0
 163 0014 0C37     	 adds r7,r7,#12
 164              	.LCFI15:
 165              	 .cfi_def_cfa_offset 4
 166 0016 BD46     	 mov sp,r7
 167              	.LCFI16:
 168              	 .cfi_def_cfa_register 13
 169              	 
 170 0018 5DF8047B 	 ldr r7,[sp],#4
 171              	.LCFI17:
 172              	 .cfi_restore 7
 173              	 .cfi_def_cfa_offset 0
 174 001c 7047     	 bx lr
 175              	 .cfi_endproc
 176              	.LFE188:
 178 001e 00BF     	 .section .text.XMC_CAN_NODE_DisableConfigurationChange,"ax",%progbits
 179              	 .align 2
 180              	 .thumb
 181              	 .thumb_func
 183              	XMC_CAN_NODE_DisableConfigurationChange:
 184              	.LFB189:
1295:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1296:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1297:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** /**
1298:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1299:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1300:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1301:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1302:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1303:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1304:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *  Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1305:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1306:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1307:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1308:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  *
1309:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****  */
1310:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** 
1311:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1312:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** {
 185              	 .loc 1 1312 0
 186              	 .cfi_startproc
 187              	 
 188              	 
 189              	 
 190 0000 80B4     	 push {r7}
 191              	.LCFI18:
 192              	 .cfi_def_cfa_offset 4
 193              	 .cfi_offset 7,-4
 194 0002 83B0     	 sub sp,sp,#12
 195              	.LCFI19:
 196              	 .cfi_def_cfa_offset 16
 197 0004 00AF     	 add r7,sp,#0
 198              	.LCFI20:
 199              	 .cfi_def_cfa_register 7
 200 0006 7860     	 str r0,[r7,#4]
1313:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 201              	 .loc 1 1313 0
 202 0008 7B68     	 ldr r3,[r7,#4]
 203 000a 1B68     	 ldr r3,[r3]
 204 000c 23F04002 	 bic r2,r3,#64
 205 0010 7B68     	 ldr r3,[r7,#4]
 206 0012 1A60     	 str r2,[r3]
1314:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_can.h **** }
 207              	 .loc 1 1314 0
 208 0014 0C37     	 adds r7,r7,#12
 209              	.LCFI21:
 210              	 .cfi_def_cfa_offset 4
 211 0016 BD46     	 mov sp,r7
 212              	.LCFI22:
 213              	 .cfi_def_cfa_register 13
 214              	 
 215 0018 5DF8047B 	 ldr r7,[sp],#4
 216              	.LCFI23:
 217              	 .cfi_restore 7
 218              	 .cfi_def_cfa_offset 0
 219 001c 7047     	 bx lr
 220              	 .cfi_endproc
 221              	.LFE189:
 223 001e 00BF     	 .section .text.max,"ax",%progbits
 224              	 .align 2
 225              	 .thumb
 226              	 .thumb_func
 228              	max:
 229              	.LFB229:
 230              	 .file 2 "../Libraries/XMCLib/src/xmc_can.c"
   1:../Libraries/XMCLib/src/xmc_can.c **** /**
   2:../Libraries/XMCLib/src/xmc_can.c ****  * @file xmc_can.c
   3:../Libraries/XMCLib/src/xmc_can.c ****  * @date 2020-03-17
   4:../Libraries/XMCLib/src/xmc_can.c ****  *
   5:../Libraries/XMCLib/src/xmc_can.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_can.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_can.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_can.c ****  *
   9:../Libraries/XMCLib/src/xmc_can.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_can.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_can.c ****  *
  12:../Libraries/XMCLib/src/xmc_can.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_can.c ****  *
  14:../Libraries/XMCLib/src/xmc_can.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_can.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_can.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_can.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_can.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_can.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_can.c ****  *
  21:../Libraries/XMCLib/src/xmc_can.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_can.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_can.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_can.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_can.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_can.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_can.c ****  *
  28:../Libraries/XMCLib/src/xmc_can.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_can.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_can.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_can.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_can.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_can.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_can.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_can.c ****  *
  36:../Libraries/XMCLib/src/xmc_can.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_can.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_can.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_can.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_can.c ****  *
  41:../Libraries/XMCLib/src/xmc_can.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_can.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_can.c ****  *
  44:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_can.c ****  *     - Initial draft <br>
  46:../Libraries/XMCLib/src/xmc_can.c ****  *
  47:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-05-20:
  48:../Libraries/XMCLib/src/xmc_can.c ****  *     - New API added: XMC_CAN_MO_ReceiveData() <br>
  49:../Libraries/XMCLib/src/xmc_can.c ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  50:../Libraries/XMCLib/src/xmc_can.c ****  *     - Minor fix in XMC_CAN_TXFIFO_ConfigMOSlaveObject(). <br>
  51:../Libraries/XMCLib/src/xmc_can.c ****  *
  52:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-06-20:
  53:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  54:../Libraries/XMCLib/src/xmc_can.c ****  *
  55:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-01:
  56:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed  fCANB clock support <br>
  57:../Libraries/XMCLib/src/xmc_can.c ****  *
  58:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-08:
  59:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_Init() <br>
  60:../Libraries/XMCLib/src/xmc_can.c ****  *
  61:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-07:
  62:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed XMC_CAN_AllocateMOtoNodeList to wait for ready status of list controller
  63:../Libraries/XMCLib/src/xmc_can.c ****  *
  64:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-20:
  65:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>
  66:../Libraries/XMCLib/src/xmc_can.c ****  *
  67:../Libraries/XMCLib/src/xmc_can.c ****  * 2017-11-09:
  68:../Libraries/XMCLib/src/xmc_can.c ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  69:../Libraries/XMCLib/src/xmc_can.c ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  70:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed refactoring XMC_CAN_MO_Config() to configure MOCTR depending on transmit or receiv
  71:../Libraries/XMCLib/src/xmc_can.c ****  *
  72:../Libraries/XMCLib/src/xmc_can.c ****  * 2018-06-21:
  73:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_NODE_NominalBitTimeConfigureEx()
  74:../Libraries/XMCLib/src/xmc_can.c ****  *
  75:../Libraries/XMCLib/src/xmc_can.c ****  * 2018-11-12:
  76:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed assertion at XMC_CAN_InitEx()
  77:../Libraries/XMCLib/src/xmc_can.c ****  *
  78:../Libraries/XMCLib/src/xmc_can.c ****  * 2019-05-07:
  79:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed compilation warnings
  80:../Libraries/XMCLib/src/xmc_can.c ****  *
  81:../Libraries/XMCLib/src/xmc_can.c ****  * 2019-06-26:
  82:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_NODE_NominalBitTimeConfigureEx() non returning, decrementing ntq before cont
  83:../Libraries/XMCLib/src/xmc_can.c ****  *     - Added XMC_CAN_GetClockFrequency()
  84:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_InitEx() so that XMC_CAN_SetBaudrateClockSource() is invoked before XMC_CAN_
  85:../Libraries/XMCLib/src/xmc_can.c ****  *
  86:../Libraries/XMCLib/src/xmc_can.c ****  * 2020-03-17:
  87:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_MO_ReceiveData() according to description in the reference manual
  88:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_MO_SetAcceptanceMask(), checking for matching message IDE
  89:../Libraries/XMCLib/src/xmc_can.c ****  *
  90:../Libraries/XMCLib/src/xmc_can.c ****  * @endcond
  91:../Libraries/XMCLib/src/xmc_can.c ****  *
  92:../Libraries/XMCLib/src/xmc_can.c ****  */
  93:../Libraries/XMCLib/src/xmc_can.c **** 
  94:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  95:../Libraries/XMCLib/src/xmc_can.c ****  * HEADER FILES
  96:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  97:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_can.h"
  98:../Libraries/XMCLib/src/xmc_can.c **** 
  99:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CAN)
 100:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_scu.h"
 101:../Libraries/XMCLib/src/xmc_can.c **** 
 102:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t max(uint32_t a, uint32_t b)
 103:../Libraries/XMCLib/src/xmc_can.c **** {
 231              	 .loc 2 103 0
 232              	 .cfi_startproc
 233              	 
 234              	 
 235              	 
 236 0000 80B4     	 push {r7}
 237              	.LCFI24:
 238              	 .cfi_def_cfa_offset 4
 239              	 .cfi_offset 7,-4
 240 0002 83B0     	 sub sp,sp,#12
 241              	.LCFI25:
 242              	 .cfi_def_cfa_offset 16
 243 0004 00AF     	 add r7,sp,#0
 244              	.LCFI26:
 245              	 .cfi_def_cfa_register 7
 246 0006 7860     	 str r0,[r7,#4]
 247 0008 3960     	 str r1,[r7]
 104:../Libraries/XMCLib/src/xmc_can.c ****   return (a > b) ? a : b;
 248              	 .loc 2 104 0
 249 000a 3A68     	 ldr r2,[r7]
 250 000c 7B68     	 ldr r3,[r7,#4]
 251 000e 9342     	 cmp r3,r2
 252 0010 38BF     	 it cc
 253 0012 1346     	 movcc r3,r2
 105:../Libraries/XMCLib/src/xmc_can.c **** }
 254              	 .loc 2 105 0
 255 0014 1846     	 mov r0,r3
 256 0016 0C37     	 adds r7,r7,#12
 257              	.LCFI27:
 258              	 .cfi_def_cfa_offset 4
 259 0018 BD46     	 mov sp,r7
 260              	.LCFI28:
 261              	 .cfi_def_cfa_register 13
 262              	 
 263 001a 5DF8047B 	 ldr r7,[sp],#4
 264              	.LCFI29:
 265              	 .cfi_restore 7
 266              	 .cfi_def_cfa_offset 0
 267 001e 7047     	 bx lr
 268              	 .cfi_endproc
 269              	.LFE229:
 271              	 .section .text.min,"ax",%progbits
 272              	 .align 2
 273              	 .thumb
 274              	 .thumb_func
 276              	min:
 277              	.LFB230:
 106:../Libraries/XMCLib/src/xmc_can.c **** 
 107:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t min(uint32_t a, uint32_t b)
 108:../Libraries/XMCLib/src/xmc_can.c **** {
 278              	 .loc 2 108 0
 279              	 .cfi_startproc
 280              	 
 281              	 
 282              	 
 283 0000 80B4     	 push {r7}
 284              	.LCFI30:
 285              	 .cfi_def_cfa_offset 4
 286              	 .cfi_offset 7,-4
 287 0002 83B0     	 sub sp,sp,#12
 288              	.LCFI31:
 289              	 .cfi_def_cfa_offset 16
 290 0004 00AF     	 add r7,sp,#0
 291              	.LCFI32:
 292              	 .cfi_def_cfa_register 7
 293 0006 7860     	 str r0,[r7,#4]
 294 0008 3960     	 str r1,[r7]
 109:../Libraries/XMCLib/src/xmc_can.c ****   return (a < b) ? a : b;
 295              	 .loc 2 109 0
 296 000a 3A68     	 ldr r2,[r7]
 297 000c 7B68     	 ldr r3,[r7,#4]
 298 000e 9342     	 cmp r3,r2
 299 0010 28BF     	 it cs
 300 0012 1346     	 movcs r3,r2
 110:../Libraries/XMCLib/src/xmc_can.c **** }
 301              	 .loc 2 110 0
 302 0014 1846     	 mov r0,r3
 303 0016 0C37     	 adds r7,r7,#12
 304              	.LCFI33:
 305              	 .cfi_def_cfa_offset 4
 306 0018 BD46     	 mov sp,r7
 307              	.LCFI34:
 308              	 .cfi_def_cfa_register 13
 309              	 
 310 001a 5DF8047B 	 ldr r7,[sp],#4
 311              	.LCFI35:
 312              	 .cfi_restore 7
 313              	 .cfi_def_cfa_offset 0
 314 001e 7047     	 bx lr
 315              	 .cfi_endproc
 316              	.LFE230:
 318              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigureEx,"ax",%progbits
 319              	 .align 2
 320              	 .global XMC_CAN_NODE_NominalBitTimeConfigureEx
 321              	 .thumb
 322              	 .thumb_func
 324              	XMC_CAN_NODE_NominalBitTimeConfigureEx:
 325              	.LFB231:
 111:../Libraries/XMCLib/src/xmc_can.c **** 
 112:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
 113:../Libraries/XMCLib/src/xmc_can.c ****  * API IMPLEMENTATION
 114:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
 115:../Libraries/XMCLib/src/xmc_can.c **** 
 116:../Libraries/XMCLib/src/xmc_can.c **** /* The max prescaler is the equal to max BRP setting (64) multiply by 8 (DIV8) */
 117:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_PRESCALER 512
 118:../Libraries/XMCLib/src/xmc_can.c **** 
 119:../Libraries/XMCLib/src/xmc_can.c **** /* maximum TSEG1 is 16 and maximum TSEG2 is 8, plus one fix sync tq */
 120:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_NTQ 25
 121:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_NTQ 8
 122:../Libraries/XMCLib/src/xmc_can.c **** 
 123:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG1 3
 124:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG2 2
 125:../Libraries/XMCLib/src/xmc_can.c **** 
 126:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG1 15
 127:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG2 7
 128:../Libraries/XMCLib/src/xmc_can.c **** 
 129:../Libraries/XMCLib/src/xmc_can.c **** 
 130:../Libraries/XMCLib/src/xmc_can.c **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 131:../Libraries/XMCLib/src/xmc_can.c ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const bit_time_config)
 132:../Libraries/XMCLib/src/xmc_can.c **** {
 326              	 .loc 2 132 0
 327              	 .cfi_startproc
 328              	 
 329              	 
 330 0000 80B5     	 push {r7,lr}
 331              	.LCFI36:
 332              	 .cfi_def_cfa_offset 8
 333              	 .cfi_offset 7,-8
 334              	 .cfi_offset 14,-4
 335 0002 88B0     	 sub sp,sp,#32
 336              	.LCFI37:
 337              	 .cfi_def_cfa_offset 40
 338 0004 00AF     	 add r7,sp,#0
 339              	.LCFI38:
 340              	 .cfi_def_cfa_register 7
 341 0006 7860     	 str r0,[r7,#4]
 342 0008 3960     	 str r1,[r7]
 133:../Libraries/XMCLib/src/xmc_can.c ****   /* Check that the CAN frequency is a multiple of the required baudrate */
 134:../Libraries/XMCLib/src/xmc_can.c ****   if ((bit_time_config->can_frequency % bit_time_config->baudrate) == 0)
 343              	 .loc 2 134 0
 344 000a 3B68     	 ldr r3,[r7]
 345 000c 1B68     	 ldr r3,[r3]
 346 000e 3A68     	 ldr r2,[r7]
 347 0010 5268     	 ldr r2,[r2,#4]
 348 0012 B3FBF2F1 	 udiv r1,r3,r2
 349 0016 02FB01F2 	 mul r2,r2,r1
 350 001a 9B1A     	 subs r3,r3,r2
 351 001c 002B     	 cmp r3,#0
 352 001e 40F09080 	 bne .L11
 353              	.LBB2:
 135:../Libraries/XMCLib/src/xmc_can.c ****   {
 136:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t prescaler = 0;
 354              	 .loc 2 136 0
 355 0022 0023     	 movs r3,#0
 356 0024 FB61     	 str r3,[r7,#28]
 137:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t div8 = 0;
 357              	 .loc 2 137 0
 358 0026 0023     	 movs r3,#0
 359 0028 BB61     	 str r3,[r7,#24]
 138:../Libraries/XMCLib/src/xmc_can.c **** 
 139:../Libraries/XMCLib/src/xmc_can.c ****     /* Calculate the factor between can frequency and required baudrate, this is equal to (prescale
 140:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t fcan_div = bit_time_config->can_frequency / bit_time_config->baudrate;
 360              	 .loc 2 140 0
 361 002a 3B68     	 ldr r3,[r7]
 362 002c 1A68     	 ldr r2,[r3]
 363 002e 3B68     	 ldr r3,[r7]
 364 0030 5B68     	 ldr r3,[r3,#4]
 365 0032 B2FBF3F3 	 udiv r3,r2,r3
 366 0036 BB60     	 str r3,[r7,#8]
 141:../Libraries/XMCLib/src/xmc_can.c **** 
 142:../Libraries/XMCLib/src/xmc_can.c ****     /* start with highest ntq, i.e as much as possible time quanta should be used to construct a bi
 143:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t ntq = XMC_CAN_NODE_MAX_NTQ;
 367              	 .loc 2 143 0
 368 0038 1923     	 movs r3,#25
 369 003a 7B61     	 str r3,[r7,#20]
 144:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg1 = 0;
 370              	 .loc 2 144 0
 371 003c 0023     	 movs r3,#0
 372 003e 3B61     	 str r3,[r7,#16]
 145:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg2 = 0;
 373              	 .loc 2 145 0
 374 0040 0023     	 movs r3,#0
 375 0042 FB60     	 str r3,[r7,#12]
 146:../Libraries/XMCLib/src/xmc_can.c ****     while (ntq >= XMC_CAN_NODE_MIN_NTQ)
 376              	 .loc 2 146 0
 377 0044 4BE0     	 b .L12
 378              	.L17:
 147:../Libraries/XMCLib/src/xmc_can.c ****     {
 148:../Libraries/XMCLib/src/xmc_can.c ****       /* consider this ntq, only if fcan_div is multiple of ntq */
 149:../Libraries/XMCLib/src/xmc_can.c ****       if ((fcan_div % ntq) == 0)
 379              	 .loc 2 149 0
 380 0046 BB68     	 ldr r3,[r7,#8]
 381 0048 7A69     	 ldr r2,[r7,#20]
 382 004a B3FBF2F2 	 udiv r2,r3,r2
 383 004e 7969     	 ldr r1,[r7,#20]
 384 0050 01FB02F2 	 mul r2,r1,r2
 385 0054 9B1A     	 subs r3,r3,r2
 386 0056 002B     	 cmp r3,#0
 387 0058 3ED1     	 bne .L13
 150:../Libraries/XMCLib/src/xmc_can.c ****       {
 151:../Libraries/XMCLib/src/xmc_can.c ****         div8 = 0;
 388              	 .loc 2 151 0
 389 005a 0023     	 movs r3,#0
 390 005c BB61     	 str r3,[r7,#24]
 152:../Libraries/XMCLib/src/xmc_can.c ****         prescaler = fcan_div / ntq;
 391              	 .loc 2 152 0
 392 005e BA68     	 ldr r2,[r7,#8]
 393 0060 7B69     	 ldr r3,[r7,#20]
 394 0062 B2FBF3F3 	 udiv r3,r2,r3
 395 0066 FB61     	 str r3,[r7,#28]
 153:../Libraries/XMCLib/src/xmc_can.c ****         if ((prescaler > 0) && (prescaler <= XMC_CAN_NODE_MAX_PRESCALER))
 396              	 .loc 2 153 0
 397 0068 FB69     	 ldr r3,[r7,#28]
 398 006a 002B     	 cmp r3,#0
 399 006c 34D0     	 beq .L13
 400              	 .loc 2 153 0 is_stmt 0 discriminator 1
 401 006e FB69     	 ldr r3,[r7,#28]
 402 0070 B3F5007F 	 cmp r3,#512
 403 0074 30D8     	 bhi .L13
 154:../Libraries/XMCLib/src/xmc_can.c ****         {
 155:../Libraries/XMCLib/src/xmc_can.c ****           if (prescaler >= 64)
 404              	 .loc 2 155 0 is_stmt 1
 405 0076 FB69     	 ldr r3,[r7,#28]
 406 0078 3F2B     	 cmp r3,#63
 407 007a 0AD9     	 bls .L14
 156:../Libraries/XMCLib/src/xmc_can.c ****           {
 157:../Libraries/XMCLib/src/xmc_can.c ****             /* consider prescaler >=64, if it is integer divisible by 8*/
 158:../Libraries/XMCLib/src/xmc_can.c ****             if ((prescaler & 0x7U) != 0)
 408              	 .loc 2 158 0
 409 007c FB69     	 ldr r3,[r7,#28]
 410 007e 03F00703 	 and r3,r3,#7
 411 0082 002B     	 cmp r3,#0
 412 0084 03D0     	 beq .L15
 159:../Libraries/XMCLib/src/xmc_can.c ****             {
 160:../Libraries/XMCLib/src/xmc_can.c ****               --ntq;
 413              	 .loc 2 160 0
 414 0086 7B69     	 ldr r3,[r7,#20]
 415 0088 013B     	 subs r3,r3,#1
 416 008a 7B61     	 str r3,[r7,#20]
 161:../Libraries/XMCLib/src/xmc_can.c ****               continue;
 417              	 .loc 2 161 0
 418 008c 27E0     	 b .L12
 419              	.L15:
 162:../Libraries/XMCLib/src/xmc_can.c ****             }
 163:../Libraries/XMCLib/src/xmc_can.c ****             else
 164:../Libraries/XMCLib/src/xmc_can.c ****             {
 165:../Libraries/XMCLib/src/xmc_can.c ****               div8 = 1;
 420              	 .loc 2 165 0
 421 008e 0123     	 movs r3,#1
 422 0090 BB61     	 str r3,[r7,#24]
 423              	.L14:
 166:../Libraries/XMCLib/src/xmc_can.c ****             }
 167:../Libraries/XMCLib/src/xmc_can.c ****           }
 168:../Libraries/XMCLib/src/xmc_can.c **** 
 169:../Libraries/XMCLib/src/xmc_can.c ****           tseg1 = ((ntq - 1) * bit_time_config->sample_point) / 10000;
 424              	 .loc 2 169 0
 425 0092 7B69     	 ldr r3,[r7,#20]
 426 0094 013B     	 subs r3,r3,#1
 427 0096 3A68     	 ldr r2,[r7]
 428 0098 1289     	 ldrh r2,[r2,#8]
 429 009a 02FB03F3 	 mul r3,r2,r3
 430 009e 2B4A     	 ldr r2,.L19
 431 00a0 A2FB0323 	 umull r2,r3,r2,r3
 432 00a4 5B0B     	 lsrs r3,r3,#13
 433 00a6 3B61     	 str r3,[r7,#16]
 170:../Libraries/XMCLib/src/xmc_can.c ****           tseg2 = ntq - tseg1 - 1;
 434              	 .loc 2 170 0
 435 00a8 7A69     	 ldr r2,[r7,#20]
 436 00aa 3B69     	 ldr r3,[r7,#16]
 437 00ac D31A     	 subs r3,r2,r3
 438 00ae 013B     	 subs r3,r3,#1
 439 00b0 FB60     	 str r3,[r7,#12]
 171:../Libraries/XMCLib/src/xmc_can.c **** 
 172:../Libraries/XMCLib/src/xmc_can.c ****           if ((XMC_CAN_NODE_MIN_TSEG1 <= tseg1) && (tseg1 <= XMC_CAN_NODE_MAX_TSEG1) &&
 440              	 .loc 2 172 0
 441 00b2 3B69     	 ldr r3,[r7,#16]
 442 00b4 022B     	 cmp r3,#2
 443 00b6 0FD9     	 bls .L13
 444              	 .loc 2 172 0 is_stmt 0 discriminator 1
 445 00b8 3B69     	 ldr r3,[r7,#16]
 446 00ba 0F2B     	 cmp r3,#15
 447 00bc 0CD8     	 bhi .L13
 448              	 .loc 2 172 0 discriminator 2
 449 00be FB68     	 ldr r3,[r7,#12]
 450 00c0 012B     	 cmp r3,#1
 451 00c2 09D9     	 bls .L13
 173:../Libraries/XMCLib/src/xmc_can.c ****               (XMC_CAN_NODE_MIN_TSEG2 <= tseg2) && (tseg2 < XMC_CAN_NODE_MAX_TSEG2) && (tseg2 >= bi
 452              	 .loc 2 173 0 is_stmt 1
 453 00c4 FB68     	 ldr r3,[r7,#12]
 454 00c6 062B     	 cmp r3,#6
 455 00c8 06D8     	 bhi .L13
 456              	 .loc 2 173 0 is_stmt 0 discriminator 1
 457 00ca 3B68     	 ldr r3,[r7]
 458 00cc 5B89     	 ldrh r3,[r3,#10]
 459 00ce 1A46     	 mov r2,r3
 460 00d0 FB68     	 ldr r3,[r7,#12]
 461 00d2 9A42     	 cmp r2,r3
 462 00d4 00D8     	 bhi .L13
 174:../Libraries/XMCLib/src/xmc_can.c ****           {
 175:../Libraries/XMCLib/src/xmc_can.c ****             break;
 463              	 .loc 2 175 0 is_stmt 1
 464 00d6 05E0     	 b .L16
 465              	.L13:
 176:../Libraries/XMCLib/src/xmc_can.c ****           }
 177:../Libraries/XMCLib/src/xmc_can.c **** 
 178:../Libraries/XMCLib/src/xmc_can.c **** 
 179:../Libraries/XMCLib/src/xmc_can.c ****         }
 180:../Libraries/XMCLib/src/xmc_can.c ****       }
 181:../Libraries/XMCLib/src/xmc_can.c ****       --ntq;
 466              	 .loc 2 181 0
 467 00d8 7B69     	 ldr r3,[r7,#20]
 468 00da 013B     	 subs r3,r3,#1
 469 00dc 7B61     	 str r3,[r7,#20]
 470              	.L12:
 146:../Libraries/XMCLib/src/xmc_can.c ****     {
 471              	 .loc 2 146 0
 472 00de 7B69     	 ldr r3,[r7,#20]
 473 00e0 072B     	 cmp r3,#7
 474 00e2 B0D8     	 bhi .L17
 475              	.L16:
 182:../Libraries/XMCLib/src/xmc_can.c ****     }
 183:../Libraries/XMCLib/src/xmc_can.c **** 
 184:../Libraries/XMCLib/src/xmc_can.c ****     if (ntq >= XMC_CAN_NODE_MIN_NTQ)
 476              	 .loc 2 184 0
 477 00e4 7B69     	 ldr r3,[r7,#20]
 478 00e6 072B     	 cmp r3,#7
 479 00e8 2BD9     	 bls .L11
 185:../Libraries/XMCLib/src/xmc_can.c ****     {
 186:../Libraries/XMCLib/src/xmc_can.c **** 
 187:../Libraries/XMCLib/src/xmc_can.c ****       XMC_ASSERT("XMC_CAN_NODE_NominalBitTimeConfigureEx: prescaler", (prescaler != 0));
 188:../Libraries/XMCLib/src/xmc_can.c ****       XMC_ASSERT("XMC_CAN_NODE_NominalBitTimeConfigureEx: tseg1", (tseg1 != 0));
 189:../Libraries/XMCLib/src/xmc_can.c ****       XMC_ASSERT("XMC_CAN_NODE_NominalBitTimeConfigureEx: tseg2", (tseg2 != 0));
 190:../Libraries/XMCLib/src/xmc_can.c **** 
 191:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_EnableConfigurationChange(can_node);
 480              	 .loc 2 191 0
 481 00ea 7868     	 ldr r0,[r7,#4]
 482 00ec FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 192:../Libraries/XMCLib/src/xmc_can.c **** 
 193:../Libraries/XMCLib/src/xmc_can.c ****       /* Configure bit timing register */
 194:../Libraries/XMCLib/src/xmc_can.c ****       can_node->NBTR = (((tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG2_M
 483              	 .loc 2 194 0
 484 00f0 FB68     	 ldr r3,[r7,#12]
 485 00f2 013B     	 subs r3,r3,#1
 486 00f4 1B03     	 lsls r3,r3,#12
 487 00f6 03F4E042 	 and r2,r3,#28672
 195:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 488              	 .loc 2 195 0
 489 00fa 3B68     	 ldr r3,[r7]
 490 00fc 5B89     	 ldrh r3,[r3,#10]
 491 00fe 013B     	 subs r3,r3,#1
 492 0100 9B01     	 lsls r3,r3,#6
 493 0102 DBB2     	 uxtb r3,r3
 194:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 494              	 .loc 2 194 0
 495 0104 1A43     	 orrs r2,r2,r3
 196:../Libraries/XMCLib/src/xmc_can.c ****                        (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_M
 496              	 .loc 2 196 0
 497 0106 3B69     	 ldr r3,[r7,#16]
 498 0108 013B     	 subs r3,r3,#1
 499 010a 1B02     	 lsls r3,r3,#8
 500 010c 03F47063 	 and r3,r3,#3840
 195:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 501              	 .loc 2 195 0
 502 0110 42EA0301 	 orr r1,r2,r3
 197:../Libraries/XMCLib/src/xmc_can.c ****                        ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN
 503              	 .loc 2 197 0
 504 0114 BA69     	 ldr r2,[r7,#24]
 505 0116 1346     	 mov r3,r2
 506 0118 5B00     	 lsls r3,r3,#1
 507 011a 1344     	 add r3,r3,r2
 508 011c 1A46     	 mov r2,r3
 509 011e FB69     	 ldr r3,[r7,#28]
 510 0120 D340     	 lsrs r3,r3,r2
 511 0122 013B     	 subs r3,r3,#1
 512 0124 03F03F03 	 and r3,r3,#63
 196:../Libraries/XMCLib/src/xmc_can.c ****                        (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_M
 513              	 .loc 2 196 0
 514 0128 41EA0302 	 orr r2,r1,r3
 198:../Libraries/XMCLib/src/xmc_can.c ****                        ((div8 << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 515              	 .loc 2 198 0
 516 012c BB69     	 ldr r3,[r7,#24]
 517 012e DB03     	 lsls r3,r3,#15
 518 0130 9BB2     	 uxth r3,r3
 197:../Libraries/XMCLib/src/xmc_can.c ****                        ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN
 519              	 .loc 2 197 0
 520 0132 1A43     	 orrs r2,r2,r3
 194:../Libraries/XMCLib/src/xmc_can.c ****                        (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NODE
 521              	 .loc 2 194 0
 522 0134 7B68     	 ldr r3,[r7,#4]
 523 0136 1A61     	 str r2,[r3,#16]
 199:../Libraries/XMCLib/src/xmc_can.c **** 
 200:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_DisableConfigurationChange(can_node);
 524              	 .loc 2 200 0
 525 0138 7868     	 ldr r0,[r7,#4]
 526 013a FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 201:../Libraries/XMCLib/src/xmc_can.c **** 
 202:../Libraries/XMCLib/src/xmc_can.c ****       return XMC_CAN_STATUS_SUCCESS;
 527              	 .loc 2 202 0
 528 013e 0023     	 movs r3,#0
 529 0140 00E0     	 b .L18
 530              	.L11:
 531              	.LBE2:
 203:../Libraries/XMCLib/src/xmc_can.c ****     }
 204:../Libraries/XMCLib/src/xmc_can.c ****   }
 205:../Libraries/XMCLib/src/xmc_can.c **** 
 206:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_STATUS_ERROR;
 532              	 .loc 2 206 0
 533 0142 0123     	 movs r3,#1
 534              	.L18:
 207:../Libraries/XMCLib/src/xmc_can.c **** }
 535              	 .loc 2 207 0
 536 0144 1846     	 mov r0,r3
 537 0146 2037     	 adds r7,r7,#32
 538              	.LCFI39:
 539              	 .cfi_def_cfa_offset 8
 540 0148 BD46     	 mov sp,r7
 541              	.LCFI40:
 542              	 .cfi_def_cfa_register 13
 543              	 
 544 014a 80BD     	 pop {r7,pc}
 545              	.L20:
 546              	 .align 2
 547              	.L19:
 548 014c 5917B7D1 	 .word -776530087
 549              	 .cfi_endproc
 550              	.LFE231:
 552              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigure,"ax",%progbits
 553              	 .align 2
 554              	 .global XMC_CAN_NODE_NominalBitTimeConfigure
 555              	 .thumb
 556              	 .thumb_func
 558              	XMC_CAN_NODE_NominalBitTimeConfigure:
 559              	.LFB232:
 208:../Libraries/XMCLib/src/xmc_can.c **** 
 209:../Libraries/XMCLib/src/xmc_can.c **** /* Baudrate Configuration */
 210:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
 211:../Libraries/XMCLib/src/xmc_can.c ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time)
 212:../Libraries/XMCLib/src/xmc_can.c **** {
 560              	 .loc 2 212 0
 561              	 .cfi_startproc
 562              	 
 563              	 
 564 0000 80B5     	 push {r7,lr}
 565              	.LCFI41:
 566              	 .cfi_def_cfa_offset 8
 567              	 .cfi_offset 7,-8
 568              	 .cfi_offset 14,-4
 569 0002 90B0     	 sub sp,sp,#64
 570              	.LCFI42:
 571              	 .cfi_def_cfa_offset 72
 572 0004 00AF     	 add r7,sp,#0
 573              	.LCFI43:
 574              	 .cfi_def_cfa_register 7
 575 0006 7860     	 str r0,[r7,#4]
 576 0008 3960     	 str r1,[r7]
 213:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
 577              	 .loc 2 213 0
 578 000a 0C23     	 movs r3,#12
 579 000c FB63     	 str r3,[r7,#60]
 214:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_tseg1 = 12U;
 580              	 .loc 2 214 0
 581 000e 0C23     	 movs r3,#12
 582 0010 BB63     	 str r3,[r7,#56]
 215:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_brp = 0U;
 583              	 .loc 2 215 0
 584 0012 0023     	 movs r3,#0
 585 0014 7B63     	 str r3,[r7,#52]
 216:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg1 = 1U;
 586              	 .loc 2 216 0
 587 0016 0123     	 movs r3,#1
 588 0018 3B63     	 str r3,[r7,#48]
 217:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg2 = 0U;
 589              	 .loc 2 217 0
 590 001a 0023     	 movs r3,#0
 591 001c 7B61     	 str r3,[r7,#20]
 218:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tbaud = 0U;
 592              	 .loc 2 218 0
 593 001e 0023     	 movs r3,#0
 594 0020 FB62     	 str r3,[r7,#44]
 219:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
 595              	 .loc 2 219 0
 596 0022 42F21073 	 movw r3,#10000
 597 0026 BB62     	 str r3,[r7,#40]
 220:../Libraries/XMCLib/src/xmc_can.c **** 
 221:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: rate not supported", (can_bit_time->baudrate
 222:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->baudrate >= 100000U));
 223:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 224:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency <= 120000000U);
 225:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 226:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency > 5000000U);
 227:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: sample point not supported",
 228:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->sample_point < 10000U) && ((can_bit_time->sample_point > 0U)));
 229:../Libraries/XMCLib/src/xmc_can.c **** 
 230:../Libraries/XMCLib/src/xmc_can.c ****   /*
 231:../Libraries/XMCLib/src/xmc_can.c ****    * Bit timing & sampling
 232:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = (BRP+1)/Fcan if DIV8 = 0
 233:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = 8*(BRP+1)/Fcan if DIV8 = 1
 234:../Libraries/XMCLib/src/xmc_can.c ****    * TSync = 1.Tq
 235:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 = (TSEG1+1)*Tq                >= 3Tq
 236:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 = (TSEG2+1)*Tq                >= 2Tq
 237:../Libraries/XMCLib/src/xmc_can.c ****    * Bit Time = TSync + TSeg1 + TSeg2    >= 8Tq
 238:../Libraries/XMCLib/src/xmc_can.c ****    *
 239:../Libraries/XMCLib/src/xmc_can.c ****    * Resynchronization:
 240:../Libraries/XMCLib/src/xmc_can.c ****    *
 241:../Libraries/XMCLib/src/xmc_can.c ****    * Tsjw = (SJW + 1)*Tq
 242:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 >= Tsjw + Tprop
 243:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 >= Tsjw
 244:../Libraries/XMCLib/src/xmc_can.c ****    */
 245:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best baudrate */
 246:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_brp = 1U; temp_brp <= 64U; temp_brp++)
 598              	 .loc 2 246 0
 599 0028 0123     	 movs r3,#1
 600 002a FB63     	 str r3,[r7,#60]
 601 002c 67E0     	 b .L22
 602              	.L31:
 603              	.LBB3:
 247:../Libraries/XMCLib/src/xmc_can.c ****   {
 248:../Libraries/XMCLib/src/xmc_can.c **** 
 249:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t f_quanta = (uint32_t)((can_bit_time->can_frequency * 10U) / temp_brp);
 604              	 .loc 2 249 0
 605 002e 3B68     	 ldr r3,[r7]
 606 0030 1A68     	 ldr r2,[r3]
 607 0032 1346     	 mov r3,r2
 608 0034 9B00     	 lsls r3,r3,#2
 609 0036 1344     	 add r3,r3,r2
 610 0038 5B00     	 lsls r3,r3,#1
 611 003a 1A46     	 mov r2,r3
 612 003c FB6B     	 ldr r3,[r7,#60]
 613 003e B2FBF3F3 	 udiv r3,r2,r3
 614 0042 3B61     	 str r3,[r7,#16]
 250:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 615              	 .loc 2 250 0
 616 0044 3B68     	 ldr r3,[r7]
 617 0046 5B68     	 ldr r3,[r3,#4]
 618 0048 3A69     	 ldr r2,[r7,#16]
 619 004a B2FBF3F3 	 udiv r3,r2,r3
 620 004e 7B62     	 str r3,[r7,#36]
 251:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_baudrate;
 252:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 253:../Libraries/XMCLib/src/xmc_can.c **** 
 254:../Libraries/XMCLib/src/xmc_can.c ****     if ((temp_tbaud % 10U) > 5U)
 621              	 .loc 2 254 0
 622 0050 796A     	 ldr r1,[r7,#36]
 623 0052 5B4B     	 ldr r3,.L39
 624 0054 A3FB0123 	 umull r2,r3,r3,r1
 625 0058 DA08     	 lsrs r2,r3,#3
 626 005a 1346     	 mov r3,r2
 627 005c 9B00     	 lsls r3,r3,#2
 628 005e 1344     	 add r3,r3,r2
 629 0060 5B00     	 lsls r3,r3,#1
 630 0062 CA1A     	 subs r2,r1,r3
 631 0064 052A     	 cmp r2,#5
 632 0066 09D9     	 bls .L23
 255:../Libraries/XMCLib/src/xmc_can.c ****     {
 256:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 633              	 .loc 2 256 0
 634 0068 7B6A     	 ldr r3,[r7,#36]
 635 006a 554A     	 ldr r2,.L39
 636 006c A2FB0323 	 umull r2,r3,r2,r3
 637 0070 DB08     	 lsrs r3,r3,#3
 638 0072 7B62     	 str r3,[r7,#36]
 257:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud++;
 639              	 .loc 2 257 0
 640 0074 7B6A     	 ldr r3,[r7,#36]
 641 0076 0133     	 adds r3,r3,#1
 642 0078 7B62     	 str r3,[r7,#36]
 643 007a 05E0     	 b .L24
 644              	.L23:
 258:../Libraries/XMCLib/src/xmc_can.c ****     }
 259:../Libraries/XMCLib/src/xmc_can.c ****     else
 260:../Libraries/XMCLib/src/xmc_can.c ****     {
 261:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 645              	 .loc 2 261 0
 646 007c 7B6A     	 ldr r3,[r7,#36]
 647 007e 504A     	 ldr r2,.L39
 648 0080 A2FB0323 	 umull r2,r3,r2,r3
 649 0084 DB08     	 lsrs r3,r3,#3
 650 0086 7B62     	 str r3,[r7,#36]
 651              	.L24:
 262:../Libraries/XMCLib/src/xmc_can.c ****     }
 263:../Libraries/XMCLib/src/xmc_can.c **** 
 264:../Libraries/XMCLib/src/xmc_can.c ****     if (temp_tbaud > 0U)
 652              	 .loc 2 264 0
 653 0088 7B6A     	 ldr r3,[r7,#36]
 654 008a 002B     	 cmp r3,#0
 655 008c 0AD0     	 beq .L25
 265:../Libraries/XMCLib/src/xmc_can.c ****     {
 266:../Libraries/XMCLib/src/xmc_can.c ****       temp_baudrate = (uint32_t) (f_quanta / (temp_tbaud * 10U));
 656              	 .loc 2 266 0
 657 008e 7A6A     	 ldr r2,[r7,#36]
 658 0090 1346     	 mov r3,r2
 659 0092 9B00     	 lsls r3,r3,#2
 660 0094 1344     	 add r3,r3,r2
 661 0096 5B00     	 lsls r3,r3,#1
 662 0098 1A46     	 mov r2,r3
 663 009a 3B69     	 ldr r3,[r7,#16]
 664 009c B3FBF2F3 	 udiv r3,r3,r2
 665 00a0 3B62     	 str r3,[r7,#32]
 666 00a2 07E0     	 b .L26
 667              	.L25:
 267:../Libraries/XMCLib/src/xmc_can.c ****     }
 268:../Libraries/XMCLib/src/xmc_can.c ****     else
 269:../Libraries/XMCLib/src/xmc_can.c ****     {
 270:../Libraries/XMCLib/src/xmc_can.c ****       temp_baudrate = f_quanta / 10U;
 668              	 .loc 2 270 0
 669 00a4 3B69     	 ldr r3,[r7,#16]
 670 00a6 464A     	 ldr r2,.L39
 671 00a8 A2FB0323 	 umull r2,r3,r2,r3
 672 00ac DB08     	 lsrs r3,r3,#3
 673 00ae 3B62     	 str r3,[r7,#32]
 271:../Libraries/XMCLib/src/xmc_can.c ****       temp_tbaud = 1;
 674              	 .loc 2 271 0
 675 00b0 0123     	 movs r3,#1
 676 00b2 7B62     	 str r3,[r7,#36]
 677              	.L26:
 272:../Libraries/XMCLib/src/xmc_can.c ****     }
 273:../Libraries/XMCLib/src/xmc_can.c **** 
 274:../Libraries/XMCLib/src/xmc_can.c ****     if (temp_baudrate >= can_bit_time->baudrate)
 678              	 .loc 2 274 0
 679 00b4 3B68     	 ldr r3,[r7]
 680 00b6 5A68     	 ldr r2,[r3,#4]
 681 00b8 3B6A     	 ldr r3,[r7,#32]
 682 00ba 9A42     	 cmp r2,r3
 683 00bc 05D8     	 bhi .L27
 275:../Libraries/XMCLib/src/xmc_can.c ****     {
 276:../Libraries/XMCLib/src/xmc_can.c ****       error = temp_baudrate - can_bit_time->baudrate;
 684              	 .loc 2 276 0
 685 00be 3B68     	 ldr r3,[r7]
 686 00c0 5B68     	 ldr r3,[r3,#4]
 687 00c2 3A6A     	 ldr r2,[r7,#32]
 688 00c4 D31A     	 subs r3,r2,r3
 689 00c6 FB61     	 str r3,[r7,#28]
 690 00c8 04E0     	 b .L28
 691              	.L27:
 277:../Libraries/XMCLib/src/xmc_can.c ****     }
 278:../Libraries/XMCLib/src/xmc_can.c ****     else
 279:../Libraries/XMCLib/src/xmc_can.c ****     {
 280:../Libraries/XMCLib/src/xmc_can.c ****       error = can_bit_time->baudrate - temp_baudrate;
 692              	 .loc 2 280 0
 693 00ca 3B68     	 ldr r3,[r7]
 694 00cc 5A68     	 ldr r2,[r3,#4]
 695 00ce 3B6A     	 ldr r3,[r7,#32]
 696 00d0 D31A     	 subs r3,r2,r3
 697 00d2 FB61     	 str r3,[r7,#28]
 698              	.L28:
 281:../Libraries/XMCLib/src/xmc_can.c ****     }
 282:../Libraries/XMCLib/src/xmc_can.c **** 
 283:../Libraries/XMCLib/src/xmc_can.c ****     if ((temp_tbaud <= 20U) && (best_error > error))
 699              	 .loc 2 283 0
 700 00d4 7B6A     	 ldr r3,[r7,#36]
 701 00d6 142B     	 cmp r3,#20
 702 00d8 0ED8     	 bhi .L29
 703              	 .loc 2 283 0 is_stmt 0 discriminator 1
 704 00da BA6A     	 ldr r2,[r7,#40]
 705 00dc FB69     	 ldr r3,[r7,#28]
 706 00de 9A42     	 cmp r2,r3
 707 00e0 0AD9     	 bls .L29
 284:../Libraries/XMCLib/src/xmc_can.c ****     {
 285:../Libraries/XMCLib/src/xmc_can.c ****       best_brp = temp_brp;
 708              	 .loc 2 285 0 is_stmt 1
 709 00e2 FB6B     	 ldr r3,[r7,#60]
 710 00e4 7B63     	 str r3,[r7,#52]
 286:../Libraries/XMCLib/src/xmc_can.c ****       best_tbaud = temp_tbaud;
 711              	 .loc 2 286 0
 712 00e6 7B6A     	 ldr r3,[r7,#36]
 713 00e8 FB62     	 str r3,[r7,#44]
 287:../Libraries/XMCLib/src/xmc_can.c ****       best_error = (error);
 714              	 .loc 2 287 0
 715 00ea FB69     	 ldr r3,[r7,#28]
 716 00ec BB62     	 str r3,[r7,#40]
 288:../Libraries/XMCLib/src/xmc_can.c **** 
 289:../Libraries/XMCLib/src/xmc_can.c ****       if (error < 1000U)
 717              	 .loc 2 289 0
 718 00ee FB69     	 ldr r3,[r7,#28]
 719 00f0 B3F57A7F 	 cmp r3,#1000
 720 00f4 00D2     	 bcs .L29
 290:../Libraries/XMCLib/src/xmc_can.c ****       {
 291:../Libraries/XMCLib/src/xmc_can.c ****         break;
 721              	 .loc 2 291 0
 722 00f6 05E0     	 b .L30
 723              	.L29:
 724              	.LBE3:
 246:../Libraries/XMCLib/src/xmc_can.c ****   {
 725              	 .loc 2 246 0 discriminator 2
 726 00f8 FB6B     	 ldr r3,[r7,#60]
 727 00fa 0133     	 adds r3,r3,#1
 728 00fc FB63     	 str r3,[r7,#60]
 729              	.L22:
 246:../Libraries/XMCLib/src/xmc_can.c ****   {
 730              	 .loc 2 246 0 is_stmt 0 discriminator 1
 731 00fe FB6B     	 ldr r3,[r7,#60]
 732 0100 402B     	 cmp r3,#64
 733 0102 94D9     	 bls .L31
 734              	.L30:
 292:../Libraries/XMCLib/src/xmc_can.c ****       }
 293:../Libraries/XMCLib/src/xmc_can.c ****     }
 294:../Libraries/XMCLib/src/xmc_can.c ****   }
 295:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best sample point */
 296:../Libraries/XMCLib/src/xmc_can.c ****   best_error = 10000U;
 735              	 .loc 2 296 0 is_stmt 1
 736 0104 42F21073 	 movw r3,#10000
 737 0108 BB62     	 str r3,[r7,#40]
 297:../Libraries/XMCLib/src/xmc_can.c **** 
 298:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_tseg1 = 64U; temp_tseg1 >= 3U; temp_tseg1--)
 738              	 .loc 2 298 0
 739 010a 4023     	 movs r3,#64
 740 010c BB63     	 str r3,[r7,#56]
 741 010e 2EE0     	 b .L32
 742              	.L38:
 743              	.LBB4:
 299:../Libraries/XMCLib/src/xmc_can.c ****   {
 300:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tempSamplePoint = ((temp_tseg1 + 1U) * 10000U) / best_tbaud;
 744              	 .loc 2 300 0
 745 0110 BB6B     	 ldr r3,[r7,#56]
 746 0112 0133     	 adds r3,r3,#1
 747 0114 42F21072 	 movw r2,#10000
 748 0118 02FB03F2 	 mul r2,r2,r3
 749 011c FB6A     	 ldr r3,[r7,#44]
 750 011e B2FBF3F3 	 udiv r3,r2,r3
 751 0122 FB60     	 str r3,[r7,#12]
 301:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 302:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint >= can_bit_time->sample_point)
 752              	 .loc 2 302 0
 753 0124 3B68     	 ldr r3,[r7]
 754 0126 1B89     	 ldrh r3,[r3,#8]
 755 0128 1A46     	 mov r2,r3
 756 012a FB68     	 ldr r3,[r7,#12]
 757 012c 9A42     	 cmp r2,r3
 758 012e 06D8     	 bhi .L33
 303:../Libraries/XMCLib/src/xmc_can.c ****     {
 304:../Libraries/XMCLib/src/xmc_can.c ****       error = tempSamplePoint  - can_bit_time->sample_point;
 759              	 .loc 2 304 0
 760 0130 3B68     	 ldr r3,[r7]
 761 0132 1B89     	 ldrh r3,[r3,#8]
 762 0134 1A46     	 mov r2,r3
 763 0136 FB68     	 ldr r3,[r7,#12]
 764 0138 9B1A     	 subs r3,r3,r2
 765 013a BB61     	 str r3,[r7,#24]
 766 013c 05E0     	 b .L34
 767              	.L33:
 305:../Libraries/XMCLib/src/xmc_can.c ****     }
 306:../Libraries/XMCLib/src/xmc_can.c ****     else
 307:../Libraries/XMCLib/src/xmc_can.c ****     {
 308:../Libraries/XMCLib/src/xmc_can.c ****       error = can_bit_time->sample_point  - tempSamplePoint;
 768              	 .loc 2 308 0
 769 013e 3B68     	 ldr r3,[r7]
 770 0140 1B89     	 ldrh r3,[r3,#8]
 771 0142 1A46     	 mov r2,r3
 772 0144 FB68     	 ldr r3,[r7,#12]
 773 0146 D31A     	 subs r3,r2,r3
 774 0148 BB61     	 str r3,[r7,#24]
 775              	.L34:
 309:../Libraries/XMCLib/src/xmc_can.c ****     }
 310:../Libraries/XMCLib/src/xmc_can.c ****     if (best_error > error)
 776              	 .loc 2 310 0
 777 014a BA6A     	 ldr r2,[r7,#40]
 778 014c BB69     	 ldr r3,[r7,#24]
 779 014e 9A42     	 cmp r2,r3
 780 0150 03D9     	 bls .L35
 311:../Libraries/XMCLib/src/xmc_can.c ****     {
 312:../Libraries/XMCLib/src/xmc_can.c ****       best_tseg1 = temp_tseg1;
 781              	 .loc 2 312 0
 782 0152 BB6B     	 ldr r3,[r7,#56]
 783 0154 3B63     	 str r3,[r7,#48]
 313:../Libraries/XMCLib/src/xmc_can.c ****       best_error = error;
 784              	 .loc 2 313 0
 785 0156 BB69     	 ldr r3,[r7,#24]
 786 0158 BB62     	 str r3,[r7,#40]
 787              	.L35:
 314:../Libraries/XMCLib/src/xmc_can.c ****     }
 315:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint < (can_bit_time->sample_point))
 788              	 .loc 2 315 0
 789 015a 3B68     	 ldr r3,[r7]
 790 015c 1B89     	 ldrh r3,[r3,#8]
 791 015e 1A46     	 mov r2,r3
 792 0160 FB68     	 ldr r3,[r7,#12]
 793 0162 9A42     	 cmp r2,r3
 794 0164 00D9     	 bls .L36
 316:../Libraries/XMCLib/src/xmc_can.c ****     {
 317:../Libraries/XMCLib/src/xmc_can.c ****       break;
 795              	 .loc 2 317 0
 796 0166 05E0     	 b .L37
 797              	.L36:
 798              	.LBE4:
 298:../Libraries/XMCLib/src/xmc_can.c ****   {
 799              	 .loc 2 298 0 discriminator 2
 800 0168 BB6B     	 ldr r3,[r7,#56]
 801 016a 013B     	 subs r3,r3,#1
 802 016c BB63     	 str r3,[r7,#56]
 803              	.L32:
 298:../Libraries/XMCLib/src/xmc_can.c ****   {
 804              	 .loc 2 298 0 is_stmt 0 discriminator 1
 805 016e BB6B     	 ldr r3,[r7,#56]
 806 0170 022B     	 cmp r3,#2
 807 0172 CDD8     	 bhi .L38
 808              	.L37:
 318:../Libraries/XMCLib/src/xmc_can.c ****     }
 319:../Libraries/XMCLib/src/xmc_can.c ****   }
 320:../Libraries/XMCLib/src/xmc_can.c **** 
 321:../Libraries/XMCLib/src/xmc_can.c ****   best_tseg2 = best_tbaud - best_tseg1 - 1U;
 809              	 .loc 2 321 0 is_stmt 1
 810 0174 FA6A     	 ldr r2,[r7,#44]
 811 0176 3B6B     	 ldr r3,[r7,#48]
 812 0178 D31A     	 subs r3,r2,r3
 813 017a 013B     	 subs r3,r3,#1
 814 017c 7B61     	 str r3,[r7,#20]
 322:../Libraries/XMCLib/src/xmc_can.c **** 
 323:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_EnableConfigurationChange(can_node);
 815              	 .loc 2 323 0
 816 017e 7868     	 ldr r0,[r7,#4]
 817 0180 FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 324:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure bit timing register */
 325:../Libraries/XMCLib/src/xmc_can.c ****   can_node->NBTR = (((uint32_t)(best_tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_N
 818              	 .loc 2 325 0
 819 0184 7B69     	 ldr r3,[r7,#20]
 820 0186 013B     	 subs r3,r3,#1
 821 0188 1B03     	 lsls r3,r3,#12
 822 018a 03F4E042 	 and r2,r3,#28672
 326:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 823              	 .loc 2 326 0
 824 018e 3B68     	 ldr r3,[r7]
 825 0190 5B89     	 ldrh r3,[r3,#10]
 826 0192 013B     	 subs r3,r3,#1
 827 0194 9B01     	 lsls r3,r3,#6
 828 0196 DBB2     	 uxtb r3,r3
 325:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 829              	 .loc 2 325 0
 830 0198 1A43     	 orrs r2,r2,r3
 327:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_N
 831              	 .loc 2 327 0
 832 019a 3B6B     	 ldr r3,[r7,#48]
 833 019c 013B     	 subs r3,r3,#1
 834 019e 1B02     	 lsls r3,r3,#8
 835 01a0 03F47063 	 and r3,r3,#3840
 326:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 836              	 .loc 2 326 0
 837 01a4 1A43     	 orrs r2,r2,r3
 328:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 838              	 .loc 2 328 0
 839 01a6 7B6B     	 ldr r3,[r7,#52]
 840 01a8 013B     	 subs r3,r3,#1
 841 01aa 03F03F03 	 and r3,r3,#63
 842 01ae 1A43     	 orrs r2,r2,r3
 325:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw) - 1U) << CAN_NODE_NBTR_SJW_Pos)) & (
 843              	 .loc 2 325 0
 844 01b0 7B68     	 ldr r3,[r7,#4]
 845 01b2 1A61     	 str r2,[r3,#16]
 329:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)0U << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 330:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_DisableConfigurationChange(can_node);
 846              	 .loc 2 330 0
 847 01b4 7868     	 ldr r0,[r7,#4]
 848 01b6 FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 331:../Libraries/XMCLib/src/xmc_can.c **** }
 849              	 .loc 2 331 0
 850 01ba 4037     	 adds r7,r7,#64
 851              	.LCFI44:
 852              	 .cfi_def_cfa_offset 8
 853 01bc BD46     	 mov sp,r7
 854              	.LCFI45:
 855              	 .cfi_def_cfa_register 13
 856              	 
 857 01be 80BD     	 pop {r7,pc}
 858              	.L40:
 859              	 .align 2
 860              	.L39:
 861 01c0 CDCCCCCC 	 .word -858993459
 862              	 .cfi_endproc
 863              	.LFE232:
 865              	 .section .text.XMC_CAN_AllocateMOtoNodeList,"ax",%progbits
 866              	 .align 2
 867              	 .global XMC_CAN_AllocateMOtoNodeList
 868              	 .thumb
 869              	 .thumb_func
 871              	XMC_CAN_AllocateMOtoNodeList:
 872              	.LFB233:
 332:../Libraries/XMCLib/src/xmc_can.c **** /* Function to allocate message object from free list to node list */
 333:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 334:../Libraries/XMCLib/src/xmc_can.c **** {
 873              	 .loc 2 334 0
 874              	 .cfi_startproc
 875              	 
 876              	 
 877 0000 80B5     	 push {r7,lr}
 878              	.LCFI46:
 879              	 .cfi_def_cfa_offset 8
 880              	 .cfi_offset 7,-8
 881              	 .cfi_offset 14,-4
 882 0002 82B0     	 sub sp,sp,#8
 883              	.LCFI47:
 884              	 .cfi_def_cfa_offset 16
 885 0004 00AF     	 add r7,sp,#0
 886              	.LCFI48:
 887              	 .cfi_def_cfa_register 7
 888 0006 7860     	 str r0,[r7,#4]
 889 0008 0B46     	 mov r3,r1
 890 000a FB70     	 strb r3,[r7,#3]
 891 000c 1346     	 mov r3,r2
 892 000e BB70     	 strb r3,[r7,#2]
 335:../Libraries/XMCLib/src/xmc_can.c ****   /* wait while panel operation is in progress. */
 336:../Libraries/XMCLib/src/xmc_can.c ****   while (XMC_CAN_IsPanelControlReady(obj) == false)
 893              	 .loc 2 336 0
 894 0010 00BF     	 nop
 895              	.L42:
 896              	 .loc 2 336 0 is_stmt 0 discriminator 1
 897 0012 7868     	 ldr r0,[r7,#4]
 898 0014 FFF7FEFF 	 bl XMC_CAN_IsPanelControlReady
 899 0018 0346     	 mov r3,r0
 900 001a 83F00103 	 eor r3,r3,#1
 901 001e DBB2     	 uxtb r3,r3
 902 0020 002B     	 cmp r3,#0
 903 0022 F6D1     	 bne .L42
 337:../Libraries/XMCLib/src/xmc_can.c ****   {
 338:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 339:../Libraries/XMCLib/src/xmc_can.c ****   };
 340:../Libraries/XMCLib/src/xmc_can.c **** 
 341:../Libraries/XMCLib/src/xmc_can.c ****   /* Panel Command for  allocation of MO to node list */
 342:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_PanelControl(obj, XMC_CAN_PANCMD_STATIC_ALLOCATE, mo_num, (node_num + 1U));
 904              	 .loc 2 342 0 is_stmt 1
 905 0024 FB78     	 ldrb r3,[r7,#3]
 906 0026 0133     	 adds r3,r3,#1
 907 0028 DBB2     	 uxtb r3,r3
 908 002a BA78     	 ldrb r2,[r7,#2]
 909 002c 7868     	 ldr r0,[r7,#4]
 910 002e 0221     	 movs r1,#2
 911 0030 FFF7FEFF 	 bl XMC_CAN_PanelControl
 343:../Libraries/XMCLib/src/xmc_can.c **** }
 912              	 .loc 2 343 0
 913 0034 0837     	 adds r7,r7,#8
 914              	.LCFI49:
 915              	 .cfi_def_cfa_offset 8
 916 0036 BD46     	 mov sp,r7
 917              	.LCFI50:
 918              	 .cfi_def_cfa_register 13
 919              	 
 920 0038 80BD     	 pop {r7,pc}
 921              	 .cfi_endproc
 922              	.LFE233:
 924 003a 00BF     	 .section .text.XMC_CAN_Disable,"ax",%progbits
 925              	 .align 2
 926              	 .global XMC_CAN_Disable
 927              	 .thumb
 928              	 .thumb_func
 930              	XMC_CAN_Disable:
 931              	.LFB234:
 344:../Libraries/XMCLib/src/xmc_can.c **** 
 345:../Libraries/XMCLib/src/xmc_can.c **** /* Disable XMC_CAN Peripheral */
 346:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Disable(XMC_CAN_t *const obj)
 347:../Libraries/XMCLib/src/xmc_can.c **** {
 932              	 .loc 2 347 0
 933              	 .cfi_startproc
 934              	 
 935              	 
 936 0000 80B5     	 push {r7,lr}
 937              	.LCFI51:
 938              	 .cfi_def_cfa_offset 8
 939              	 .cfi_offset 7,-8
 940              	 .cfi_offset 14,-4
 941 0002 82B0     	 sub sp,sp,#8
 942              	.LCFI52:
 943              	 .cfi_def_cfa_offset 16
 944 0004 00AF     	 add r7,sp,#0
 945              	.LCFI53:
 946              	 .cfi_def_cfa_register 7
 947 0006 7860     	 str r0,[r7,#4]
 348:../Libraries/XMCLib/src/xmc_can.c ****   /* Disable CAN Module */
 349:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC = CAN_CLC_DISR_Msk;
 948              	 .loc 2 349 0
 949 0008 7B68     	 ldr r3,[r7,#4]
 950 000a 0122     	 movs r2,#1
 951 000c 1A60     	 str r2,[r3]
 350:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 351:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 952              	 .loc 2 351 0
 953 000e 0448     	 ldr r0,.L44
 954 0010 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 352:../Libraries/XMCLib/src/xmc_can.c **** #endif
 353:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 354:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 955              	 .loc 2 354 0
 956 0014 0248     	 ldr r0,.L44
 957 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 355:../Libraries/XMCLib/src/xmc_can.c **** #endif
 356:../Libraries/XMCLib/src/xmc_can.c **** }
 958              	 .loc 2 356 0
 959 001a 0837     	 adds r7,r7,#8
 960              	.LCFI54:
 961              	 .cfi_def_cfa_offset 8
 962 001c BD46     	 mov sp,r7
 963              	.LCFI55:
 964              	 .cfi_def_cfa_register 13
 965              	 
 966 001e 80BD     	 pop {r7,pc}
 967              	.L45:
 968              	 .align 2
 969              	.L44:
 970 0020 10000010 	 .word 268435472
 971              	 .cfi_endproc
 972              	.LFE234:
 974              	 .section .text.XMC_CAN_Enable,"ax",%progbits
 975              	 .align 2
 976              	 .global XMC_CAN_Enable
 977              	 .thumb
 978              	 .thumb_func
 980              	XMC_CAN_Enable:
 981              	.LFB235:
 357:../Libraries/XMCLib/src/xmc_can.c **** 
 358:../Libraries/XMCLib/src/xmc_can.c **** /* Enable XMC_CAN Peripheral */
 359:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Enable(XMC_CAN_t *const obj)
 360:../Libraries/XMCLib/src/xmc_can.c **** {
 982              	 .loc 2 360 0
 983              	 .cfi_startproc
 984              	 
 985              	 
 986 0000 80B5     	 push {r7,lr}
 987              	.LCFI56:
 988              	 .cfi_def_cfa_offset 8
 989              	 .cfi_offset 7,-8
 990              	 .cfi_offset 14,-4
 991 0002 82B0     	 sub sp,sp,#8
 992              	.LCFI57:
 993              	 .cfi_def_cfa_offset 16
 994 0004 00AF     	 add r7,sp,#0
 995              	.LCFI58:
 996              	 .cfi_def_cfa_register 7
 997 0006 7860     	 str r0,[r7,#4]
 361:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 362:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 998              	 .loc 2 362 0
 999 0008 0A48     	 ldr r0,.L48
 1000 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 363:../Libraries/XMCLib/src/xmc_can.c **** #endif
 364:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 365:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 1001              	 .loc 2 365 0
 1002 000e 0948     	 ldr r0,.L48
 1003 0010 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 366:../Libraries/XMCLib/src/xmc_can.c **** #endif
 367:../Libraries/XMCLib/src/xmc_can.c ****   /* Enable CAN Module */
 368:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC &= ~(uint32_t)CAN_CLC_DISR_Msk;
 1004              	 .loc 2 368 0
 1005 0014 7B68     	 ldr r3,[r7,#4]
 1006 0016 1B68     	 ldr r3,[r3]
 1007 0018 23F00102 	 bic r2,r3,#1
 1008 001c 7B68     	 ldr r3,[r7,#4]
 1009 001e 1A60     	 str r2,[r3]
 369:../Libraries/XMCLib/src/xmc_can.c ****   while (obj->CLC & CAN_CLC_DISS_Msk)
 1010              	 .loc 2 369 0
 1011 0020 00BF     	 nop
 1012              	.L47:
 1013              	 .loc 2 369 0 is_stmt 0 discriminator 1
 1014 0022 7B68     	 ldr r3,[r7,#4]
 1015 0024 1B68     	 ldr r3,[r3]
 1016 0026 03F00203 	 and r3,r3,#2
 1017 002a 002B     	 cmp r3,#0
 1018 002c F9D1     	 bne .L47
 370:../Libraries/XMCLib/src/xmc_can.c ****   {
 371:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 372:../Libraries/XMCLib/src/xmc_can.c ****   };
 373:../Libraries/XMCLib/src/xmc_can.c **** }
 1019              	 .loc 2 373 0 is_stmt 1
 1020 002e 0837     	 adds r7,r7,#8
 1021              	.LCFI59:
 1022              	 .cfi_def_cfa_offset 8
 1023 0030 BD46     	 mov sp,r7
 1024              	.LCFI60:
 1025              	 .cfi_def_cfa_register 13
 1026              	 
 1027 0032 80BD     	 pop {r7,pc}
 1028              	.L49:
 1029              	 .align 2
 1030              	.L48:
 1031 0034 10000010 	 .word 268435472
 1032              	 .cfi_endproc
 1033              	.LFE235:
 1035              	 .section .text.XMC_CAN_Init,"ax",%progbits
 1036              	 .align 2
 1037              	 .global XMC_CAN_Init
 1038              	 .thumb
 1039              	 .thumb_func
 1041              	XMC_CAN_Init:
 1042              	.LFB236:
 374:../Libraries/XMCLib/src/xmc_can.c **** 
 375:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 376:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 377:../Libraries/XMCLib/src/xmc_can.c **** {
 1043              	 .loc 2 377 0
 1044              	 .cfi_startproc
 1045              	 
 1046              	 
 1047 0000 80B5     	 push {r7,lr}
 1048              	.LCFI61:
 1049              	 .cfi_def_cfa_offset 8
 1050              	 .cfi_offset 7,-8
 1051              	 .cfi_offset 14,-4
 1052 0002 8EB0     	 sub sp,sp,#56
 1053              	.LCFI62:
 1054              	 .cfi_def_cfa_offset 64
 1055 0004 00AF     	 add r7,sp,#0
 1056              	.LCFI63:
 1057              	 .cfi_def_cfa_register 7
 1058 0006 F860     	 str r0,[r7,#12]
 1059 0008 0B46     	 mov r3,r1
 1060 000a 7A60     	 str r2,[r7,#4]
 1061 000c FB72     	 strb r3,[r7,#11]
 378:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 379:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 380:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 381:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 382:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 383:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 384:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 385:../Libraries/XMCLib/src/xmc_can.c **** 
 386:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 387:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 388:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 1062              	 .loc 2 388 0
 1063 000e F868     	 ldr r0,[r7,#12]
 1064 0010 FFF7FEFF 	 bl XMC_CAN_Enable
 389:../Libraries/XMCLib/src/xmc_can.c **** 
 390:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 1065              	 .loc 2 390 0
 1066 0014 FB7A     	 ldrb r3,[r7,#11]
 1067 0016 F868     	 ldr r0,[r7,#12]
 1068 0018 1946     	 mov r1,r3
 1069 001a FFF7FEFF 	 bl XMC_CAN_SetBaudrateClockSource
 391:../Libraries/XMCLib/src/xmc_can.c **** 
 392:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 1070              	 .loc 2 392 0
 1071 001e F868     	 ldr r0,[r7,#12]
 1072 0020 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1073 0024 7863     	 str r0,[r7,#52]
 393:../Libraries/XMCLib/src/xmc_can.c **** 
 394:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 395:../Libraries/XMCLib/src/xmc_can.c **** 
 396:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 397:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 1074              	 .loc 2 397 0
 1075 0026 7A6B     	 ldr r2,[r7,#52]
 1076 0028 7B68     	 ldr r3,[r7,#4]
 1077 002a B2FBF3F3 	 udiv r3,r2,r3
 1078 002e C3F58063 	 rsb r3,r3,#1024
 1079 0032 0020     	 movs r0,#0
 1080 0034 1946     	 mov r1,r3
 1081 0036 FFF7FEFF 	 bl max
 1082 003a 0346     	 mov r3,r0
 1083 003c 1846     	 mov r0,r3
 1084 003e 40F2FF31 	 movw r1,#1023
 1085 0042 FFF7FEFF 	 bl min
 1086 0046 3863     	 str r0,[r7,#48]
 398:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 1087              	 .loc 2 398 0
 1088 0048 3B6B     	 ldr r3,[r7,#48]
 1089 004a C3F58063 	 rsb r3,r3,#1024
 1090 004e 7A6B     	 ldr r2,[r7,#52]
 1091 0050 B2FBF3F3 	 udiv r3,r2,r3
 1092 0054 FB62     	 str r3,[r7,#44]
 399:../Libraries/XMCLib/src/xmc_can.c **** 
 400:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 401:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 1093              	 .loc 2 401 0
 1094 0056 7B68     	 ldr r3,[r7,#4]
 1095 0058 9B09     	 lsrs r3,r3,#6
 1096 005a BB62     	 str r3,[r7,#40]
 402:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 1097              	 .loc 2 402 0
 1098 005c 7B6B     	 ldr r3,[r7,#52]
 1099 005e 9B09     	 lsrs r3,r3,#6
 1100 0060 7B62     	 str r3,[r7,#36]
 403:../Libraries/XMCLib/src/xmc_can.c **** 
 404:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 1101              	 .loc 2 404 0
 1102 0062 BB6A     	 ldr r3,[r7,#40]
 1103 0064 9A02     	 lsls r2,r3,#10
 1104 0066 7B6A     	 ldr r3,[r7,#36]
 1105 0068 B2FBF3F3 	 udiv r3,r2,r3
 1106 006c 1846     	 mov r0,r3
 1107 006e 40F2FF31 	 movw r1,#1023
 1108 0072 FFF7FEFF 	 bl min
 1109 0076 3862     	 str r0,[r7,#32]
 405:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 1110              	 .loc 2 405 0
 1111 0078 7B6A     	 ldr r3,[r7,#36]
 1112 007a 3A6A     	 ldr r2,[r7,#32]
 1113 007c 02FB03F3 	 mul r3,r2,r3
 1114 0080 9B0A     	 lsrs r3,r3,#10
 1115 0082 FB61     	 str r3,[r7,#28]
 406:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 1116              	 .loc 2 406 0
 1117 0084 FB69     	 ldr r3,[r7,#28]
 1118 0086 9B01     	 lsls r3,r3,#6
 1119 0088 FB61     	 str r3,[r7,#28]
 407:../Libraries/XMCLib/src/xmc_can.c **** 
 408:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 1120              	 .loc 2 408 0
 1121 008a 7A68     	 ldr r2,[r7,#4]
 1122 008c FB6A     	 ldr r3,[r7,#44]
 1123 008e D21A     	 subs r2,r2,r3
 1124 0090 7968     	 ldr r1,[r7,#4]
 1125 0092 FB69     	 ldr r3,[r7,#28]
 1126 0094 CB1A     	 subs r3,r1,r3
 1127 0096 9A42     	 cmp r2,r3
 1128 0098 94BF     	 ite ls
 1129 009a 0123     	 movls r3,#1
 1130 009c 0023     	 movhi r3,#0
 1131 009e FB76     	 strb r3,[r7,#27]
 409:../Libraries/XMCLib/src/xmc_can.c **** 
 410:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 1132              	 .loc 2 410 0
 1133 00a0 FB7E     	 ldrb r3,[r7,#27]
 1134 00a2 002B     	 cmp r3,#0
 1135 00a4 01D0     	 beq .L51
 1136              	 .loc 2 410 0 is_stmt 0 discriminator 1
 1137 00a6 3B6B     	 ldr r3,[r7,#48]
 1138 00a8 00E0     	 b .L52
 1139              	.L51:
 1140              	 .loc 2 410 0 discriminator 2
 1141 00aa 3B6A     	 ldr r3,[r7,#32]
 1142              	.L52:
 1143              	 .loc 2 410 0 discriminator 4
 1144 00ac 7B61     	 str r3,[r7,#20]
 411:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 1145              	 .loc 2 411 0 is_stmt 1 discriminator 4
 1146 00ae FB7E     	 ldrb r3,[r7,#27]
 1147 00b0 002B     	 cmp r3,#0
 1148 00b2 01D0     	 beq .L53
 1149              	 .loc 2 411 0 is_stmt 0 discriminator 1
 1150 00b4 0123     	 movs r3,#1
 1151 00b6 00E0     	 b .L54
 1152              	.L53:
 1153              	 .loc 2 411 0 discriminator 2
 1154 00b8 0223     	 movs r3,#2
 1155              	.L54:
 1156              	 .loc 2 411 0 discriminator 4
 1157 00ba FB74     	 strb r3,[r7,#19]
 412:../Libraries/XMCLib/src/xmc_can.c **** 
 413:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 1158              	 .loc 2 413 0 is_stmt 1 discriminator 4
 1159 00bc FB68     	 ldr r3,[r7,#12]
 1160 00be DB68     	 ldr r3,[r3,#12]
 1161 00c0 23F44343 	 bic r3,r3,#49920
 1162 00c4 23F0FF03 	 bic r3,r3,#255
 1163 00c8 FA68     	 ldr r2,[r7,#12]
 1164 00ca D360     	 str r3,[r2,#12]
 414:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 1165              	 .loc 2 414 0 discriminator 4
 1166 00cc FB68     	 ldr r3,[r7,#12]
 1167 00ce DA68     	 ldr r2,[r3,#12]
 1168 00d0 FB7C     	 ldrb r3,[r7,#19]
 1169 00d2 9903     	 lsls r1,r3,#14
 1170 00d4 7B69     	 ldr r3,[r7,#20]
 1171 00d6 0B43     	 orrs r3,r3,r1
 1172 00d8 1A43     	 orrs r2,r2,r3
 1173 00da FB68     	 ldr r3,[r7,#12]
 1174 00dc DA60     	 str r2,[r3,#12]
 415:../Libraries/XMCLib/src/xmc_can.c **** 
 416:../Libraries/XMCLib/src/xmc_can.c **** }
 1175              	 .loc 2 416 0 discriminator 4
 1176 00de 3837     	 adds r7,r7,#56
 1177              	.LCFI64:
 1178              	 .cfi_def_cfa_offset 8
 1179 00e0 BD46     	 mov sp,r7
 1180              	.LCFI65:
 1181              	 .cfi_def_cfa_register 13
 1182              	 
 1183 00e2 80BD     	 pop {r7,pc}
 1184              	 .cfi_endproc
 1185              	.LFE236:
 1187              	 .section .text.XMC_CAN_SetBaudrateClockSource,"ax",%progbits
 1188              	 .align 2
 1189              	 .global XMC_CAN_SetBaudrateClockSource
 1190              	 .thumb
 1191              	 .thumb_func
 1193              	XMC_CAN_SetBaudrateClockSource:
 1194              	.LFB237:
 417:../Libraries/XMCLib/src/xmc_can.c **** 
 418:../Libraries/XMCLib/src/xmc_can.c **** #else
 419:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN GLOBAL Object */
 420:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency)
 421:../Libraries/XMCLib/src/xmc_can.c **** {
 422:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 423:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 424:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 425:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 426:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 427:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 428:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 429:../Libraries/XMCLib/src/xmc_can.c **** 
 430:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency = (XMC_SCU_CLOCK_GetPeripheralClockFrequency());
 431:../Libraries/XMCLib/src/xmc_can.c **** 
 432:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 433:../Libraries/XMCLib/src/xmc_can.c **** 
 434:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 435:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 436:../Libraries/XMCLib/src/xmc_can.c **** 
 437:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 438:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 439:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 440:../Libraries/XMCLib/src/xmc_can.c **** 
 441:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 442:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 443:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 444:../Libraries/XMCLib/src/xmc_can.c **** 
 445:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 446:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 447:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 448:../Libraries/XMCLib/src/xmc_can.c **** 
 449:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 450:../Libraries/XMCLib/src/xmc_can.c **** 
 451:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 452:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 453:../Libraries/XMCLib/src/xmc_can.c **** 
 454:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 455:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 456:../Libraries/XMCLib/src/xmc_can.c **** }
 457:../Libraries/XMCLib/src/xmc_can.c **** #endif
 458:../Libraries/XMCLib/src/xmc_can.c **** 
 459:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj, const XMC_CAN_CANCLKSRC_t source)
 460:../Libraries/XMCLib/src/xmc_can.c **** {
 1195              	 .loc 2 460 0
 1196              	 .cfi_startproc
 1197              	 
 1198              	 
 1199              	 
 1200 0000 80B4     	 push {r7}
 1201              	.LCFI66:
 1202              	 .cfi_def_cfa_offset 4
 1203              	 .cfi_offset 7,-4
 1204 0002 83B0     	 sub sp,sp,#12
 1205              	.LCFI67:
 1206              	 .cfi_def_cfa_offset 16
 1207 0004 00AF     	 add r7,sp,#0
 1208              	.LCFI68:
 1209              	 .cfi_def_cfa_register 7
 1210 0006 7860     	 str r0,[r7,#4]
 1211 0008 0B46     	 mov r3,r1
 1212 000a FB70     	 strb r3,[r7,#3]
 461:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 462:../Libraries/XMCLib/src/xmc_can.c ****   obj->MCR = (obj->MCR & ~CAN_MCR_CLKSEL_Msk) | source ;
 1213              	 .loc 2 462 0
 1214 000c 7B68     	 ldr r3,[r7,#4]
 1215 000e D3F8C831 	 ldr r3,[r3,#456]
 1216 0012 23F00F02 	 bic r2,r3,#15
 1217 0016 FB78     	 ldrb r3,[r7,#3]
 1218 0018 1A43     	 orrs r2,r2,r3
 1219 001a 7B68     	 ldr r3,[r7,#4]
 1220 001c C3F8C821 	 str r2,[r3,#456]
 463:../Libraries/XMCLib/src/xmc_can.c **** #else
 464:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 465:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(source);
 466:../Libraries/XMCLib/src/xmc_can.c **** #endif
 467:../Libraries/XMCLib/src/xmc_can.c **** }
 1221              	 .loc 2 467 0
 1222 0020 0C37     	 adds r7,r7,#12
 1223              	.LCFI69:
 1224              	 .cfi_def_cfa_offset 4
 1225 0022 BD46     	 mov sp,r7
 1226              	.LCFI70:
 1227              	 .cfi_def_cfa_register 13
 1228              	 
 1229 0024 5DF8047B 	 ldr r7,[sp],#4
 1230              	.LCFI71:
 1231              	 .cfi_restore 7
 1232              	 .cfi_def_cfa_offset 0
 1233 0028 7047     	 bx lr
 1234              	 .cfi_endproc
 1235              	.LFE237:
 1237 002a 00BF     	 .section .text.XMC_CAN_GetBaudrateClockSource,"ax",%progbits
 1238              	 .align 2
 1239              	 .global XMC_CAN_GetBaudrateClockSource
 1240              	 .thumb
 1241              	 .thumb_func
 1243              	XMC_CAN_GetBaudrateClockSource:
 1244              	.LFB238:
 468:../Libraries/XMCLib/src/xmc_can.c **** 
 469:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj)
 470:../Libraries/XMCLib/src/xmc_can.c **** {
 1245              	 .loc 2 470 0
 1246              	 .cfi_startproc
 1247              	 
 1248              	 
 1249              	 
 1250 0000 80B4     	 push {r7}
 1251              	.LCFI72:
 1252              	 .cfi_def_cfa_offset 4
 1253              	 .cfi_offset 7,-4
 1254 0002 83B0     	 sub sp,sp,#12
 1255              	.LCFI73:
 1256              	 .cfi_def_cfa_offset 16
 1257 0004 00AF     	 add r7,sp,#0
 1258              	.LCFI74:
 1259              	 .cfi_def_cfa_register 7
 1260 0006 7860     	 str r0,[r7,#4]
 471:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 472:../Libraries/XMCLib/src/xmc_can.c ****   return ((XMC_CAN_CANCLKSRC_t)((obj->MCR & CAN_MCR_CLKSEL_Msk) >> CAN_MCR_CLKSEL_Pos));
 1261              	 .loc 2 472 0
 1262 0008 7B68     	 ldr r3,[r7,#4]
 1263 000a D3F8C831 	 ldr r3,[r3,#456]
 1264 000e DBB2     	 uxtb r3,r3
 1265 0010 03F00F03 	 and r3,r3,#15
 1266 0014 DBB2     	 uxtb r3,r3
 473:../Libraries/XMCLib/src/xmc_can.c **** #elif (UC_FAMILY == XMC4)
 474:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 475:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_CANCLKSRC_FPERI;
 476:../Libraries/XMCLib/src/xmc_can.c **** #endif
 477:../Libraries/XMCLib/src/xmc_can.c **** }
 1267              	 .loc 2 477 0
 1268 0016 1846     	 mov r0,r3
 1269 0018 0C37     	 adds r7,r7,#12
 1270              	.LCFI75:
 1271              	 .cfi_def_cfa_offset 4
 1272 001a BD46     	 mov sp,r7
 1273              	.LCFI76:
 1274              	 .cfi_def_cfa_register 13
 1275              	 
 1276 001c 5DF8047B 	 ldr r7,[sp],#4
 1277              	.LCFI77:
 1278              	 .cfi_restore 7
 1279              	 .cfi_def_cfa_offset 0
 1280 0020 7047     	 bx lr
 1281              	 .cfi_endproc
 1282              	.LFE238:
 1284 0022 00BF     	 .section .text.XMC_CAN_GetBaudrateClockFrequency,"ax",%progbits
 1285              	 .align 2
 1286              	 .global XMC_CAN_GetBaudrateClockFrequency
 1287              	 .thumb
 1288              	 .thumb_func
 1290              	XMC_CAN_GetBaudrateClockFrequency:
 1291              	.LFB239:
 478:../Libraries/XMCLib/src/xmc_can.c **** 
 479:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj)
 480:../Libraries/XMCLib/src/xmc_can.c **** {
 1292              	 .loc 2 480 0
 1293              	 .cfi_startproc
 1294              	 
 1295              	 
 1296 0000 80B5     	 push {r7,lr}
 1297              	.LCFI78:
 1298              	 .cfi_def_cfa_offset 8
 1299              	 .cfi_offset 7,-8
 1300              	 .cfi_offset 14,-4
 1301 0002 84B0     	 sub sp,sp,#16
 1302              	.LCFI79:
 1303              	 .cfi_def_cfa_offset 24
 1304 0004 00AF     	 add r7,sp,#0
 1305              	.LCFI80:
 1306              	 .cfi_def_cfa_register 7
 1307 0006 7860     	 str r0,[r7,#4]
 481:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t frequency = 0;
 1308              	 .loc 2 481 0
 1309 0008 0023     	 movs r3,#0
 1310 000a FB60     	 str r3,[r7,#12]
 482:../Libraries/XMCLib/src/xmc_can.c **** 
 483:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 484:../Libraries/XMCLib/src/xmc_can.c ****   switch (XMC_CAN_GetBaudrateClockSource(obj))
 1311              	 .loc 2 484 0
 1312 000c 7868     	 ldr r0,[r7,#4]
 1313 000e FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockSource
 1314 0012 0346     	 mov r3,r0
 1315 0014 012B     	 cmp r3,#1
 1316 0016 02D0     	 beq .L60
 1317 0018 022B     	 cmp r3,#2
 1318 001a 04D0     	 beq .L61
 1319 001c 07E0     	 b .L59
 1320              	.L60:
 485:../Libraries/XMCLib/src/xmc_can.c ****   {
 486:../Libraries/XMCLib/src/xmc_can.c **** #if UC_FAMILY == XMC4
 487:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FPERI:
 488:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 1321              	 .loc 2 488 0
 1322 001e FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 1323 0022 F860     	 str r0,[r7,#12]
 489:../Libraries/XMCLib/src/xmc_can.c ****       break;
 1324              	 .loc 2 489 0
 1325 0024 03E0     	 b .L59
 1326              	.L61:
 490:../Libraries/XMCLib/src/xmc_can.c **** #else
 491:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_MCLK:
 492:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 493:../Libraries/XMCLib/src/xmc_can.c ****       break;
 494:../Libraries/XMCLib/src/xmc_can.c **** #endif
 495:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FOHP:
 496:../Libraries/XMCLib/src/xmc_can.c ****       frequency = OSCHP_GetFrequency();
 1327              	 .loc 2 496 0
 1328 0026 FFF7FEFF 	 bl OSCHP_GetFrequency
 1329 002a F860     	 str r0,[r7,#12]
 497:../Libraries/XMCLib/src/xmc_can.c ****       break;
 1330              	 .loc 2 497 0
 1331 002c 00BF     	 nop
 1332              	.L59:
 498:../Libraries/XMCLib/src/xmc_can.c ****   }
 499:../Libraries/XMCLib/src/xmc_can.c **** #else
 500:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 501:../Libraries/XMCLib/src/xmc_can.c ****   frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 502:../Libraries/XMCLib/src/xmc_can.c **** #endif
 503:../Libraries/XMCLib/src/xmc_can.c **** 
 504:../Libraries/XMCLib/src/xmc_can.c ****   return frequency;
 1333              	 .loc 2 504 0
 1334 002e FB68     	 ldr r3,[r7,#12]
 505:../Libraries/XMCLib/src/xmc_can.c **** }
 1335              	 .loc 2 505 0
 1336 0030 1846     	 mov r0,r3
 1337 0032 1037     	 adds r7,r7,#16
 1338              	.LCFI81:
 1339              	 .cfi_def_cfa_offset 8
 1340 0034 BD46     	 mov sp,r7
 1341              	.LCFI82:
 1342              	 .cfi_def_cfa_register 13
 1343              	 
 1344 0036 80BD     	 pop {r7,pc}
 1345              	 .cfi_endproc
 1346              	.LFE239:
 1348              	 .section .text.XMC_CAN_InitEx,"ax",%progbits
 1349              	 .align 2
 1350              	 .global XMC_CAN_InitEx
 1351              	 .thumb
 1352              	 .thumb_func
 1354              	XMC_CAN_InitEx:
 1355              	.LFB240:
 506:../Libraries/XMCLib/src/xmc_can.c **** 
 507:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 508:../Libraries/XMCLib/src/xmc_can.c **** {
 1356              	 .loc 2 508 0
 1357              	 .cfi_startproc
 1358              	 
 1359              	 
 1360 0000 80B5     	 push {r7,lr}
 1361              	.LCFI83:
 1362              	 .cfi_def_cfa_offset 8
 1363              	 .cfi_offset 7,-8
 1364              	 .cfi_offset 14,-4
 1365 0002 88B0     	 sub sp,sp,#32
 1366              	.LCFI84:
 1367              	 .cfi_def_cfa_offset 40
 1368 0004 00AF     	 add r7,sp,#0
 1369              	.LCFI85:
 1370              	 .cfi_def_cfa_register 7
 1371 0006 F860     	 str r0,[r7,#12]
 1372 0008 0B46     	 mov r3,r1
 1373 000a 7A60     	 str r2,[r7,#4]
 1374 000c FB72     	 strb r3,[r7,#11]
 509:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n;
 510:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n;
 511:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 512:../Libraries/XMCLib/src/xmc_can.c **** 
 513:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 514:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 1375              	 .loc 2 514 0
 1376 000e F868     	 ldr r0,[r7,#12]
 1377 0010 FFF7FEFF 	 bl XMC_CAN_Enable
 515:../Libraries/XMCLib/src/xmc_can.c **** 
 516:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 1378              	 .loc 2 516 0
 1379 0014 FB7A     	 ldrb r3,[r7,#11]
 1380 0016 F868     	 ldr r0,[r7,#12]
 1381 0018 1946     	 mov r1,r3
 1382 001a FFF7FEFF 	 bl XMC_CAN_SetBaudrateClockSource
 517:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 1383              	 .loc 2 517 0
 1384 001e F868     	 ldr r0,[r7,#12]
 1385 0020 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1386 0024 F861     	 str r0,[r7,#28]
 518:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 519:../Libraries/XMCLib/src/xmc_can.c **** 
 520:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 521:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 1387              	 .loc 2 521 0
 1388 0026 FA69     	 ldr r2,[r7,#28]
 1389 0028 7B68     	 ldr r3,[r7,#4]
 1390 002a B2FBF3F3 	 udiv r3,r2,r3
 1391 002e C3F58063 	 rsb r3,r3,#1024
 1392 0032 0020     	 movs r0,#0
 1393 0034 1946     	 mov r1,r3
 1394 0036 FFF7FEFF 	 bl max
 1395 003a 0346     	 mov r3,r0
 1396 003c 1846     	 mov r0,r3
 1397 003e 40F2FF31 	 movw r1,#1023
 1398 0042 FFF7FEFF 	 bl min
 1399 0046 B861     	 str r0,[r7,#24]
 522:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t)(peripheral_frequency / (1024U - step_n));
 1400              	 .loc 2 522 0
 1401 0048 BB69     	 ldr r3,[r7,#24]
 1402 004a C3F58063 	 rsb r3,r3,#1024
 1403 004e FA69     	 ldr r2,[r7,#28]
 1404 0050 B2FBF3F3 	 udiv r3,r2,r3
 1405 0054 7B61     	 str r3,[r7,#20]
 523:../Libraries/XMCLib/src/xmc_can.c **** 
 524:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 1406              	 .loc 2 524 0
 1407 0056 FB68     	 ldr r3,[r7,#12]
 1408 0058 DB68     	 ldr r3,[r3,#12]
 1409 005a 23F44343 	 bic r3,r3,#49920
 1410 005e 23F0FF03 	 bic r3,r3,#255
 1411 0062 FA68     	 ldr r2,[r7,#12]
 1412 0064 D360     	 str r3,[r2,#12]
 525:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)XMC_CAN_DM_NORMAL << CAN_FDR_DM_Pos) | ((uint32_t)step_n << CAN_FDR_STEP_P
 1413              	 .loc 2 525 0
 1414 0066 FB68     	 ldr r3,[r7,#12]
 1415 0068 DA68     	 ldr r2,[r3,#12]
 1416 006a BB69     	 ldr r3,[r7,#24]
 1417 006c 1343     	 orrs r3,r3,r2
 1418 006e 43F48042 	 orr r2,r3,#16384
 1419 0072 FB68     	 ldr r3,[r7,#12]
 1420 0074 DA60     	 str r2,[r3,#12]
 526:../Libraries/XMCLib/src/xmc_can.c **** 
 527:../Libraries/XMCLib/src/xmc_can.c ****   return freq_n;
 1421              	 .loc 2 527 0
 1422 0076 7B69     	 ldr r3,[r7,#20]
 528:../Libraries/XMCLib/src/xmc_can.c **** }
 1423              	 .loc 2 528 0
 1424 0078 1846     	 mov r0,r3
 1425 007a 2037     	 adds r7,r7,#32
 1426              	.LCFI86:
 1427              	 .cfi_def_cfa_offset 8
 1428 007c BD46     	 mov sp,r7
 1429              	.LCFI87:
 1430              	 .cfi_def_cfa_register 13
 1431              	 
 1432 007e 80BD     	 pop {r7,pc}
 1433              	 .cfi_endproc
 1434              	.LFE240:
 1436              	 .section .text.XMC_CAN_GetClockFrequency,"ax",%progbits
 1437              	 .align 2
 1438              	 .global XMC_CAN_GetClockFrequency
 1439              	 .thumb
 1440              	 .thumb_func
 1442              	XMC_CAN_GetClockFrequency:
 1443              	.LFB241:
 529:../Libraries/XMCLib/src/xmc_can.c **** 
 530:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj)
 531:../Libraries/XMCLib/src/xmc_can.c **** {
 1444              	 .loc 2 531 0
 1445              	 .cfi_startproc
 1446              	 
 1447              	 
 1448 0000 80B5     	 push {r7,lr}
 1449              	.LCFI88:
 1450              	 .cfi_def_cfa_offset 8
 1451              	 .cfi_offset 7,-8
 1452              	 .cfi_offset 14,-4
 1453 0002 84B0     	 sub sp,sp,#16
 1454              	.LCFI89:
 1455              	 .cfi_def_cfa_offset 24
 1456 0004 00AF     	 add r7,sp,#0
 1457              	.LCFI90:
 1458              	 .cfi_def_cfa_register 7
 1459 0006 7860     	 str r0,[r7,#4]
 532:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n = (obj->FDR & CAN_FDR_STEP_Msk) >> CAN_FDR_STEP_Pos;
 1460              	 .loc 2 532 0
 1461 0008 7B68     	 ldr r3,[r7,#4]
 1462 000a DB68     	 ldr r3,[r3,#12]
 1463 000c C3F30903 	 ubfx r3,r3,#0,#10
 1464 0010 FB60     	 str r3,[r7,#12]
 533:../Libraries/XMCLib/src/xmc_can.c ****   return (XMC_CAN_GetBaudrateClockFrequency(obj) * (1024U - step_n));
 1465              	 .loc 2 533 0
 1466 0012 7868     	 ldr r0,[r7,#4]
 1467 0014 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1468 0018 0246     	 mov r2,r0
 1469 001a FB68     	 ldr r3,[r7,#12]
 1470 001c C3F58063 	 rsb r3,r3,#1024
 1471 0020 03FB02F3 	 mul r3,r3,r2
 534:../Libraries/XMCLib/src/xmc_can.c **** }
 1472              	 .loc 2 534 0
 1473 0024 1846     	 mov r0,r3
 1474 0026 1037     	 adds r7,r7,#16
 1475              	.LCFI91:
 1476              	 .cfi_def_cfa_offset 8
 1477 0028 BD46     	 mov sp,r7
 1478              	.LCFI92:
 1479              	 .cfi_def_cfa_register 13
 1480              	 
 1481 002a 80BD     	 pop {r7,pc}
 1482              	 .cfi_endproc
 1483              	.LFE241:
 1485              	 .section .text.XMC_CAN_MO_SetIdentifier,"ax",%progbits
 1486              	 .align 2
 1487              	 .global XMC_CAN_MO_SetIdentifier
 1488              	 .thumb
 1489              	 .thumb_func
 1491              	XMC_CAN_MO_SetIdentifier:
 1492              	.LFB242:
 535:../Libraries/XMCLib/src/xmc_can.c **** 
 536:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the Identifier of the MO */
 537:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetIdentifier(XMC_CAN_MO_t *const can_mo, const uint32_t can_identifier)
 538:../Libraries/XMCLib/src/xmc_can.c **** {
 1493              	 .loc 2 538 0
 1494              	 .cfi_startproc
 1495              	 
 1496              	 
 1497              	 
 1498 0000 80B4     	 push {r7}
 1499              	.LCFI93:
 1500              	 .cfi_def_cfa_offset 4
 1501              	 .cfi_offset 7,-4
 1502 0002 83B0     	 sub sp,sp,#12
 1503              	.LCFI94:
 1504              	 .cfi_def_cfa_offset 16
 1505 0004 00AF     	 add r7,sp,#0
 1506              	.LCFI95:
 1507              	 .cfi_def_cfa_register 7
 1508 0006 7860     	 str r0,[r7,#4]
 1509 0008 3960     	 str r1,[r7]
 539:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1510              	 .loc 2 539 0
 1511 000a 7B68     	 ldr r3,[r7,#4]
 1512 000c 1B68     	 ldr r3,[r3]
 1513 000e 9B69     	 ldr r3,[r3,#24]
 1514 0010 03F00053 	 and r3,r3,#536870912
 1515 0014 002B     	 cmp r3,#0
 1516 0016 0DD1     	 bne .L68
 540:../Libraries/XMCLib/src/xmc_can.c ****   {
 541:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1517              	 .loc 2 541 0
 1518 0018 7B68     	 ldr r3,[r7,#4]
 1519 001a 1B68     	 ldr r3,[r3]
 1520 001c 7A68     	 ldr r2,[r7,#4]
 1521 001e 1268     	 ldr r2,[r2]
 1522 0020 9269     	 ldr r2,[r2,#24]
 1523 0022 02F06041 	 and r1,r2,#-536870912
 542:../Libraries/XMCLib/src/xmc_can.c ****                                ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MO
 1524              	 .loc 2 542 0
 1525 0026 3A68     	 ldr r2,[r7]
 1526 0028 9204     	 lsls r2,r2,#18
 1527 002a 22F06042 	 bic r2,r2,#-536870912
 541:../Libraries/XMCLib/src/xmc_can.c ****                                ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MO
 1528              	 .loc 2 541 0
 1529 002e 0A43     	 orrs r2,r2,r1
 1530 0030 9A61     	 str r2,[r3,#24]
 1531 0032 0BE0     	 b .L69
 1532              	.L68:
 543:../Libraries/XMCLib/src/xmc_can.c ****   }
 544:../Libraries/XMCLib/src/xmc_can.c ****   else
 545:../Libraries/XMCLib/src/xmc_can.c ****   {
 546:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1533              	 .loc 2 546 0
 1534 0034 7B68     	 ldr r3,[r7,#4]
 1535 0036 1B68     	 ldr r3,[r3]
 1536 0038 7A68     	 ldr r2,[r7,#4]
 1537 003a 1268     	 ldr r2,[r2]
 1538 003c 9269     	 ldr r2,[r2,#24]
 1539 003e 02F06041 	 and r1,r2,#-536870912
 547:../Libraries/XMCLib/src/xmc_can.c ****                                (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1540              	 .loc 2 547 0
 1541 0042 3A68     	 ldr r2,[r7]
 1542 0044 22F06042 	 bic r2,r2,#-536870912
 546:../Libraries/XMCLib/src/xmc_can.c ****                                (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1543              	 .loc 2 546 0
 1544 0048 0A43     	 orrs r2,r2,r1
 1545 004a 9A61     	 str r2,[r3,#24]
 1546              	.L69:
 548:../Libraries/XMCLib/src/xmc_can.c ****   }
 549:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_identifier = can_identifier;
 1547              	 .loc 2 549 0
 1548 004c 3B68     	 ldr r3,[r7]
 1549 004e 23F06041 	 bic r1,r3,#-536870912
 1550 0052 7A68     	 ldr r2,[r7,#4]
 1551 0054 5368     	 ldr r3,[r2,#4]
 1552 0056 61F31C03 	 bfi r3,r1,#0,#29
 1553 005a 5360     	 str r3,[r2,#4]
 550:../Libraries/XMCLib/src/xmc_can.c **** }
 1554              	 .loc 2 550 0
 1555 005c 0C37     	 adds r7,r7,#12
 1556              	.LCFI96:
 1557              	 .cfi_def_cfa_offset 4
 1558 005e BD46     	 mov sp,r7
 1559              	.LCFI97:
 1560              	 .cfi_def_cfa_register 13
 1561              	 
 1562 0060 5DF8047B 	 ldr r7,[sp],#4
 1563              	.LCFI98:
 1564              	 .cfi_restore 7
 1565              	 .cfi_def_cfa_offset 0
 1566 0064 7047     	 bx lr
 1567              	 .cfi_endproc
 1568              	.LFE242:
 1570 0066 00BF     	 .section .text.XMC_CAN_MO_GetIdentifier,"ax",%progbits
 1571              	 .align 2
 1572              	 .global XMC_CAN_MO_GetIdentifier
 1573              	 .thumb
 1574              	 .thumb_func
 1576              	XMC_CAN_MO_GetIdentifier:
 1577              	.LFB243:
 551:../Libraries/XMCLib/src/xmc_can.c **** 
 552:../Libraries/XMCLib/src/xmc_can.c **** 
 553:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the Identifier of the MO */
 554:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetIdentifier(const XMC_CAN_MO_t *const can_mo)
 555:../Libraries/XMCLib/src/xmc_can.c **** {
 1578              	 .loc 2 555 0
 1579              	 .cfi_startproc
 1580              	 
 1581              	 
 1582              	 
 1583 0000 80B4     	 push {r7}
 1584              	.LCFI99:
 1585              	 .cfi_def_cfa_offset 4
 1586              	 .cfi_offset 7,-4
 1587 0002 85B0     	 sub sp,sp,#20
 1588              	.LCFI100:
 1589              	 .cfi_def_cfa_offset 24
 1590 0004 00AF     	 add r7,sp,#0
 1591              	.LCFI101:
 1592              	 .cfi_def_cfa_register 7
 1593 0006 7860     	 str r0,[r7,#4]
 556:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier;
 557:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1594              	 .loc 2 557 0
 1595 0008 7B68     	 ldr r3,[r7,#4]
 1596 000a 1B68     	 ldr r3,[r3]
 1597 000c 9B69     	 ldr r3,[r3,#24]
 1598 000e 03F00053 	 and r3,r3,#536870912
 1599 0012 002B     	 cmp r3,#0
 1600 0014 07D1     	 bne .L71
 558:../Libraries/XMCLib/src/xmc_can.c ****   {
 559:../Libraries/XMCLib/src/xmc_can.c ****     identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk)) >> XMC_CAN_MO_MOAR_S
 1601              	 .loc 2 559 0
 1602 0016 7B68     	 ldr r3,[r7,#4]
 1603 0018 1B68     	 ldr r3,[r3]
 1604 001a 9B69     	 ldr r3,[r3,#24]
 1605 001c 23F06043 	 bic r3,r3,#-536870912
 1606 0020 9B0C     	 lsrs r3,r3,#18
 1607 0022 FB60     	 str r3,[r7,#12]
 1608 0024 05E0     	 b .L72
 1609              	.L71:
 560:../Libraries/XMCLib/src/xmc_can.c ****   }
 561:../Libraries/XMCLib/src/xmc_can.c ****   else
 562:../Libraries/XMCLib/src/xmc_can.c ****   {
 563:../Libraries/XMCLib/src/xmc_can.c ****     identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk));
 1610              	 .loc 2 563 0
 1611 0026 7B68     	 ldr r3,[r7,#4]
 1612 0028 1B68     	 ldr r3,[r3]
 1613 002a 9B69     	 ldr r3,[r3,#24]
 1614 002c 23F06043 	 bic r3,r3,#-536870912
 1615 0030 FB60     	 str r3,[r7,#12]
 1616              	.L72:
 564:../Libraries/XMCLib/src/xmc_can.c ****   }
 565:../Libraries/XMCLib/src/xmc_can.c ****   return identifier;
 1617              	 .loc 2 565 0
 1618 0032 FB68     	 ldr r3,[r7,#12]
 566:../Libraries/XMCLib/src/xmc_can.c **** }
 1619              	 .loc 2 566 0
 1620 0034 1846     	 mov r0,r3
 1621 0036 1437     	 adds r7,r7,#20
 1622              	.LCFI102:
 1623              	 .cfi_def_cfa_offset 4
 1624 0038 BD46     	 mov sp,r7
 1625              	.LCFI103:
 1626              	 .cfi_def_cfa_register 13
 1627              	 
 1628 003a 5DF8047B 	 ldr r7,[sp],#4
 1629              	.LCFI104:
 1630              	 .cfi_restore 7
 1631              	 .cfi_def_cfa_offset 0
 1632 003e 7047     	 bx lr
 1633              	 .cfi_endproc
 1634              	.LFE243:
 1636              	 .section .text.XMC_CAN_MO_GetAcceptanceMask,"ax",%progbits
 1637              	 .align 2
 1638              	 .global XMC_CAN_MO_GetAcceptanceMask
 1639              	 .thumb
 1640              	 .thumb_func
 1642              	XMC_CAN_MO_GetAcceptanceMask:
 1643              	.LFB244:
 567:../Libraries/XMCLib/src/xmc_can.c **** 
 568:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask for the CAN MO. */
 569:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetAcceptanceMask(const XMC_CAN_MO_t *const can_mo)
 570:../Libraries/XMCLib/src/xmc_can.c **** {
 1644              	 .loc 2 570 0
 1645              	 .cfi_startproc
 1646              	 
 1647              	 
 1648              	 
 1649 0000 80B4     	 push {r7}
 1650              	.LCFI105:
 1651              	 .cfi_def_cfa_offset 4
 1652              	 .cfi_offset 7,-4
 1653 0002 85B0     	 sub sp,sp,#20
 1654              	.LCFI106:
 1655              	 .cfi_def_cfa_offset 24
 1656 0004 00AF     	 add r7,sp,#0
 1657              	.LCFI107:
 1658              	 .cfi_def_cfa_register 7
 1659 0006 7860     	 str r0,[r7,#4]
 571:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier_mask;
 572:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1660              	 .loc 2 572 0
 1661 0008 7B68     	 ldr r3,[r7,#4]
 1662 000a 1B68     	 ldr r3,[r3]
 1663 000c DB68     	 ldr r3,[r3,#12]
 1664 000e 03F00053 	 and r3,r3,#536870912
 1665 0012 002B     	 cmp r3,#0
 1666 0014 0ED1     	 bne .L75
 573:../Libraries/XMCLib/src/xmc_can.c ****       && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1667              	 .loc 2 573 0
 1668 0016 7B68     	 ldr r3,[r7,#4]
 1669 0018 1B68     	 ldr r3,[r3]
 1670 001a 9B69     	 ldr r3,[r3,#24]
 1671 001c 03F00053 	 and r3,r3,#536870912
 1672 0020 002B     	 cmp r3,#0
 1673 0022 07D1     	 bne .L75
 574:../Libraries/XMCLib/src/xmc_can.c ****   {
 575:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk)) >> XMC_CAN_MO
 1674              	 .loc 2 575 0
 1675 0024 7B68     	 ldr r3,[r7,#4]
 1676 0026 1B68     	 ldr r3,[r3]
 1677 0028 DB68     	 ldr r3,[r3,#12]
 1678 002a 23F06043 	 bic r3,r3,#-536870912
 1679 002e 9B0C     	 lsrs r3,r3,#18
 1680 0030 FB60     	 str r3,[r7,#12]
 1681 0032 05E0     	 b .L76
 1682              	.L75:
 576:../Libraries/XMCLib/src/xmc_can.c ****   }
 577:../Libraries/XMCLib/src/xmc_can.c ****   else
 578:../Libraries/XMCLib/src/xmc_can.c ****   {
 579:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk));
 1683              	 .loc 2 579 0
 1684 0034 7B68     	 ldr r3,[r7,#4]
 1685 0036 1B68     	 ldr r3,[r3]
 1686 0038 DB68     	 ldr r3,[r3,#12]
 1687 003a 23F06043 	 bic r3,r3,#-536870912
 1688 003e FB60     	 str r3,[r7,#12]
 1689              	.L76:
 580:../Libraries/XMCLib/src/xmc_can.c ****   }
 581:../Libraries/XMCLib/src/xmc_can.c ****   return identifier_mask;
 1690              	 .loc 2 581 0
 1691 0040 FB68     	 ldr r3,[r7,#12]
 582:../Libraries/XMCLib/src/xmc_can.c **** }
 1692              	 .loc 2 582 0
 1693 0042 1846     	 mov r0,r3
 1694 0044 1437     	 adds r7,r7,#20
 1695              	.LCFI108:
 1696              	 .cfi_def_cfa_offset 4
 1697 0046 BD46     	 mov sp,r7
 1698              	.LCFI109:
 1699              	 .cfi_def_cfa_register 13
 1700              	 
 1701 0048 5DF8047B 	 ldr r7,[sp],#4
 1702              	.LCFI110:
 1703              	 .cfi_restore 7
 1704              	 .cfi_def_cfa_offset 0
 1705 004c 7047     	 bx lr
 1706              	 .cfi_endproc
 1707              	.LFE244:
 1709 004e 00BF     	 .section .text.XMC_CAN_MO_SetAcceptanceMask,"ax",%progbits
 1710              	 .align 2
 1711              	 .global XMC_CAN_MO_SetAcceptanceMask
 1712              	 .thumb
 1713              	 .thumb_func
 1715              	XMC_CAN_MO_SetAcceptanceMask:
 1716              	.LFB245:
 583:../Libraries/XMCLib/src/xmc_can.c **** 
 584:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the acceptance mask of the MO */
 585:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetAcceptanceMask(XMC_CAN_MO_t *const can_mo, const uint32_t can_id_mask)
 586:../Libraries/XMCLib/src/xmc_can.c **** {
 1717              	 .loc 2 586 0
 1718              	 .cfi_startproc
 1719              	 
 1720              	 
 1721              	 
 1722 0000 80B4     	 push {r7}
 1723              	.LCFI111:
 1724              	 .cfi_def_cfa_offset 4
 1725              	 .cfi_offset 7,-4
 1726 0002 83B0     	 sub sp,sp,#12
 1727              	.LCFI112:
 1728              	 .cfi_def_cfa_offset 16
 1729 0004 00AF     	 add r7,sp,#0
 1730              	.LCFI113:
 1731              	 .cfi_def_cfa_register 7
 1732 0006 7860     	 str r0,[r7,#4]
 1733 0008 3960     	 str r1,[r7]
 587:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != 0)
 1734              	 .loc 2 587 0
 1735 000a 7B68     	 ldr r3,[r7,#4]
 1736 000c 1B68     	 ldr r3,[r3]
 1737 000e DB68     	 ldr r3,[r3,#12]
 1738 0010 03F00053 	 and r3,r3,#536870912
 1739 0014 002B     	 cmp r3,#0
 1740 0016 14D0     	 beq .L79
 588:../Libraries/XMCLib/src/xmc_can.c ****       && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) == 0))
 1741              	 .loc 2 588 0
 1742 0018 7B68     	 ldr r3,[r7,#4]
 1743 001a 1B68     	 ldr r3,[r3]
 1744 001c 9B69     	 ldr r3,[r3,#24]
 1745 001e 03F00053 	 and r3,r3,#536870912
 1746 0022 002B     	 cmp r3,#0
 1747 0024 0DD1     	 bne .L79
 589:../Libraries/XMCLib/src/xmc_can.c ****   {
 590:../Libraries/XMCLib/src/xmc_can.c ****     /* Message object n receives frames only with matching IDE bit. */
 591:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1748              	 .loc 2 591 0
 1749 0026 7B68     	 ldr r3,[r7,#4]
 1750 0028 1A68     	 ldr r2,[r3]
 1751 002a 7B68     	 ldr r3,[r7,#4]
 1752 002c 1B68     	 ldr r3,[r3]
 1753 002e DB68     	 ldr r3,[r3,#12]
 1754 0030 03F06041 	 and r1,r3,#-536870912
 592:../Libraries/XMCLib/src/xmc_can.c ****                                 ((can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)XMC_CAN_MO_
 1755              	 .loc 2 592 0
 1756 0034 3B68     	 ldr r3,[r7]
 1757 0036 9804     	 lsls r0,r3,#18
 1758 0038 0E4B     	 ldr r3,.L81
 1759 003a 0340     	 ands r3,r3,r0
 591:../Libraries/XMCLib/src/xmc_can.c ****                                 ((can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)XMC_CAN_MO_
 1760              	 .loc 2 591 0
 1761 003c 0B43     	 orrs r3,r3,r1
 1762 003e D360     	 str r3,[r2,#12]
 1763 0040 0BE0     	 b .L80
 1764              	.L79:
 593:../Libraries/XMCLib/src/xmc_can.c ****   }
 594:../Libraries/XMCLib/src/xmc_can.c ****   else
 595:../Libraries/XMCLib/src/xmc_can.c ****   {
 596:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1765              	 .loc 2 596 0
 1766 0042 7B68     	 ldr r3,[r7,#4]
 1767 0044 1B68     	 ldr r3,[r3]
 1768 0046 7A68     	 ldr r2,[r7,#4]
 1769 0048 1268     	 ldr r2,[r2]
 1770 004a D268     	 ldr r2,[r2,#12]
 1771 004c 02F06041 	 and r1,r2,#-536870912
 597:../Libraries/XMCLib/src/xmc_can.c ****                                 (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1772              	 .loc 2 597 0
 1773 0050 3A68     	 ldr r2,[r7]
 1774 0052 22F06042 	 bic r2,r2,#-536870912
 596:../Libraries/XMCLib/src/xmc_can.c ****                                 (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1775              	 .loc 2 596 0
 1776 0056 0A43     	 orrs r2,r2,r1
 1777 0058 DA60     	 str r2,[r3,#12]
 1778              	.L80:
 598:../Libraries/XMCLib/src/xmc_can.c ****   }
 599:../Libraries/XMCLib/src/xmc_can.c **** 
 600:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_id_mask = can_id_mask;
 1779              	 .loc 2 600 0
 1780 005a 3B68     	 ldr r3,[r7]
 1781 005c 23F06041 	 bic r1,r3,#-536870912
 1782 0060 7A68     	 ldr r2,[r7,#4]
 1783 0062 9368     	 ldr r3,[r2,#8]
 1784 0064 61F31C03 	 bfi r3,r1,#0,#29
 1785 0068 9360     	 str r3,[r2,#8]
 601:../Libraries/XMCLib/src/xmc_can.c **** }
 1786              	 .loc 2 601 0
 1787 006a 0C37     	 adds r7,r7,#12
 1788              	.LCFI114:
 1789              	 .cfi_def_cfa_offset 4
 1790 006c BD46     	 mov sp,r7
 1791              	.LCFI115:
 1792              	 .cfi_def_cfa_register 13
 1793              	 
 1794 006e 5DF8047B 	 ldr r7,[sp],#4
 1795              	.LCFI116:
 1796              	 .cfi_restore 7
 1797              	 .cfi_def_cfa_offset 0
 1798 0072 7047     	 bx lr
 1799              	.L82:
 1800              	 .align 2
 1801              	.L81:
 1802 0074 0000FC1F 	 .word 536608768
 1803              	 .cfi_endproc
 1804              	.LFE245:
 1806              	 .section .text.XMC_CAN_MO_Config,"ax",%progbits
 1807              	 .align 2
 1808              	 .global XMC_CAN_MO_Config
 1809              	 .thumb
 1810              	 .thumb_func
 1812              	XMC_CAN_MO_Config:
 1813              	.LFB246:
 602:../Libraries/XMCLib/src/xmc_can.c **** 
 603:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN MO Object */
 604:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo)
 605:../Libraries/XMCLib/src/xmc_can.c **** {
 1814              	 .loc 2 605 0
 1815              	 .cfi_startproc
 1816              	 
 1817              	 
 1818 0000 80B5     	 push {r7,lr}
 1819              	.LCFI117:
 1820              	 .cfi_def_cfa_offset 8
 1821              	 .cfi_offset 7,-8
 1822              	 .cfi_offset 14,-4
 1823 0002 86B0     	 sub sp,sp,#24
 1824              	.LCFI118:
 1825              	 .cfi_def_cfa_offset 32
 1826 0004 00AF     	 add r7,sp,#0
 1827              	.LCFI119:
 1828              	 .cfi_def_cfa_register 7
 1829 0006 7860     	 str r0,[r7,#4]
 606:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t reg;
 607:../Libraries/XMCLib/src/xmc_can.c **** 
 608:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure MPN */
 609:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t num = ((uint32_t)(can_mo->can_mo_ptr) - CAN_BASE - 0x1000U) / 0x0020U;
 1830              	 .loc 2 609 0
 1831 0008 7B68     	 ldr r3,[r7,#4]
 1832 000a 1B68     	 ldr r3,[r3]
 1833 000c 03F13843 	 add r3,r3,#-1207959552
 1834 0010 A3F5A833 	 sub r3,r3,#86016
 1835 0014 5B09     	 lsrs r3,r3,#5
 1836 0016 7B61     	 str r3,[r7,#20]
 610:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num / 32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num % 32) << 
 1837              	 .loc 2 610 0
 1838 0018 7B69     	 ldr r3,[r7,#20]
 1839 001a 5B09     	 lsrs r3,r3,#5
 1840 001c 5A03     	 lsls r2,r3,#13
 1841 001e 7B69     	 ldr r3,[r7,#20]
 1842 0020 03F01F03 	 and r3,r3,#31
 1843 0024 1B02     	 lsls r3,r3,#8
 1844 0026 1343     	 orrs r3,r3,r2
 1845 0028 3B61     	 str r3,[r7,#16]
 611:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 1846              	 .loc 2 611 0
 1847 002a 7B68     	 ldr r3,[r7,#4]
 1848 002c 1B68     	 ldr r3,[r3]
 1849 002e 7A68     	 ldr r2,[r7,#4]
 1850 0030 1268     	 ldr r2,[r2]
 1851 0032 9268     	 ldr r2,[r2,#8]
 1852 0034 22F47F42 	 bic r2,r2,#65280
 1853 0038 9A60     	 str r2,[r3,#8]
 612:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 1854              	 .loc 2 612 0
 1855 003a 7B68     	 ldr r3,[r7,#4]
 1856 003c 1B68     	 ldr r3,[r3]
 1857 003e 7A68     	 ldr r2,[r7,#4]
 1858 0040 1268     	 ldr r2,[r2]
 1859 0042 9168     	 ldr r1,[r2,#8]
 1860 0044 3A69     	 ldr r2,[r7,#16]
 1861 0046 0A43     	 orrs r2,r2,r1
 1862 0048 9A60     	 str r2,[r3,#8]
 613:../Libraries/XMCLib/src/xmc_can.c **** 
 614:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_STANDARD_11BITS) &&
 1863              	 .loc 2 614 0
 1864 004a 7B68     	 ldr r3,[r7,#4]
 1865 004c DB79     	 ldrb r3,[r3,#7]
 1866 004e 03F02003 	 and r3,r3,#32
 1867 0052 DBB2     	 uxtb r3,r3
 1868 0054 002B     	 cmp r3,#0
 1869 0056 07D0     	 beq .L84
 615:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1870              	 .loc 2 615 0 discriminator 1
 1871 0058 7B68     	 ldr r3,[r7,#4]
 1872 005a DB79     	 ldrb r3,[r3,#7]
 1873 005c 03F02003 	 and r3,r3,#32
 1874 0060 DBB2     	 uxtb r3,r3
 614:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1875              	 .loc 2 614 0 discriminator 1
 1876 0062 002B     	 cmp r3,#0
 1877 0064 00D1     	 bne .L84
 614:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1878              	 .loc 2 614 0 is_stmt 0
 1879 0066 60E0     	 b .L83
 1880              	.L84:
 616:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1881              	 .loc 2 616 0 is_stmt 1
 1882 0068 7B68     	 ldr r3,[r7,#4]
 1883 006a 1B7E     	 ldrb r3,[r3,#24]
 615:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1884              	 .loc 2 615 0
 1885 006c 002B     	 cmp r3,#0
 1886 006e 04D0     	 beq .L86
 617:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_mo_type != XMC_CAN_MO_TYPE_TRANSMSGOBJ)))
 1887              	 .loc 2 617 0
 1888 0070 7B68     	 ldr r3,[r7,#4]
 1889 0072 1B7E     	 ldrb r3,[r3,#24]
 616:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1890              	 .loc 2 616 0
 1891 0074 012B     	 cmp r3,#1
 1892 0076 00D0     	 beq .L86
 1893 0078 57E0     	 b .L83
 1894              	.L86:
 618:../Libraries/XMCLib/src/xmc_can.c ****   {
 619:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 620:../Libraries/XMCLib/src/xmc_can.c ****   }
 621:../Libraries/XMCLib/src/xmc_can.c ****   else
 622:../Libraries/XMCLib/src/xmc_can.c ****   {
 623:../Libraries/XMCLib/src/xmc_can.c **** 
 624:../Libraries/XMCLib/src/xmc_can.c ****     /* Disable Message object */
 625:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1895              	 .loc 2 625 0
 1896 007a 7B68     	 ldr r3,[r7,#4]
 1897 007c 1B68     	 ldr r3,[r3]
 1898 007e 2022     	 movs r2,#32
 1899 0080 DA61     	 str r2,[r3,#28]
 626:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_id_mode == (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS)
 1900              	 .loc 2 626 0
 1901 0082 7B68     	 ldr r3,[r7,#4]
 1902 0084 DB79     	 ldrb r3,[r3,#7]
 1903 0086 03F02003 	 and r3,r3,#32
 1904 008a DBB2     	 uxtb r3,r3
 1905 008c 002B     	 cmp r3,#0
 1906 008e 28D1     	 bne .L87
 627:../Libraries/XMCLib/src/xmc_can.c ****     {
 628:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_ar;
 1907              	 .loc 2 628 0
 1908 0090 7B68     	 ldr r3,[r7,#4]
 1909 0092 5B68     	 ldr r3,[r3,#4]
 1910 0094 FB60     	 str r3,[r7,#12]
 629:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAR_ID_Msk);
 1911              	 .loc 2 629 0
 1912 0096 FB68     	 ldr r3,[r7,#12]
 1913 0098 03F06043 	 and r3,r3,#-536870912
 1914 009c FB60     	 str r3,[r7,#12]
 630:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_identifier << XMC_CAN_MO_MOAR_STDID_Pos);
 1915              	 .loc 2 630 0
 1916 009e 7B68     	 ldr r3,[r7,#4]
 1917 00a0 5B68     	 ldr r3,[r3,#4]
 1918 00a2 C3F31C03 	 ubfx r3,r3,#0,#29
 1919 00a6 9B04     	 lsls r3,r3,#18
 1920 00a8 1A46     	 mov r2,r3
 1921 00aa FB68     	 ldr r3,[r7,#12]
 1922 00ac 1343     	 orrs r3,r3,r2
 1923 00ae FB60     	 str r3,[r7,#12]
 631:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = reg;
 1924              	 .loc 2 631 0
 1925 00b0 7B68     	 ldr r3,[r7,#4]
 1926 00b2 1B68     	 ldr r3,[r3]
 1927 00b4 FA68     	 ldr r2,[r7,#12]
 1928 00b6 9A61     	 str r2,[r3,#24]
 632:../Libraries/XMCLib/src/xmc_can.c **** 
 633:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_amr;
 1929              	 .loc 2 633 0
 1930 00b8 7B68     	 ldr r3,[r7,#4]
 1931 00ba 9B68     	 ldr r3,[r3,#8]
 1932 00bc FB60     	 str r3,[r7,#12]
 634:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAMR_AM_Msk);
 1933              	 .loc 2 634 0
 1934 00be FB68     	 ldr r3,[r7,#12]
 1935 00c0 03F06043 	 and r3,r3,#-536870912
 1936 00c4 FB60     	 str r3,[r7,#12]
 635:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1937              	 .loc 2 635 0
 1938 00c6 7B68     	 ldr r3,[r7,#4]
 1939 00c8 9B68     	 ldr r3,[r3,#8]
 1940 00ca C3F31C03 	 ubfx r3,r3,#0,#29
 1941 00ce 9B04     	 lsls r3,r3,#18
 1942 00d0 1A46     	 mov r2,r3
 1943 00d2 FB68     	 ldr r3,[r7,#12]
 1944 00d4 1343     	 orrs r3,r3,r2
 1945 00d6 FB60     	 str r3,[r7,#12]
 636:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = reg;
 1946              	 .loc 2 636 0
 1947 00d8 7B68     	 ldr r3,[r7,#4]
 1948 00da 1B68     	 ldr r3,[r3]
 1949 00dc FA68     	 ldr r2,[r7,#12]
 1950 00de DA60     	 str r2,[r3,#12]
 1951 00e0 09E0     	 b .L88
 1952              	.L87:
 637:../Libraries/XMCLib/src/xmc_can.c ****     }
 638:../Libraries/XMCLib/src/xmc_can.c ****     else
 639:../Libraries/XMCLib/src/xmc_can.c ****     {
 640:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = can_mo->mo_ar;
 1953              	 .loc 2 640 0
 1954 00e2 7B68     	 ldr r3,[r7,#4]
 1955 00e4 1B68     	 ldr r3,[r3]
 1956 00e6 7A68     	 ldr r2,[r7,#4]
 1957 00e8 5268     	 ldr r2,[r2,#4]
 1958 00ea 9A61     	 str r2,[r3,#24]
 641:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = can_mo->mo_amr;
 1959              	 .loc 2 641 0
 1960 00ec 7B68     	 ldr r3,[r7,#4]
 1961 00ee 1B68     	 ldr r3,[r3]
 1962 00f0 7A68     	 ldr r2,[r7,#4]
 1963 00f2 9268     	 ldr r2,[r2,#8]
 1964 00f4 DA60     	 str r2,[r3,#12]
 1965              	.L88:
 642:../Libraries/XMCLib/src/xmc_can.c ****     }
 643:../Libraries/XMCLib/src/xmc_can.c ****     /* Check whether message object is transmit message object */
 644:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1966              	 .loc 2 644 0
 1967 00f6 7B68     	 ldr r3,[r7,#4]
 1968 00f8 1B7E     	 ldrb r3,[r3,#24]
 1969 00fa 012B     	 cmp r3,#1
 1970 00fc 0CD1     	 bne .L89
 645:../Libraries/XMCLib/src/xmc_can.c ****     {
 646:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Transmit message object  */
 647:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_MO_UpdateData(can_mo);
 1971              	 .loc 2 647 0
 1972 00fe 7868     	 ldr r0,[r7,#4]
 1973 0100 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 648:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_SETDIR_Msk;
 1974              	 .loc 2 648 0
 1975 0104 7B68     	 ldr r3,[r7,#4]
 1976 0106 1B68     	 ldr r3,[r3]
 1977 0108 4FF00062 	 mov r2,#134217728
 1978 010c DA61     	 str r2,[r3,#28]
 649:../Libraries/XMCLib/src/xmc_can.c **** 
 650:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL and Set MSGVAL, TXEN0 and TXEN1 bits */
 651:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk | CAN_MO_M
 1979              	 .loc 2 651 0
 1980 010e 7B68     	 ldr r3,[r7,#4]
 1981 0110 1B68     	 ldr r3,[r3]
 1982 0112 074A     	 ldr r2,.L90
 1983 0114 DA61     	 str r2,[r3,#28]
 1984 0116 08E0     	 b .L83
 1985              	.L89:
 652:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_RESRXEN_Msk  | CAN_MO_MOCTR_RESRTSEL_Msk);
 653:../Libraries/XMCLib/src/xmc_can.c ****     }
 654:../Libraries/XMCLib/src/xmc_can.c ****     else
 655:../Libraries/XMCLib/src/xmc_can.c ****     {
 656:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Receive message object and set RXEN bit */
 657:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 1986              	 .loc 2 657 0
 1987 0118 7B68     	 ldr r3,[r7,#4]
 1988 011a 1B68     	 ldr r3,[r3]
 1989 011c 4FF40062 	 mov r2,#2048
 1990 0120 DA61     	 str r2,[r3,#28]
 658:../Libraries/XMCLib/src/xmc_can.c **** 
 659:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL, TXEN1 and TXEN2 and Set MSGVAL and RXEN bits */
 660:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_RESTXEN0_Msk | CAN_MO_MOCTR_RESTXEN1_Msk | CAN_MO_M
 1991              	 .loc 2 660 0
 1992 0122 7B68     	 ldr r3,[r7,#4]
 1993 0124 1B68     	 ldr r3,[r3]
 1994 0126 034A     	 ldr r2,.L90+4
 1995 0128 DA61     	 str r2,[r3,#28]
 1996              	.L83:
 661:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 662:../Libraries/XMCLib/src/xmc_can.c ****     }
 663:../Libraries/XMCLib/src/xmc_can.c **** 
 664:../Libraries/XMCLib/src/xmc_can.c ****   }
 665:../Libraries/XMCLib/src/xmc_can.c **** }
 1997              	 .loc 2 665 0
 1998 012a 1837     	 adds r7,r7,#24
 1999              	.LCFI120:
 2000              	 .cfi_def_cfa_offset 8
 2001 012c BD46     	 mov sp,r7
 2002              	.LCFI121:
 2003              	 .cfi_def_cfa_register 13
 2004              	 
 2005 012e 80BD     	 pop {r7,pc}
 2006              	.L91:
 2007              	 .align 2
 2008              	.L90:
 2009 0130 C0002006 	 .word 102760640
 2010 0134 4006A000 	 .word 10487360
 2011              	 .cfi_endproc
 2012              	.LFE246:
 2014              	 .section .text.XMC_CAN_MO_UpdateData,"ax",%progbits
 2015              	 .align 2
 2016              	 .global XMC_CAN_MO_UpdateData
 2017              	 .thumb
 2018              	 .thumb_func
 2020              	XMC_CAN_MO_UpdateData:
 2021              	.LFB247:
 666:../Libraries/XMCLib/src/xmc_can.c **** 
 667:../Libraries/XMCLib/src/xmc_can.c **** /* Update of XMC_CAN Object */
 668:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo)
 669:../Libraries/XMCLib/src/xmc_can.c **** {
 2022              	 .loc 2 669 0
 2023              	 .cfi_startproc
 2024              	 
 2025              	 
 2026              	 
 2027 0000 80B4     	 push {r7}
 2028              	.LCFI122:
 2029              	 .cfi_def_cfa_offset 4
 2030              	 .cfi_offset 7,-4
 2031 0002 85B0     	 sub sp,sp,#20
 2032              	.LCFI123:
 2033              	 .cfi_def_cfa_offset 24
 2034 0004 00AF     	 add r7,sp,#0
 2035              	.LCFI124:
 2036              	 .cfi_def_cfa_register 7
 2037 0006 7860     	 str r0,[r7,#4]
 670:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2038              	 .loc 2 670 0
 2039 0008 0323     	 movs r3,#3
 2040 000a FB73     	 strb r3,[r7,#15]
 671:../Libraries/XMCLib/src/xmc_can.c ****   /* Check whether message object is transmit message object */
 672:../Libraries/XMCLib/src/xmc_can.c ****   if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 2041              	 .loc 2 672 0
 2042 000c 7B68     	 ldr r3,[r7,#4]
 2043 000e 1B7E     	 ldrb r3,[r3,#24]
 2044 0010 012B     	 cmp r3,#1
 2045 0012 22D1     	 bne .L93
 673:../Libraries/XMCLib/src/xmc_can.c ****   {
 674:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 2046              	 .loc 2 674 0
 2047 0014 7B68     	 ldr r3,[r7,#4]
 2048 0016 1B68     	 ldr r3,[r3]
 2049 0018 2022     	 movs r2,#32
 2050 001a DA61     	 str r2,[r3,#28]
 675:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 676:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR) & ~(uint32_t)(CAN_MO_MOFCR_DLC_Msk)) |
 2051              	 .loc 2 676 0
 2052 001c 7B68     	 ldr r3,[r7,#4]
 2053 001e 1B68     	 ldr r3,[r3]
 2054 0020 7A68     	 ldr r2,[r7,#4]
 2055 0022 1268     	 ldr r2,[r2]
 2056 0024 1268     	 ldr r2,[r2]
 2057 0026 22F07061 	 bic r1,r2,#251658240
 677:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 2058              	 .loc 2 677 0
 2059 002a 7A68     	 ldr r2,[r7,#4]
 2060 002c 127B     	 ldrb r2,[r2,#12]
 2061 002e 1206     	 lsls r2,r2,#24
 2062 0030 02F07062 	 and r2,r2,#251658240
 676:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 2063              	 .loc 2 676 0
 2064 0034 0A43     	 orrs r2,r2,r1
 2065 0036 1A60     	 str r2,[r3]
 678:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 679:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAL = can_mo->can_data[0];
 2066              	 .loc 2 679 0
 2067 0038 7B68     	 ldr r3,[r7,#4]
 2068 003a 1B68     	 ldr r3,[r3]
 2069 003c 7A68     	 ldr r2,[r7,#4]
 2070 003e 1269     	 ldr r2,[r2,#16]
 2071 0040 1A61     	 str r2,[r3,#16]
 680:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 2072              	 .loc 2 680 0
 2073 0042 7B68     	 ldr r3,[r7,#4]
 2074 0044 1B68     	 ldr r3,[r3]
 2075 0046 7A68     	 ldr r2,[r7,#4]
 2076 0048 5269     	 ldr r2,[r2,#20]
 2077 004a 5A61     	 str r2,[r3,#20]
 681:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 682:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETNEWDAT_Msk | CAN_MO_MOCTR_SETMSGVAL_Msk | CAN_MO_M
 2078              	 .loc 2 682 0
 2079 004c 7B68     	 ldr r3,[r7,#4]
 2080 004e 1B68     	 ldr r3,[r3]
 2081 0050 064A     	 ldr r2,.L96
 2082 0052 DA61     	 str r2,[r3,#28]
 683:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2083              	 .loc 2 683 0
 2084 0054 0023     	 movs r3,#0
 2085 0056 FB73     	 strb r3,[r7,#15]
 2086 0058 01E0     	 b .L94
 2087              	.L93:
 684:../Libraries/XMCLib/src/xmc_can.c ****   }
 685:../Libraries/XMCLib/src/xmc_can.c ****   else
 686:../Libraries/XMCLib/src/xmc_can.c ****   {
 687:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2088              	 .loc 2 687 0
 2089 005a 0323     	 movs r3,#3
 2090 005c FB73     	 strb r3,[r7,#15]
 2091              	.L94:
 688:../Libraries/XMCLib/src/xmc_can.c ****   }
 689:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2092              	 .loc 2 689 0
 2093 005e FB7B     	 ldrb r3,[r7,#15]
 690:../Libraries/XMCLib/src/xmc_can.c **** }
 2094              	 .loc 2 690 0
 2095 0060 1846     	 mov r0,r3
 2096 0062 1437     	 adds r7,r7,#20
 2097              	.LCFI125:
 2098              	 .cfi_def_cfa_offset 4
 2099 0064 BD46     	 mov sp,r7
 2100              	.LCFI126:
 2101              	 .cfi_def_cfa_register 13
 2102              	 
 2103 0066 5DF8047B 	 ldr r7,[sp],#4
 2104              	.LCFI127:
 2105              	 .cfi_restore 7
 2106              	 .cfi_def_cfa_offset 0
 2107 006a 7047     	 bx lr
 2108              	.L97:
 2109              	 .align 2
 2110              	.L96:
 2111 006c 40002800 	 .word 2621504
 2112              	 .cfi_endproc
 2113              	.LFE247:
 2115              	 .section .text.XMC_CAN_MO_Transmit,"ax",%progbits
 2116              	 .align 2
 2117              	 .global XMC_CAN_MO_Transmit
 2118              	 .thumb
 2119              	 .thumb_func
 2121              	XMC_CAN_MO_Transmit:
 2122              	.LFB248:
 691:../Libraries/XMCLib/src/xmc_can.c **** 
 692:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will put a transmit request to transmit message object */
 693:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo)
 694:../Libraries/XMCLib/src/xmc_can.c **** {
 2123              	 .loc 2 694 0
 2124              	 .cfi_startproc
 2125              	 
 2126              	 
 2127              	 
 2128 0000 80B4     	 push {r7}
 2129              	.LCFI128:
 2130              	 .cfi_def_cfa_offset 4
 2131              	 .cfi_offset 7,-4
 2132 0002 87B0     	 sub sp,sp,#28
 2133              	.LCFI129:
 2134              	 .cfi_def_cfa_offset 32
 2135 0004 00AF     	 add r7,sp,#0
 2136              	.LCFI130:
 2137              	 .cfi_def_cfa_register 7
 2138 0006 7860     	 str r0,[r7,#4]
 695:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2139              	 .loc 2 695 0
 2140 0008 0123     	 movs r3,#1
 2141 000a FB75     	 strb r3,[r7,#23]
 696:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)(((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 2142              	 .loc 2 696 0
 2143 000c 7B68     	 ldr r3,[r7,#4]
 2144 000e 1B68     	 ldr r3,[r3]
 2145 0010 DB69     	 ldr r3,[r3,#28]
 2146 0012 03F02003 	 and r3,r3,#32
 2147 0016 5B09     	 lsrs r3,r3,#5
 2148 0018 3B61     	 str r3,[r7,#16]
 697:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t) ((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_
 2149              	 .loc 2 697 0
 2150 001a 7B68     	 ldr r3,[r7,#4]
 2151 001c 1B68     	 ldr r3,[r3]
 2152 001e DB69     	 ldr r3,[r3,#28]
 2153 0020 03F48073 	 and r3,r3,#256
 2154 0024 1B0A     	 lsrs r3,r3,#8
 2155 0026 FB60     	 str r3,[r7,#12]
 698:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 699:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 2156              	 .loc 2 699 0
 2157 0028 3B69     	 ldr r3,[r7,#16]
 2158 002a 002B     	 cmp r3,#0
 2159 002c 02D1     	 bne .L99
 700:../Libraries/XMCLib/src/xmc_can.c ****   {
 701:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 2160              	 .loc 2 701 0
 2161 002e 0423     	 movs r3,#4
 2162 0030 FB75     	 strb r3,[r7,#23]
 2163 0032 0CE0     	 b .L100
 2164              	.L99:
 702:../Libraries/XMCLib/src/xmc_can.c ****   }
 703:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 704:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 2165              	 .loc 2 704 0
 2166 0034 FB68     	 ldr r3,[r7,#12]
 2167 0036 012B     	 cmp r3,#1
 2168 0038 02D1     	 bne .L101
 705:../Libraries/XMCLib/src/xmc_can.c ****   {
 706:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2169              	 .loc 2 706 0
 2170 003a 0223     	 movs r3,#2
 2171 003c FB75     	 strb r3,[r7,#23]
 2172 003e 06E0     	 b .L100
 2173              	.L101:
 707:../Libraries/XMCLib/src/xmc_can.c ****   }
 708:../Libraries/XMCLib/src/xmc_can.c ****   else
 709:../Libraries/XMCLib/src/xmc_can.c ****   {
 710:../Libraries/XMCLib/src/xmc_can.c ****     /* set TXRQ bit */
 711:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr-> MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCT
 2174              	 .loc 2 711 0
 2175 0040 7B68     	 ldr r3,[r7,#4]
 2176 0042 1B68     	 ldr r3,[r3]
 2177 0044 4FF0E062 	 mov r2,#117440512
 2178 0048 DA61     	 str r2,[r3,#28]
 712:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2179              	 .loc 2 712 0
 2180 004a 0023     	 movs r3,#0
 2181 004c FB75     	 strb r3,[r7,#23]
 2182              	.L100:
 713:../Libraries/XMCLib/src/xmc_can.c ****   }
 714:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2183              	 .loc 2 714 0
 2184 004e FB7D     	 ldrb r3,[r7,#23]
 715:../Libraries/XMCLib/src/xmc_can.c **** }
 2185              	 .loc 2 715 0
 2186 0050 1846     	 mov r0,r3
 2187 0052 1C37     	 adds r7,r7,#28
 2188              	.LCFI131:
 2189              	 .cfi_def_cfa_offset 4
 2190 0054 BD46     	 mov sp,r7
 2191              	.LCFI132:
 2192              	 .cfi_def_cfa_register 13
 2193              	 
 2194 0056 5DF8047B 	 ldr r7,[sp],#4
 2195              	.LCFI133:
 2196              	 .cfi_restore 7
 2197              	 .cfi_def_cfa_offset 0
 2198 005a 7047     	 bx lr
 2199              	 .cfi_endproc
 2200              	.LFE248:
 2202              	 .section .text.XMC_CAN_MO_ReceiveData,"ax",%progbits
 2203              	 .align 2
 2204              	 .global XMC_CAN_MO_ReceiveData
 2205              	 .thumb
 2206              	 .thumb_func
 2208              	XMC_CAN_MO_ReceiveData:
 2209              	.LFB249:
 716:../Libraries/XMCLib/src/xmc_can.c **** 
 717:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 718:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo)
 719:../Libraries/XMCLib/src/xmc_can.c **** {
 2210              	 .loc 2 719 0
 2211              	 .cfi_startproc
 2212              	 
 2213              	 
 2214              	 
 2215 0000 80B4     	 push {r7}
 2216              	.LCFI134:
 2217              	 .cfi_def_cfa_offset 4
 2218              	 .cfi_offset 7,-4
 2219 0002 87B0     	 sub sp,sp,#28
 2220              	.LCFI135:
 2221              	 .cfi_def_cfa_offset 32
 2222 0004 00AF     	 add r7,sp,#0
 2223              	.LCFI136:
 2224              	 .cfi_def_cfa_register 7
 2225 0006 7860     	 str r0,[r7,#4]
 720:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2226              	 .loc 2 720 0
 2227 0008 0123     	 movs r3,#1
 2228 000a FB75     	 strb r3,[r7,#23]
 721:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 2229              	 .loc 2 721 0
 2230 000c 0023     	 movs r3,#0
 2231 000e BB75     	 strb r3,[r7,#22]
 722:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 2232              	 .loc 2 722 0
 2233 0010 0023     	 movs r3,#0
 2234 0012 7B75     	 strb r3,[r7,#21]
 723:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 2235              	 .loc 2 723 0
 2236 0014 7B68     	 ldr r3,[r7,#4]
 2237 0016 1B68     	 ldr r3,[r3]
 2238 0018 DB69     	 ldr r3,[r3,#28]
 2239 001a 03F40063 	 and r3,r3,#2048
 2240 001e DB0A     	 lsrs r3,r3,#11
 2241 0020 3B61     	 str r3,[r7,#16]
 724:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 2242              	 .loc 2 724 0
 2243 0022 7B68     	 ldr r3,[r7,#4]
 2244 0024 1B68     	 ldr r3,[r3]
 2245 0026 DB69     	 ldr r3,[r3,#28]
 2246 0028 03F00403 	 and r3,r3,#4
 2247 002c 9B08     	 lsrs r3,r3,#2
 2248 002e FB60     	 str r3,[r7,#12]
 725:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 726:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 2249              	 .loc 2 726 0
 2250 0030 3B69     	 ldr r3,[r7,#16]
 2251 0032 002B     	 cmp r3,#0
 2252 0034 02D0     	 beq .L104
 727:../Libraries/XMCLib/src/xmc_can.c ****   {
 728:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2253              	 .loc 2 728 0
 2254 0036 0323     	 movs r3,#3
 2255 0038 FB75     	 strb r3,[r7,#23]
 2256 003a 25E0     	 b .L105
 2257              	.L104:
 729:../Libraries/XMCLib/src/xmc_can.c ****   }
 730:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 731:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 2258              	 .loc 2 731 0
 2259 003c FB68     	 ldr r3,[r7,#12]
 2260 003e 012B     	 cmp r3,#1
 2261 0040 02D1     	 bne .L106
 732:../Libraries/XMCLib/src/xmc_can.c ****   {
 733:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2262              	 .loc 2 733 0
 2263 0042 0223     	 movs r3,#2
 2264 0044 FB75     	 strb r3,[r7,#23]
 2265 0046 1FE0     	 b .L105
 2266              	.L106:
 734:../Libraries/XMCLib/src/xmc_can.c ****   }
 735:../Libraries/XMCLib/src/xmc_can.c ****   else
 736:../Libraries/XMCLib/src/xmc_can.c ****   {
 737:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 738:../Libraries/XMCLib/src/xmc_can.c ****     do
 739:../Libraries/XMCLib/src/xmc_can.c ****     {
 740:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 2267              	 .loc 2 740 0 discriminator 3
 2268 0048 7B68     	 ldr r3,[r7,#4]
 2269 004a 1B68     	 ldr r3,[r3]
 2270 004c 1A69     	 ldr r2,[r3,#16]
 2271 004e 7B68     	 ldr r3,[r7,#4]
 2272 0050 1A61     	 str r2,[r3,#16]
 741:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 2273              	 .loc 2 741 0 discriminator 3
 2274 0052 7B68     	 ldr r3,[r7,#4]
 2275 0054 1B68     	 ldr r3,[r3]
 2276 0056 5A69     	 ldr r2,[r3,#20]
 2277 0058 7B68     	 ldr r3,[r7,#4]
 2278 005a 5A61     	 str r2,[r3,#20]
 742:../Libraries/XMCLib/src/xmc_can.c **** 
 743:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 2279              	 .loc 2 743 0 discriminator 3
 2280 005c 7B68     	 ldr r3,[r7,#4]
 2281 005e 1B68     	 ldr r3,[r3]
 2282 0060 DB69     	 ldr r3,[r3,#28]
 2283 0062 03F00403 	 and r3,r3,#4
 2284 0066 9B08     	 lsrs r3,r3,#2
 2285 0068 BB75     	 strb r3,[r7,#22]
 744:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 2286              	 .loc 2 744 0 discriminator 3
 2287 006a 7B68     	 ldr r3,[r7,#4]
 2288 006c 1B68     	 ldr r3,[r3]
 2289 006e DB69     	 ldr r3,[r3,#28]
 2290 0070 03F00803 	 and r3,r3,#8
 2291 0074 DB08     	 lsrs r3,r3,#3
 2292 0076 7B75     	 strb r3,[r7,#21]
 745:../Libraries/XMCLib/src/xmc_can.c ****     }
 746:../Libraries/XMCLib/src/xmc_can.c ****     while ((rx_pnd != 0U) || (new_data != 0U));
 2293              	 .loc 2 746 0 discriminator 3
 2294 0078 BB7D     	 ldrb r3,[r7,#22]
 2295 007a 002B     	 cmp r3,#0
 2296 007c E4D1     	 bne .L106
 2297              	 .loc 2 746 0 is_stmt 0 discriminator 2
 2298 007e 7B7D     	 ldrb r3,[r7,#21]
 2299 0080 002B     	 cmp r3,#0
 2300 0082 E1D1     	 bne .L106
 747:../Libraries/XMCLib/src/xmc_can.c **** 
 748:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2301              	 .loc 2 748 0 is_stmt 1
 2302 0084 0023     	 movs r3,#0
 2303 0086 FB75     	 strb r3,[r7,#23]
 2304              	.L105:
 749:../Libraries/XMCLib/src/xmc_can.c ****   }
 750:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2305              	 .loc 2 750 0
 2306 0088 FB7D     	 ldrb r3,[r7,#23]
 751:../Libraries/XMCLib/src/xmc_can.c **** }
 2307              	 .loc 2 751 0
 2308 008a 1846     	 mov r0,r3
 2309 008c 1C37     	 adds r7,r7,#28
 2310              	.LCFI137:
 2311              	 .cfi_def_cfa_offset 4
 2312 008e BD46     	 mov sp,r7
 2313              	.LCFI138:
 2314              	 .cfi_def_cfa_register 13
 2315              	 
 2316 0090 5DF8047B 	 ldr r7,[sp],#4
 2317              	.LCFI139:
 2318              	 .cfi_restore 7
 2319              	 .cfi_def_cfa_offset 0
 2320 0094 7047     	 bx lr
 2321              	 .cfi_endproc
 2322              	.LFE249:
 2324 0096 00BF     	 .section .text.XMC_CAN_MO_Receive,"ax",%progbits
 2325              	 .align 2
 2326              	 .global XMC_CAN_MO_Receive
 2327              	 .thumb
 2328              	 .thumb_func
 2330              	XMC_CAN_MO_Receive:
 2331              	.LFB250:
 752:../Libraries/XMCLib/src/xmc_can.c **** 
 753:../Libraries/XMCLib/src/xmc_can.c **** 
 754:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 755:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive (XMC_CAN_MO_t *can_mo)
 756:../Libraries/XMCLib/src/xmc_can.c **** {
 2332              	 .loc 2 756 0
 2333              	 .cfi_startproc
 2334              	 
 2335              	 
 2336              	 
 2337 0000 80B4     	 push {r7}
 2338              	.LCFI140:
 2339              	 .cfi_def_cfa_offset 4
 2340              	 .cfi_offset 7,-4
 2341 0002 87B0     	 sub sp,sp,#28
 2342              	.LCFI141:
 2343              	 .cfi_def_cfa_offset 32
 2344 0004 00AF     	 add r7,sp,#0
 2345              	.LCFI142:
 2346              	 .cfi_def_cfa_register 7
 2347 0006 7860     	 str r0,[r7,#4]
 757:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2348              	 .loc 2 757 0
 2349 0008 0123     	 movs r3,#1
 2350 000a FB75     	 strb r3,[r7,#23]
 758:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 2351              	 .loc 2 758 0
 2352 000c 0023     	 movs r3,#0
 2353 000e BB75     	 strb r3,[r7,#22]
 759:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 2354              	 .loc 2 759 0
 2355 0010 0023     	 movs r3,#0
 2356 0012 7B75     	 strb r3,[r7,#21]
 760:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 2357              	 .loc 2 760 0
 2358 0014 7B68     	 ldr r3,[r7,#4]
 2359 0016 1B68     	 ldr r3,[r3]
 2360 0018 DB69     	 ldr r3,[r3,#28]
 2361 001a 03F40063 	 and r3,r3,#2048
 2362 001e DB0A     	 lsrs r3,r3,#11
 2363 0020 3B61     	 str r3,[r7,#16]
 761:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 2364              	 .loc 2 761 0
 2365 0022 7B68     	 ldr r3,[r7,#4]
 2366 0024 1B68     	 ldr r3,[r3]
 2367 0026 DB69     	 ldr r3,[r3,#28]
 2368 0028 03F00403 	 and r3,r3,#4
 2369 002c 9B08     	 lsrs r3,r3,#2
 2370 002e FB60     	 str r3,[r7,#12]
 762:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 763:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 2371              	 .loc 2 763 0
 2372 0030 3B69     	 ldr r3,[r7,#16]
 2373 0032 002B     	 cmp r3,#0
 2374 0034 02D0     	 beq .L109
 764:../Libraries/XMCLib/src/xmc_can.c ****   {
 765:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2375              	 .loc 2 765 0
 2376 0036 0323     	 movs r3,#3
 2377 0038 FB75     	 strb r3,[r7,#23]
 2378 003a A7E0     	 b .L110
 2379              	.L109:
 766:../Libraries/XMCLib/src/xmc_can.c ****   }
 767:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 768:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 2380              	 .loc 2 768 0
 2381 003c FB68     	 ldr r3,[r7,#12]
 2382 003e 012B     	 cmp r3,#1
 2383 0040 02D1     	 bne .L111
 769:../Libraries/XMCLib/src/xmc_can.c ****   {
 770:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2384              	 .loc 2 770 0
 2385 0042 0223     	 movs r3,#2
 2386 0044 FB75     	 strb r3,[r7,#23]
 2387 0046 A1E0     	 b .L110
 2388              	.L111:
 771:../Libraries/XMCLib/src/xmc_can.c ****   }
 772:../Libraries/XMCLib/src/xmc_can.c ****   else
 773:../Libraries/XMCLib/src/xmc_can.c ****   {
 774:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 775:../Libraries/XMCLib/src/xmc_can.c ****     do
 776:../Libraries/XMCLib/src/xmc_can.c ****     {
 777:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 2389              	 .loc 2 777 0
 2390 0048 7B68     	 ldr r3,[r7,#4]
 2391 004a 1B68     	 ldr r3,[r3]
 2392 004c 0822     	 movs r2,#8
 2393 004e DA61     	 str r2,[r3,#28]
 778:../Libraries/XMCLib/src/xmc_can.c ****       if ((((can_mo->can_mo_ptr->MOAR) & CAN_MO_MOAR_IDE_Msk) >> CAN_MO_MOAR_IDE_Pos) == 0U)
 2394              	 .loc 2 778 0
 2395 0050 7B68     	 ldr r3,[r7,#4]
 2396 0052 1B68     	 ldr r3,[r3]
 2397 0054 9B69     	 ldr r3,[r3,#24]
 2398 0056 03F00053 	 and r3,r3,#536870912
 2399 005a 5B0F     	 lsrs r3,r3,#29
 2400 005c 002B     	 cmp r3,#0
 2401 005e 40D1     	 bne .L112
 779:../Libraries/XMCLib/src/xmc_can.c ****       {
 780:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS;
 2402              	 .loc 2 780 0
 2403 0060 7A68     	 ldr r2,[r7,#4]
 2404 0062 D379     	 ldrb r3,[r2,#7]
 2405 0064 6FF34513 	 bfc r3,#5,#1
 2406 0068 D371     	 strb r3,[r2,#7]
 781:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & XMC_CAN_MO_MOAR_STDID_Msk) >> XMC_CAN_
 2407              	 .loc 2 781 0
 2408 006a 7B68     	 ldr r3,[r7,#4]
 2409 006c 1B68     	 ldr r3,[r3]
 2410 006e 9A69     	 ldr r2,[r3,#24]
 2411 0070 4A4B     	 ldr r3,.L118
 2412 0072 1340     	 ands r3,r3,r2
 2413 0074 9B0C     	 lsrs r3,r3,#18
 2414 0076 23F06041 	 bic r1,r3,#-536870912
 2415 007a 7A68     	 ldr r2,[r7,#4]
 2416 007c 5368     	 ldr r3,[r2,#4]
 2417 007e 61F31C03 	 bfi r3,r1,#0,#29
 2418 0082 5360     	 str r3,[r2,#4]
 782:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2419              	 .loc 2 782 0
 2420 0084 7B68     	 ldr r3,[r7,#4]
 2421 0086 1B68     	 ldr r3,[r3]
 2422 0088 DB68     	 ldr r3,[r3,#12]
 2423 008a 03F00053 	 and r3,r3,#536870912
 2424 008e 5B0F     	 lsrs r3,r3,#29
 2425 0090 DBB2     	 uxtb r3,r3
 2426 0092 03F00103 	 and r3,r3,#1
 2427 0096 D9B2     	 uxtb r1,r3
 2428 0098 7A68     	 ldr r2,[r7,#4]
 2429 009a D37A     	 ldrb r3,[r2,#11]
 2430 009c 61F34513 	 bfi r3,r1,#5,#1
 2431 00a0 D372     	 strb r3,[r2,#11]
 783:../Libraries/XMCLib/src/xmc_can.c ****         if (can_mo->can_ide_mask == 1U)
 2432              	 .loc 2 783 0
 2433 00a2 7B68     	 ldr r3,[r7,#4]
 2434 00a4 DB7A     	 ldrb r3,[r3,#11]
 2435 00a6 03F02003 	 and r3,r3,#32
 2436 00aa DBB2     	 uxtb r3,r3
 2437 00ac 002B     	 cmp r3,#0
 2438 00ae 0DD0     	 beq .L113
 784:../Libraries/XMCLib/src/xmc_can.c ****         {
 785:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & XMC_CAN_MO_MOAR_STDID_Msk) >
 2439              	 .loc 2 785 0
 2440 00b0 7B68     	 ldr r3,[r7,#4]
 2441 00b2 1B68     	 ldr r3,[r3]
 2442 00b4 DA68     	 ldr r2,[r3,#12]
 2443 00b6 394B     	 ldr r3,.L118
 2444 00b8 1340     	 ands r3,r3,r2
 2445 00ba 9B0C     	 lsrs r3,r3,#18
 2446 00bc 23F06041 	 bic r1,r3,#-536870912
 2447 00c0 7A68     	 ldr r2,[r7,#4]
 2448 00c2 9368     	 ldr r3,[r2,#8]
 2449 00c4 61F31C03 	 bfi r3,r1,#0,#29
 2450 00c8 9360     	 str r3,[r2,#8]
 2451 00ca 32E0     	 b .L115
 2452              	.L113:
 786:../Libraries/XMCLib/src/xmc_can.c ****         }
 787:../Libraries/XMCLib/src/xmc_can.c ****         else
 788:../Libraries/XMCLib/src/xmc_can.c ****         {
 789:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2453              	 .loc 2 789 0
 2454 00cc 7B68     	 ldr r3,[r7,#4]
 2455 00ce 1B68     	 ldr r3,[r3]
 2456 00d0 DB68     	 ldr r3,[r3,#12]
 2457 00d2 23F06041 	 bic r1,r3,#-536870912
 2458 00d6 7A68     	 ldr r2,[r7,#4]
 2459 00d8 9368     	 ldr r3,[r2,#8]
 2460 00da 61F31C03 	 bfi r3,r1,#0,#29
 2461 00de 9360     	 str r3,[r2,#8]
 2462 00e0 27E0     	 b .L115
 2463              	.L112:
 790:../Libraries/XMCLib/src/xmc_can.c ****         }
 791:../Libraries/XMCLib/src/xmc_can.c ****       }
 792:../Libraries/XMCLib/src/xmc_can.c ****       else
 793:../Libraries/XMCLib/src/xmc_can.c ****       {
 794:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_EXTENDED_29BITS;
 2464              	 .loc 2 794 0
 2465 00e2 7A68     	 ldr r2,[r7,#4]
 2466 00e4 D379     	 ldrb r3,[r2,#7]
 2467 00e6 43F02003 	 orr r3,r3,#32
 2468 00ea D371     	 strb r3,[r2,#7]
 795:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_ID_Msk);
 2469              	 .loc 2 795 0
 2470 00ec 7B68     	 ldr r3,[r7,#4]
 2471 00ee 1B68     	 ldr r3,[r3]
 2472 00f0 9B69     	 ldr r3,[r3,#24]
 2473 00f2 23F06041 	 bic r1,r3,#-536870912
 2474 00f6 7A68     	 ldr r2,[r7,#4]
 2475 00f8 5368     	 ldr r3,[r2,#4]
 2476 00fa 61F31C03 	 bfi r3,r1,#0,#29
 2477 00fe 5360     	 str r3,[r2,#4]
 796:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2478              	 .loc 2 796 0
 2479 0100 7B68     	 ldr r3,[r7,#4]
 2480 0102 1B68     	 ldr r3,[r3]
 2481 0104 DB68     	 ldr r3,[r3,#12]
 2482 0106 23F06041 	 bic r1,r3,#-536870912
 2483 010a 7A68     	 ldr r2,[r7,#4]
 2484 010c 9368     	 ldr r3,[r2,#8]
 2485 010e 61F31C03 	 bfi r3,r1,#0,#29
 2486 0112 9360     	 str r3,[r2,#8]
 797:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2487              	 .loc 2 797 0
 2488 0114 7B68     	 ldr r3,[r7,#4]
 2489 0116 1B68     	 ldr r3,[r3]
 2490 0118 DB68     	 ldr r3,[r3,#12]
 2491 011a 03F00053 	 and r3,r3,#536870912
 2492 011e 5B0F     	 lsrs r3,r3,#29
 2493 0120 DBB2     	 uxtb r3,r3
 2494 0122 03F00103 	 and r3,r3,#1
 2495 0126 D9B2     	 uxtb r1,r3
 2496 0128 7A68     	 ldr r2,[r7,#4]
 2497 012a D37A     	 ldrb r3,[r2,#11]
 2498 012c 61F34513 	 bfi r3,r1,#5,#1
 2499 0130 D372     	 strb r3,[r2,#11]
 2500              	.L115:
 798:../Libraries/XMCLib/src/xmc_can.c ****       }
 799:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data_length = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOFCR) & CAN_MO_MOFCR_DLC
 2501              	 .loc 2 799 0
 2502 0132 7B68     	 ldr r3,[r7,#4]
 2503 0134 1B68     	 ldr r3,[r3]
 2504 0136 1B68     	 ldr r3,[r3]
 2505 0138 03F07063 	 and r3,r3,#251658240
 2506 013c 1B0E     	 lsrs r3,r3,#24
 2507 013e DAB2     	 uxtb r2,r3
 2508 0140 7B68     	 ldr r3,[r7,#4]
 2509 0142 1A73     	 strb r2,[r3,#12]
 800:../Libraries/XMCLib/src/xmc_can.c **** 
 801:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 2510              	 .loc 2 801 0
 2511 0144 7B68     	 ldr r3,[r7,#4]
 2512 0146 1B68     	 ldr r3,[r3]
 2513 0148 1A69     	 ldr r2,[r3,#16]
 2514 014a 7B68     	 ldr r3,[r7,#4]
 2515 014c 1A61     	 str r2,[r3,#16]
 802:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 2516              	 .loc 2 802 0
 2517 014e 7B68     	 ldr r3,[r7,#4]
 2518 0150 1B68     	 ldr r3,[r3]
 2519 0152 5A69     	 ldr r2,[r3,#20]
 2520 0154 7B68     	 ldr r3,[r7,#4]
 2521 0156 5A61     	 str r2,[r3,#20]
 803:../Libraries/XMCLib/src/xmc_can.c **** 
 804:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 2522              	 .loc 2 804 0
 2523 0158 7B68     	 ldr r3,[r7,#4]
 2524 015a 1B68     	 ldr r3,[r3]
 2525 015c DB69     	 ldr r3,[r3,#28]
 2526 015e 03F00403 	 and r3,r3,#4
 2527 0162 9B08     	 lsrs r3,r3,#2
 2528 0164 BB75     	 strb r3,[r7,#22]
 805:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 2529              	 .loc 2 805 0
 2530 0166 7B68     	 ldr r3,[r7,#4]
 2531 0168 1B68     	 ldr r3,[r3]
 2532 016a DB69     	 ldr r3,[r3,#28]
 2533 016c 03F00803 	 and r3,r3,#8
 2534 0170 DB08     	 lsrs r3,r3,#3
 2535 0172 7B75     	 strb r3,[r7,#21]
 806:../Libraries/XMCLib/src/xmc_can.c ****     }
 807:../Libraries/XMCLib/src/xmc_can.c ****     while ((rx_pnd != 0U) && (new_data != 0U));
 2536              	 .loc 2 807 0
 2537 0174 BB7D     	 ldrb r3,[r7,#22]
 2538 0176 002B     	 cmp r3,#0
 2539 0178 03D0     	 beq .L116
 2540              	 .loc 2 807 0 is_stmt 0 discriminator 1
 2541 017a 7B7D     	 ldrb r3,[r7,#21]
 2542 017c 002B     	 cmp r3,#0
 2543 017e 7FF463AF 	 bne .L111
 2544              	.L116:
 808:../Libraries/XMCLib/src/xmc_can.c **** 
 809:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_type = XMC_CAN_MO_TYPE_RECMSGOBJ;
 2545              	 .loc 2 809 0 is_stmt 1
 2546 0182 7B68     	 ldr r3,[r7,#4]
 2547 0184 0022     	 movs r2,#0
 2548 0186 1A76     	 strb r2,[r3,#24]
 810:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2549              	 .loc 2 810 0
 2550 0188 0023     	 movs r3,#0
 2551 018a FB75     	 strb r3,[r7,#23]
 2552              	.L110:
 811:../Libraries/XMCLib/src/xmc_can.c ****   }
 812:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2553              	 .loc 2 812 0
 2554 018c FB7D     	 ldrb r3,[r7,#23]
 813:../Libraries/XMCLib/src/xmc_can.c **** }
 2555              	 .loc 2 813 0
 2556 018e 1846     	 mov r0,r3
 2557 0190 1C37     	 adds r7,r7,#28
 2558              	.LCFI143:
 2559              	 .cfi_def_cfa_offset 4
 2560 0192 BD46     	 mov sp,r7
 2561              	.LCFI144:
 2562              	 .cfi_def_cfa_register 13
 2563              	 
 2564 0194 5DF8047B 	 ldr r7,[sp],#4
 2565              	.LCFI145:
 2566              	 .cfi_restore 7
 2567              	 .cfi_def_cfa_offset 0
 2568 0198 7047     	 bx lr
 2569              	.L119:
 2570 019a 00BF     	 .align 2
 2571              	.L118:
 2572 019c 0000FC1F 	 .word 536608768
 2573              	 .cfi_endproc
 2574              	.LFE250:
 2576              	 .section .text.XMC_CAN_NODE_EnableEvent,"ax",%progbits
 2577              	 .align 2
 2578              	 .global XMC_CAN_NODE_EnableEvent
 2579              	 .thumb
 2580              	 .thumb_func
 2582              	XMC_CAN_NODE_EnableEvent:
 2583              	.LFB251:
 814:../Libraries/XMCLib/src/xmc_can.c **** 
 815:../Libraries/XMCLib/src/xmc_can.c **** /* Function to enable node event */
 816:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 817:../Libraries/XMCLib/src/xmc_can.c **** {
 2584              	 .loc 2 817 0
 2585              	 .cfi_startproc
 2586              	 
 2587              	 
 2588              	 
 2589 0000 80B4     	 push {r7}
 2590              	.LCFI146:
 2591              	 .cfi_def_cfa_offset 4
 2592              	 .cfi_offset 7,-4
 2593 0002 83B0     	 sub sp,sp,#12
 2594              	.LCFI147:
 2595              	 .cfi_def_cfa_offset 16
 2596 0004 00AF     	 add r7,sp,#0
 2597              	.LCFI148:
 2598              	 .cfi_def_cfa_register 7
 2599 0006 7860     	 str r0,[r7,#4]
 2600 0008 3960     	 str r1,[r7]
 818:../Libraries/XMCLib/src/xmc_can.c ****   if (event != XMC_CAN_NODE_EVENT_CFCIE)
 2601              	 .loc 2 818 0
 2602 000a 3B68     	 ldr r3,[r7]
 2603 000c B3F5800F 	 cmp r3,#4194304
 2604 0010 06D0     	 beq .L121
 819:../Libraries/XMCLib/src/xmc_can.c ****   {
 820:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR |= (uint32_t)event;
 2605              	 .loc 2 820 0
 2606 0012 7B68     	 ldr r3,[r7,#4]
 2607 0014 1A68     	 ldr r2,[r3]
 2608 0016 3B68     	 ldr r3,[r7]
 2609 0018 1A43     	 orrs r2,r2,r3
 2610 001a 7B68     	 ldr r3,[r7,#4]
 2611 001c 1A60     	 str r2,[r3]
 2612 001e 05E0     	 b .L120
 2613              	.L121:
 821:../Libraries/XMCLib/src/xmc_can.c ****   }
 822:../Libraries/XMCLib/src/xmc_can.c ****   else
 823:../Libraries/XMCLib/src/xmc_can.c ****   {
 824:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR |= (uint32_t)event;
 2614              	 .loc 2 824 0
 2615 0020 7B68     	 ldr r3,[r7,#4]
 2616 0022 9A69     	 ldr r2,[r3,#24]
 2617 0024 3B68     	 ldr r3,[r7]
 2618 0026 1A43     	 orrs r2,r2,r3
 2619 0028 7B68     	 ldr r3,[r7,#4]
 2620 002a 9A61     	 str r2,[r3,#24]
 2621              	.L120:
 825:../Libraries/XMCLib/src/xmc_can.c ****   }
 826:../Libraries/XMCLib/src/xmc_can.c **** }
 2622              	 .loc 2 826 0
 2623 002c 0C37     	 adds r7,r7,#12
 2624              	.LCFI149:
 2625              	 .cfi_def_cfa_offset 4
 2626 002e BD46     	 mov sp,r7
 2627              	.LCFI150:
 2628              	 .cfi_def_cfa_register 13
 2629              	 
 2630 0030 5DF8047B 	 ldr r7,[sp],#4
 2631              	.LCFI151:
 2632              	 .cfi_restore 7
 2633              	 .cfi_def_cfa_offset 0
 2634 0034 7047     	 bx lr
 2635              	 .cfi_endproc
 2636              	.LFE251:
 2638 0036 00BF     	 .section .text.XMC_CAN_NODE_DisableEvent,"ax",%progbits
 2639              	 .align 2
 2640              	 .global XMC_CAN_NODE_DisableEvent
 2641              	 .thumb
 2642              	 .thumb_func
 2644              	XMC_CAN_NODE_DisableEvent:
 2645              	.LFB252:
 827:../Libraries/XMCLib/src/xmc_can.c **** 
 828:../Libraries/XMCLib/src/xmc_can.c **** /* Function to disable node event */
 829:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 830:../Libraries/XMCLib/src/xmc_can.c **** {
 2646              	 .loc 2 830 0
 2647              	 .cfi_startproc
 2648              	 
 2649              	 
 2650              	 
 2651 0000 80B4     	 push {r7}
 2652              	.LCFI152:
 2653              	 .cfi_def_cfa_offset 4
 2654              	 .cfi_offset 7,-4
 2655 0002 83B0     	 sub sp,sp,#12
 2656              	.LCFI153:
 2657              	 .cfi_def_cfa_offset 16
 2658 0004 00AF     	 add r7,sp,#0
 2659              	.LCFI154:
 2660              	 .cfi_def_cfa_register 7
 2661 0006 7860     	 str r0,[r7,#4]
 2662 0008 3960     	 str r1,[r7]
 831:../Libraries/XMCLib/src/xmc_can.c ****   if (event != XMC_CAN_NODE_EVENT_CFCIE)
 2663              	 .loc 2 831 0
 2664 000a 3B68     	 ldr r3,[r7]
 2665 000c B3F5800F 	 cmp r3,#4194304
 2666 0010 07D0     	 beq .L124
 832:../Libraries/XMCLib/src/xmc_can.c ****   {
 833:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR &= ~(uint32_t)event;
 2667              	 .loc 2 833 0
 2668 0012 7B68     	 ldr r3,[r7,#4]
 2669 0014 1A68     	 ldr r2,[r3]
 2670 0016 3B68     	 ldr r3,[r7]
 2671 0018 DB43     	 mvns r3,r3
 2672 001a 1A40     	 ands r2,r2,r3
 2673 001c 7B68     	 ldr r3,[r7,#4]
 2674 001e 1A60     	 str r2,[r3]
 2675 0020 06E0     	 b .L123
 2676              	.L124:
 834:../Libraries/XMCLib/src/xmc_can.c ****   }
 835:../Libraries/XMCLib/src/xmc_can.c ****   else
 836:../Libraries/XMCLib/src/xmc_can.c ****   {
 837:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR &= ~(uint32_t)event;
 2677              	 .loc 2 837 0
 2678 0022 7B68     	 ldr r3,[r7,#4]
 2679 0024 9A69     	 ldr r2,[r3,#24]
 2680 0026 3B68     	 ldr r3,[r7]
 2681 0028 DB43     	 mvns r3,r3
 2682 002a 1A40     	 ands r2,r2,r3
 2683 002c 7B68     	 ldr r3,[r7,#4]
 2684 002e 9A61     	 str r2,[r3,#24]
 2685              	.L123:
 838:../Libraries/XMCLib/src/xmc_can.c ****   }
 839:../Libraries/XMCLib/src/xmc_can.c **** }
 2686              	 .loc 2 839 0
 2687 0030 0C37     	 adds r7,r7,#12
 2688              	.LCFI155:
 2689              	 .cfi_def_cfa_offset 4
 2690 0032 BD46     	 mov sp,r7
 2691              	.LCFI156:
 2692              	 .cfi_def_cfa_register 13
 2693              	 
 2694 0034 5DF8047B 	 ldr r7,[sp],#4
 2695              	.LCFI157:
 2696              	 .cfi_restore 7
 2697              	 .cfi_def_cfa_offset 0
 2698 0038 7047     	 bx lr
 2699              	 .cfi_endproc
 2700              	.LFE252:
 2702 003a 00BF     	 .section .text.XMC_CAN_TXFIFO_Transmit,"ax",%progbits
 2703              	 .align 2
 2704              	 .global XMC_CAN_TXFIFO_Transmit
 2705              	 .thumb
 2706              	 .thumb_func
 2708              	XMC_CAN_TXFIFO_Transmit:
 2709              	.LFB253:
 840:../Libraries/XMCLib/src/xmc_can.c **** /* Function to transmit MO from the FIFO */
 841:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_TXFIFO_Transmit(const XMC_CAN_MO_t *const can_mo)
 842:../Libraries/XMCLib/src/xmc_can.c **** {
 2710              	 .loc 2 842 0
 2711              	 .cfi_startproc
 2712              	 
 2713              	 
 2714              	 
 2715 0000 80B4     	 push {r7}
 2716              	.LCFI158:
 2717              	 .cfi_def_cfa_offset 4
 2718              	 .cfi_offset 7,-4
 2719 0002 89B0     	 sub sp,sp,#36
 2720              	.LCFI159:
 2721              	 .cfi_def_cfa_offset 40
 2722 0004 00AF     	 add r7,sp,#0
 2723              	.LCFI160:
 2724              	 .cfi_def_cfa_register 7
 2725 0006 7860     	 str r0,[r7,#4]
 843:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2726              	 .loc 2 843 0
 2727 0008 0123     	 movs r3,#1
 2728 000a FB77     	 strb r3,[r7,#31]
 844:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = ((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 2729              	 .loc 2 844 0
 2730 000c 7B68     	 ldr r3,[r7,#4]
 2731 000e 1B68     	 ldr r3,[r3]
 2732 0010 DB69     	 ldr r3,[r3,#28]
 2733 0012 03F02003 	 and r3,r3,#32
 2734 0016 5B09     	 lsrs r3,r3,#5
 2735 0018 BB61     	 str r3,[r7,#24]
 845:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_M
 2736              	 .loc 2 845 0
 2737 001a 7B68     	 ldr r3,[r7,#4]
 2738 001c 1B68     	 ldr r3,[r3]
 2739 001e DB69     	 ldr r3,[r3,#28]
 2740 0020 03F48073 	 and r3,r3,#256
 2741 0024 1B0A     	 lsrs r3,r3,#8
 2742 0026 7B61     	 str r3,[r7,#20]
 846:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_cur =  (uint32_t)(can_mo->can_mo_ptr-> MOFGPR & CAN_MO_MOFGPR_CUR_Msk) >> CAN_MO_MOFG
 2743              	 .loc 2 846 0
 2744 0028 7B68     	 ldr r3,[r7,#4]
 2745 002a 1B68     	 ldr r3,[r3]
 2746 002c 5B68     	 ldr r3,[r3,#4]
 2747 002e 03F47F03 	 and r3,r3,#16711680
 2748 0032 1B0C     	 lsrs r3,r3,#16
 2749 0034 3B61     	 str r3,[r7,#16]
 847:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef  *mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 2750              	 .loc 2 847 0
 2751 0036 3B69     	 ldr r3,[r7,#16]
 2752 0038 03F11073 	 add r3,r3,#37748736
 2753 003c 03F52863 	 add r3,r3,#2688
 2754 0040 5B01     	 lsls r3,r3,#5
 2755 0042 FB60     	 str r3,[r7,#12]
 848:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 849:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 2756              	 .loc 2 849 0
 2757 0044 BB69     	 ldr r3,[r7,#24]
 2758 0046 002B     	 cmp r3,#0
 2759 0048 02D1     	 bne .L127
 850:../Libraries/XMCLib/src/xmc_can.c ****   {
 851:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 2760              	 .loc 2 851 0
 2761 004a 0423     	 movs r3,#4
 2762 004c FB77     	 strb r3,[r7,#31]
 2763 004e 0BE0     	 b .L128
 2764              	.L127:
 852:../Libraries/XMCLib/src/xmc_can.c ****   }
 853:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 854:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 2765              	 .loc 2 854 0
 2766 0050 7B69     	 ldr r3,[r7,#20]
 2767 0052 012B     	 cmp r3,#1
 2768 0054 02D1     	 bne .L129
 855:../Libraries/XMCLib/src/xmc_can.c ****   {
 856:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2769              	 .loc 2 856 0
 2770 0056 0223     	 movs r3,#2
 2771 0058 FB77     	 strb r3,[r7,#31]
 2772 005a 05E0     	 b .L128
 2773              	.L129:
 857:../Libraries/XMCLib/src/xmc_can.c ****   }
 858:../Libraries/XMCLib/src/xmc_can.c ****   else
 859:../Libraries/XMCLib/src/xmc_can.c ****   {
 860:../Libraries/XMCLib/src/xmc_can.c ****     mo->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk;
 2774              	 .loc 2 860 0
 2775 005c FB68     	 ldr r3,[r7,#12]
 2776 005e 4FF0E062 	 mov r2,#117440512
 2777 0062 DA61     	 str r2,[r3,#28]
 861:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2778              	 .loc 2 861 0
 2779 0064 0023     	 movs r3,#0
 2780 0066 FB77     	 strb r3,[r7,#31]
 2781              	.L128:
 862:../Libraries/XMCLib/src/xmc_can.c ****   }
 863:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2782              	 .loc 2 863 0
 2783 0068 FB7F     	 ldrb r3,[r7,#31]
 864:../Libraries/XMCLib/src/xmc_can.c **** }
 2784              	 .loc 2 864 0
 2785 006a 1846     	 mov r0,r3
 2786 006c 2437     	 adds r7,r7,#36
 2787              	.LCFI161:
 2788              	 .cfi_def_cfa_offset 4
 2789 006e BD46     	 mov sp,r7
 2790              	.LCFI162:
 2791              	 .cfi_def_cfa_register 13
 2792              	 
 2793 0070 5DF8047B 	 ldr r7,[sp],#4
 2794              	.LCFI163:
 2795              	 .cfi_restore 7
 2796              	 .cfi_def_cfa_offset 0
 2797 0074 7047     	 bx lr
 2798              	 .cfi_endproc
 2799              	.LFE253:
 2801 0076 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOBaseObject,"ax",%progbits
 2802              	 .align 2
 2803              	 .global XMC_CAN_TXFIFO_ConfigMOBaseObject
 2804              	 .thumb
 2805              	 .thumb_func
 2807              	XMC_CAN_TXFIFO_ConfigMOBaseObject:
 2808              	.LFB254:
 865:../Libraries/XMCLib/src/xmc_can.c **** 
 866:../Libraries/XMCLib/src/xmc_can.c **** /* Function to initialize the transmit FIFO MO base object */
 867:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG_
 868:../Libraries/XMCLib/src/xmc_can.c **** {
 2809              	 .loc 2 868 0
 2810              	 .cfi_startproc
 2811              	 
 2812              	 
 2813              	 
 2814 0000 80B4     	 push {r7}
 2815              	.LCFI164:
 2816              	 .cfi_def_cfa_offset 4
 2817              	 .cfi_offset 7,-4
 2818 0002 83B0     	 sub sp,sp,#12
 2819              	.LCFI165:
 2820              	 .cfi_def_cfa_offset 16
 2821 0004 00AF     	 add r7,sp,#0
 2822              	.LCFI166:
 2823              	 .cfi_def_cfa_register 7
 2824 0006 7860     	 str r0,[r7,#4]
 2825 0008 3960     	 str r1,[r7]
 869:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2826              	 .loc 2 869 0
 2827 000a 7B68     	 ldr r3,[r7,#4]
 2828 000c 1B68     	 ldr r3,[r3]
 2829 000e 7A68     	 ldr r2,[r7,#4]
 2830 0010 1268     	 ldr r2,[r2]
 2831 0012 1268     	 ldr r2,[r2]
 2832 0014 22F00F02 	 bic r2,r2,#15
 2833 0018 42F00202 	 orr r2,r2,#2
 2834 001c 1A60     	 str r2,[r3]
 870:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x2U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 871:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_BOT_Msk |
 2835              	 .loc 2 871 0
 2836 001e 7B68     	 ldr r3,[r7,#4]
 2837 0020 1B68     	 ldr r3,[r3]
 2838 0022 7A68     	 ldr r2,[r7,#4]
 2839 0024 1268     	 ldr r2,[r2]
 2840 0026 5268     	 ldr r2,[r2,#4]
 2841 0028 02F07F42 	 and r2,r2,#-16777216
 872:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 873:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_CUR_Msk)) |
 874:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2842              	 .loc 2 874 0
 2843 002c 3978     	 ldrb r1,[r7]
 873:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2844              	 .loc 2 873 0
 2845 002e 1143     	 orrs r1,r1,r2
 875:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2846              	 .loc 2 875 0
 2847 0030 BA78     	 ldrb r2,[r7,#2]
 2848 0032 1204     	 lsls r2,r2,#16
 2849 0034 02F47F02 	 and r2,r2,#16711680
 874:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2850              	 .loc 2 874 0
 2851 0038 1143     	 orrs r1,r1,r2
 876:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2852              	 .loc 2 876 0
 2853 003a 7A78     	 ldrb r2,[r7,#1]
 2854 003c 1202     	 lsls r2,r2,#8
 2855 003e 92B2     	 uxth r2,r2
 875:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2856              	 .loc 2 875 0
 2857 0040 0A43     	 orrs r2,r2,r1
 871:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 2858              	 .loc 2 871 0
 2859 0042 5A60     	 str r2,[r3,#4]
 877:../Libraries/XMCLib/src/xmc_can.c **** }
 2860              	 .loc 2 877 0
 2861 0044 0C37     	 adds r7,r7,#12
 2862              	.LCFI167:
 2863              	 .cfi_def_cfa_offset 4
 2864 0046 BD46     	 mov sp,r7
 2865              	.LCFI168:
 2866              	 .cfi_def_cfa_register 13
 2867              	 
 2868 0048 5DF8047B 	 ldr r7,[sp],#4
 2869              	.LCFI169:
 2870              	 .cfi_restore 7
 2871              	 .cfi_def_cfa_offset 0
 2872 004c 7047     	 bx lr
 2873              	 .cfi_endproc
 2874              	.LFE254:
 2876 004e 00BF     	 .section .text.XMC_CAN_RXFIFO_ConfigMOBaseObject,"ax",%progbits
 2877              	 .align 2
 2878              	 .global XMC_CAN_RXFIFO_ConfigMOBaseObject
 2879              	 .thumb
 2880              	 .thumb_func
 2882              	XMC_CAN_RXFIFO_ConfigMOBaseObject:
 2883              	.LFB255:
 878:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the receive FIFO MO base object */
 879:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_RXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG_
 880:../Libraries/XMCLib/src/xmc_can.c **** {
 2884              	 .loc 2 880 0
 2885              	 .cfi_startproc
 2886              	 
 2887              	 
 2888              	 
 2889 0000 80B4     	 push {r7}
 2890              	.LCFI170:
 2891              	 .cfi_def_cfa_offset 4
 2892              	 .cfi_offset 7,-4
 2893 0002 83B0     	 sub sp,sp,#12
 2894              	.LCFI171:
 2895              	 .cfi_def_cfa_offset 16
 2896 0004 00AF     	 add r7,sp,#0
 2897              	.LCFI172:
 2898              	 .cfi_def_cfa_register 7
 2899 0006 7860     	 str r0,[r7,#4]
 2900 0008 3960     	 str r1,[r7]
 881:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2901              	 .loc 2 881 0
 2902 000a 7B68     	 ldr r3,[r7,#4]
 2903 000c 1B68     	 ldr r3,[r3]
 2904 000e 7A68     	 ldr r2,[r7,#4]
 2905 0010 1268     	 ldr r2,[r2]
 2906 0012 1268     	 ldr r2,[r2]
 2907 0014 22F00F02 	 bic r2,r2,#15
 2908 0018 42F00102 	 orr r2,r2,#1
 2909 001c 1A60     	 str r2,[r3]
 882:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x1U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 883:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~( uint32_t)(CAN_MO_MOFGPR_BOT_Msk 
 2910              	 .loc 2 883 0
 2911 001e 7B68     	 ldr r3,[r7,#4]
 2912 0020 1B68     	 ldr r3,[r3]
 2913 0022 7A68     	 ldr r2,[r7,#4]
 2914 0024 1268     	 ldr r2,[r2]
 2915 0026 5268     	 ldr r2,[r2,#4]
 2916 0028 02F07F42 	 and r2,r2,#-16777216
 884:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 885:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_CUR_Msk)) |
 886:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2917              	 .loc 2 886 0
 2918 002c 3978     	 ldrb r1,[r7]
 885:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2919              	 .loc 2 885 0
 2920 002e 1143     	 orrs r1,r1,r2
 887:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2921              	 .loc 2 887 0
 2922 0030 BA78     	 ldrb r2,[r7,#2]
 2923 0032 1204     	 lsls r2,r2,#16
 2924 0034 02F47F02 	 and r2,r2,#16711680
 886:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2925              	 .loc 2 886 0
 2926 0038 1143     	 orrs r1,r1,r2
 888:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2927              	 .loc 2 888 0
 2928 003a 7A78     	 ldrb r2,[r7,#1]
 2929 003c 1202     	 lsls r2,r2,#8
 2930 003e 92B2     	 uxth r2,r2
 887:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2931              	 .loc 2 887 0
 2932 0040 0A43     	 orrs r2,r2,r1
 883:../Libraries/XMCLib/src/xmc_can.c ****                                 CAN_MO_MOFGPR_TOP_Msk |
 2933              	 .loc 2 883 0
 2934 0042 5A60     	 str r2,[r3,#4]
 889:../Libraries/XMCLib/src/xmc_can.c **** }
 2935              	 .loc 2 889 0
 2936 0044 0C37     	 adds r7,r7,#12
 2937              	.LCFI173:
 2938              	 .cfi_def_cfa_offset 4
 2939 0046 BD46     	 mov sp,r7
 2940              	.LCFI174:
 2941              	 .cfi_def_cfa_register 13
 2942              	 
 2943 0048 5DF8047B 	 ldr r7,[sp],#4
 2944              	.LCFI175:
 2945              	 .cfi_restore 7
 2946              	 .cfi_def_cfa_offset 0
 2947 004c 7047     	 bx lr
 2948              	 .cfi_endproc
 2949              	.LFE255:
 2951 004e 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject,"ax",%progbits
 2952              	 .align 2
 2953              	 .global XMC_CAN_TXFIFO_ConfigMOSlaveObject
 2954              	 .thumb
 2955              	 .thumb_func
 2957              	XMC_CAN_TXFIFO_ConfigMOSlaveObject:
 2958              	.LFB256:
 890:../Libraries/XMCLib/src/xmc_can.c **** 
 891:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the FIFO MO slave object */
 892:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOSlaveObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG
 893:../Libraries/XMCLib/src/xmc_can.c **** {
 2959              	 .loc 2 893 0
 2960              	 .cfi_startproc
 2961              	 
 2962              	 
 2963              	 
 2964 0000 80B4     	 push {r7}
 2965              	.LCFI176:
 2966              	 .cfi_def_cfa_offset 4
 2967              	 .cfi_offset 7,-4
 2968 0002 83B0     	 sub sp,sp,#12
 2969              	.LCFI177:
 2970              	 .cfi_def_cfa_offset 16
 2971 0004 00AF     	 add r7,sp,#0
 2972              	.LCFI178:
 2973              	 .cfi_def_cfa_register 7
 2974 0006 7860     	 str r0,[r7,#4]
 2975 0008 3960     	 str r1,[r7]
 894:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2976              	 .loc 2 894 0
 2977 000a 7B68     	 ldr r3,[r7,#4]
 2978 000c 1B68     	 ldr r3,[r3]
 2979 000e 7A68     	 ldr r2,[r7,#4]
 2980 0010 1268     	 ldr r2,[r2]
 2981 0012 1268     	 ldr r2,[r2]
 2982 0014 22F00F02 	 bic r2,r2,#15
 2983 0018 42F00302 	 orr r2,r2,#3
 2984 001c 1A60     	 str r2,[r3]
 895:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x3U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 896:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_CUR_Msk))
 2985              	 .loc 2 896 0
 2986 001e 7B68     	 ldr r3,[r7,#4]
 2987 0020 1B68     	 ldr r3,[r3]
 2988 0022 7A68     	 ldr r2,[r7,#4]
 2989 0024 1268     	 ldr r2,[r2]
 2990 0026 5268     	 ldr r2,[r2,#4]
 2991 0028 22F47F01 	 bic r1,r2,#16711680
 897:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2992              	 .loc 2 897 0
 2993 002c BA78     	 ldrb r2,[r7,#2]
 2994 002e 1204     	 lsls r2,r2,#16
 2995 0030 02F47F02 	 and r2,r2,#16711680
 896:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2996              	 .loc 2 896 0
 2997 0034 0A43     	 orrs r2,r2,r1
 2998 0036 5A60     	 str r2,[r3,#4]
 898:../Libraries/XMCLib/src/xmc_can.c **** 
 899:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOCTR  = CAN_MO_MOCTR_SETTXEN0_Msk |
 2999              	 .loc 2 899 0
 3000 0038 7B68     	 ldr r3,[r7,#4]
 3001 003a 1B68     	 ldr r3,[r3]
 3002 003c 034A     	 ldr r2,.L134
 3003 003e DA61     	 str r2,[r3,#28]
 900:../Libraries/XMCLib/src/xmc_can.c ****                                CAN_MO_MOCTR_RESTXEN1_Msk;
 901:../Libraries/XMCLib/src/xmc_can.c **** }
 3004              	 .loc 2 901 0
 3005 0040 0C37     	 adds r7,r7,#12
 3006              	.LCFI179:
 3007              	 .cfi_def_cfa_offset 4
 3008 0042 BD46     	 mov sp,r7
 3009              	.LCFI180:
 3010              	 .cfi_def_cfa_register 13
 3011              	 
 3012 0044 5DF8047B 	 ldr r7,[sp],#4
 3013              	.LCFI181:
 3014              	 .cfi_restore 7
 3015              	 .cfi_def_cfa_offset 0
 3016 0048 7047     	 bx lr
 3017              	.L135:
 3018 004a 00BF     	 .align 2
 3019              	.L134:
 3020 004c 00040002 	 .word 33555456
 3021              	 .cfi_endproc
 3022              	.LFE256:
 3024              	 .section .text.XMC_CAN_GATEWAY_InitSourceObject,"ax",%progbits
 3025              	 .align 2
 3026              	 .global XMC_CAN_GATEWAY_InitSourceObject
 3027              	 .thumb
 3028              	 .thumb_func
 3030              	XMC_CAN_GATEWAY_InitSourceObject:
 3031              	.LFB257:
 902:../Libraries/XMCLib/src/xmc_can.c **** 
 903:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the Gateway Source Object */
 904:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_GATEWAY_InitSourceObject(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_GATEWAY_CONFI
 905:../Libraries/XMCLib/src/xmc_can.c **** {
 3032              	 .loc 2 905 0
 3033              	 .cfi_startproc
 3034              	 
 3035              	 
 3036              	 
 3037 0000 80B4     	 push {r7}
 3038              	.LCFI182:
 3039              	 .cfi_def_cfa_offset 4
 3040              	 .cfi_offset 7,-4
 3041 0002 85B0     	 sub sp,sp,#20
 3042              	.LCFI183:
 3043              	 .cfi_def_cfa_offset 24
 3044 0004 00AF     	 add r7,sp,#0
 3045              	.LCFI184:
 3046              	 .cfi_def_cfa_register 7
 3047 0006 F860     	 str r0,[r7,#12]
 3048 0008 3B1D     	 adds r3,r7,#4
 3049 000a 83E80600 	 stmia r3,{r1,r2}
 906:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = (((uint32_t)0x4U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 3050              	 .loc 2 906 0
 3051 000e FB68     	 ldr r3,[r7,#12]
 3052 0010 1B68     	 ldr r3,[r3]
 907:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 3053              	 .loc 2 907 0
 3054 0012 FA79     	 ldrb r2,[r7,#7]
 3055 0014 1202     	 lsls r2,r2,#8
 3056 0016 02F48071 	 and r1,r2,#256
 908:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 3057              	 .loc 2 908 0
 3058 001a 7A7A     	 ldrb r2,[r7,#9]
 3059 001c 9202     	 lsls r2,r2,#10
 3060 001e 02F48062 	 and r2,r2,#1024
 907:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 3061              	 .loc 2 907 0
 3062 0022 1143     	 orrs r1,r1,r2
 909:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 3063              	 .loc 2 909 0
 3064 0024 3A7A     	 ldrb r2,[r7,#8]
 3065 0026 5202     	 lsls r2,r2,#9
 3066 0028 02F40072 	 and r2,r2,#512
 908:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 3067              	 .loc 2 908 0
 3068 002c 1143     	 orrs r1,r1,r2
 910:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 3069              	 .loc 2 910 0
 3070 002e BA7A     	 ldrb r2,[r7,#10]
 3071 0030 D202     	 lsls r2,r2,#11
 3072 0032 02F40062 	 and r2,r2,#2048
 909:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 3073              	 .loc 2 909 0
 3074 0036 0A43     	 orrs r2,r2,r1
 3075 0038 42F00402 	 orr r2,r2,#4
 906:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 3076              	 .loc 2 906 0
 3077 003c 1A60     	 str r2,[r3]
 911:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 3078              	 .loc 2 911 0
 3079 003e FB68     	 ldr r3,[r7,#12]
 3080 0040 1B68     	 ldr r3,[r3]
 3081 0042 3A79     	 ldrb r2,[r7,#4]
 3082 0044 1146     	 mov r1,r2
 912:../Libraries/XMCLib/src/xmc_can.c ****                                           (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR
 3083              	 .loc 2 912 0
 3084 0046 BA79     	 ldrb r2,[r7,#6]
 3085 0048 1204     	 lsls r2,r2,#16
 3086 004a 02F47F02 	 and r2,r2,#16711680
 911:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 3087              	 .loc 2 911 0
 3088 004e 1143     	 orrs r1,r1,r2
 913:../Libraries/XMCLib/src/xmc_can.c ****                                           (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_
 3089              	 .loc 2 913 0
 3090 0050 7A79     	 ldrb r2,[r7,#5]
 3091 0052 1202     	 lsls r2,r2,#8
 3092 0054 92B2     	 uxth r2,r2
 911:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 3093              	 .loc 2 911 0
 3094 0056 0A43     	 orrs r2,r2,r1
 3095 0058 5A60     	 str r2,[r3,#4]
 914:../Libraries/XMCLib/src/xmc_can.c **** }
 3096              	 .loc 2 914 0
 3097 005a 1437     	 adds r7,r7,#20
 3098              	.LCFI185:
 3099              	 .cfi_def_cfa_offset 4
 3100 005c BD46     	 mov sp,r7
 3101              	.LCFI186:
 3102              	 .cfi_def_cfa_register 13
 3103              	 
 3104 005e 5DF8047B 	 ldr r7,[sp],#4
 3105              	.LCFI187:
 3106              	 .cfi_restore 7
 3107              	 .cfi_def_cfa_offset 0
 3108 0062 7047     	 bx lr
 3109              	 .cfi_endproc
 3110              	.LFE257:
 3112              	 .text
 3113              	.Letext0:
 3114              	 .file 3 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3115              	 .file 4 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3116              	 .file 5 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 3117              	 .file 6 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc4_scu.h"
 3118              	 .file 7 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/cmsis_gcc.h"
 3119              	 .file 8 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/core_cm4.h"
 3120              	 .file 9 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_can.c
    {standard input}:20     .text.XMC_CAN_IsPanelControlReady:00000000 $t
    {standard input}:24     .text.XMC_CAN_IsPanelControlReady:00000000 XMC_CAN_IsPanelControlReady
    {standard input}:70     .text.XMC_CAN_PanelControl:00000000 $t
    {standard input}:74     .text.XMC_CAN_PanelControl:00000000 XMC_CAN_PanelControl
    {standard input}:134    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 $t
    {standard input}:138    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 XMC_CAN_NODE_EnableConfigurationChange
    {standard input}:179    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 $t
    {standard input}:183    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 XMC_CAN_NODE_DisableConfigurationChange
    {standard input}:224    .text.max:00000000 $t
    {standard input}:228    .text.max:00000000 max
    {standard input}:272    .text.min:00000000 $t
    {standard input}:276    .text.min:00000000 min
    {standard input}:319    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 $t
    {standard input}:324    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 XMC_CAN_NODE_NominalBitTimeConfigureEx
    {standard input}:548    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:0000014c $d
    {standard input}:553    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 $t
    {standard input}:558    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 XMC_CAN_NODE_NominalBitTimeConfigure
    {standard input}:861    .text.XMC_CAN_NODE_NominalBitTimeConfigure:000001c0 $d
    {standard input}:866    .text.XMC_CAN_AllocateMOtoNodeList:00000000 $t
    {standard input}:871    .text.XMC_CAN_AllocateMOtoNodeList:00000000 XMC_CAN_AllocateMOtoNodeList
    {standard input}:925    .text.XMC_CAN_Disable:00000000 $t
    {standard input}:930    .text.XMC_CAN_Disable:00000000 XMC_CAN_Disable
    {standard input}:970    .text.XMC_CAN_Disable:00000020 $d
    {standard input}:975    .text.XMC_CAN_Enable:00000000 $t
    {standard input}:980    .text.XMC_CAN_Enable:00000000 XMC_CAN_Enable
    {standard input}:1031   .text.XMC_CAN_Enable:00000034 $d
    {standard input}:1036   .text.XMC_CAN_Init:00000000 $t
    {standard input}:1041   .text.XMC_CAN_Init:00000000 XMC_CAN_Init
    {standard input}:1193   .text.XMC_CAN_SetBaudrateClockSource:00000000 XMC_CAN_SetBaudrateClockSource
    {standard input}:1290   .text.XMC_CAN_GetBaudrateClockFrequency:00000000 XMC_CAN_GetBaudrateClockFrequency
    {standard input}:1188   .text.XMC_CAN_SetBaudrateClockSource:00000000 $t
    {standard input}:1238   .text.XMC_CAN_GetBaudrateClockSource:00000000 $t
    {standard input}:1243   .text.XMC_CAN_GetBaudrateClockSource:00000000 XMC_CAN_GetBaudrateClockSource
    {standard input}:1285   .text.XMC_CAN_GetBaudrateClockFrequency:00000000 $t
    {standard input}:1349   .text.XMC_CAN_InitEx:00000000 $t
    {standard input}:1354   .text.XMC_CAN_InitEx:00000000 XMC_CAN_InitEx
    {standard input}:1437   .text.XMC_CAN_GetClockFrequency:00000000 $t
    {standard input}:1442   .text.XMC_CAN_GetClockFrequency:00000000 XMC_CAN_GetClockFrequency
    {standard input}:1486   .text.XMC_CAN_MO_SetIdentifier:00000000 $t
    {standard input}:1491   .text.XMC_CAN_MO_SetIdentifier:00000000 XMC_CAN_MO_SetIdentifier
    {standard input}:1571   .text.XMC_CAN_MO_GetIdentifier:00000000 $t
    {standard input}:1576   .text.XMC_CAN_MO_GetIdentifier:00000000 XMC_CAN_MO_GetIdentifier
    {standard input}:1637   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 $t
    {standard input}:1642   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 XMC_CAN_MO_GetAcceptanceMask
    {standard input}:1710   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 $t
    {standard input}:1715   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 XMC_CAN_MO_SetAcceptanceMask
    {standard input}:1802   .text.XMC_CAN_MO_SetAcceptanceMask:00000074 $d
    {standard input}:1807   .text.XMC_CAN_MO_Config:00000000 $t
    {standard input}:1812   .text.XMC_CAN_MO_Config:00000000 XMC_CAN_MO_Config
    {standard input}:2020   .text.XMC_CAN_MO_UpdateData:00000000 XMC_CAN_MO_UpdateData
    {standard input}:2009   .text.XMC_CAN_MO_Config:00000130 $d
    {standard input}:2015   .text.XMC_CAN_MO_UpdateData:00000000 $t
    {standard input}:2111   .text.XMC_CAN_MO_UpdateData:0000006c $d
    {standard input}:2116   .text.XMC_CAN_MO_Transmit:00000000 $t
    {standard input}:2121   .text.XMC_CAN_MO_Transmit:00000000 XMC_CAN_MO_Transmit
    {standard input}:2203   .text.XMC_CAN_MO_ReceiveData:00000000 $t
    {standard input}:2208   .text.XMC_CAN_MO_ReceiveData:00000000 XMC_CAN_MO_ReceiveData
    {standard input}:2325   .text.XMC_CAN_MO_Receive:00000000 $t
    {standard input}:2330   .text.XMC_CAN_MO_Receive:00000000 XMC_CAN_MO_Receive
    {standard input}:2572   .text.XMC_CAN_MO_Receive:0000019c $d
    {standard input}:2577   .text.XMC_CAN_NODE_EnableEvent:00000000 $t
    {standard input}:2582   .text.XMC_CAN_NODE_EnableEvent:00000000 XMC_CAN_NODE_EnableEvent
    {standard input}:2639   .text.XMC_CAN_NODE_DisableEvent:00000000 $t
    {standard input}:2644   .text.XMC_CAN_NODE_DisableEvent:00000000 XMC_CAN_NODE_DisableEvent
    {standard input}:2703   .text.XMC_CAN_TXFIFO_Transmit:00000000 $t
    {standard input}:2708   .text.XMC_CAN_TXFIFO_Transmit:00000000 XMC_CAN_TXFIFO_Transmit
    {standard input}:2802   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2807   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_TXFIFO_ConfigMOBaseObject
    {standard input}:2877   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2882   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_RXFIFO_ConfigMOBaseObject
    {standard input}:2952   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 $t
    {standard input}:2957   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 XMC_CAN_TXFIFO_ConfigMOSlaveObject
    {standard input}:3020   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:0000004c $d
    {standard input}:3025   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 $t
    {standard input}:3030   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 XMC_CAN_GATEWAY_InitSourceObject
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GetPeripheralClockFrequency
OSCHP_GetFrequency
