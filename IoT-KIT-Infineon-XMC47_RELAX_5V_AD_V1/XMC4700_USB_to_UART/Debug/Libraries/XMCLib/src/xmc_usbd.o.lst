   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usbd.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.XMC_USBD_EP_OUT_BUFFERSIZE,"aw",%nobits
  20              	 .align 2
  23              	XMC_USBD_EP_OUT_BUFFERSIZE:
  24 0000 00000000 	 .space 28
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              	 .section .bss.XMC_USBD_EP_IN_BUFFERSIZE,"aw",%nobits
  26              	 .align 2
  29              	XMC_USBD_EP_IN_BUFFERSIZE:
  30 0000 00000000 	 .space 28
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              	 .comm xmc_device,520,4
  32              	 .section USB_RAM,"aw",%progbits
  33              	 .align 2
  36              	XMC_USBD_EP_OUT_BUFFER:
  37 0000 00000000 	 .space 1792
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              	 .align 2
  41              	XMC_USBD_EP_IN_BUFFER:
  42 0700 00000000 	 .space 1792
  42      00000000 
  42      00000000 
  42      00000000 
  42      00000000 
  43              	 .section .bss.usbd_init,"aw",%nobits
  44              	 .align 2
  47              	usbd_init:
  48 0000 00000000 	 .space 4
  49              	 .global Driver_USBD0
  50              	 .section .rodata.Driver_USBD0,"a",%progbits
  51              	 .align 2
  54              	Driver_USBD0:
  55 0000 00000000 	 .word XMC_USBD_GetCapabilities
  56 0004 00000000 	 .word XMC_USBD_Init
  57 0008 00000000 	 .word XMC_USBD_Uninitialize
  58 000c 00000000 	 .word XMC_USBD_DeviceConnect
  59 0010 00000000 	 .word XMC_USBD_DeviceDisconnect
  60 0014 00000000 	 .word XMC_USBD_DeviceGetState
  61 0018 00000000 	 .word XMC_USBD_DeviceSetAddress
  62 001c 00000000 	 .word XMC_USBD_EndpointConfigure
  63 0020 00000000 	 .word XMC_USBD_EndpointUnconfigure
  64 0024 00000000 	 .word XMC_USBD_EndpointStall
  65 0028 00000000 	 .word XMC_USBD_EndpointReadStart
  66 002c 00000000 	 .word XMC_USBD_EndpointRead
  67 0030 00000000 	 .word XMC_USBD_EndpointWrite
  68 0034 00000000 	 .word XMC_USBD_EndpointAbort
  69 0038 00000000 	 .word XMC_USBD_GetFrameNumber
  70 003c 00000000 	 .word XMC_USBD_IsEnumDone
  71              	 .section .text.XMC_USBD_lDeviceActive,"ax",%progbits
  72              	 .align 2
  73              	 .thumb
  74              	 .thumb_func
  76              	XMC_USBD_lDeviceActive:
  77              	.LFB171:
  78              	 .file 1 "../Libraries/XMCLib/src/xmc_usbd.c"
   1:../Libraries/XMCLib/src/xmc_usbd.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbd.c ****  * @file xmc_usbd.c
   3:../Libraries/XMCLib/src/xmc_usbd.c ****  * @date 2019-12-16
   4:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbd.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbd.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbd.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbd.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbd.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  12:../Libraries/XMCLib/src/xmc_usbd.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  14:../Libraries/XMCLib/src/xmc_usbd.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_usbd.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_usbd.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_usbd.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_usbd.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_usbd.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  21:../Libraries/XMCLib/src/xmc_usbd.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_usbd.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_usbd.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_usbd.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_usbd.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_usbd.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  28:../Libraries/XMCLib/src/xmc_usbd.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_usbd.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_usbd.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_usbd.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_usbd.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_usbd.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  36:../Libraries/XMCLib/src/xmc_usbd.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_usbd.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_usbd.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_usbd.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  41:../Libraries/XMCLib/src/xmc_usbd.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_usbd.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  44:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-02-16:
  45:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Initial Version.<br>
  46:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-03-18:
  47:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointStall() to fix issue on USB clear stall. <br>
  48:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointConfigure() to fix issue in EP0 configuration.<br>
  49:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IRQHandler()(Removed the DAVE_CE check on SOF event).<br>
  50:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-06-20:
  51:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Removed GetDriverVersion API.<br>
  52:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IsEnumDone() API.<br>
  53:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the copy right in the file header.<br>
  54:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_Disable() API to gate the clock after programming the SCU registers.<
  55:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2019-12-16:
  56:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  57:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2020-09-03:
  58:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Fix XMC_USBD_EndpointConfigure()
  59:../Libraries/XMCLib/src/xmc_usbd.c ****  * @endcond
  60:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  61:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  62:../Libraries/XMCLib/src/xmc_usbd.c **** 
  63:../Libraries/XMCLib/src/xmc_usbd.c **** 
  64:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  65:../Libraries/XMCLib/src/xmc_usbd.c ****  * HEADER FILES
  66:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  67:../Libraries/XMCLib/src/xmc_usbd.c **** #include "xmc_usbd.h"
  68:../Libraries/XMCLib/src/xmc_usbd.c **** 
  69:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(USB0)
  70:../Libraries/XMCLib/src/xmc_usbd.c **** 
  71:../Libraries/XMCLib/src/xmc_usbd.c **** /**< macro to check the maximum number of endpoints used*/
  72:../Libraries/XMCLib/src/xmc_usbd.c **** #define XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(usbd_max_num_eps) \
  73:../Libraries/XMCLib/src/xmc_usbd.c ****   ((usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_1 ) || \
  74:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_2 ) || \
  75:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_3 ) || \
  76:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_4 ) || \
  77:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_5 ) || \
  78:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_6 ) || \
  79:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps == XMC_USBD_MAX_NUM_EPS_7 ))
  80:../Libraries/XMCLib/src/xmc_usbd.c **** 
  81:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  82:../Libraries/XMCLib/src/xmc_usbd.c ****  *GLOBAL DATA
  83:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  84:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  85:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo Size
  86:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  87:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_EP_OUT_BUFFERSIZE[7] = {0U, 0U, 0U, 0U, 0U, 0U, 0U};
  88:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  89:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo Size
  90:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  91:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_EP_IN_BUFFERSIZE[7] = {0U, 0U, 0U, 0U, 0U, 0U, 0U};
  92:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  93:../Libraries/XMCLib/src/xmc_usbd.c ****  * Device definition
  94:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  95:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_DEVICE_t xmc_device;
  96:../Libraries/XMCLib/src/xmc_usbd.c **** #ifdef __GNUC__															  /*GCC*/
  97:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  98:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
  99:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 100:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section("U
 101:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 102:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 103:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 104:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section("US
 105:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 106:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__ICCARM__)
 107:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 108:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 109:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 110:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 111:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] @ ".dram";
 112:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 113:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 114:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 115:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 116:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_IN_BUFFER[7][256] @ ".dram";
 117:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 118:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__CC_ARM)
 119:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 120:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 121:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 122:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section ("
 123:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 124:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 125:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 126:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section ("R
 127:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 128:../Libraries/XMCLib/src/xmc_usbd.c **** static XMC_USBD_t *usbd_init;
 129:../Libraries/XMCLib/src/xmc_usbd.c **** 
 130:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 131:../Libraries/XMCLib/src/xmc_usbd.c ****  *LOCAL ROUTINES
 132:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 133:../Libraries/XMCLib/src/xmc_usbd.c **** /*Local routines prototypes*/
 134:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj);
 135:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num, const uint32_t byte_count);
 136:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *ep);
 137:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num);
 138:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void);
 139:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void);
 140:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep);
 141:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep);
 142:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void);
 143:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj);
 144:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void);
 145:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj);
 146:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr);
 147:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj);
 148:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void);
 149:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event);
 150:../Libraries/XMCLib/src/xmc_usbd.c **** 
 151:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 152:../Libraries/XMCLib/src/xmc_usbd.c ****  *  The device driver
 153:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 154:../Libraries/XMCLib/src/xmc_usbd.c **** const XMC_USBD_DRIVER_t Driver_USBD0 =
 155:../Libraries/XMCLib/src/xmc_usbd.c **** {
 156:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetCapabilities = XMC_USBD_GetCapabilities,
 157:../Libraries/XMCLib/src/xmc_usbd.c ****   .Initialize = XMC_USBD_Init,
 158:../Libraries/XMCLib/src/xmc_usbd.c ****   .Uninitialize = XMC_USBD_Uninitialize,
 159:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceConnect = XMC_USBD_DeviceConnect,
 160:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceDisconnect = XMC_USBD_DeviceDisconnect,
 161:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceGetState = XMC_USBD_DeviceGetState,
 162:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceSetAddress = XMC_USBD_DeviceSetAddress,
 163:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointConfigure = XMC_USBD_EndpointConfigure,
 164:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointUnconfigure = XMC_USBD_EndpointUnconfigure,
 165:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointStall = XMC_USBD_EndpointStall,
 166:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointReadStart = XMC_USBD_EndpointReadStart,
 167:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointRead = XMC_USBD_EndpointRead,
 168:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointWrite = XMC_USBD_EndpointWrite,
 169:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointAbort = XMC_USBD_EndpointAbort,
 170:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetFrameNumber = XMC_USBD_GetFrameNumber,
 171:../Libraries/XMCLib/src/xmc_usbd.c ****   .IsEnumDone = XMC_USBD_IsEnumDone
 172:../Libraries/XMCLib/src/xmc_usbd.c **** };
 173:../Libraries/XMCLib/src/xmc_usbd.c **** 
 174:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 175:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Checks if device is active
 176:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 177:../Libraries/XMCLib/src/xmc_usbd.c ****  * Therefore the endpoint inInUse flag are checked and if one endpoint is in use, 1 is returned,
 178:../Libraries/XMCLib/src/xmc_usbd.c ****  * else 0 is returned.
 179:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return 1 if an endpoint is active else 0
 180:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 181:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj)
 182:../Libraries/XMCLib/src/xmc_usbd.c **** {
  79              	 .loc 1 182 0
  80              	 .cfi_startproc
  81              	 
  82              	 
  83              	 
  84 0000 80B4     	 push {r7}
  85              	.LCFI0:
  86              	 .cfi_def_cfa_offset 4
  87              	 .cfi_offset 7,-4
  88 0002 85B0     	 sub sp,sp,#20
  89              	.LCFI1:
  90              	 .cfi_def_cfa_offset 24
  91 0004 00AF     	 add r7,sp,#0
  92              	.LCFI2:
  93              	 .cfi_def_cfa_register 7
  94 0006 7860     	 str r0,[r7,#4]
 183:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
  95              	 .loc 1 184 0
  96 0008 0023     	 movs r3,#0
  97 000a BB73     	 strb r3,[r7,#14]
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
  98              	 .loc 1 185 0
  99 000c 0023     	 movs r3,#0
 100 000e FB73     	 strb r3,[r7,#15]
 101 0010 1EE0     	 b .L2
 102              	.L5:
 186:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 187:../Libraries/XMCLib/src/xmc_usbd.c ****     if (xmc_device.ep[i].inInUse || xmc_device.ep[i].outInUse)
 103              	 .loc 1 187 0
 104 0012 FB7B     	 ldrb r3,[r7,#15]
 105 0014 144A     	 ldr r2,.L7
 106 0016 3421     	 movs r1,#52
 107 0018 01FB03F3 	 mul r3,r1,r3
 108 001c 1344     	 add r3,r3,r2
 109 001e 5B68     	 ldr r3,[r3,#4]
 110 0020 DB08     	 lsrs r3,r3,#3
 111 0022 03F00103 	 and r3,r3,#1
 112 0026 DBB2     	 uxtb r3,r3
 113 0028 002B     	 cmp r3,#0
 114 002a 0CD1     	 bne .L3
 115              	 .loc 1 187 0 is_stmt 0 discriminator 1
 116 002c FB7B     	 ldrb r3,[r7,#15]
 117 002e 0E4A     	 ldr r2,.L7
 118 0030 3421     	 movs r1,#52
 119 0032 01FB03F3 	 mul r3,r1,r3
 120 0036 1344     	 add r3,r3,r2
 121 0038 5B68     	 ldr r3,[r3,#4]
 122 003a 1B09     	 lsrs r3,r3,#4
 123 003c 03F00103 	 and r3,r3,#1
 124 0040 DBB2     	 uxtb r3,r3
 125 0042 002B     	 cmp r3,#0
 126 0044 01D0     	 beq .L4
 127              	.L3:
 188:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 189:../Libraries/XMCLib/src/xmc_usbd.c ****       result = 1U;
 128              	 .loc 1 189 0 is_stmt 1
 129 0046 0123     	 movs r3,#1
 130 0048 BB73     	 strb r3,[r7,#14]
 131              	.L4:
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 132              	 .loc 1 185 0 discriminator 2
 133 004a FB7B     	 ldrb r3,[r7,#15]
 134 004c 0133     	 adds r3,r3,#1
 135 004e FB73     	 strb r3,[r7,#15]
 136              	.L2:
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 137              	 .loc 1 185 0 is_stmt 0 discriminator 1
 138 0050 7B68     	 ldr r3,[r7,#4]
 139 0052 1B7B     	 ldrb r3,[r3,#12]
 140 0054 FA7B     	 ldrb r2,[r7,#15]
 141 0056 9A42     	 cmp r2,r3
 142 0058 DBD3     	 bcc .L5
 190:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 191:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 192:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 143              	 .loc 1 192 0 is_stmt 1
 144 005a BB7B     	 ldrb r3,[r7,#14]
 193:../Libraries/XMCLib/src/xmc_usbd.c **** }
 145              	 .loc 1 193 0
 146 005c 1846     	 mov r0,r3
 147 005e 1437     	 adds r7,r7,#20
 148              	.LCFI3:
 149              	 .cfi_def_cfa_offset 4
 150 0060 BD46     	 mov sp,r7
 151              	.LCFI4:
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 0062 5DF8047B 	 ldr r7,[sp],#4
 155              	.LCFI5:
 156              	 .cfi_restore 7
 157              	 .cfi_def_cfa_offset 0
 158 0066 7047     	 bx lr
 159              	.L8:
 160              	 .align 2
 161              	.L7:
 162 0068 00000000 	 .word xmc_device
 163              	 .cfi_endproc
 164              	.LFE171:
 166              	 .section .text.XMC_USBD_lReadFifo,"ax",%progbits
 167              	 .align 2
 168              	 .thumb
 169              	 .thumb_func
 171              	XMC_USBD_lReadFifo:
 172              	.LFB172:
 194:../Libraries/XMCLib/src/xmc_usbd.c **** 
 195:../Libraries/XMCLib/src/xmc_usbd.c **** 
 196:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 197:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Read data from the rx fifo
 198:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 199:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the fifo is copied in to the buffer specified by @ref xfer_buffer and
 200:../Libraries/XMCLib/src/xmc_usbd.c ****  * the transfer values get updated. If the endpoint is disabled or the buffer not existent
 201:../Libraries/XMCLib/src/xmc_usbd.c ****  * the function exits.
 202:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 203:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg ep_num the endpoint to read for
 204:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg byte_count the byte count to read
 205:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 206:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num, const uint32_t byte_count)
 207:../Libraries/XMCLib/src/xmc_usbd.c **** {
 173              	 .loc 1 207 0
 174              	 .cfi_startproc
 175              	 
 176              	 
 177              	 
 178 0000 80B4     	 push {r7}
 179              	.LCFI6:
 180              	 .cfi_def_cfa_offset 4
 181              	 .cfi_offset 7,-4
 182 0002 8BB0     	 sub sp,sp,#44
 183              	.LCFI7:
 184              	 .cfi_def_cfa_offset 48
 185 0004 00AF     	 add r7,sp,#0
 186              	.LCFI8:
 187              	 .cfi_def_cfa_register 7
 188 0006 7860     	 str r0,[r7,#4]
 189 0008 3960     	 str r1,[r7]
 208:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 190              	 .loc 1 208 0
 191 000a 7B68     	 ldr r3,[r7,#4]
 192 000c 3422     	 movs r2,#52
 193 000e 02FB03F3 	 mul r3,r2,r3
 194 0012 344A     	 ldr r2,.L16
 195 0014 1344     	 add r3,r3,r2
 196 0016 3B62     	 str r3,[r7,#32]
 209:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 210:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_data;
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_word_count;
 212:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo = xmc_device.fifo[0U];
 197              	 .loc 1 212 0
 198 0018 324B     	 ldr r3,.L16
 199 001a D3F8E031 	 ldr r3,[r3,#480]
 200 001e FB61     	 str r3,[r7,#28]
 213:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
 215:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.endpoint_out_register[ep_num]->doepctl;
 201              	 .loc 1 215 0
 202 0020 304A     	 ldr r2,.L16
 203 0022 7B68     	 ldr r3,[r7,#4]
 204 0024 7033     	 adds r3,r3,#112
 205 0026 9B00     	 lsls r3,r3,#2
 206 0028 1344     	 add r3,r3,r2
 207 002a 5B68     	 ldr r3,[r3,#4]
 208 002c 1B68     	 ldr r3,[r3]
 209 002e FB60     	 str r3,[r7,#12]
 216:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 210              	 .loc 1 216 0
 211 0030 3B68     	 ldr r3,[r7]
 212 0032 9B08     	 lsrs r3,r3,#2
 213 0034 BB61     	 str r3,[r7,#24]
 217:../Libraries/XMCLib/src/xmc_usbd.c ****   temp_word_count = (word_count << 2U);
 214              	 .loc 1 217 0
 215 0036 BB69     	 ldr r3,[r7,#24]
 216 0038 9B00     	 lsls r3,r3,#2
 217 003a 7B61     	 str r3,[r7,#20]
 218:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
 219:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!data.b.usbactep)
 218              	 .loc 1 219 0
 219 003c 7B7B     	 ldrb r3,[r7,#13]
 220 003e 23F07F03 	 bic r3,r3,#127
 221 0042 DBB2     	 uxtb r3,r3
 222 0044 002B     	 cmp r3,#0
 223 0046 48D0     	 beq .L9
 220:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 221:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 222:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 223:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->xferBuffer == NULL)
 224              	 .loc 1 223 0
 225 0048 3B6A     	 ldr r3,[r7,#32]
 226 004a 5B6A     	 ldr r3,[r3,#36]
 227 004c 002B     	 cmp r3,#0
 228 004e 44D0     	 beq .L9
 224:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 225:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 226:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 227:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 228:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     /* store the data */
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count; i++)
 229              	 .loc 1 230 0
 230 0050 0023     	 movs r3,#0
 231 0052 7B62     	 str r3,[r7,#36]
 232 0054 0AE0     	 b .L11
 233              	.L12:
 231:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 232:../Libraries/XMCLib/src/xmc_usbd.c ****       *(((uint32_t *)ep->xferBuffer) + i) = *fifo;
 234              	 .loc 1 232 0 discriminator 3
 235 0056 3B6A     	 ldr r3,[r7,#32]
 236 0058 5A6A     	 ldr r2,[r3,#36]
 237 005a 7B6A     	 ldr r3,[r7,#36]
 238 005c 9B00     	 lsls r3,r3,#2
 239 005e 1344     	 add r3,r3,r2
 240 0060 FA69     	 ldr r2,[r7,#28]
 241 0062 1268     	 ldr r2,[r2]
 242 0064 1A60     	 str r2,[r3]
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 243              	 .loc 1 230 0 discriminator 3
 244 0066 7B6A     	 ldr r3,[r7,#36]
 245 0068 0133     	 adds r3,r3,#1
 246 006a 7B62     	 str r3,[r7,#36]
 247              	.L11:
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 248              	 .loc 1 230 0 is_stmt 0 discriminator 1
 249 006c 7A6A     	 ldr r2,[r7,#36]
 250 006e BB69     	 ldr r3,[r7,#24]
 251 0070 9A42     	 cmp r2,r3
 252 0072 F0D3     	 bcc .L12
 233:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 234:../Libraries/XMCLib/src/xmc_usbd.c ****     /* space is not devidable by 4 */
 235:../Libraries/XMCLib/src/xmc_usbd.c ****     if (byte_count != temp_word_count)
 253              	 .loc 1 235 0 is_stmt 1
 254 0074 3A68     	 ldr r2,[r7]
 255 0076 7B69     	 ldr r3,[r7,#20]
 256 0078 9A42     	 cmp r2,r3
 257 007a 22D0     	 beq .L13
 236:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       temp_data = *fifo;
 258              	 .loc 1 237 0
 259 007c FB69     	 ldr r3,[r7,#28]
 260 007e 1B68     	 ldr r3,[r3]
 261 0080 3B61     	 str r3,[r7,#16]
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U; (temp_word_count + i) < byte_count; i++)
 262              	 .loc 1 238 0
 263 0082 0023     	 movs r3,#0
 264 0084 7B62     	 str r3,[r7,#36]
 265 0086 16E0     	 b .L14
 266              	.L15:
 239:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 240:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->xferBuffer[(word_count << 2) + i] = (uint8_t)((temp_data & ((uint32_t)0xFFU << (i * 8U)
 267              	 .loc 1 240 0 discriminator 3
 268 0088 3B6A     	 ldr r3,[r7,#32]
 269 008a 5A6A     	 ldr r2,[r3,#36]
 270 008c BB69     	 ldr r3,[r7,#24]
 271 008e 9900     	 lsls r1,r3,#2
 272 0090 7B6A     	 ldr r3,[r7,#36]
 273 0092 0B44     	 add r3,r3,r1
 274 0094 1344     	 add r3,r3,r2
 275 0096 7A6A     	 ldr r2,[r7,#36]
 276 0098 D200     	 lsls r2,r2,#3
 277 009a 1146     	 mov r1,r2
 278 009c FF22     	 movs r2,#255
 279 009e 02FA01F1 	 lsl r1,r2,r1
 280 00a2 3A69     	 ldr r2,[r7,#16]
 281 00a4 0A40     	 ands r2,r2,r1
 282 00a6 796A     	 ldr r1,[r7,#36]
 283 00a8 C900     	 lsls r1,r1,#3
 284 00aa CA40     	 lsrs r2,r2,r1
 285 00ac D2B2     	 uxtb r2,r2
 286 00ae 1A70     	 strb r2,[r3]
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U; (temp_word_count + i) < byte_count; i++)
 287              	 .loc 1 238 0 discriminator 3
 288 00b0 7B6A     	 ldr r3,[r7,#36]
 289 00b2 0133     	 adds r3,r3,#1
 290 00b4 7B62     	 str r3,[r7,#36]
 291              	.L14:
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U; (temp_word_count + i) < byte_count; i++)
 292              	 .loc 1 238 0 is_stmt 0 discriminator 1
 293 00b6 7A69     	 ldr r2,[r7,#20]
 294 00b8 7B6A     	 ldr r3,[r7,#36]
 295 00ba 1A44     	 add r2,r2,r3
 296 00bc 3B68     	 ldr r3,[r7]
 297 00be 9A42     	 cmp r2,r3
 298 00c0 E2D3     	 bcc .L15
 299              	.L13:
 241:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 242:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 243:../Libraries/XMCLib/src/xmc_usbd.c **** 
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     /* save the amount of data */
 245:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount += byte_count;
 300              	 .loc 1 245 0 is_stmt 1
 301 00c2 3B6A     	 ldr r3,[r7,#32]
 302 00c4 DA6A     	 ldr r2,[r3,#44]
 303 00c6 3B68     	 ldr r3,[r7]
 304 00c8 1A44     	 add r2,r2,r3
 305 00ca 3B6A     	 ldr r3,[r7,#32]
 306 00cc DA62     	 str r2,[r3,#44]
 246:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 307              	 .loc 1 246 0
 308 00ce 3B6A     	 ldr r3,[r7,#32]
 309 00d0 5A6A     	 ldr r2,[r3,#36]
 310 00d2 3B68     	 ldr r3,[r7]
 311 00d4 1A44     	 add r2,r2,r3
 312 00d6 3B6A     	 ldr r3,[r7,#32]
 313 00d8 5A62     	 str r2,[r3,#36]
 314              	.L9:
 247:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 248:../Libraries/XMCLib/src/xmc_usbd.c **** }
 315              	 .loc 1 248 0
 316 00da 2C37     	 adds r7,r7,#44
 317              	.LCFI9:
 318              	 .cfi_def_cfa_offset 4
 319 00dc BD46     	 mov sp,r7
 320              	.LCFI10:
 321              	 .cfi_def_cfa_register 13
 322              	 
 323 00de 5DF8047B 	 ldr r7,[sp],#4
 324              	.LCFI11:
 325              	 .cfi_restore 7
 326              	 .cfi_def_cfa_offset 0
 327 00e2 7047     	 bx lr
 328              	.L17:
 329              	 .align 2
 330              	.L16:
 331 00e4 00000000 	 .word xmc_device
 332              	 .cfi_endproc
 333              	.LFE172:
 335              	 .section .text.XMC_USBD_lWriteFifo,"ax",%progbits
 336              	 .align 2
 337              	 .thumb
 338              	 .thumb_func
 340              	XMC_USBD_lWriteFifo:
 341              	.LFB173:
 249:../Libraries/XMCLib/src/xmc_usbd.c **** 
 250:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 251:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Write data to an endpoint fifo
 252:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 253:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the @ref xfer_buffer gets copied in to the tx fifo of the endpoint until the buffe
 254:../Libraries/XMCLib/src/xmc_usbd.c ****  *completely or the tx fifo is full. The transfer values are not updated.
 255:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 256:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg[in] ep the endpoint to use
 257:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return the number of bytes written to the fifo
 258:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 259:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *const ep)
 260:../Libraries/XMCLib/src/xmc_usbd.c **** {
 342              	 .loc 1 260 0
 343              	 .cfi_startproc
 344              	 
 345              	 
 346              	 
 347 0000 80B4     	 push {r7}
 348              	.LCFI12:
 349              	 .cfi_def_cfa_offset 4
 350              	 .cfi_offset 7,-4
 351 0002 89B0     	 sub sp,sp,#36
 352              	.LCFI13:
 353              	 .cfi_def_cfa_offset 40
 354 0004 00AF     	 add r7,sp,#0
 355              	.LCFI14:
 356              	 .cfi_def_cfa_register 7
 357 0006 7860     	 str r0,[r7,#4]
 261:../Libraries/XMCLib/src/xmc_usbd.c ****   dtxfsts_data_t freeSpace;
 262:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo;
 263:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t byte_count;
 264:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 265:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t result;
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   fifo = xmc_device.fifo[ep->address_u.address_st.number]; /* fifo */
 358              	 .loc 1 267 0
 359 0008 7B68     	 ldr r3,[r7,#4]
 360 000a 1B78     	 ldrb r3,[r3]
 361 000c C3F30303 	 ubfx r3,r3,#0,#4
 362 0010 DBB2     	 uxtb r3,r3
 363 0012 234A     	 ldr r2,.L25
 364 0014 7833     	 adds r3,r3,#120
 365 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 366 001a FB60     	 str r3,[r7,#12]
 268:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 367              	 .loc 1 268 0
 368 001c 7B68     	 ldr r3,[r7,#4]
 369 001e 1B78     	 ldrb r3,[r3]
 370 0020 C3F30303 	 ubfx r3,r3,#0,#4
 371 0024 DBB2     	 uxtb r3,r3
 372 0026 1E4A     	 ldr r2,.L25
 373 0028 6A33     	 adds r3,r3,#106
 374 002a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 375 002e 9B69     	 ldr r3,[r3,#24]
 376 0030 BB60     	 str r3,[r7,#8]
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   byte_count = ep->xferLength - ep->xferCount;
 377              	 .loc 1 270 0
 378 0032 7B68     	 ldr r3,[r7,#4]
 379 0034 9A6A     	 ldr r2,[r3,#40]
 380 0036 7B68     	 ldr r3,[r7,#4]
 381 0038 DB6A     	 ldr r3,[r3,#44]
 382 003a D31A     	 subs r3,r2,r3
 383 003c FB61     	 str r3,[r7,#28]
 271:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 384              	 .loc 1 271 0
 385 003e FB69     	 ldr r3,[r7,#28]
 386 0040 002B     	 cmp r3,#0
 387 0042 02D1     	 bne .L19
 272:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 273:../Libraries/XMCLib/src/xmc_usbd.c ****     result = 0U;
 388              	 .loc 1 273 0
 389 0044 0023     	 movs r3,#0
 390 0046 7B61     	 str r3,[r7,#20]
 391 0048 23E0     	 b .L20
 392              	.L19:
 274:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 275:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 276:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     /* add the unaligned bytes to the word count to compare with the fifo space */
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     word_count = ((uint32_t)byte_count + 3U) >> 2U;
 393              	 .loc 1 278 0
 394 004a FB69     	 ldr r3,[r7,#28]
 395 004c 0333     	 adds r3,r3,#3
 396 004e 9B08     	 lsrs r3,r3,#2
 397 0050 BB61     	 str r3,[r7,#24]
 279:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 398              	 .loc 1 279 0
 399 0052 3B89     	 ldrh r3,[r7,#8]
 400 0054 1A46     	 mov r2,r3
 401 0056 BB69     	 ldr r3,[r7,#24]
 402 0058 9A42     	 cmp r2,r3
 403 005a 04D2     	 bcs .L21
 280:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 281:../Libraries/XMCLib/src/xmc_usbd.c ****       word_count = (uint32_t)freeSpace.b.txfspcavail;
 404              	 .loc 1 281 0
 405 005c 3B89     	 ldrh r3,[r7,#8]
 406 005e BB61     	 str r3,[r7,#24]
 282:../Libraries/XMCLib/src/xmc_usbd.c ****       byte_count = (uint32_t)word_count << (uint32_t)2U;
 407              	 .loc 1 282 0
 408 0060 BB69     	 ldr r3,[r7,#24]
 409 0062 9B00     	 lsls r3,r3,#2
 410 0064 FB61     	 str r3,[r7,#28]
 411              	.L21:
 283:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 284:../Libraries/XMCLib/src/xmc_usbd.c **** 
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data dword wise */
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count; ep->xferBuffer += 4U)
 412              	 .loc 1 286 0
 413 0066 0023     	 movs r3,#0
 414 0068 3B61     	 str r3,[r7,#16]
 415 006a 0CE0     	 b .L22
 416              	.L23:
 287:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 288:../Libraries/XMCLib/src/xmc_usbd.c ****       *fifo = *(uint32_t *)ep->xferBuffer;
 417              	 .loc 1 288 0 discriminator 3
 418 006c 7B68     	 ldr r3,[r7,#4]
 419 006e 5B6A     	 ldr r3,[r3,#36]
 420 0070 1A68     	 ldr r2,[r3]
 421 0072 FB68     	 ldr r3,[r7,#12]
 422 0074 1A60     	 str r2,[r3]
 289:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 423              	 .loc 1 289 0 discriminator 3
 424 0076 3B69     	 ldr r3,[r7,#16]
 425 0078 0133     	 adds r3,r3,#1
 426 007a 3B61     	 str r3,[r7,#16]
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 427              	 .loc 1 286 0 discriminator 3
 428 007c 7B68     	 ldr r3,[r7,#4]
 429 007e 5B6A     	 ldr r3,[r3,#36]
 430 0080 1A1D     	 adds r2,r3,#4
 431 0082 7B68     	 ldr r3,[r7,#4]
 432 0084 5A62     	 str r2,[r3,#36]
 433              	.L22:
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 434              	 .loc 1 286 0 is_stmt 0 discriminator 1
 435 0086 3A69     	 ldr r2,[r7,#16]
 436 0088 BB69     	 ldr r3,[r7,#24]
 437 008a 9A42     	 cmp r2,r3
 438 008c EED3     	 bcc .L23
 290:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 291:../Libraries/XMCLib/src/xmc_usbd.c ****     result = byte_count;
 439              	 .loc 1 291 0 is_stmt 1
 440 008e FB69     	 ldr r3,[r7,#28]
 441 0090 7B61     	 str r3,[r7,#20]
 442              	.L20:
 292:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 293:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 443              	 .loc 1 293 0
 444 0092 7B69     	 ldr r3,[r7,#20]
 294:../Libraries/XMCLib/src/xmc_usbd.c **** }
 445              	 .loc 1 294 0
 446 0094 1846     	 mov r0,r3
 447 0096 2437     	 adds r7,r7,#36
 448              	.LCFI15:
 449              	 .cfi_def_cfa_offset 4
 450 0098 BD46     	 mov sp,r7
 451              	.LCFI16:
 452              	 .cfi_def_cfa_register 13
 453              	 
 454 009a 5DF8047B 	 ldr r7,[sp],#4
 455              	.LCFI17:
 456              	 .cfi_restore 7
 457              	 .cfi_def_cfa_offset 0
 458 009e 7047     	 bx lr
 459              	.L26:
 460              	 .align 2
 461              	.L25:
 462 00a0 00000000 	 .word xmc_device
 463              	 .cfi_endproc
 464              	.LFE173:
 466              	 .section .text.XMC_USBD_lFlushTXFifo,"ax",%progbits
 467              	 .align 2
 468              	 .thumb
 469              	 .thumb_func
 471              	XMC_USBD_lFlushTXFifo:
 472              	.LFB174:
 295:../Libraries/XMCLib/src/xmc_usbd.c **** 
 296:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 297:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush a tx fifo
 298:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 299:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_num Fifo number to flush
 300:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 301:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note Use 0x10 as parameter to flush all tx fifos.
 302:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 303:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num)
 304:../Libraries/XMCLib/src/xmc_usbd.c **** {
 473              	 .loc 1 304 0
 474              	 .cfi_startproc
 475              	 
 476              	 
 477              	 
 478 0000 80B4     	 push {r7}
 479              	.LCFI18:
 480              	 .cfi_def_cfa_offset 4
 481              	 .cfi_offset 7,-4
 482 0002 85B0     	 sub sp,sp,#20
 483              	.LCFI19:
 484              	 .cfi_def_cfa_offset 24
 485 0004 00AF     	 add r7,sp,#0
 486              	.LCFI20:
 487              	 .cfi_def_cfa_register 7
 488 0006 0346     	 mov r3,r0
 489 0008 FB71     	 strb r3,[r7,#7]
 305:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 307:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 490              	 .loc 1 307 0
 491 000a 0023     	 movs r3,#0
 492 000c BB60     	 str r3,[r7,#8]
 308:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfflsh = 1U;
 493              	 .loc 1 309 0
 494 000e BB68     	 ldr r3,[r7,#8]
 495 0010 43F02003 	 orr r3,r3,#32
 496 0014 BB60     	 str r3,[r7,#8]
 310:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 497              	 .loc 1 310 0
 498 0016 FB79     	 ldrb r3,[r7,#7]
 499 0018 03F01F03 	 and r3,r3,#31
 500 001c DBB2     	 uxtb r3,r3
 501 001e 03F01F03 	 and r3,r3,#31
 502 0022 9B01     	 lsls r3,r3,#6
 503 0024 BA68     	 ldr r2,[r7,#8]
 504 0026 22F4F862 	 bic r2,r2,#1984
 505 002a 1343     	 orrs r3,r3,r2
 506 002c BB60     	 str r3,[r7,#8]
 311:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 507              	 .loc 1 311 0
 508 002e 144B     	 ldr r3,.L32
 509 0030 D3F8A031 	 ldr r3,[r3,#416]
 510 0034 BA68     	 ldr r2,[r7,#8]
 511 0036 1A61     	 str r2,[r3,#16]
 312:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U; count < 1000U; count++) {}
 512              	 .loc 1 312 0
 513 0038 0023     	 movs r3,#0
 514 003a FB60     	 str r3,[r7,#12]
 515 003c 02E0     	 b .L28
 516              	.L29:
 517              	 .loc 1 312 0 is_stmt 0 discriminator 3
 518 003e FB68     	 ldr r3,[r7,#12]
 519 0040 0133     	 adds r3,r3,#1
 520 0042 FB60     	 str r3,[r7,#12]
 521              	.L28:
 522              	 .loc 1 312 0 discriminator 1
 523 0044 FB68     	 ldr r3,[r7,#12]
 524 0046 B3F57A7F 	 cmp r3,#1000
 525 004a F8D3     	 bcc .L29
 526              	.L30:
 313:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 314:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 315:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 527              	 .loc 1 315 0 is_stmt 1 discriminator 1
 528 004c 0C4B     	 ldr r3,.L32
 529 004e D3F8A031 	 ldr r3,[r3,#416]
 530 0052 1B69     	 ldr r3,[r3,#16]
 531 0054 BB60     	 str r3,[r7,#8]
 316:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 317:../Libraries/XMCLib/src/xmc_usbd.c ****   while (data.b.txfflsh);
 532              	 .loc 1 317 0 discriminator 1
 533 0056 BB68     	 ldr r3,[r7,#8]
 534 0058 5B09     	 lsrs r3,r3,#5
 535 005a 03F00103 	 and r3,r3,#1
 536 005e DBB2     	 uxtb r3,r3
 537 0060 002B     	 cmp r3,#0
 538 0062 F3D1     	 bne .L30
 318:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 539              	 .loc 1 318 0
 540 0064 0023     	 movs r3,#0
 541 0066 FB60     	 str r3,[r7,#12]
 319:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 542              	 .loc 1 319 0
 543 0068 00BF     	 nop
 544              	.L31:
 545              	 .loc 1 319 0 is_stmt 0 discriminator 1
 546 006a FB68     	 ldr r3,[r7,#12]
 547 006c 5A1C     	 adds r2,r3,#1
 548 006e FA60     	 str r2,[r7,#12]
 549 0070 B3F57A7F 	 cmp r3,#1000
 550 0074 F9D3     	 bcc .L31
 320:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 321:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 322:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 323:../Libraries/XMCLib/src/xmc_usbd.c **** }
 551              	 .loc 1 323 0 is_stmt 1
 552 0076 1437     	 adds r7,r7,#20
 553              	.LCFI21:
 554              	 .cfi_def_cfa_offset 4
 555 0078 BD46     	 mov sp,r7
 556              	.LCFI22:
 557              	 .cfi_def_cfa_register 13
 558              	 
 559 007a 5DF8047B 	 ldr r7,[sp],#4
 560              	.LCFI23:
 561              	 .cfi_restore 7
 562              	 .cfi_def_cfa_offset 0
 563 007e 7047     	 bx lr
 564              	.L33:
 565              	 .align 2
 566              	.L32:
 567 0080 00000000 	 .word xmc_device
 568              	 .cfi_endproc
 569              	.LFE174:
 571              	 .section .text.XMC_USBD_lFlushRXFifo,"ax",%progbits
 572              	 .align 2
 573              	 .thumb
 574              	 .thumb_func
 576              	XMC_USBD_lFlushRXFifo:
 577              	.LFB175:
 324:../Libraries/XMCLib/src/xmc_usbd.c **** 
 325:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 326:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush the rx fifo
 327:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 328:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void)
 329:../Libraries/XMCLib/src/xmc_usbd.c **** {
 578              	 .loc 1 329 0
 579              	 .cfi_startproc
 580              	 
 581              	 
 582              	 
 583 0000 80B4     	 push {r7}
 584              	.LCFI24:
 585              	 .cfi_def_cfa_offset 4
 586              	 .cfi_offset 7,-4
 587 0002 83B0     	 sub sp,sp,#12
 588              	.LCFI25:
 589              	 .cfi_def_cfa_offset 16
 590 0004 00AF     	 add r7,sp,#0
 591              	.LCFI26:
 592              	 .cfi_def_cfa_register 7
 330:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;
 331:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 332:../Libraries/XMCLib/src/xmc_usbd.c **** 
 333:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 593              	 .loc 1 333 0
 594 0006 0023     	 movs r3,#0
 595 0008 3B60     	 str r3,[r7]
 334:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 596              	 .loc 1 334 0
 597 000a 3B68     	 ldr r3,[r7]
 598 000c 43F01003 	 orr r3,r3,#16
 599 0010 3B60     	 str r3,[r7]
 335:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 336:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 600              	 .loc 1 336 0
 601 0012 144B     	 ldr r3,.L39
 602 0014 D3F8A031 	 ldr r3,[r3,#416]
 603 0018 3A68     	 ldr r2,[r7]
 604 001a 1A61     	 str r2,[r3,#16]
 605              	.L37:
 337:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 338:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 339:../Libraries/XMCLib/src/xmc_usbd.c ****     for (count = 0U; count < 1000U; count++) {}
 606              	 .loc 1 339 0
 607 001c 0023     	 movs r3,#0
 608 001e 7B60     	 str r3,[r7,#4]
 609 0020 02E0     	 b .L35
 610              	.L36:
 611              	 .loc 1 339 0 is_stmt 0 discriminator 3
 612 0022 7B68     	 ldr r3,[r7,#4]
 613 0024 0133     	 adds r3,r3,#1
 614 0026 7B60     	 str r3,[r7,#4]
 615              	.L35:
 616              	 .loc 1 339 0 discriminator 1
 617 0028 7B68     	 ldr r3,[r7,#4]
 618 002a B3F57A7F 	 cmp r3,#1000
 619 002e F8D3     	 bcc .L36
 340:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 620              	 .loc 1 340 0 is_stmt 1
 621 0030 0C4B     	 ldr r3,.L39
 622 0032 D3F8A031 	 ldr r3,[r3,#416]
 623 0036 1B69     	 ldr r3,[r3,#16]
 624 0038 3B60     	 str r3,[r7]
 341:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 342:../Libraries/XMCLib/src/xmc_usbd.c ****   while (data.b.rxfflsh);
 625              	 .loc 1 342 0
 626 003a 3B68     	 ldr r3,[r7]
 627 003c 1B09     	 lsrs r3,r3,#4
 628 003e 03F00103 	 and r3,r3,#1
 629 0042 DBB2     	 uxtb r3,r3
 630 0044 002B     	 cmp r3,#0
 631 0046 E9D1     	 bne .L37
 343:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 632              	 .loc 1 343 0
 633 0048 0023     	 movs r3,#0
 634 004a 7B60     	 str r3,[r7,#4]
 344:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 635              	 .loc 1 344 0
 636 004c 00BF     	 nop
 637              	.L38:
 638              	 .loc 1 344 0 is_stmt 0 discriminator 1
 639 004e 7B68     	 ldr r3,[r7,#4]
 640 0050 5A1C     	 adds r2,r3,#1
 641 0052 7A60     	 str r2,[r7,#4]
 642 0054 B3F57A7F 	 cmp r3,#1000
 643 0058 F9D3     	 bcc .L38
 345:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 346:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 347:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 348:../Libraries/XMCLib/src/xmc_usbd.c **** }
 644              	 .loc 1 348 0 is_stmt 1
 645 005a 0C37     	 adds r7,r7,#12
 646              	.LCFI27:
 647              	 .cfi_def_cfa_offset 4
 648 005c BD46     	 mov sp,r7
 649              	.LCFI28:
 650              	 .cfi_def_cfa_register 13
 651              	 
 652 005e 5DF8047B 	 ldr r7,[sp],#4
 653              	.LCFI29:
 654              	 .cfi_restore 7
 655              	 .cfi_def_cfa_offset 0
 656 0062 7047     	 bx lr
 657              	.L40:
 658              	 .align 2
 659              	.L39:
 660 0064 00000000 	 .word xmc_device
 661              	 .cfi_endproc
 662              	.LFE175:
 664              	 .section .text.XMC_USBD_lAssignTXFifo,"ax",%progbits
 665              	 .align 2
 666              	 .thumb
 667              	 .thumb_func
 669              	XMC_USBD_lAssignTXFifo:
 670              	.LFB176:
 349:../Libraries/XMCLib/src/xmc_usbd.c **** 
 350:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 351:../Libraries/XMCLib/src/xmc_usbd.c ****  * Support Functions
 352:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 353:../Libraries/XMCLib/src/xmc_usbd.c **** 
 354:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 355:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Assign a free tx fifo
 356:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 357:../Libraries/XMCLib/src/xmc_usbd.c ****  * A free tx fifo will be searched and the number will be returned.
 358:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 359:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return Fifo number for a free fifo
 360:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 361:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void)
 362:../Libraries/XMCLib/src/xmc_usbd.c **** {
 671              	 .loc 1 362 0
 672              	 .cfi_startproc
 673              	 
 674              	 
 675              	 
 676 0000 80B4     	 push {r7}
 677              	.LCFI30:
 678              	 .cfi_def_cfa_offset 4
 679              	 .cfi_offset 7,-4
 680 0002 83B0     	 sub sp,sp,#12
 681              	.LCFI31:
 682              	 .cfi_def_cfa_offset 16
 683 0004 00AF     	 add r7,sp,#0
 684              	.LCFI32:
 685              	 .cfi_def_cfa_register 7
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask = 1U;
 686              	 .loc 1 363 0
 687 0006 0123     	 movs r3,#1
 688 0008 FB80     	 strh r3,[r7,#6]
 364:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 689              	 .loc 1 364 0
 690 000a 0023     	 movs r3,#0
 691 000c 7B71     	 strb r3,[r7,#5]
 365:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 692              	 .loc 1 365 0
 693 000e 0023     	 movs r3,#0
 694 0010 3B71     	 strb r3,[r7,#4]
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   while ( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS) && ((xmc_device.txfifomsk & mask) != 0U))
 695              	 .loc 1 366 0
 696 0012 05E0     	 b .L42
 697              	.L44:
 367:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 368:../Libraries/XMCLib/src/xmc_usbd.c ****     mask = (uint16_t)(mask << 1U);
 698              	 .loc 1 368 0
 699 0014 FB88     	 ldrh r3,[r7,#6]
 700 0016 5B00     	 lsls r3,r3,#1
 701 0018 FB80     	 strh r3,[r7,#6]
 369:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 702              	 .loc 1 369 0
 703 001a 7B79     	 ldrb r3,[r7,#5]
 704 001c 0133     	 adds r3,r3,#1
 705 001e 7B71     	 strb r3,[r7,#5]
 706              	.L42:
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   while ( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS) && ((xmc_device.txfifomsk & mask) != 0U))
 707              	 .loc 1 366 0
 708 0020 7B79     	 ldrb r3,[r7,#5]
 709 0022 062B     	 cmp r3,#6
 710 0024 07D8     	 bhi .L43
 366:../Libraries/XMCLib/src/xmc_usbd.c ****   while ( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS) && ((xmc_device.txfifomsk & mask) != 0U))
 711              	 .loc 1 366 0 is_stmt 0 discriminator 1
 712 0026 114B     	 ldr r3,.L47
 713 0028 B3F8FC21 	 ldrh r2,[r3,#508]
 714 002c FB88     	 ldrh r3,[r7,#6]
 715 002e 1340     	 ands r3,r3,r2
 716 0030 9BB2     	 uxth r3,r3
 717 0032 002B     	 cmp r3,#0
 718 0034 EED1     	 bne .L44
 719              	.L43:
 370:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 371:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((xmc_device.txfifomsk & mask) == 0U)
 720              	 .loc 1 371 0 is_stmt 1
 721 0036 0D4B     	 ldr r3,.L47
 722 0038 B3F8FC21 	 ldrh r2,[r3,#508]
 723 003c FB88     	 ldrh r3,[r7,#6]
 724 003e 1340     	 ands r3,r3,r2
 725 0040 9BB2     	 uxth r3,r3
 726 0042 002B     	 cmp r3,#0
 727 0044 0AD1     	 bne .L45
 372:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 373:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.txfifomsk |= mask;
 728              	 .loc 1 373 0
 729 0046 094B     	 ldr r3,.L47
 730 0048 B3F8FC21 	 ldrh r2,[r3,#508]
 731 004c FB88     	 ldrh r3,[r7,#6]
 732 004e 1343     	 orrs r3,r3,r2
 733 0050 9AB2     	 uxth r2,r3
 734 0052 064B     	 ldr r3,.L47
 735 0054 A3F8FC21 	 strh r2,[r3,#508]
 374:../Libraries/XMCLib/src/xmc_usbd.c ****     result = i;
 736              	 .loc 1 374 0
 737 0058 7B79     	 ldrb r3,[r7,#5]
 738 005a 3B71     	 strb r3,[r7,#4]
 739              	.L45:
 375:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 376:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 740              	 .loc 1 376 0
 741 005c 3B79     	 ldrb r3,[r7,#4]
 377:../Libraries/XMCLib/src/xmc_usbd.c **** }
 742              	 .loc 1 377 0
 743 005e 1846     	 mov r0,r3
 744 0060 0C37     	 adds r7,r7,#12
 745              	.LCFI33:
 746              	 .cfi_def_cfa_offset 4
 747 0062 BD46     	 mov sp,r7
 748              	.LCFI34:
 749              	 .cfi_def_cfa_register 13
 750              	 
 751 0064 5DF8047B 	 ldr r7,[sp],#4
 752              	.LCFI35:
 753              	 .cfi_restore 7
 754              	 .cfi_def_cfa_offset 0
 755 0068 7047     	 bx lr
 756              	.L48:
 757 006a 00BF     	 .align 2
 758              	.L47:
 759 006c 00000000 	 .word xmc_device
 760              	 .cfi_endproc
 761              	.LFE176:
 763              	 .section .text.XMC_USBD_lUnassignFifo,"ax",%progbits
 764              	 .align 2
 765              	 .thumb
 766              	 .thumb_func
 768              	XMC_USBD_lUnassignFifo:
 769              	.LFB177:
 378:../Libraries/XMCLib/src/xmc_usbd.c **** 
 379:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 380:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Free a tx fifo
 381:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 382:../Libraries/XMCLib/src/xmc_usbd.c ****  * Mark an used tx fifo as free.
 383:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_nr Fifo number to free
 384:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 385:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr)
 386:../Libraries/XMCLib/src/xmc_usbd.c **** {
 770              	 .loc 1 386 0
 771              	 .cfi_startproc
 772              	 
 773              	 
 774              	 
 775 0000 80B4     	 push {r7}
 776              	.LCFI36:
 777              	 .cfi_def_cfa_offset 4
 778              	 .cfi_offset 7,-4
 779 0002 83B0     	 sub sp,sp,#12
 780              	.LCFI37:
 781              	 .cfi_def_cfa_offset 16
 782 0004 00AF     	 add r7,sp,#0
 783              	.LCFI38:
 784              	 .cfi_def_cfa_register 7
 785 0006 0346     	 mov r3,r0
 786 0008 FB71     	 strb r3,[r7,#7]
 387:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.txfifomsk = (uint16_t)((uint32_t)xmc_device.txfifomsk & (uint32_t)(~((uint32_t)((uint3
 787              	 .loc 1 387 0
 788 000a 0A4B     	 ldr r3,.L50
 789 000c B3F8FC21 	 ldrh r2,[r3,#508]
 790 0010 FB79     	 ldrb r3,[r7,#7]
 791 0012 0121     	 movs r1,#1
 792 0014 01FA03F3 	 lsl r3,r1,r3
 793 0018 9BB2     	 uxth r3,r3
 794 001a DB43     	 mvns r3,r3
 795 001c 9BB2     	 uxth r3,r3
 796 001e 1340     	 ands r3,r3,r2
 797 0020 9AB2     	 uxth r2,r3
 798 0022 044B     	 ldr r3,.L50
 799 0024 A3F8FC21 	 strh r2,[r3,#508]
 388:../Libraries/XMCLib/src/xmc_usbd.c **** }
 800              	 .loc 1 388 0
 801 0028 0C37     	 adds r7,r7,#12
 802              	.LCFI39:
 803              	 .cfi_def_cfa_offset 4
 804 002a BD46     	 mov sp,r7
 805              	.LCFI40:
 806              	 .cfi_def_cfa_register 13
 807              	 
 808 002c 5DF8047B 	 ldr r7,[sp],#4
 809              	.LCFI41:
 810              	 .cfi_restore 7
 811              	 .cfi_def_cfa_offset 0
 812 0030 7047     	 bx lr
 813              	.L51:
 814 0032 00BF     	 .align 2
 815              	.L50:
 816 0034 00000000 	 .word xmc_device
 817              	 .cfi_endproc
 818              	.LFE177:
 820              	 .section .text.XMC_USBD_lStartReadXfer,"ax",%progbits
 821              	 .align 2
 822              	 .thumb
 823              	 .thumb_func
 825              	XMC_USBD_lStartReadXfer:
 826              	.LFB178:
 389:../Libraries/XMCLib/src/xmc_usbd.c **** 
 390:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 391:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a transfer for an out endpoint
 392:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 393:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint, the out endpoint registers will be programmed
 394:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new out transfer.
 395:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 396:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note No checking of the transfer values are done in this function. Be sure,
 397:../Libraries/XMCLib/src/xmc_usbd.c ****  * that the transfer values are reasonable (e.g. buffer size is not exceeded).
 398:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 399:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 400:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 401:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep)
 402:../Libraries/XMCLib/src/xmc_usbd.c **** {
 827              	 .loc 1 402 0
 828              	 .cfi_startproc
 829              	 
 830              	 
 831              	 
 832 0000 80B4     	 push {r7}
 833              	.LCFI42:
 834              	 .cfi_def_cfa_offset 4
 835              	 .cfi_offset 7,-4
 836 0002 87B0     	 sub sp,sp,#28
 837              	.LCFI43:
 838              	 .cfi_def_cfa_offset 32
 839 0004 00AF     	 add r7,sp,#0
 840              	.LCFI44:
 841              	 .cfi_def_cfa_register 7
 842 0006 7860     	 str r0,[r7,#4]
 403:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t data;
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 405:../Libraries/XMCLib/src/xmc_usbd.c **** 
 406:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 =  0U;
 843              	 .loc 1 406 0
 844 0008 0023     	 movs r3,#0
 845 000a 3B61     	 str r3,[r7,#16]
 407:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 846              	 .loc 1 407 0
 847 000c 7B68     	 ldr r3,[r7,#4]
 848 000e 1A6B     	 ldr r2,[r3,#48]
 849 0010 7B68     	 ldr r3,[r7,#4]
 850 0012 9B6A     	 ldr r3,[r3,#40]
 851 0014 D31A     	 subs r3,r2,r3
 852 0016 7A68     	 ldr r2,[r7,#4]
 853 0018 9268     	 ldr r2,[r2,#8]
 854 001a C2F31202 	 ubfx r2,r2,#0,#19
 855 001e 9342     	 cmp r3,r2
 856 0020 09D9     	 bls .L53
 408:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 409:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 857              	 .loc 1 409 0
 858 0022 7B68     	 ldr r3,[r7,#4]
 859 0024 9B6A     	 ldr r3,[r3,#40]
 860 0026 7A68     	 ldr r2,[r7,#4]
 861 0028 9268     	 ldr r2,[r2,#8]
 862 002a C2F31202 	 ubfx r2,r2,#0,#19
 863 002e 1A44     	 add r2,r2,r3
 864 0030 7B68     	 ldr r3,[r7,#4]
 865 0032 9A62     	 str r2,[r3,#40]
 866 0034 03E0     	 b .L54
 867              	.L53:
 410:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 411:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 413:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 868              	 .loc 1 413 0
 869 0036 7B68     	 ldr r3,[r7,#4]
 870 0038 1A6B     	 ldr r2,[r3,#48]
 871 003a 7B68     	 ldr r3,[r7,#4]
 872 003c 9A62     	 str r2,[r3,#40]
 873              	.L54:
 414:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 415:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.number == 0U)
 874              	 .loc 1 415 0
 875 003e 7B68     	 ldr r3,[r7,#4]
 876 0040 1B78     	 ldrb r3,[r3]
 877 0042 03F00F03 	 and r3,r3,#15
 878 0046 DBB2     	 uxtb r3,r3
 879 0048 002B     	 cmp r3,#0
 880 004a 19D1     	 bne .L55
 881              	.LBB2:
 416:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 417:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Setup the endpoint to receive 3 setup packages and one normal package.*/
 418:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Cast the data pointer to use only one variable */
 419:../Libraries/XMCLib/src/xmc_usbd.c ****     deptsiz0_data_t *ep0_data = (deptsiz0_data_t *)&data;
 882              	 .loc 1 419 0
 883 004c 07F11003 	 add r3,r7,#16
 884 0050 7B61     	 str r3,[r7,#20]
 420:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.pktcnt = 0x1U;
 885              	 .loc 1 420 0
 886 0052 7A69     	 ldr r2,[r7,#20]
 887 0054 9378     	 ldrb r3,[r2,#2]
 888 0056 0121     	 movs r1,#1
 889 0058 61F3C403 	 bfi r3,r1,#3,#2
 890 005c 9370     	 strb r3,[r2,#2]
 421:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 891              	 .loc 1 421 0
 892 005e 7A69     	 ldr r2,[r7,#20]
 893 0060 D378     	 ldrb r3,[r2,#3]
 894 0062 43F06003 	 orr r3,r3,#96
 895 0066 D370     	 strb r3,[r2,#3]
 422:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 896              	 .loc 1 422 0
 897 0068 7B68     	 ldr r3,[r7,#4]
 898 006a 1B6B     	 ldr r3,[r3,#48]
 899 006c DBB2     	 uxtb r3,r3
 900 006e 03F07F03 	 and r3,r3,#127
 901 0072 D9B2     	 uxtb r1,r3
 902 0074 7A69     	 ldr r2,[r7,#20]
 903 0076 1378     	 ldrb r3,[r2]
 904 0078 61F30603 	 bfi r3,r1,#0,#7
 905 007c 1370     	 strb r3,[r2]
 906              	.LBE2:
 907 007e 33E0     	 b .L56
 908              	.L55:
 423:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 424:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 425:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 426:../Libraries/XMCLib/src/xmc_usbd.c ****     /* If requested length is zero, just receive one zero length packet */
 427:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->xferLength == 0U)
 909              	 .loc 1 427 0
 910 0080 7B68     	 ldr r3,[r7,#4]
 911 0082 9B6A     	 ldr r3,[r3,#40]
 912 0084 002B     	 cmp r3,#0
 913 0086 09D1     	 bne .L57
 428:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 429:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = 0U;
 914              	 .loc 1 429 0
 915 0088 3B69     	 ldr r3,[r7,#16]
 916 008a 6FF31203 	 bfc r3,#0,#19
 917 008e 3B61     	 str r3,[r7,#16]
 430:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = 1U;
 918              	 .loc 1 430 0
 919 0090 7B8A     	 ldrh r3,[r7,#18]
 920 0092 0122     	 movs r2,#1
 921 0094 62F3CC03 	 bfi r3,r2,#3,#10
 922 0098 7B82     	 strh r3,[r7,#18]
 923 009a 25E0     	 b .L56
 924              	.L57:
 431:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 432:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 433:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 434:../Libraries/XMCLib/src/xmc_usbd.c ****       /* setup endpoint to recive a amount of packages by given size */
 435:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = (uint16_t)(((ep->xferLength - ep->xferCount) + (ep->maxPacketSize - (uint32_t
 925              	 .loc 1 435 0
 926 009c 7B68     	 ldr r3,[r7,#4]
 927 009e 9A6A     	 ldr r2,[r3,#40]
 928 00a0 7B68     	 ldr r3,[r7,#4]
 929 00a2 DB6A     	 ldr r3,[r3,#44]
 930 00a4 D31A     	 subs r3,r2,r3
 931 00a6 7A68     	 ldr r2,[r7,#4]
 932 00a8 5268     	 ldr r2,[r2,#4]
 933 00aa C2F3C622 	 ubfx r2,r2,#11,#7
 934 00ae D2B2     	 uxtb r2,r2
 935 00b0 1344     	 add r3,r3,r2
 936 00b2 013B     	 subs r3,r3,#1
 937 00b4 7A68     	 ldr r2,[r7,#4]
 938 00b6 5268     	 ldr r2,[r2,#4]
 939 00b8 C2F3C622 	 ubfx r2,r2,#11,#7
 940 00bc D2B2     	 uxtb r2,r2
 941 00be B3FBF2F3 	 udiv r3,r3,r2
 942 00c2 9BB2     	 uxth r3,r3
 943 00c4 C3F30903 	 ubfx r3,r3,#0,#10
 944 00c8 9AB2     	 uxth r2,r3
 945 00ca 7B8A     	 ldrh r3,[r7,#18]
 946 00cc 62F3CC03 	 bfi r3,r2,#3,#10
 947 00d0 7B82     	 strh r3,[r7,#18]
 436:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 948              	 .loc 1 436 0
 949 00d2 7B68     	 ldr r3,[r7,#4]
 950 00d4 9A6A     	 ldr r2,[r3,#40]
 951 00d6 7B68     	 ldr r3,[r7,#4]
 952 00d8 DB6A     	 ldr r3,[r3,#44]
 953 00da D31A     	 subs r3,r2,r3
 954 00dc C3F31202 	 ubfx r2,r3,#0,#19
 955 00e0 3B69     	 ldr r3,[r7,#16]
 956 00e2 62F31203 	 bfi r3,r2,#0,#19
 957 00e6 3B61     	 str r3,[r7,#16]
 958              	.L56:
 437:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 438:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 439:../Libraries/XMCLib/src/xmc_usbd.c ****   if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 959              	 .loc 1 439 0
 960 00e8 214B     	 ldr r3,.L59
 961 00ea 1B68     	 ldr r3,[r3]
 962 00ec 5B7B     	 ldrb r3,[r3,#13]
 963 00ee 002B     	 cmp r3,#0
 964 00f0 0CD1     	 bne .L58
 440:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 441:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Programm dma address if needed */
 442:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepdma = (uint32_t)(ep->xfe
 965              	 .loc 1 442 0
 966 00f2 7B68     	 ldr r3,[r7,#4]
 967 00f4 1B78     	 ldrb r3,[r3]
 968 00f6 C3F30303 	 ubfx r3,r3,#0,#4
 969 00fa DBB2     	 uxtb r3,r3
 970 00fc 1D4A     	 ldr r2,.L59+4
 971 00fe 7033     	 adds r3,r3,#112
 972 0100 9B00     	 lsls r3,r3,#2
 973 0102 1344     	 add r3,r3,r2
 974 0104 5B68     	 ldr r3,[r3,#4]
 975 0106 7A68     	 ldr r2,[r7,#4]
 976 0108 526A     	 ldr r2,[r2,#36]
 977 010a 5A61     	 str r2,[r3,#20]
 978              	.L58:
 443:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 444:../Libraries/XMCLib/src/xmc_usbd.c ****   /* setup endpoint size and enable endpoint */
 445:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doeptsiz = data.d32;
 979              	 .loc 1 445 0
 980 010c 7B68     	 ldr r3,[r7,#4]
 981 010e 1B78     	 ldrb r3,[r3]
 982 0110 C3F30303 	 ubfx r3,r3,#0,#4
 983 0114 DBB2     	 uxtb r3,r3
 984 0116 174A     	 ldr r2,.L59+4
 985 0118 7033     	 adds r3,r3,#112
 986 011a 9B00     	 lsls r3,r3,#2
 987 011c 1344     	 add r3,r3,r2
 988 011e 5B68     	 ldr r3,[r3,#4]
 989 0120 3A69     	 ldr r2,[r7,#16]
 990 0122 1A61     	 str r2,[r3,#16]
 446:../Libraries/XMCLib/src/xmc_usbd.c **** 
 447:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 991              	 .loc 1 447 0
 992 0124 7B68     	 ldr r3,[r7,#4]
 993 0126 1B78     	 ldrb r3,[r3]
 994 0128 C3F30303 	 ubfx r3,r3,#0,#4
 995 012c DBB2     	 uxtb r3,r3
 996 012e 114A     	 ldr r2,.L59+4
 997 0130 7033     	 adds r3,r3,#112
 998 0132 9B00     	 lsls r3,r3,#2
 999 0134 1344     	 add r3,r3,r2
 1000 0136 5B68     	 ldr r3,[r3,#4]
 1001 0138 1B68     	 ldr r3,[r3]
 1002 013a FB60     	 str r3,[r7,#12]
 448:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 1003              	 .loc 1 448 0
 1004 013c FB7B     	 ldrb r3,[r7,#15]
 1005 013e 43F00403 	 orr r3,r3,#4
 1006 0142 FB73     	 strb r3,[r7,#15]
 449:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.epena = 1U;
 1007              	 .loc 1 449 0
 1008 0144 FB7B     	 ldrb r3,[r7,#15]
 1009 0146 43F08003 	 orr r3,r3,#128
 1010 014a FB73     	 strb r3,[r7,#15]
 450:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 1011              	 .loc 1 450 0
 1012 014c 7B68     	 ldr r3,[r7,#4]
 1013 014e 1B78     	 ldrb r3,[r3]
 1014 0150 C3F30303 	 ubfx r3,r3,#0,#4
 1015 0154 DBB2     	 uxtb r3,r3
 1016 0156 074A     	 ldr r2,.L59+4
 1017 0158 7033     	 adds r3,r3,#112
 1018 015a 9B00     	 lsls r3,r3,#2
 1019 015c 1344     	 add r3,r3,r2
 1020 015e 5B68     	 ldr r3,[r3,#4]
 1021 0160 FA68     	 ldr r2,[r7,#12]
 1022 0162 1A60     	 str r2,[r3]
 451:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1023              	 .loc 1 451 0
 1024 0164 1C37     	 adds r7,r7,#28
 1025              	.LCFI45:
 1026              	 .cfi_def_cfa_offset 4
 1027 0166 BD46     	 mov sp,r7
 1028              	.LCFI46:
 1029              	 .cfi_def_cfa_register 13
 1030              	 
 1031 0168 5DF8047B 	 ldr r7,[sp],#4
 1032              	.LCFI47:
 1033              	 .cfi_restore 7
 1034              	 .cfi_def_cfa_offset 0
 1035 016c 7047     	 bx lr
 1036              	.L60:
 1037 016e 00BF     	 .align 2
 1038              	.L59:
 1039 0170 00000000 	 .word usbd_init
 1040 0174 00000000 	 .word xmc_device
 1041              	 .cfi_endproc
 1042              	.LFE178:
 1044              	 .section .text.XMC_USBD_lStartWriteXfer,"ax",%progbits
 1045              	 .align 2
 1046              	 .thumb
 1047              	 .thumb_func
 1049              	XMC_USBD_lStartWriteXfer:
 1050              	.LFB179:
 452:../Libraries/XMCLib/src/xmc_usbd.c **** 
 453:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 454:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a new in transfer
 455:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 456:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint the in endpoint registers will be programmed
 457:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new in transfer
 458:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 459:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 460:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 461:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep)
 462:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1051              	 .loc 1 462 0
 1052              	 .cfi_startproc
 1053              	 
 1054              	 
 1055              	 
 1056 0000 80B4     	 push {r7}
 1057              	.LCFI48:
 1058              	 .cfi_def_cfa_offset 4
 1059              	 .cfi_offset 7,-4
 1060 0002 85B0     	 sub sp,sp,#20
 1061              	.LCFI49:
 1062              	 .cfi_def_cfa_offset 24
 1063 0004 00AF     	 add r7,sp,#0
 1064              	.LCFI50:
 1065              	 .cfi_def_cfa_register 7
 1066 0006 7860     	 str r0,[r7,#4]
 463:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t size;
 464:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t ctl;
 465:../Libraries/XMCLib/src/xmc_usbd.c **** 
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   size.d32 = 0U;
 1067              	 .loc 1 466 0
 1068 0008 0023     	 movs r3,#0
 1069 000a FB60     	 str r3,[r7,#12]
 467:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 1070              	 .loc 1 467 0
 1071 000c 7B68     	 ldr r3,[r7,#4]
 1072 000e 1B78     	 ldrb r3,[r3]
 1073 0010 C3F30303 	 ubfx r3,r3,#0,#4
 1074 0014 DBB2     	 uxtb r3,r3
 1075 0016 5D4A     	 ldr r2,.L69
 1076 0018 6A33     	 adds r3,r3,#106
 1077 001a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1078 001e 1B68     	 ldr r3,[r3]
 1079 0020 BB60     	 str r3,[r7,#8]
 468:../Libraries/XMCLib/src/xmc_usbd.c **** 
 469:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength)  < ep->maxTransferSize)
 1080              	 .loc 1 469 0
 1081 0022 7B68     	 ldr r3,[r7,#4]
 1082 0024 1A6B     	 ldr r2,[r3,#48]
 1083 0026 7B68     	 ldr r3,[r7,#4]
 1084 0028 9B6A     	 ldr r3,[r3,#40]
 1085 002a D31A     	 subs r3,r2,r3
 1086 002c 7A68     	 ldr r2,[r7,#4]
 1087 002e 9268     	 ldr r2,[r2,#8]
 1088 0030 C2F31202 	 ubfx r2,r2,#0,#19
 1089 0034 9342     	 cmp r3,r2
 1090 0036 04D2     	 bcs .L62
 470:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 471:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 1091              	 .loc 1 471 0
 1092 0038 7B68     	 ldr r3,[r7,#4]
 1093 003a 1A6B     	 ldr r2,[r3,#48]
 1094 003c 7B68     	 ldr r3,[r7,#4]
 1095 003e 9A62     	 str r2,[r3,#40]
 1096 0040 08E0     	 b .L63
 1097              	.L62:
 472:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 473:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 474:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 475:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 1098              	 .loc 1 475 0
 1099 0042 7B68     	 ldr r3,[r7,#4]
 1100 0044 9B6A     	 ldr r3,[r3,#40]
 1101 0046 7A68     	 ldr r2,[r7,#4]
 1102 0048 9268     	 ldr r2,[r2,#8]
 1103 004a C2F31202 	 ubfx r2,r2,#0,#19
 1104 004e 1A44     	 add r2,r2,r3
 1105 0050 7B68     	 ldr r3,[r7,#4]
 1106 0052 9A62     	 str r2,[r3,#40]
 1107              	.L63:
 476:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 477:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->xferLength == 0U)
 1108              	 .loc 1 477 0
 1109 0054 7B68     	 ldr r3,[r7,#4]
 1110 0056 9B6A     	 ldr r3,[r3,#40]
 1111 0058 002B     	 cmp r3,#0
 1112 005a 09D1     	 bne .L64
 478:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 479:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.xfersize = 0U;
 1113              	 .loc 1 479 0
 1114 005c FB68     	 ldr r3,[r7,#12]
 1115 005e 6FF31203 	 bfc r3,#0,#19
 1116 0062 FB60     	 str r3,[r7,#12]
 480:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.pktcnt = 1U;
 1117              	 .loc 1 480 0
 1118 0064 FB89     	 ldrh r3,[r7,#14]
 1119 0066 0122     	 movs r2,#1
 1120 0068 62F3CC03 	 bfi r3,r2,#3,#10
 1121 006c FB81     	 strh r3,[r7,#14]
 1122 006e 6AE0     	 b .L65
 1123              	.L64:
 481:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 482:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 483:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 484:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->address_u.address_st.number == 0U)
 1124              	 .loc 1 484 0
 1125 0070 7B68     	 ldr r3,[r7,#4]
 1126 0072 1B78     	 ldrb r3,[r3]
 1127 0074 03F00F03 	 and r3,r3,#15
 1128 0078 DBB2     	 uxtb r3,r3
 1129 007a 002B     	 cmp r3,#0
 1130 007c 10D1     	 bne .L66
 485:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 486:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = 1U;
 1131              	 .loc 1 486 0
 1132 007e FB89     	 ldrh r3,[r7,#14]
 1133 0080 0122     	 movs r2,#1
 1134 0082 62F3CC03 	 bfi r3,r2,#3,#10
 1135 0086 FB81     	 strh r3,[r7,#14]
 487:../Libraries/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 488:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 1136              	 .loc 1 488 0
 1137 0088 7B68     	 ldr r3,[r7,#4]
 1138 008a 9A6A     	 ldr r2,[r3,#40]
 1139 008c 7B68     	 ldr r3,[r7,#4]
 1140 008e DB6A     	 ldr r3,[r3,#44]
 1141 0090 D31A     	 subs r3,r2,r3
 1142 0092 C3F31202 	 ubfx r2,r3,#0,#19
 1143 0096 FB68     	 ldr r3,[r7,#12]
 1144 0098 62F31203 	 bfi r3,r2,#0,#19
 1145 009c FB60     	 str r3,[r7,#12]
 1146 009e 2BE0     	 b .L67
 1147              	.L66:
 489:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 490:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 491:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 492:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 1148              	 .loc 1 492 0
 1149 00a0 7B68     	 ldr r3,[r7,#4]
 1150 00a2 9A6A     	 ldr r2,[r3,#40]
 1151 00a4 7B68     	 ldr r3,[r7,#4]
 1152 00a6 DB6A     	 ldr r3,[r3,#44]
 1153 00a8 D31A     	 subs r3,r2,r3
 1154 00aa C3F31202 	 ubfx r2,r3,#0,#19
 1155 00ae FB68     	 ldr r3,[r7,#12]
 1156 00b0 62F31203 	 bfi r3,r2,#0,#19
 1157 00b4 FB60     	 str r3,[r7,#12]
 493:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1158              	 .loc 1 493 0
 1159 00b6 7B68     	 ldr r3,[r7,#4]
 1160 00b8 9B6A     	 ldr r3,[r3,#40]
 1161 00ba 9AB2     	 uxth r2,r3
 1162 00bc 7B68     	 ldr r3,[r7,#4]
 1163 00be DB6A     	 ldr r3,[r3,#44]
 1164 00c0 9BB2     	 uxth r3,r3
 1165 00c2 D31A     	 subs r3,r2,r3
 1166 00c4 9BB2     	 uxth r3,r3
 1167 00c6 1A46     	 mov r2,r3
 1168 00c8 7B68     	 ldr r3,[r7,#4]
 1169 00ca 5B68     	 ldr r3,[r3,#4]
 1170 00cc C3F3C623 	 ubfx r3,r3,#11,#7
 1171 00d0 DBB2     	 uxtb r3,r3
 1172 00d2 9BB2     	 uxth r3,r3
 1173 00d4 013B     	 subs r3,r3,#1
 1174 00d6 9BB2     	 uxth r3,r3
 1175 00d8 1344     	 add r3,r3,r2
 494:../Libraries/XMCLib/src/xmc_usbd.c ****                                  ep->maxPacketSize);
 1176              	 .loc 1 494 0
 1177 00da 7A68     	 ldr r2,[r7,#4]
 1178 00dc 5268     	 ldr r2,[r2,#4]
 1179 00de C2F3C622 	 ubfx r2,r2,#11,#7
 1180 00e2 D2B2     	 uxtb r2,r2
 493:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1181              	 .loc 1 493 0
 1182 00e4 93FBF2F3 	 sdiv r3,r3,r2
 1183 00e8 9BB2     	 uxth r3,r3
 1184 00ea C3F30903 	 ubfx r3,r3,#0,#10
 1185 00ee 9AB2     	 uxth r2,r3
 1186 00f0 FB89     	 ldrh r3,[r7,#14]
 1187 00f2 62F3CC03 	 bfi r3,r2,#3,#10
 1188 00f6 FB81     	 strh r3,[r7,#14]
 1189              	.L67:
 495:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 496:../Libraries/XMCLib/src/xmc_usbd.c ****     if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1190              	 .loc 1 496 0
 1191 00f8 254B     	 ldr r3,.L69+4
 1192 00fa 1B68     	 ldr r3,[r3]
 1193 00fc 5B7B     	 ldrb r3,[r3,#13]
 1194 00fe 002B     	 cmp r3,#0
 1195 0100 0BD1     	 bne .L68
 497:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 498:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Program dma*/
 499:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepdma = (uint32_t)ep->xfe
 1196              	 .loc 1 499 0
 1197 0102 7B68     	 ldr r3,[r7,#4]
 1198 0104 1B78     	 ldrb r3,[r3]
 1199 0106 C3F30303 	 ubfx r3,r3,#0,#4
 1200 010a DBB2     	 uxtb r3,r3
 1201 010c 1F4A     	 ldr r2,.L69
 1202 010e 6A33     	 adds r3,r3,#106
 1203 0110 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1204 0114 7A68     	 ldr r2,[r7,#4]
 1205 0116 526A     	 ldr r2,[r2,#36]
 1206 0118 5A61     	 str r2,[r3,#20]
 1207              	.L68:
 500:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 501:../Libraries/XMCLib/src/xmc_usbd.c ****     if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1208              	 .loc 1 501 0
 1209 011a 1D4B     	 ldr r3,.L69+4
 1210 011c 1B68     	 ldr r3,[r3]
 1211 011e 5B7B     	 ldrb r3,[r3,#13]
 1212 0120 012B     	 cmp r3,#1
 1213 0122 10D1     	 bne .L65
 502:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 503:../Libraries/XMCLib/src/xmc_usbd.c ****       /* enable fifo empty interrupt */
 504:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.device_register->dtknqr4_fifoemptymsk |= (uint32_t)((uint32_t)1U << (uint8_t)ep->a
 1214              	 .loc 1 504 0
 1215 0124 194B     	 ldr r3,.L69
 1216 0126 D3F8A431 	 ldr r3,[r3,#420]
 1217 012a 184A     	 ldr r2,.L69
 1218 012c D2F8A421 	 ldr r2,[r2,#420]
 1219 0130 516B     	 ldr r1,[r2,#52]
 1220 0132 7A68     	 ldr r2,[r7,#4]
 1221 0134 1278     	 ldrb r2,[r2]
 1222 0136 C2F30302 	 ubfx r2,r2,#0,#4
 1223 013a D2B2     	 uxtb r2,r2
 1224 013c 1046     	 mov r0,r2
 1225 013e 0122     	 movs r2,#1
 1226 0140 8240     	 lsls r2,r2,r0
 1227 0142 0A43     	 orrs r2,r2,r1
 1228 0144 5A63     	 str r2,[r3,#52]
 1229              	.L65:
 505:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 507:../Libraries/XMCLib/src/xmc_usbd.c **** 
 508:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Program size of transfer and enable endpoint */
 509:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dieptsiz = size.d32;
 1230              	 .loc 1 509 0
 1231 0146 7B68     	 ldr r3,[r7,#4]
 1232 0148 1B78     	 ldrb r3,[r3]
 1233 014a C3F30303 	 ubfx r3,r3,#0,#4
 1234 014e DBB2     	 uxtb r3,r3
 1235 0150 0E4A     	 ldr r2,.L69
 1236 0152 6A33     	 adds r3,r3,#106
 1237 0154 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1238 0158 FA68     	 ldr r2,[r7,#12]
 1239 015a 1A61     	 str r2,[r3,#16]
 510:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 1240              	 .loc 1 510 0
 1241 015c FB7A     	 ldrb r3,[r7,#11]
 1242 015e 43F08003 	 orr r3,r3,#128
 1243 0162 FB72     	 strb r3,[r7,#11]
 511:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.cnak = 1U;
 1244              	 .loc 1 511 0
 1245 0164 FB7A     	 ldrb r3,[r7,#11]
 1246 0166 43F00403 	 orr r3,r3,#4
 1247 016a FB72     	 strb r3,[r7,#11]
 512:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 1248              	 .loc 1 512 0
 1249 016c 7B68     	 ldr r3,[r7,#4]
 1250 016e 1B78     	 ldrb r3,[r3]
 1251 0170 C3F30303 	 ubfx r3,r3,#0,#4
 1252 0174 DBB2     	 uxtb r3,r3
 1253 0176 054A     	 ldr r2,.L69
 1254 0178 6A33     	 adds r3,r3,#106
 1255 017a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1256 017e BA68     	 ldr r2,[r7,#8]
 1257 0180 1A60     	 str r2,[r3]
 513:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1258              	 .loc 1 513 0
 1259 0182 1437     	 adds r7,r7,#20
 1260              	.LCFI51:
 1261              	 .cfi_def_cfa_offset 4
 1262 0184 BD46     	 mov sp,r7
 1263              	.LCFI52:
 1264              	 .cfi_def_cfa_register 13
 1265              	 
 1266 0186 5DF8047B 	 ldr r7,[sp],#4
 1267              	.LCFI53:
 1268              	 .cfi_restore 7
 1269              	 .cfi_def_cfa_offset 0
 1270 018a 7047     	 bx lr
 1271              	.L70:
 1272              	 .align 2
 1273              	.L69:
 1274 018c 00000000 	 .word xmc_device
 1275 0190 00000000 	 .word usbd_init
 1276              	 .cfi_endproc
 1277              	.LFE179:
 1279              	 .section .text.XMC_USBD_lHandleUSBReset,"ax",%progbits
 1280              	 .align 2
 1281              	 .thumb
 1282              	 .thumb_func
 1284              	XMC_USBD_lHandleUSBReset:
 1285              	.LFB180:
 514:../Libraries/XMCLib/src/xmc_usbd.c **** 
 515:../Libraries/XMCLib/src/xmc_usbd.c **** 
 516:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 517:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles the USBD reset interrupt
 518:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 519:../Libraries/XMCLib/src/xmc_usbd.c ****  * When ever the host sets the bus into reset condition the usb otg_core generates
 520:../Libraries/XMCLib/src/xmc_usbd.c ****  * an interrupt, which is handled by this function. It resets the complete otg_core
 521:../Libraries/XMCLib/src/xmc_usbd.c ****  * into the default state.
 522:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 523:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj)
 524:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1286              	 .loc 1 524 0
 1287              	 .cfi_startproc
 1288              	 
 1289              	 
 1290 0000 80B5     	 push {r7,lr}
 1291              	.LCFI54:
 1292              	 .cfi_def_cfa_offset 8
 1293              	 .cfi_offset 7,-8
 1294              	 .cfi_offset 14,-4
 1295 0002 88B0     	 sub sp,sp,#32
 1296              	.LCFI55:
 1297              	 .cfi_def_cfa_offset 40
 1298 0004 00AF     	 add r7,sp,#0
 1299              	.LCFI56:
 1300              	 .cfi_def_cfa_register 7
 1301 0006 7860     	 str r0,[r7,#4]
 525:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 526:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 527:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
 528:../Libraries/XMCLib/src/xmc_usbd.c ****   fifosize_data_t gnptxfsiz;
 529:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
 531:../Libraries/XMCLib/src/xmc_usbd.c **** 
 532:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear the Remote Wakeup Signaling */
 533:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 1302              	 .loc 1 533 0
 1303 0008 4F4B     	 ldr r3,.L77
 1304 000a D3F8A431 	 ldr r3,[r3,#420]
 1305 000e 5B68     	 ldr r3,[r3,#4]
 1306 0010 7B61     	 str r3,[r7,#20]
 534:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 1307              	 .loc 1 534 0
 1308 0012 3B7D     	 ldrb r3,[r7,#20]
 1309 0014 43F00103 	 orr r3,r3,#1
 1310 0018 3B75     	 strb r3,[r7,#20]
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 1311              	 .loc 1 535 0
 1312 001a 4B4B     	 ldr r3,.L77
 1313 001c D3F8A431 	 ldr r3,[r3,#420]
 1314 0020 7A69     	 ldr r2,[r7,#20]
 1315 0022 5A60     	 str r2,[r3,#4]
 536:../Libraries/XMCLib/src/xmc_usbd.c **** 
 537:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable naks for all eps */
 538:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)XMC_USBD_NUM_EPS; i++)
 1316              	 .loc 1 538 0
 1317 0024 0023     	 movs r3,#0
 1318 0026 FB61     	 str r3,[r7,#28]
 1319 0028 1AE0     	 b .L72
 1320              	.L73:
 539:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 540:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.d32 = xmc_device.endpoint_out_register[i]->doepctl;
 1321              	 .loc 1 540 0 discriminator 3
 1322 002a 474A     	 ldr r2,.L77
 1323 002c FB69     	 ldr r3,[r7,#28]
 1324 002e 7033     	 adds r3,r3,#112
 1325 0030 9B00     	 lsls r3,r3,#2
 1326 0032 1344     	 add r3,r3,r2
 1327 0034 5B68     	 ldr r3,[r3,#4]
 1328 0036 1B68     	 ldr r3,[r3]
 1329 0038 BB61     	 str r3,[r7,#24]
 541:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.b.snak = 1U;
 1330              	 .loc 1 541 0 discriminator 3
 1331 003a FB7E     	 ldrb r3,[r7,#27]
 1332 003c 43F00803 	 orr r3,r3,#8
 1333 0040 FB76     	 strb r3,[r7,#27]
 542:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.b.stall = 0U;
 1334              	 .loc 1 542 0 discriminator 3
 1335 0042 BB7E     	 ldrb r3,[r7,#26]
 1336 0044 6FF34513 	 bfc r3,#5,#1
 1337 0048 BB76     	 strb r3,[r7,#26]
 543:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 1338              	 .loc 1 543 0 discriminator 3
 1339 004a 3F4A     	 ldr r2,.L77
 1340 004c FB69     	 ldr r3,[r7,#28]
 1341 004e 7033     	 adds r3,r3,#112
 1342 0050 9B00     	 lsls r3,r3,#2
 1343 0052 1344     	 add r3,r3,r2
 1344 0054 5B68     	 ldr r3,[r3,#4]
 1345 0056 BA69     	 ldr r2,[r7,#24]
 1346 0058 1A60     	 str r2,[r3]
 538:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1347              	 .loc 1 538 0 discriminator 3
 1348 005a FB69     	 ldr r3,[r7,#28]
 1349 005c 0133     	 adds r3,r3,#1
 1350 005e FB61     	 str r3,[r7,#28]
 1351              	.L72:
 538:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1352              	 .loc 1 538 0 is_stmt 0 discriminator 1
 1353 0060 FB69     	 ldr r3,[r7,#28]
 1354 0062 062B     	 cmp r3,#6
 1355 0064 E1D9     	 bls .L73
 544:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 545:../Libraries/XMCLib/src/xmc_usbd.c **** 
 546:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Configure fifos */
 547:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the rx fifo */
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grxfsiz = 64U;
 1356              	 .loc 1 548 0 is_stmt 1
 1357 0066 384B     	 ldr r3,.L77
 1358 0068 D3F8A031 	 ldr r3,[r3,#416]
 1359 006c 4022     	 movs r2,#64
 1360 006e 5A62     	 str r2,[r3,#36]
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.d32 = 0U;
 1361              	 .loc 1 550 0
 1362 0070 0023     	 movs r3,#0
 1363 0072 3B61     	 str r3,[r7,#16]
 551:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.depth = 16U;
 1364              	 .loc 1 551 0
 1365 0074 1023     	 movs r3,#16
 1366 0076 7B82     	 strh r3,[r7,#18]
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 1367              	 .loc 1 552 0
 1368 0078 4023     	 movs r3,#64
 1369 007a 3B82     	 strh r3,[r7,#16]
 553:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 1370              	 .loc 1 553 0
 1371 007c 324B     	 ldr r3,.L77
 1372 007e D3F8A031 	 ldr r3,[r3,#416]
 1373 0082 3A69     	 ldr r2,[r7,#16]
 1374 0084 9A62     	 str r2,[r3,#40]
 554:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 1U; i < (uint8_t)XMC_USBD_NUM_TX_FIFOS; i++)
 1375              	 .loc 1 555 0
 1376 0086 0123     	 movs r3,#1
 1377 0088 FB61     	 str r3,[r7,#28]
 1378 008a 11E0     	 b .L74
 1379              	.L75:
 556:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 557:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.global_register->dtxfsiz[i - 1U] = (uint32_t)(((256U + (i * (64U))) / 4U) | ((uint32
 1380              	 .loc 1 557 0 discriminator 3
 1381 008c 2E4B     	 ldr r3,.L77
 1382 008e D3F8A011 	 ldr r1,[r3,#416]
 1383 0092 FB69     	 ldr r3,[r7,#28]
 1384 0094 013B     	 subs r3,r3,#1
 1385 0096 FA69     	 ldr r2,[r7,#28]
 1386 0098 0432     	 adds r2,r2,#4
 1387 009a 9201     	 lsls r2,r2,#6
 1388 009c 9208     	 lsrs r2,r2,#2
 1389 009e 42F48012 	 orr r2,r2,#1048576
 1390 00a2 4033     	 adds r3,r3,#64
 1391 00a4 9B00     	 lsls r3,r3,#2
 1392 00a6 0B44     	 add r3,r3,r1
 1393 00a8 5A60     	 str r2,[r3,#4]
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1394              	 .loc 1 555 0 discriminator 3
 1395 00aa FB69     	 ldr r3,[r7,#28]
 1396 00ac 0133     	 adds r3,r3,#1
 1397 00ae FB61     	 str r3,[r7,#28]
 1398              	.L74:
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1399              	 .loc 1 555 0 is_stmt 0 discriminator 1
 1400 00b0 FB69     	 ldr r3,[r7,#28]
 1401 00b2 062B     	 cmp r3,#6
 1402 00b4 EAD9     	 bls .L75
 558:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 559:../Libraries/XMCLib/src/xmc_usbd.c **** 
 560:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 561:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x10U); /* 0x10 == all fifos, see doc */
 1403              	 .loc 1 561 0 is_stmt 1
 1404 00b6 1020     	 movs r0,#16
 1405 00b8 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 562:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 1406              	 .loc 1 562 0
 1407 00bc 0020     	 movs r0,#0
 1408 00be FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 563:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 1409              	 .loc 1 563 0
 1410 00c2 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
 564:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 565:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable ep0 interrupts */
 566:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = 0U;
 1411              	 .loc 1 566 0
 1412 00c6 0023     	 movs r3,#0
 1413 00c8 FB60     	 str r3,[r7,#12]
 567:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.inep0 = 1U;
 1414              	 .loc 1 567 0
 1415 00ca 3B7B     	 ldrb r3,[r7,#12]
 1416 00cc 43F00103 	 orr r3,r3,#1
 1417 00d0 3B73     	 strb r3,[r7,#12]
 568:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.outep0 = 1U;
 1418              	 .loc 1 568 0
 1419 00d2 BB7B     	 ldrb r3,[r7,#14]
 1420 00d4 43F00103 	 orr r3,r3,#1
 1421 00d8 BB73     	 strb r3,[r7,#14]
 569:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daint.d32;
 1422              	 .loc 1 569 0
 1423 00da 1B4B     	 ldr r3,.L77
 1424 00dc D3F8A431 	 ldr r3,[r3,#420]
 1425 00e0 FA68     	 ldr r2,[r7,#12]
 1426 00e2 DA61     	 str r2,[r3,#28]
 570:../Libraries/XMCLib/src/xmc_usbd.c **** 
 571:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable endpoint interrupts */
 572:../Libraries/XMCLib/src/xmc_usbd.c ****   /* out ep interrupts */
 573:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventOUTEP(((uint32_t)XMC_USBD_EVENT_OUT_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_
 1427              	 .loc 1 573 0
 1428 00e4 0F20     	 movs r0,#15
 1429 00e6 FFF7FEFF 	 bl XMC_USBD_EnableEventOUTEP
 574:../Libraries/XMCLib/src/xmc_usbd.c ****                              (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_E
 575:../Libraries/XMCLib/src/xmc_usbd.c **** 
 576:../Libraries/XMCLib/src/xmc_usbd.c ****   /*in ep interrupts */
 577:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventINEP(((uint32_t)XMC_USBD_EVENT_IN_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_IN
 1430              	 .loc 1 577 0
 1431 00ea 0F20     	 movs r0,#15
 1432 00ec FFF7FEFF 	 bl XMC_USBD_EnableEventINEP
 578:../Libraries/XMCLib/src/xmc_usbd.c ****                             (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_
 579:../Libraries/XMCLib/src/xmc_usbd.c **** 
 580:../Libraries/XMCLib/src/xmc_usbd.c **** 
 581:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear device Address */
 582:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 1433              	 .loc 1 582 0
 1434 00f0 154B     	 ldr r3,.L77
 1435 00f2 D3F8A431 	 ldr r3,[r3,#420]
 1436 00f6 1B68     	 ldr r3,[r3]
 1437 00f8 BB60     	 str r3,[r7,#8]
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 1438              	 .loc 1 583 0
 1439 00fa 3B89     	 ldrh r3,[r7,#8]
 1440 00fc 6FF30A13 	 bfc r3,#4,#7
 1441 0100 3B81     	 strh r3,[r7,#8]
 584:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 1442              	 .loc 1 584 0
 1443 0102 114B     	 ldr r3,.L77
 1444 0104 D3F8A431 	 ldr r3,[r3,#420]
 1445 0108 BA68     	 ldr r2,[r7,#8]
 1446 010a 1A60     	 str r2,[r3]
 585:../Libraries/XMCLib/src/xmc_usbd.c **** 
 586:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1447              	 .loc 1 586 0
 1448 010c 7B68     	 ldr r3,[r7,#4]
 1449 010e 5B7B     	 ldrb r3,[r3,#13]
 1450 0110 012B     	 cmp r3,#1
 1451 0112 04D1     	 bne .L76
 587:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 588:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Clear Empty interrupt */
 589:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dtknqr4_fifoemptymsk = 0U;
 1452              	 .loc 1 589 0
 1453 0114 0C4B     	 ldr r3,.L77
 1454 0116 D3F8A431 	 ldr r3,[r3,#420]
 1455 011a 0022     	 movs r2,#0
 1456 011c 5A63     	 str r2,[r3,#52]
 1457              	.L76:
 590:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 591:../Libraries/XMCLib/src/xmc_usbd.c **** 
 592:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].outInUse = 0U;
 1458              	 .loc 1 592 0
 1459 011e 0A4B     	 ldr r3,.L77
 1460 0120 5A68     	 ldr r2,[r3,#4]
 1461 0122 22F01002 	 bic r2,r2,#16
 1462 0126 5A60     	 str r2,[r3,#4]
 593:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 1463              	 .loc 1 593 0
 1464 0128 074B     	 ldr r3,.L77
 1465 012a 5A68     	 ldr r2,[r3,#4]
 1466 012c 22F00802 	 bic r2,r2,#8
 1467 0130 5A60     	 str r2,[r3,#4]
 594:../Libraries/XMCLib/src/xmc_usbd.c **** 
 595:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_RESET);
 1468              	 .loc 1 595 0
 1469 0132 054B     	 ldr r3,.L77
 1470 0134 D3F80032 	 ldr r3,[r3,#512]
 1471 0138 0420     	 movs r0,#4
 1472 013a 9847     	 blx r3
 596:../Libraries/XMCLib/src/xmc_usbd.c **** 
 597:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear reset intr */
 598:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_RESET);
 1473              	 .loc 1 598 0
 1474 013c 0420     	 movs r0,#4
 1475 013e FFF7FEFF 	 bl XMC_USBD_ClearEvent
 599:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1476              	 .loc 1 599 0
 1477 0142 2037     	 adds r7,r7,#32
 1478              	.LCFI57:
 1479              	 .cfi_def_cfa_offset 8
 1480 0144 BD46     	 mov sp,r7
 1481              	.LCFI58:
 1482              	 .cfi_def_cfa_register 13
 1483              	 
 1484 0146 80BD     	 pop {r7,pc}
 1485              	.L78:
 1486              	 .align 2
 1487              	.L77:
 1488 0148 00000000 	 .word xmc_device
 1489              	 .cfi_endproc
 1490              	.LFE180:
 1492              	 .section .text.XMC_USBD_lHandleOTGInt,"ax",%progbits
 1493              	 .align 2
 1494              	 .thumb
 1495              	 .thumb_func
 1497              	XMC_USBD_lHandleOTGInt:
 1498              	.LFB181:
 600:../Libraries/XMCLib/src/xmc_usbd.c **** 
 601:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 602:../Libraries/XMCLib/src/xmc_usbd.c **** * @brief Handle OTG Interrupt
 603:../Libraries/XMCLib/src/xmc_usbd.c **** *
 604:../Libraries/XMCLib/src/xmc_usbd.c **** * It detects especially connect and disconnect events.
 605:../Libraries/XMCLib/src/xmc_usbd.c **** */
 606:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void)
 607:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1499              	 .loc 1 607 0
 1500              	 .cfi_startproc
 1501              	 
 1502              	 
 1503 0000 80B5     	 push {r7,lr}
 1504              	.LCFI59:
 1505              	 .cfi_def_cfa_offset 8
 1506              	 .cfi_offset 7,-8
 1507              	 .cfi_offset 14,-4
 1508 0002 82B0     	 sub sp,sp,#8
 1509              	.LCFI60:
 1510              	 .cfi_def_cfa_offset 16
 1511 0004 00AF     	 add r7,sp,#0
 1512              	.LCFI61:
 1513              	 .cfi_def_cfa_register 7
 608:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t data;
 609:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gotgint;
 1514              	 .loc 1 609 0
 1515 0006 0F4B     	 ldr r3,.L81
 1516 0008 D3F8A031 	 ldr r3,[r3,#416]
 1517 000c 5B68     	 ldr r3,[r3,#4]
 1518 000e 7B60     	 str r3,[r7,#4]
 610:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 1519              	 .loc 1 610 0
 1520 0010 3B79     	 ldrb r3,[r7,#4]
 1521 0012 03F00403 	 and r3,r3,#4
 1522 0016 DBB2     	 uxtb r3,r3
 1523 0018 002B     	 cmp r3,#0
 1524 001a 0BD0     	 beq .L80
 611:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 612:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 0U;
 1525              	 .loc 1 612 0
 1526 001c 094A     	 ldr r2,.L81
 1527 001e 92F8FE31 	 ldrb r3,[r2,#510]
 1528 0022 6FF38203 	 bfc r3,#2,#1
 1529 0026 82F8FE31 	 strb r3,[r2,#510]
 613:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 1530              	 .loc 1 613 0
 1531 002a 064B     	 ldr r3,.L81
 1532 002c D3F80032 	 ldr r3,[r3,#512]
 1533 0030 0120     	 movs r0,#1
 1534 0032 9847     	 blx r3
 1535              	.L80:
 614:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 615:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lClearEventOTG(data.d32);
 1536              	 .loc 1 615 0
 1537 0034 7B68     	 ldr r3,[r7,#4]
 1538 0036 1846     	 mov r0,r3
 1539 0038 FFF7FEFF 	 bl XMC_USBD_lClearEventOTG
 616:../Libraries/XMCLib/src/xmc_usbd.c **** 
 617:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1540              	 .loc 1 617 0
 1541 003c 0837     	 adds r7,r7,#8
 1542              	.LCFI62:
 1543              	 .cfi_def_cfa_offset 8
 1544 003e BD46     	 mov sp,r7
 1545              	.LCFI63:
 1546              	 .cfi_def_cfa_register 13
 1547              	 
 1548 0040 80BD     	 pop {r7,pc}
 1549              	.L82:
 1550 0042 00BF     	 .align 2
 1551              	.L81:
 1552 0044 00000000 	 .word xmc_device
 1553              	 .cfi_endproc
 1554              	.LFE181:
 1556              	 .section .text.XMC_USBD_lHandleEnumDone,"ax",%progbits
 1557              	 .align 2
 1558              	 .thumb
 1559              	 .thumb_func
 1561              	XMC_USBD_lHandleEnumDone:
 1562              	.LFB182:
 618:../Libraries/XMCLib/src/xmc_usbd.c **** 
 619:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 620:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Interrupt handler for device enumeration done.
 621:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 622:../Libraries/XMCLib/src/xmc_usbd.c ****  * Handles the enumeration done from dwc_otg, when the host has enumerated the device.
 623:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 624:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void)
 625:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1563              	 .loc 1 625 0
 1564              	 .cfi_startproc
 1565              	 
 1566              	 
 1567 0000 80B5     	 push {r7,lr}
 1568              	.LCFI64:
 1569              	 .cfi_def_cfa_offset 8
 1570              	 .cfi_offset 7,-8
 1571              	 .cfi_offset 14,-4
 1572 0002 82B0     	 sub sp,sp,#8
 1573              	.LCFI65:
 1574              	 .cfi_def_cfa_offset 16
 1575 0004 00AF     	 add r7,sp,#0
 1576              	.LCFI66:
 1577              	 .cfi_def_cfa_register 7
 626:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Normaly we need to check dctl
 627:../Libraries/XMCLib/src/xmc_usbd.c ****    * We are always fullspeed, so max it up. */
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 629:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
 630:../Libraries/XMCLib/src/xmc_usbd.c **** 
 631:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_in_register[0U]->diepctl;
 1578              	 .loc 1 631 0
 1579 0006 1B4B     	 ldr r3,.L84
 1580 0008 D3F8A831 	 ldr r3,[r3,#424]
 1581 000c 1B68     	 ldr r3,[r3]
 1582 000e 7B60     	 str r3,[r7,#4]
 632:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 1583              	 .loc 1 632 0
 1584 0010 BB88     	 ldrh r3,[r7,#4]
 1585 0012 6FF30A03 	 bfc r3,#0,#11
 1586 0016 BB80     	 strh r3,[r7,#4]
 633:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 1587              	 .loc 1 633 0
 1588 0018 164B     	 ldr r3,.L84
 1589 001a D3F8A831 	 ldr r3,[r3,#424]
 1590 001e 7A68     	 ldr r2,[r7,#4]
 1591 0020 1A60     	 str r2,[r3]
 634:../Libraries/XMCLib/src/xmc_usbd.c **** 
 635:../Libraries/XMCLib/src/xmc_usbd.c ****   /* update device connected flag */
 636:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsConnected = 1U;
 1592              	 .loc 1 636 0
 1593 0022 144A     	 ldr r2,.L84
 1594 0024 92F8FE31 	 ldrb r3,[r2,#510]
 1595 0028 43F00103 	 orr r3,r3,#1
 1596 002c 82F8FE31 	 strb r3,[r2,#510]
 637:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 1597              	 .loc 1 637 0
 1598 0030 104A     	 ldr r2,.L84
 1599 0032 92F8FE31 	 ldrb r3,[r2,#510]
 1600 0036 43F00403 	 orr r3,r3,#4
 1601 003a 82F8FE31 	 strb r3,[r2,#510]
 638:../Libraries/XMCLib/src/xmc_usbd.c **** 
 639:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_CONNECT);
 1602              	 .loc 1 639 0
 1603 003e 0D4B     	 ldr r3,.L84
 1604 0040 D3F80032 	 ldr r3,[r3,#512]
 1605 0044 0220     	 movs r0,#2
 1606 0046 9847     	 blx r3
 640:../Libraries/XMCLib/src/xmc_usbd.c **** 
 641:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Set Trim */
 642:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 1607              	 .loc 1 642 0
 1608 0048 0A4B     	 ldr r3,.L84
 1609 004a D3F8A031 	 ldr r3,[r3,#416]
 1610 004e DB68     	 ldr r3,[r3,#12]
 1611 0050 3B60     	 str r3,[r7]
 643:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 1612              	 .loc 1 643 0
 1613 0052 7B78     	 ldrb r3,[r7,#1]
 1614 0054 0922     	 movs r2,#9
 1615 0056 62F38503 	 bfi r3,r2,#2,#4
 1616 005a 7B70     	 strb r3,[r7,#1]
 644:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 1617              	 .loc 1 644 0
 1618 005c 054B     	 ldr r3,.L84
 1619 005e D3F8A031 	 ldr r3,[r3,#416]
 1620 0062 3A68     	 ldr r2,[r7]
 1621 0064 DA60     	 str r2,[r3,#12]
 645:../Libraries/XMCLib/src/xmc_usbd.c **** 
 646:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 647:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_ENUMDONE);
 1622              	 .loc 1 647 0
 1623 0066 0B20     	 movs r0,#11
 1624 0068 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 648:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1625              	 .loc 1 648 0
 1626 006c 0837     	 adds r7,r7,#8
 1627              	.LCFI67:
 1628              	 .cfi_def_cfa_offset 8
 1629 006e BD46     	 mov sp,r7
 1630              	.LCFI68:
 1631              	 .cfi_def_cfa_register 13
 1632              	 
 1633 0070 80BD     	 pop {r7,pc}
 1634              	.L85:
 1635 0072 00BF     	 .align 2
 1636              	.L84:
 1637 0074 00000000 	 .word xmc_device
 1638              	 .cfi_endproc
 1639              	.LFE182:
 1641              	 .section .text.XMC_USBD_lHandleOEPInt,"ax",%progbits
 1642              	 .align 2
 1643              	 .thumb
 1644              	 .thumb_func
 1646              	XMC_USBD_lHandleOEPInt:
 1647              	.LFB183:
 649:../Libraries/XMCLib/src/xmc_usbd.c **** 
 650:../Libraries/XMCLib/src/xmc_usbd.c **** 
 651:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 652:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all out endpoints
 653:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 654:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 655:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 656:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 657:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj)
 658:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1648              	 .loc 1 658 0
 1649              	 .cfi_startproc
 1650              	 
 1651              	 
 1652 0000 80B5     	 push {r7,lr}
 1653              	.LCFI69:
 1654              	 .cfi_def_cfa_offset 8
 1655              	 .cfi_offset 7,-8
 1656              	 .cfi_offset 14,-4
 1657 0002 8CB0     	 sub sp,sp,#48
 1658              	.LCFI70:
 1659              	 .cfi_def_cfa_offset 56
 1660 0004 00AF     	 add r7,sp,#0
 1661              	.LCFI71:
 1662              	 .cfi_def_cfa_register 7
 1663 0006 7860     	 str r0,[r7,#4]
 659:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 660:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 661:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk_data_t doepmsk;
 662:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
 663:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t doeptsiz;
 664:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 665:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 666:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 667:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 668:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 669:../Libraries/XMCLib/src/xmc_usbd.c **** 
 670:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1664              	 .loc 1 670 0
 1665 0008 6A4B     	 ldr r3,.L97
 1666 000a D3F8A431 	 ldr r3,[r3,#420]
 1667 000e 9B69     	 ldr r3,[r3,#24]
 1668 0010 FB61     	 str r3,[r7,#28]
 671:../Libraries/XMCLib/src/xmc_usbd.c **** 
 672:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 1669              	 .loc 1 672 0
 1670 0012 684B     	 ldr r3,.L97
 1671 0014 D3F8A431 	 ldr r3,[r3,#420]
 1672 0018 DB69     	 ldr r3,[r3,#28]
 1673 001a BB61     	 str r3,[r7,#24]
 673:../Libraries/XMCLib/src/xmc_usbd.c **** 
 674:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk.d32 = xmc_device.device_register->doepmsk;
 1674              	 .loc 1 674 0
 1675 001c 654B     	 ldr r3,.L97
 1676 001e D3F8A431 	 ldr r3,[r3,#420]
 1677 0022 5B69     	 ldr r3,[r3,#20]
 1678 0024 7B61     	 str r3,[r7,#20]
 675:../Libraries/XMCLib/src/xmc_usbd.c **** 
 676:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.out & daintmsk.ep.out;
 1679              	 .loc 1 676 0
 1680 0026 FA8B     	 ldrh r2,[r7,#30]
 1681 0028 7B8B     	 ldrh r3,[r7,#26]
 1682 002a 1340     	 ands r3,r3,r2
 1683 002c BB85     	 strh r3,[r7,#44]
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1684              	 .loc 1 677 0
 1685 002e 0023     	 movs r3,#0
 1686 0030 87F82F30 	 strb r3,[r7,#47]
 678:../Libraries/XMCLib/src/xmc_usbd.c ****   doeptsiz.d32 = 0U;
 1687              	 .loc 1 678 0
 1688 0034 0023     	 movs r3,#0
 1689 0036 FB60     	 str r3,[r7,#12]
 679:../Libraries/XMCLib/src/xmc_usbd.c **** 
 680:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1690              	 .loc 1 680 0
 1691 0038 AEE0     	 b .L87
 1692              	.L96:
 681:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 682:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = (mask >> (uint16_t)ep_num);
 1693              	 .loc 1 682 0
 1694 003a BA8D     	 ldrh r2,[r7,#44]
 1695 003c 97F82F30 	 ldrb r3,[r7,#47]
 1696 0040 42FA03F3 	 asr r3,r2,r3
 1697 0044 7B85     	 strh r3,[r7,#42]
 683:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = temp1 & 0x1U;
 1698              	 .loc 1 683 0
 1699 0046 7B8D     	 ldrh r3,[r7,#42]
 1700 0048 03F00103 	 and r3,r3,#1
 1701 004c 3B85     	 strh r3,[r7,#40]
 684:../Libraries/XMCLib/src/xmc_usbd.c ****     if (temp)
 1702              	 .loc 1 684 0
 1703 004e 3B8D     	 ldrh r3,[r7,#40]
 1704 0050 002B     	 cmp r3,#0
 1705 0052 00F09C80 	 beq .L88
 685:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       /* load register data for endpoint */
 687:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1706              	 .loc 1 687 0
 1707 0056 97F82F30 	 ldrb r3,[r7,#47]
 1708 005a 3422     	 movs r2,#52
 1709 005c 02FB03F3 	 mul r3,r2,r3
 1710 0060 544A     	 ldr r2,.L97
 1711 0062 1344     	 add r3,r3,r2
 1712 0064 7B62     	 str r3,[r7,#36]
 688:../Libraries/XMCLib/src/xmc_usbd.c ****       doepint.d32 = xmc_device.endpoint_out_register[ep_num]->doepint & doepmsk.d32;
 1713              	 .loc 1 688 0
 1714 0066 97F82F30 	 ldrb r3,[r7,#47]
 1715 006a 524A     	 ldr r2,.L97
 1716 006c 7033     	 adds r3,r3,#112
 1717 006e 9B00     	 lsls r3,r3,#2
 1718 0070 1344     	 add r3,r3,r2
 1719 0072 5B68     	 ldr r3,[r3,#4]
 1720 0074 9A68     	 ldr r2,[r3,#8]
 1721 0076 7B69     	 ldr r3,[r7,#20]
 1722 0078 1340     	 ands r3,r3,r2
 1723 007a 3B61     	 str r3,[r7,#16]
 689:../Libraries/XMCLib/src/xmc_usbd.c ****       if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1724              	 .loc 1 689 0
 1725 007c 7B68     	 ldr r3,[r7,#4]
 1726 007e 5B7B     	 ldrb r3,[r3,#13]
 1727 0080 002B     	 cmp r3,#0
 1728 0082 08D1     	 bne .L89
 690:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 691:../Libraries/XMCLib/src/xmc_usbd.c ****         doeptsiz.d32 = xmc_device.endpoint_out_register[ep_num]->doeptsiz;
 1729              	 .loc 1 691 0
 1730 0084 97F82F30 	 ldrb r3,[r7,#47]
 1731 0088 4A4A     	 ldr r2,.L97
 1732 008a 7033     	 adds r3,r3,#112
 1733 008c 9B00     	 lsls r3,r3,#2
 1734 008e 1344     	 add r3,r3,r2
 1735 0090 5B68     	 ldr r3,[r3,#4]
 1736 0092 1B69     	 ldr r3,[r3,#16]
 1737 0094 FB60     	 str r3,[r7,#12]
 1738              	.L89:
 692:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 693:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Setup Phase Complete */
 694:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.setup)
 1739              	 .loc 1 694 0
 1740 0096 3B7C     	 ldrb r3,[r7,#16]
 1741 0098 03F00803 	 and r3,r3,#8
 1742 009c DBB2     	 uxtb r3,r3
 1743 009e 002B     	 cmp r3,#0
 1744 00a0 33D0     	 beq .L90
 695:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 696:../Libraries/XMCLib/src/xmc_usbd.c ****         /* ep0 not stalled any more */
 697:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->isStalled = 0U;
 1745              	 .loc 1 697 0
 1746 00a2 7A6A     	 ldr r2,[r7,#36]
 1747 00a4 1379     	 ldrb r3,[r2,#4]
 1748 00a6 6FF34513 	 bfc r3,#5,#1
 1749 00aa 1371     	 strb r3,[r2,#4]
 698:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1750              	 .loc 1 698 0
 1751 00ac 7B68     	 ldr r3,[r7,#4]
 1752 00ae 5B7B     	 ldrb r3,[r3,#13]
 1753 00b0 002B     	 cmp r3,#0
 1754 00b2 0ED1     	 bne .L91
 699:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 700:../Libraries/XMCLib/src/xmc_usbd.c ****           /* calculate size for setup packet */
 701:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = (uint32_t)(((uint32_t)XMC_USBD_SETUP_COUNT -
 702:../Libraries/XMCLib/src/xmc_usbd.c ****                                               (uint32_t)((deptsiz0_data_t *)&doeptsiz)->b.supcnt) *
 1755              	 .loc 1 702 0
 1756 00b4 07F10C03 	 add r3,r7,#12
 1757 00b8 DB78     	 ldrb r3,[r3,#3]
 1758 00ba C3F34113 	 ubfx r3,r3,#5,#2
 1759 00be DBB2     	 uxtb r3,r3
 1760 00c0 1A46     	 mov r2,r3
 701:../Libraries/XMCLib/src/xmc_usbd.c ****                                               (uint32_t)((deptsiz0_data_t *)&doeptsiz)->b.supcnt) *
 1761              	 .loc 1 701 0
 1762 00c2 1346     	 mov r3,r2
 1763 00c4 5B07     	 lsls r3,r3,#29
 1764 00c6 9B1A     	 subs r3,r3,r2
 1765 00c8 DB00     	 lsls r3,r3,#3
 1766 00ca 03F11802 	 add r2,r3,#24
 1767 00ce 7B6A     	 ldr r3,[r7,#36]
 1768 00d0 1A61     	 str r2,[r3,#16]
 1769              	.L91:
 703:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 704:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1770              	 .loc 1 704 0
 1771 00d2 7B68     	 ldr r3,[r7,#4]
 1772 00d4 5B7B     	 ldrb r3,[r3,#13]
 1773 00d6 012B     	 cmp r3,#1
 1774 00d8 06D1     	 bne .L92
 705:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 706:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable += ep->xferCount;
 1775              	 .loc 1 706 0
 1776 00da 7B6A     	 ldr r3,[r7,#36]
 1777 00dc 1A69     	 ldr r2,[r3,#16]
 1778 00de 7B6A     	 ldr r3,[r7,#36]
 1779 00e0 DB6A     	 ldr r3,[r3,#44]
 1780 00e2 1A44     	 add r2,r2,r3
 1781 00e4 7B6A     	 ldr r3,[r7,#36]
 1782 00e6 1A61     	 str r2,[r3,#16]
 1783              	.L92:
 707:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 708:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->outInUse = 0U;
 1784              	 .loc 1 708 0
 1785 00e8 7B6A     	 ldr r3,[r7,#36]
 1786 00ea 5A68     	 ldr r2,[r3,#4]
 1787 00ec 22F01002 	 bic r2,r2,#16
 1788 00f0 5A60     	 str r2,[r3,#4]
 709:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.EndpointEvent_cb(0U, XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 1789              	 .loc 1 709 0
 1790 00f2 304B     	 ldr r3,.L97
 1791 00f4 D3F80432 	 ldr r3,[r3,#516]
 1792 00f8 0020     	 movs r0,#0
 1793 00fa 0021     	 movs r1,#0
 1794 00fc 9847     	 blx r3
 710:../Libraries/XMCLib/src/xmc_usbd.c ****         /* clear the interrupt */
 711:../Libraries/XMCLib/src/xmc_usbd.c ****         XMC_USBD_ClearEventOUTEP((uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP, ep_num);
 1795              	 .loc 1 711 0
 1796 00fe 97F82F30 	 ldrb r3,[r7,#47]
 1797 0102 0820     	 movs r0,#8
 1798 0104 1946     	 mov r1,r3
 1799 0106 FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1800              	.L90:
 712:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 713:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.xfercompl)
 1801              	 .loc 1 713 0
 1802 010a 3B7C     	 ldrb r3,[r7,#16]
 1803 010c 03F00103 	 and r3,r3,#1
 1804 0110 DBB2     	 uxtb r3,r3
 1805 0112 002B     	 cmp r3,#0
 1806 0114 34D0     	 beq .L93
 714:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 715:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1807              	 .loc 1 715 0
 1808 0116 7B68     	 ldr r3,[r7,#4]
 1809 0118 5B7B     	 ldrb r3,[r3,#13]
 1810 011a 002B     	 cmp r3,#0
 1811 011c 15D1     	 bne .L94
 1812              	.LBB3:
 716:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 717:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes = (ep->xferLength - ep->xferCount) - doeptsiz.b.xfersize;
 1813              	 .loc 1 717 0
 1814 011e 7B6A     	 ldr r3,[r7,#36]
 1815 0120 9A6A     	 ldr r2,[r3,#40]
 1816 0122 7B6A     	 ldr r3,[r7,#36]
 1817 0124 DB6A     	 ldr r3,[r3,#44]
 1818 0126 D31A     	 subs r3,r2,r3
 1819 0128 FA68     	 ldr r2,[r7,#12]
 1820 012a C2F31202 	 ubfx r2,r2,#0,#19
 1821 012e 9B1A     	 subs r3,r3,r2
 1822 0130 3B62     	 str r3,[r7,#32]
 718:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 1823              	 .loc 1 718 0
 1824 0132 7B6A     	 ldr r3,[r7,#36]
 1825 0134 DA6A     	 ldr r2,[r3,#44]
 1826 0136 3B6A     	 ldr r3,[r7,#32]
 1827 0138 1A44     	 add r2,r2,r3
 1828 013a 7B6A     	 ldr r3,[r7,#36]
 1829 013c DA62     	 str r2,[r3,#44]
 719:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 1830              	 .loc 1 719 0
 1831 013e 7B6A     	 ldr r3,[r7,#36]
 1832 0140 5A6A     	 ldr r2,[r3,#36]
 1833 0142 3B6A     	 ldr r3,[r7,#32]
 1834 0144 1A44     	 add r2,r2,r3
 1835 0146 7B6A     	 ldr r3,[r7,#36]
 1836 0148 5A62     	 str r2,[r3,#36]
 1837              	.L94:
 1838              	.LBE3:
 720:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 721:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 1839              	 .loc 1 721 0
 1840 014a 7B6A     	 ldr r3,[r7,#36]
 1841 014c 1A6B     	 ldr r2,[r3,#48]
 1842 014e 7B6A     	 ldr r3,[r7,#36]
 1843 0150 9B6A     	 ldr r3,[r3,#40]
 1844 0152 9A42     	 cmp r2,r3
 1845 0154 11D1     	 bne .L95
 722:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 723:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = ep->xferCount;
 1846              	 .loc 1 723 0
 1847 0156 7B6A     	 ldr r3,[r7,#36]
 1848 0158 DA6A     	 ldr r2,[r3,#44]
 1849 015a 7B6A     	 ldr r3,[r7,#36]
 1850 015c 1A61     	 str r2,[r3,#16]
 724:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 1851              	 .loc 1 724 0
 1852 015e 7B6A     	 ldr r3,[r7,#36]
 1853 0160 5A68     	 ldr r2,[r3,#4]
 1854 0162 22F01002 	 bic r2,r2,#16
 1855 0166 5A60     	 str r2,[r3,#4]
 725:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num, XMC_USBD_EP_EVENT_OUT);
 1856              	 .loc 1 725 0
 1857 0168 124B     	 ldr r3,.L97
 1858 016a D3F80432 	 ldr r3,[r3,#516]
 1859 016e 97F82F20 	 ldrb r2,[r7,#47]
 1860 0172 1046     	 mov r0,r2
 1861 0174 0121     	 movs r1,#1
 1862 0176 9847     	 blx r3
 1863 0178 02E0     	 b .L93
 1864              	.L95:
 726:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 727:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 728:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 729:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartReadXfer(ep);
 1865              	 .loc 1 729 0
 1866 017a 786A     	 ldr r0,[r7,#36]
 1867 017c FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
 1868              	.L93:
 730:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 731:../Libraries/XMCLib/src/xmc_usbd.c **** 
 732:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 733:../Libraries/XMCLib/src/xmc_usbd.c **** 
 734:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventOUTEP(doepint.d32, ep_num);
 1869              	 .loc 1 734 0
 1870 0180 3A69     	 ldr r2,[r7,#16]
 1871 0182 97F82F30 	 ldrb r3,[r7,#47]
 1872 0186 1046     	 mov r0,r2
 1873 0188 1946     	 mov r1,r3
 1874 018a FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1875              	.L88:
 735:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 736:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 1876              	 .loc 1 736 0
 1877 018e 97F82F30 	 ldrb r3,[r7,#47]
 1878 0192 0133     	 adds r3,r3,#1
 1879 0194 87F82F30 	 strb r3,[r7,#47]
 1880              	.L87:
 680:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1881              	 .loc 1 680 0
 1882 0198 BA8D     	 ldrh r2,[r7,#44]
 1883 019a 97F82F30 	 ldrb r3,[r7,#47]
 1884 019e 42FA03F3 	 asr r3,r2,r3
 1885 01a2 002B     	 cmp r3,#0
 1886 01a4 7FF449AF 	 bne .L96
 737:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 738:../Libraries/XMCLib/src/xmc_usbd.c **** 
 739:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 740:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_OUTEP);
 1887              	 .loc 1 740 0
 1888 01a8 0D20     	 movs r0,#13
 1889 01aa FFF7FEFF 	 bl XMC_USBD_ClearEvent
 741:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1890              	 .loc 1 741 0
 1891 01ae 3037     	 adds r7,r7,#48
 1892              	.LCFI72:
 1893              	 .cfi_def_cfa_offset 8
 1894 01b0 BD46     	 mov sp,r7
 1895              	.LCFI73:
 1896              	 .cfi_def_cfa_register 13
 1897              	 
 1898 01b2 80BD     	 pop {r7,pc}
 1899              	.L98:
 1900              	 .align 2
 1901              	.L97:
 1902 01b4 00000000 	 .word xmc_device
 1903              	 .cfi_endproc
 1904              	.LFE183:
 1906              	 .section .text.XMC_USBD_lHandleIEPInt,"ax",%progbits
 1907              	 .align 2
 1908              	 .thumb
 1909              	 .thumb_func
 1911              	XMC_USBD_lHandleIEPInt:
 1912              	.LFB184:
 742:../Libraries/XMCLib/src/xmc_usbd.c **** 
 743:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 744:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all in endpoints
 745:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 746:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 747:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 748:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 749:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj)
 750:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1913              	 .loc 1 750 0
 1914              	 .cfi_startproc
 1915              	 
 1916              	 
 1917 0000 80B5     	 push {r7,lr}
 1918              	.LCFI74:
 1919              	 .cfi_def_cfa_offset 8
 1920              	 .cfi_offset 7,-8
 1921              	 .cfi_offset 14,-4
 1922 0002 8CB0     	 sub sp,sp,#48
 1923              	.LCFI75:
 1924              	 .cfi_def_cfa_offset 56
 1925 0004 00AF     	 add r7,sp,#0
 1926              	.LCFI76:
 1927              	 .cfi_def_cfa_register 7
 1928 0006 7860     	 str r0,[r7,#4]
 751:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 752:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 753:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk_data_t diepmsk;
 754:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
 755:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t dieptsiz;
 756:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 757:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 758:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 759:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 760:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t inepint;
 761:../Libraries/XMCLib/src/xmc_usbd.c **** 
 762:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1929              	 .loc 1 762 0
 1930 0008 6A4B     	 ldr r3,.L109
 1931 000a D3F8A431 	 ldr r3,[r3,#420]
 1932 000e 9B69     	 ldr r3,[r3,#24]
 1933 0010 7B61     	 str r3,[r7,#20]
 763:../Libraries/XMCLib/src/xmc_usbd.c **** 
 764:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk.d32 = xmc_device.device_register->diepmsk;
 1934              	 .loc 1 764 0
 1935 0012 684B     	 ldr r3,.L109
 1936 0014 D3F8A431 	 ldr r3,[r3,#420]
 1937 0018 1B69     	 ldr r3,[r3,#16]
 1938 001a 3B61     	 str r3,[r7,#16]
 765:../Libraries/XMCLib/src/xmc_usbd.c **** 
 766:../Libraries/XMCLib/src/xmc_usbd.c ****   dieptsiz.d32 = 0U;
 1939              	 .loc 1 766 0
 1940 001c 0023     	 movs r3,#0
 1941 001e BB60     	 str r3,[r7,#8]
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.in;
 1942              	 .loc 1 767 0
 1943 0020 BB8A     	 ldrh r3,[r7,#20]
 1944 0022 BB85     	 strh r3,[r7,#44]
 768:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1945              	 .loc 1 768 0
 1946 0024 0023     	 movs r3,#0
 1947 0026 87F82F30 	 strb r3,[r7,#47]
 769:../Libraries/XMCLib/src/xmc_usbd.c **** 
 770:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1948              	 .loc 1 770 0
 1949 002a B5E0     	 b .L100
 1950              	.L108:
 771:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 772:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = ((uint16_t)mask >> (uint16_t)ep_num);
 1951              	 .loc 1 772 0
 1952 002c BA8D     	 ldrh r2,[r7,#44]
 1953 002e 97F82F30 	 ldrb r3,[r7,#47]
 1954 0032 42FA03F3 	 asr r3,r2,r3
 1955 0036 7B85     	 strh r3,[r7,#42]
 773:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = (uint16_t)temp1 & (uint16_t)0x1U;
 1956              	 .loc 1 773 0
 1957 0038 7B8D     	 ldrh r3,[r7,#42]
 1958 003a 03F00103 	 and r3,r3,#1
 1959 003e 3B85     	 strh r3,[r7,#40]
 774:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((uint16_t)temp)
 1960              	 .loc 1 774 0
 1961 0040 3B8D     	 ldrh r3,[r7,#40]
 1962 0042 002B     	 cmp r3,#0
 1963 0044 00F0A380 	 beq .L101
 775:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 776:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1964              	 .loc 1 776 0
 1965 0048 97F82F30 	 ldrb r3,[r7,#47]
 1966 004c 3422     	 movs r2,#52
 1967 004e 02FB03F3 	 mul r3,r2,r3
 1968 0052 584A     	 ldr r2,.L109
 1969 0054 1344     	 add r3,r3,r2
 1970 0056 7B62     	 str r3,[r7,#36]
 777:../Libraries/XMCLib/src/xmc_usbd.c ****       inepint = (uint32_t)xmc_device.endpoint_in_register[ep_num]->diepint;
 1971              	 .loc 1 777 0
 1972 0058 97F82F30 	 ldrb r3,[r7,#47]
 1973 005c 554A     	 ldr r2,.L109
 1974 005e 6A33     	 adds r3,r3,#106
 1975 0060 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1976 0064 9B68     	 ldr r3,[r3,#8]
 1977 0066 3B62     	 str r3,[r7,#32]
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 779:../Libraries/XMCLib/src/xmc_usbd.c ****                     ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep-
 1978              	 .loc 1 779 0
 1979 0068 524B     	 ldr r3,.L109
 1980 006a D3F8A431 	 ldr r3,[r3,#420]
 1981 006e 5B6B     	 ldr r3,[r3,#52]
 1982 0070 7A6A     	 ldr r2,[r7,#36]
 1983 0072 1278     	 ldrb r2,[r2]
 1984 0074 C2F30302 	 ubfx r2,r2,#0,#4
 1985 0078 D2B2     	 uxtb r2,r2
 1986 007a D340     	 lsrs r3,r3,r2
 780:../Libraries/XMCLib/src/xmc_usbd.c ****                        0x1U) << 7U) | (uint32_t)diepmsk.d32);
 1987              	 .loc 1 780 0
 1988 007c DB01     	 lsls r3,r3,#7
 1989 007e DAB2     	 uxtb r2,r3
 1990 0080 3B69     	 ldr r3,[r7,#16]
 1991 0082 1A43     	 orrs r2,r2,r3
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 1992              	 .loc 1 778 0
 1993 0084 3B6A     	 ldr r3,[r7,#32]
 1994 0086 1340     	 ands r3,r3,r2
 1995 0088 FB60     	 str r3,[r7,#12]
 781:../Libraries/XMCLib/src/xmc_usbd.c ****       if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1996              	 .loc 1 781 0
 1997 008a 7B68     	 ldr r3,[r7,#4]
 1998 008c 5B7B     	 ldrb r3,[r3,#13]
 1999 008e 002B     	 cmp r3,#0
 2000 0090 07D1     	 bne .L102
 782:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 783:../Libraries/XMCLib/src/xmc_usbd.c ****         dieptsiz.d32 = xmc_device.endpoint_in_register[ep_num]->dieptsiz;
 2001              	 .loc 1 783 0
 2002 0092 97F82F30 	 ldrb r3,[r7,#47]
 2003 0096 474A     	 ldr r2,.L109
 2004 0098 6A33     	 adds r3,r3,#106
 2005 009a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2006 009e 1B69     	 ldr r3,[r3,#16]
 2007 00a0 BB60     	 str r3,[r7,#8]
 2008              	.L102:
 784:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 785:../Libraries/XMCLib/src/xmc_usbd.c ****       if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2009              	 .loc 1 785 0
 2010 00a2 7B68     	 ldr r3,[r7,#4]
 2011 00a4 5B7B     	 ldrb r3,[r3,#13]
 2012 00a6 012B     	 cmp r3,#1
 2013 00a8 15D1     	 bne .L103
 786:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 787:../Libraries/XMCLib/src/xmc_usbd.c ****         if (diepint.b.emptyintr)
 2014              	 .loc 1 787 0
 2015 00aa 3B7B     	 ldrb r3,[r7,#12]
 2016 00ac 23F07F03 	 bic r3,r3,#127
 2017 00b0 DBB2     	 uxtb r3,r3
 2018 00b2 002B     	 cmp r3,#0
 2019 00b4 0FD0     	 beq .L103
 2020              	.LBB4:
 788:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 789:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes;
 790:../Libraries/XMCLib/src/xmc_usbd.c ****           bytes = XMC_USBD_lWriteFifo(ep);
 2021              	 .loc 1 790 0
 2022 00b6 786A     	 ldr r0,[r7,#36]
 2023 00b8 FFF7FEFF 	 bl XMC_USBD_lWriteFifo
 2024 00bc F861     	 str r0,[r7,#28]
 791:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 2025              	 .loc 1 791 0
 2026 00be 7B6A     	 ldr r3,[r7,#36]
 2027 00c0 DA6A     	 ldr r2,[r3,#44]
 2028 00c2 FB69     	 ldr r3,[r7,#28]
 2029 00c4 1A44     	 add r2,r2,r3
 2030 00c6 7B6A     	 ldr r3,[r7,#36]
 2031 00c8 DA62     	 str r2,[r3,#44]
 792:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 2032              	 .loc 1 792 0
 2033 00ca 7B6A     	 ldr r3,[r7,#36]
 2034 00cc 5A6A     	 ldr r2,[r3,#36]
 2035 00ce FB69     	 ldr r3,[r7,#28]
 2036 00d0 1A44     	 add r2,r2,r3
 2037 00d2 7B6A     	 ldr r3,[r7,#36]
 2038 00d4 5A62     	 str r2,[r3,#36]
 2039              	.L103:
 2040              	.LBE4:
 793:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 794:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 795:../Libraries/XMCLib/src/xmc_usbd.c ****       if (diepint.b.xfercompl)
 2041              	 .loc 1 795 0
 2042 00d6 3B7B     	 ldrb r3,[r7,#12]
 2043 00d8 03F00103 	 and r3,r3,#1
 2044 00dc DBB2     	 uxtb r3,r3
 2045 00de 002B     	 cmp r3,#0
 2046 00e0 4ED0     	 beq .L104
 796:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 797:../Libraries/XMCLib/src/xmc_usbd.c ****         if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2047              	 .loc 1 797 0
 2048 00e2 7B68     	 ldr r3,[r7,#4]
 2049 00e4 5B7B     	 ldrb r3,[r3,#13]
 2050 00e6 002B     	 cmp r3,#0
 2051 00e8 1DD1     	 bne .L105
 798:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 799:../Libraries/XMCLib/src/xmc_usbd.c ****           /* update xfer values */
 800:../Libraries/XMCLib/src/xmc_usbd.c ****           if ((dieptsiz.b.pktcnt == 0U) && (dieptsiz.b.xfersize == 0U))
 2052              	 .loc 1 800 0
 2053 00ea 7A89     	 ldrh r2,[r7,#10]
 2054 00ec 41F6F873 	 movw r3,#8184
 2055 00f0 1340     	 ands r3,r3,r2
 2056 00f2 9BB2     	 uxth r3,r3
 2057 00f4 002B     	 cmp r3,#0
 2058 00f6 16D1     	 bne .L105
 2059              	 .loc 1 800 0 is_stmt 0 discriminator 1
 2060 00f8 BB68     	 ldr r3,[r7,#8]
 2061 00fa C3F31203 	 ubfx r3,r3,#0,#19
 2062 00fe 002B     	 cmp r3,#0
 2063 0100 11D1     	 bne .L105
 2064              	.LBB5:
 801:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 802:../Libraries/XMCLib/src/xmc_usbd.c ****             uint32_t Bytes = ep->xferLength - ep->xferCount;
 2065              	 .loc 1 802 0 is_stmt 1
 2066 0102 7B6A     	 ldr r3,[r7,#36]
 2067 0104 9A6A     	 ldr r2,[r3,#40]
 2068 0106 7B6A     	 ldr r3,[r7,#36]
 2069 0108 DB6A     	 ldr r3,[r3,#44]
 2070 010a D31A     	 subs r3,r2,r3
 2071 010c BB61     	 str r3,[r7,#24]
 803:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 2072              	 .loc 1 803 0
 2073 010e 7B6A     	 ldr r3,[r7,#36]
 2074 0110 DA6A     	 ldr r2,[r3,#44]
 2075 0112 BB69     	 ldr r3,[r7,#24]
 2076 0114 1A44     	 add r2,r2,r3
 2077 0116 7B6A     	 ldr r3,[r7,#36]
 2078 0118 DA62     	 str r2,[r3,#44]
 804:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 2079              	 .loc 1 804 0
 2080 011a 7B6A     	 ldr r3,[r7,#36]
 2081 011c 5A6A     	 ldr r2,[r3,#36]
 2082 011e BB69     	 ldr r3,[r7,#24]
 2083 0120 1A44     	 add r2,r2,r3
 2084 0122 7B6A     	 ldr r3,[r7,#36]
 2085 0124 5A62     	 str r2,[r3,#36]
 2086              	.L105:
 2087              	.LBE5:
 805:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 806:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 807:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 2088              	 .loc 1 807 0
 2089 0126 7B6A     	 ldr r3,[r7,#36]
 2090 0128 1A6B     	 ldr r2,[r3,#48]
 2091 012a 7B6A     	 ldr r3,[r7,#36]
 2092 012c 9B6A     	 ldr r3,[r3,#40]
 2093 012e 9A42     	 cmp r2,r3
 2094 0130 23D1     	 bne .L106
 808:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 809:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->inInUse = 0U;
 2095              	 .loc 1 809 0
 2096 0132 7B6A     	 ldr r3,[r7,#36]
 2097 0134 5A68     	 ldr r2,[r3,#4]
 2098 0136 22F00802 	 bic r2,r2,#8
 2099 013a 5A60     	 str r2,[r3,#4]
 810:../Libraries/XMCLib/src/xmc_usbd.c ****           if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2100              	 .loc 1 810 0
 2101 013c 7B68     	 ldr r3,[r7,#4]
 2102 013e 5B7B     	 ldrb r3,[r3,#13]
 2103 0140 012B     	 cmp r3,#1
 2104 0142 0ED1     	 bne .L107
 811:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 812:../Libraries/XMCLib/src/xmc_usbd.c ****             /* mask fifo empty interrupt */
 813:../Libraries/XMCLib/src/xmc_usbd.c ****             xmc_device.device_register->dtknqr4_fifoemptymsk =
 2105              	 .loc 1 813 0
 2106 0144 1B4B     	 ldr r3,.L109
 2107 0146 D3F8A431 	 ldr r3,[r3,#420]
 814:../Libraries/XMCLib/src/xmc_usbd.c ****               (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_n
 2108              	 .loc 1 814 0
 2109 014a 1A4A     	 ldr r2,.L109
 2110 014c D2F8A421 	 ldr r2,[r2,#420]
 2111 0150 516B     	 ldr r1,[r2,#52]
 2112 0152 97F82F20 	 ldrb r2,[r7,#47]
 2113 0156 0120     	 movs r0,#1
 2114 0158 00FA02F2 	 lsl r2,r0,r2
 2115 015c D243     	 mvns r2,r2
 2116 015e 0A40     	 ands r2,r2,r1
 813:../Libraries/XMCLib/src/xmc_usbd.c ****               (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_n
 2117              	 .loc 1 813 0
 2118 0160 5A63     	 str r2,[r3,#52]
 2119              	.L107:
 815:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 816:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(0x80U | ep_num, XMC_USBD_EP_EVENT_IN);
 2120              	 .loc 1 816 0
 2121 0162 144B     	 ldr r3,.L109
 2122 0164 D3F80432 	 ldr r3,[r3,#516]
 2123 0168 97F82F20 	 ldrb r2,[r7,#47]
 2124 016c 62F07F02 	 orn r2,r2,#127
 2125 0170 D2B2     	 uxtb r2,r2
 2126 0172 1046     	 mov r0,r2
 2127 0174 0221     	 movs r1,#2
 2128 0176 9847     	 blx r3
 2129 0178 02E0     	 b .L104
 2130              	.L106:
 817:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 818:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 819:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 820:../Libraries/XMCLib/src/xmc_usbd.c ****           /* start next step of transfer */
 821:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartWriteXfer(ep);
 2131              	 .loc 1 821 0
 2132 017a 786A     	 ldr r0,[r7,#36]
 2133 017c FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
 2134              	.L104:
 822:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 823:../Libraries/XMCLib/src/xmc_usbd.c **** 
 824:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 825:../Libraries/XMCLib/src/xmc_usbd.c **** 
 826:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventINEP((uint32_t)diepint.d32, ep_num);
 2135              	 .loc 1 826 0
 2136 0180 FA68     	 ldr r2,[r7,#12]
 2137 0182 97F82F30 	 ldrb r3,[r7,#47]
 2138 0186 1046     	 mov r0,r2
 2139 0188 1946     	 mov r1,r3
 2140 018a FFF7FEFF 	 bl XMC_USBD_ClearEventINEP
 2141              	.L101:
 827:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 828:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 2142              	 .loc 1 828 0
 2143 018e 97F82F30 	 ldrb r3,[r7,#47]
 2144 0192 0133     	 adds r3,r3,#1
 2145 0194 87F82F30 	 strb r3,[r7,#47]
 2146              	.L100:
 770:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2147              	 .loc 1 770 0
 2148 0198 BA8D     	 ldrh r2,[r7,#44]
 2149 019a 97F82F30 	 ldrb r3,[r7,#47]
 2150 019e 42FA03F3 	 asr r3,r2,r3
 2151 01a2 002B     	 cmp r3,#0
 2152 01a4 7FF442AF 	 bne .L108
 829:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 830:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_INEP);
 2153              	 .loc 1 830 0
 2154 01a8 0E20     	 movs r0,#14
 2155 01aa FFF7FEFF 	 bl XMC_USBD_ClearEvent
 831:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2156              	 .loc 1 831 0
 2157 01ae 3037     	 adds r7,r7,#48
 2158              	.LCFI77:
 2159              	 .cfi_def_cfa_offset 8
 2160 01b0 BD46     	 mov sp,r7
 2161              	.LCFI78:
 2162              	 .cfi_def_cfa_register 13
 2163              	 
 2164 01b2 80BD     	 pop {r7,pc}
 2165              	.L110:
 2166              	 .align 2
 2167              	.L109:
 2168 01b4 00000000 	 .word xmc_device
 2169              	 .cfi_endproc
 2170              	.LFE184:
 2172              	 .section .text.XMC_USBD_lHandleRxFLvl,"ax",%progbits
 2173              	 .align 2
 2174              	 .thumb
 2175              	 .thumb_func
 2177              	XMC_USBD_lHandleRxFLvl:
 2178              	.LFB185:
 832:../Libraries/XMCLib/src/xmc_usbd.c **** 
 833:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 834:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief RX Fifo interrupt handler
 835:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 836:../Libraries/XMCLib/src/xmc_usbd.c ****  * This function handles the interrupt, when the rx fifo is not empty anymore.
 837:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 838:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void)
 839:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2179              	 .loc 1 839 0
 2180              	 .cfi_startproc
 2181              	 
 2182              	 
 2183 0000 80B5     	 push {r7,lr}
 2184              	.LCFI79:
 2185              	 .cfi_def_cfa_offset 8
 2186              	 .cfi_offset 7,-8
 2187              	 .cfi_offset 14,-4
 2188 0002 82B0     	 sub sp,sp,#8
 2189              	.LCFI80:
 2190              	 .cfi_def_cfa_offset 16
 2191 0004 00AF     	 add r7,sp,#0
 2192              	.LCFI81:
 2193              	 .cfi_def_cfa_register 7
 840:../Libraries/XMCLib/src/xmc_usbd.c ****   device_grxsts_data_t data;
 841:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->grxstsp;
 2194              	 .loc 1 841 0
 2195 0006 1D4B     	 ldr r3,.L121
 2196 0008 D3F8A031 	 ldr r3,[r3,#416]
 2197 000c 1B6A     	 ldr r3,[r3,#32]
 2198 000e 7B60     	 str r3,[r7,#4]
 842:../Libraries/XMCLib/src/xmc_usbd.c **** 
 843:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (data.b.pktsts)
 2199              	 .loc 1 843 0
 2200 0010 BB79     	 ldrb r3,[r7,#6]
 2201 0012 C3F34303 	 ubfx r3,r3,#1,#4
 2202 0016 DBB2     	 uxtb r3,r3
 2203 0018 013B     	 subs r3,r3,#1
 2204 001a 052B     	 cmp r3,#5
 2205 001c 2AD8     	 bhi .L120
 2206 001e 01A2     	 adr r2,.L114
 2207 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2208              	 .p2align 2
 2209              	.L114:
 2210 0024 75000000 	 .word .L120+1
 2211 0028 3D000000 	 .word .L115+1
 2212 002c 75000000 	 .word .L120+1
 2213 0030 75000000 	 .word .L120+1
 2214 0034 75000000 	 .word .L120+1
 2215 0038 59000000 	 .word .L118+1
 2216              	 .p2align 1
 2217              	.L115:
 844:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 845:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_GOUTNAK:
 846:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 847:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTCMPL:
 848:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 849:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTDATA:
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum, (uint32_t)data.b.bcnt);
 2218              	 .loc 1 850 0
 2219 003c 3B79     	 ldrb r3,[r7,#4]
 2220 003e C3F30303 	 ubfx r3,r3,#0,#4
 2221 0042 DBB2     	 uxtb r3,r3
 2222 0044 1A46     	 mov r2,r3
 2223 0046 BB88     	 ldrh r3,[r7,#4]
 2224 0048 C3F30A13 	 ubfx r3,r3,#4,#11
 2225 004c 9BB2     	 uxth r3,r3
 2226 004e 1046     	 mov r0,r2
 2227 0050 1946     	 mov r1,r3
 2228 0052 FFF7FEFF 	 bl XMC_USBD_lReadFifo
 851:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2229              	 .loc 1 851 0
 2230 0056 0EE0     	 b .L111
 2231              	.L118:
 852:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUP:
 853:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum, (uint32_t)data.b.bcnt);
 2232              	 .loc 1 853 0
 2233 0058 3B79     	 ldrb r3,[r7,#4]
 2234 005a C3F30303 	 ubfx r3,r3,#0,#4
 2235 005e DBB2     	 uxtb r3,r3
 2236 0060 1A46     	 mov r2,r3
 2237 0062 BB88     	 ldrh r3,[r7,#4]
 2238 0064 C3F30A13 	 ubfx r3,r3,#4,#11
 2239 0068 9BB2     	 uxth r3,r3
 2240 006a 1046     	 mov r0,r2
 2241 006c 1946     	 mov r1,r3
 2242 006e FFF7FEFF 	 bl XMC_USBD_lReadFifo
 854:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2243              	 .loc 1 854 0
 2244 0072 00E0     	 b .L111
 2245              	.L120:
 855:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUPCMPL:
 856:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 857:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
 858:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2246              	 .loc 1 858 0
 2247 0074 00BF     	 nop
 2248              	.L111:
 859:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 860:../Libraries/XMCLib/src/xmc_usbd.c ****   /* no need to clear */
 861:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2249              	 .loc 1 861 0
 2250 0076 0837     	 adds r7,r7,#8
 2251              	.LCFI82:
 2252              	 .cfi_def_cfa_offset 8
 2253 0078 BD46     	 mov sp,r7
 2254              	.LCFI83:
 2255              	 .cfi_def_cfa_register 13
 2256              	 
 2257 007a 80BD     	 pop {r7,pc}
 2258              	.L122:
 2259              	 .align 2
 2260              	.L121:
 2261 007c 00000000 	 .word xmc_device
 2262              	 .cfi_endproc
 2263              	.LFE185:
 2265              	 .section .text.XMC_USBD_IRQHandler,"ax",%progbits
 2266              	 .align 2
 2267              	 .global XMC_USBD_IRQHandler
 2268              	 .thumb
 2269              	 .thumb_func
 2271              	XMC_USBD_IRQHandler:
 2272              	.LFB186:
 862:../Libraries/XMCLib/src/xmc_usbd.c **** 
 863:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 864:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Global interrupt handler
 865:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 866:../Libraries/XMCLib/src/xmc_usbd.c ****  * The handler first checks, which global interrupt has caused the interrupt
 867:../Libraries/XMCLib/src/xmc_usbd.c ****  * and then dispatches interrupt to the corresponding sub-handler.
 868:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 869:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_IRQHandler(const XMC_USBD_t *const obj)
 870:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2273              	 .loc 1 870 0
 2274              	 .cfi_startproc
 2275              	 
 2276              	 
 2277 0000 80B5     	 push {r7,lr}
 2278              	.LCFI84:
 2279              	 .cfi_def_cfa_offset 8
 2280              	 .cfi_offset 7,-8
 2281              	 .cfi_offset 14,-4
 2282 0002 84B0     	 sub sp,sp,#16
 2283              	.LCFI85:
 2284              	 .cfi_def_cfa_offset 24
 2285 0004 00AF     	 add r7,sp,#0
 2286              	.LCFI86:
 2287              	 .cfi_def_cfa_register 7
 2288 0006 7860     	 str r0,[r7,#4]
 871:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 872:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t data;
 873:../Libraries/XMCLib/src/xmc_usbd.c **** 
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = xmc_device.global_register->gintmsk;
 2289              	 .loc 1 874 0
 2290 0008 4F4B     	 ldr r3,.L135
 2291 000a D3F8A031 	 ldr r3,[r3,#416]
 2292 000e 9B69     	 ldr r3,[r3,#24]
 2293 0010 FB60     	 str r3,[r7,#12]
 875:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 2294              	 .loc 1 875 0
 2295 0012 4D4B     	 ldr r3,.L135
 2296 0014 D3F8A031 	 ldr r3,[r3,#416]
 2297 0018 5A69     	 ldr r2,[r3,#20]
 2298 001a FB68     	 ldr r3,[r7,#12]
 2299 001c 1340     	 ands r3,r3,r2
 2300 001e BB60     	 str r3,[r7,#8]
 876:../Libraries/XMCLib/src/xmc_usbd.c **** 
 877:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sofintr)
 2301              	 .loc 1 877 0
 2302 0020 3B7A     	 ldrb r3,[r7,#8]
 2303 0022 03F00803 	 and r3,r3,#8
 2304 0026 DBB2     	 uxtb r3,r3
 2305 0028 002B     	 cmp r3,#0
 2306 002a 07D0     	 beq .L124
 878:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 879:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SOF);
 2307              	 .loc 1 879 0
 2308 002c 464B     	 ldr r3,.L135
 2309 002e D3F80032 	 ldr r3,[r3,#512]
 2310 0032 0920     	 movs r0,#9
 2311 0034 9847     	 blx r3
 880:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 2312              	 .loc 1 880 0
 2313 0036 0920     	 movs r0,#9
 2314 0038 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2315              	.L124:
 881:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 882:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2316              	 .loc 1 882 0
 2317 003c 7B68     	 ldr r3,[r7,#4]
 2318 003e 5B7B     	 ldrb r3,[r3,#13]
 2319 0040 012B     	 cmp r3,#1
 2320 0042 19D1     	 bne .L125
 883:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 884:../Libraries/XMCLib/src/xmc_usbd.c ****     if (data.b.rxstsqlvl)
 2321              	 .loc 1 884 0
 2322 0044 3B7A     	 ldrb r3,[r7,#8]
 2323 0046 03F01003 	 and r3,r3,#16
 2324 004a DBB2     	 uxtb r3,r3
 2325 004c 002B     	 cmp r3,#0
 2326 004e 13D0     	 beq .L125
 885:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 886:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Masked that interrupt so its only done once */
 887:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 0U;
 2327              	 .loc 1 887 0
 2328 0050 3B7B     	 ldrb r3,[r7,#12]
 2329 0052 6FF30413 	 bfc r3,#4,#1
 2330 0056 3B73     	 strb r3,[r7,#12]
 888:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2331              	 .loc 1 888 0
 2332 0058 3B4B     	 ldr r3,.L135
 2333 005a D3F8A031 	 ldr r3,[r3,#416]
 2334 005e FA68     	 ldr r2,[r7,#12]
 2335 0060 9A61     	 str r2,[r3,#24]
 889:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 2336              	 .loc 1 889 0
 2337 0062 FFF7FEFF 	 bl XMC_USBD_lHandleRxFLvl
 890:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 1U;
 2338              	 .loc 1 890 0
 2339 0066 3B7B     	 ldrb r3,[r7,#12]
 2340 0068 43F01003 	 orr r3,r3,#16
 2341 006c 3B73     	 strb r3,[r7,#12]
 891:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2342              	 .loc 1 891 0
 2343 006e 364B     	 ldr r3,.L135
 2344 0070 D3F8A031 	 ldr r3,[r3,#416]
 2345 0074 FA68     	 ldr r2,[r7,#12]
 2346 0076 9A61     	 str r2,[r3,#24]
 2347              	.L125:
 892:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 893:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 894:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.erlysuspend)
 2348              	 .loc 1 894 0
 2349 0078 7B7A     	 ldrb r3,[r7,#9]
 2350 007a 03F00403 	 and r3,r3,#4
 2351 007e DBB2     	 uxtb r3,r3
 2352 0080 002B     	 cmp r3,#0
 2353 0082 02D0     	 beq .L126
 895:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 896:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_EARLYSUSPEND);
 2354              	 .loc 1 896 0
 2355 0084 0A20     	 movs r0,#10
 2356 0086 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2357              	.L126:
 897:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 898:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbsuspend)
 2358              	 .loc 1 898 0
 2359 008a 7B7A     	 ldrb r3,[r7,#9]
 2360 008c 03F00803 	 and r3,r3,#8
 2361 0090 DBB2     	 uxtb r3,r3
 2362 0092 002B     	 cmp r3,#0
 2363 0094 07D0     	 beq .L127
 899:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 900:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SUSPEND);
 2364              	 .loc 1 900 0
 2365 0096 2C4B     	 ldr r3,.L135
 2366 0098 D3F80032 	 ldr r3,[r3,#512]
 2367 009c 0620     	 movs r0,#6
 2368 009e 9847     	 blx r3
 901:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 2369              	 .loc 1 901 0
 2370 00a0 0620     	 movs r0,#6
 2371 00a2 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2372              	.L127:
 902:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 903:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.wkupintr)
 2373              	 .loc 1 903 0
 2374 00a6 FB7A     	 ldrb r3,[r7,#11]
 2375 00a8 23F07F03 	 bic r3,r3,#127
 2376 00ac DBB2     	 uxtb r3,r3
 2377 00ae 002B     	 cmp r3,#0
 2378 00b0 07D0     	 beq .L128
 904:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 905:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2379              	 .loc 1 905 0
 2380 00b2 254B     	 ldr r3,.L135
 2381 00b4 D3F80032 	 ldr r3,[r3,#512]
 2382 00b8 0820     	 movs r0,#8
 2383 00ba 9847     	 blx r3
 906:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2384              	 .loc 1 906 0
 2385 00bc 0820     	 movs r0,#8
 2386 00be FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2387              	.L128:
 907:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 908:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sessreqintr)
 2388              	 .loc 1 908 0
 2389 00c2 FB7A     	 ldrb r3,[r7,#11]
 2390 00c4 03F04003 	 and r3,r3,#64
 2391 00c8 DBB2     	 uxtb r3,r3
 2392 00ca 002B     	 cmp r3,#0
 2393 00cc 0ED0     	 beq .L129
 909:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 910:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 1U;
 2394              	 .loc 1 910 0
 2395 00ce 1E4A     	 ldr r2,.L135
 2396 00d0 92F8FE31 	 ldrb r3,[r2,#510]
 2397 00d4 43F00403 	 orr r3,r3,#4
 2398 00d8 82F8FE31 	 strb r3,[r2,#510]
 911:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 2399              	 .loc 1 911 0
 2400 00dc 1A4B     	 ldr r3,.L135
 2401 00de D3F80032 	 ldr r3,[r3,#512]
 2402 00e2 0020     	 movs r0,#0
 2403 00e4 9847     	 blx r3
 912:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 2404              	 .loc 1 912 0
 2405 00e6 0020     	 movs r0,#0
 2406 00e8 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2407              	.L129:
 913:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 914:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbreset)
 2408              	 .loc 1 914 0
 2409 00ec 7B7A     	 ldrb r3,[r7,#9]
 2410 00ee 03F01003 	 and r3,r3,#16
 2411 00f2 DBB2     	 uxtb r3,r3
 2412 00f4 002B     	 cmp r3,#0
 2413 00f6 02D0     	 beq .L130
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 916:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleUSBReset(obj);
 2414              	 .loc 1 916 0
 2415 00f8 7868     	 ldr r0,[r7,#4]
 2416 00fa FFF7FEFF 	 bl XMC_USBD_lHandleUSBReset
 2417              	.L130:
 917:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 918:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.enumdone)
 2418              	 .loc 1 918 0
 2419 00fe 7B7A     	 ldrb r3,[r7,#9]
 2420 0100 03F02003 	 and r3,r3,#32
 2421 0104 DBB2     	 uxtb r3,r3
 2422 0106 002B     	 cmp r3,#0
 2423 0108 01D0     	 beq .L131
 919:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 920:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleEnumDone();
 2424              	 .loc 1 920 0
 2425 010a FFF7FEFF 	 bl XMC_USBD_lHandleEnumDone
 2426              	.L131:
 921:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 922:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.inepint)
 2427              	 .loc 1 922 0
 2428 010e BB7A     	 ldrb r3,[r7,#10]
 2429 0110 03F00403 	 and r3,r3,#4
 2430 0114 DBB2     	 uxtb r3,r3
 2431 0116 002B     	 cmp r3,#0
 2432 0118 02D0     	 beq .L132
 923:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 924:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleIEPInt(obj);
 2433              	 .loc 1 924 0
 2434 011a 7868     	 ldr r0,[r7,#4]
 2435 011c FFF7FEFF 	 bl XMC_USBD_lHandleIEPInt
 2436              	.L132:
 925:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 926:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.outepintr)
 2437              	 .loc 1 926 0
 2438 0120 BB7A     	 ldrb r3,[r7,#10]
 2439 0122 03F00803 	 and r3,r3,#8
 2440 0126 DBB2     	 uxtb r3,r3
 2441 0128 002B     	 cmp r3,#0
 2442 012a 02D0     	 beq .L133
 927:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 928:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleOEPInt(obj);
 2443              	 .loc 1 928 0
 2444 012c 7868     	 ldr r0,[r7,#4]
 2445 012e FFF7FEFF 	 bl XMC_USBD_lHandleOEPInt
 2446              	.L133:
 929:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 930:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.otgintr)
 2447              	 .loc 1 930 0
 2448 0132 3B7A     	 ldrb r3,[r7,#8]
 2449 0134 03F00403 	 and r3,r3,#4
 2450 0138 DBB2     	 uxtb r3,r3
 2451 013a 002B     	 cmp r3,#0
 2452 013c 01D0     	 beq .L123
 931:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 932:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleOTGInt();
 2453              	 .loc 1 932 0
 2454 013e FFF7FEFF 	 bl XMC_USBD_lHandleOTGInt
 2455              	.L123:
 933:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 934:../Libraries/XMCLib/src/xmc_usbd.c **** 
 935:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2456              	 .loc 1 935 0
 2457 0142 1037     	 adds r7,r7,#16
 2458              	.LCFI87:
 2459              	 .cfi_def_cfa_offset 8
 2460 0144 BD46     	 mov sp,r7
 2461              	.LCFI88:
 2462              	 .cfi_def_cfa_register 13
 2463              	 
 2464 0146 80BD     	 pop {r7,pc}
 2465              	.L136:
 2466              	 .align 2
 2467              	.L135:
 2468 0148 00000000 	 .word xmc_device
 2469              	 .cfi_endproc
 2470              	.LFE186:
 2472              	 .section .text.XMC_USBD_Enable,"ax",%progbits
 2473              	 .align 2
 2474              	 .global XMC_USBD_Enable
 2475              	 .thumb
 2476              	 .thumb_func
 2478              	XMC_USBD_Enable:
 2479              	.LFB187:
 936:../Libraries/XMCLib/src/xmc_usbd.c **** 
 937:../Libraries/XMCLib/src/xmc_usbd.c **** 
 938:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 939:../Libraries/XMCLib/src/xmc_usbd.c ****  * API IMPLEMENTATION
 940:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 941:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 942:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enables the USB0 module
 943:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 944:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Enable(void)
 945:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2480              	 .loc 1 945 0
 2481              	 .cfi_startproc
 2482              	 
 2483              	 
 2484 0000 80B5     	 push {r7,lr}
 2485              	.LCFI89:
 2486              	 .cfi_def_cfa_offset 8
 2487              	 .cfi_offset 7,-8
 2488              	 .cfi_offset 14,-4
 2489 0002 00AF     	 add r7,sp,#0
 2490              	.LCFI90:
 2491              	 .cfi_def_cfa_register 7
 946:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 2492              	 .loc 1 947 0
 2493 0004 0448     	 ldr r0,.L138
 2494 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 948:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 949:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Reset and power up */
 950:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2495              	 .loc 1 950 0
 2496 000a 0348     	 ldr r0,.L138
 2497 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 951:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 2498              	 .loc 1 951 0
 2499 0010 FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 952:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2500              	 .loc 1 952 0
 2501 0014 80BD     	 pop {r7,pc}
 2502              	.L139:
 2503 0016 00BF     	 .align 2
 2504              	.L138:
 2505 0018 80000020 	 .word 536871040
 2506              	 .cfi_endproc
 2507              	.LFE187:
 2509              	 .section .text.XMC_USBD_Disable,"ax",%progbits
 2510              	 .align 2
 2511              	 .global XMC_USBD_Disable
 2512              	 .thumb
 2513              	 .thumb_func
 2515              	XMC_USBD_Disable:
 2516              	.LFB188:
 953:../Libraries/XMCLib/src/xmc_usbd.c **** 
 954:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 955:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disables the USB0 module
 956:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 957:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Disable(void)
 958:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2517              	 .loc 1 958 0
 2518              	 .cfi_startproc
 2519              	 
 2520              	 
 2521 0000 80B5     	 push {r7,lr}
 2522              	.LCFI91:
 2523              	 .cfi_def_cfa_offset 8
 2524              	 .cfi_offset 7,-8
 2525              	 .cfi_offset 14,-4
 2526 0002 00AF     	 add r7,sp,#0
 2527              	.LCFI92:
 2528              	 .cfi_def_cfa_register 7
 959:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 960:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2529              	 .loc 1 960 0
 2530 0004 0448     	 ldr r0,.L141
 2531 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 961:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 962:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 2532              	 .loc 1 962 0
 2533 000a 0348     	 ldr r0,.L141
 2534 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 963:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 964:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_DisableUsb();
 2535              	 .loc 1 964 0
 2536 0010 FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 965:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2537              	 .loc 1 965 0
 2538 0014 80BD     	 pop {r7,pc}
 2539              	.L142:
 2540 0016 00BF     	 .align 2
 2541              	.L141:
 2542 0018 80000020 	 .word 536871040
 2543              	 .cfi_endproc
 2544              	.LFE188:
 2546              	 .section .text.XMC_USBD_ClearEvent,"ax",%progbits
 2547              	 .align 2
 2548              	 .global XMC_USBD_ClearEvent
 2549              	 .thumb
 2550              	 .thumb_func
 2552              	XMC_USBD_ClearEvent:
 2553              	.LFB189:
 966:../Libraries/XMCLib/src/xmc_usbd.c **** 
 967:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 968:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB device event
 969:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 970:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEvent(const XMC_USBD_EVENT_t event)
 971:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2554              	 .loc 1 971 0
 2555              	 .cfi_startproc
 2556              	 
 2557              	 
 2558              	 
 2559 0000 80B4     	 push {r7}
 2560              	.LCFI93:
 2561              	 .cfi_def_cfa_offset 4
 2562              	 .cfi_offset 7,-4
 2563 0002 85B0     	 sub sp,sp,#20
 2564              	.LCFI94:
 2565              	 .cfi_def_cfa_offset 24
 2566 0004 00AF     	 add r7,sp,#0
 2567              	.LCFI95:
 2568              	 .cfi_def_cfa_register 7
 2569 0006 0346     	 mov r3,r0
 2570 0008 FB71     	 strb r3,[r7,#7]
 972:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 973:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = 0U;
 2571              	 .loc 1 973 0
 2572 000a 0023     	 movs r3,#0
 2573 000c FB60     	 str r3,[r7,#12]
 974:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (event)
 2574              	 .loc 1 974 0
 2575 000e FB79     	 ldrb r3,[r7,#7]
 2576 0010 0D2B     	 cmp r3,#13
 2577 0012 4CD8     	 bhi .L156
 2578 0014 01A2     	 adr r2,.L146
 2579 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2580 001a 00BF     	 .p2align 2
 2581              	.L146:
 2582 001c 55000000 	 .word .L145+1
 2583 0020 AF000000 	 .word .L156+1
 2584 0024 AF000000 	 .word .L156+1
 2585 0028 AF000000 	 .word .L156+1
 2586 002c 5F000000 	 .word .L147+1
 2587 0030 AF000000 	 .word .L156+1
 2588 0034 69000000 	 .word .L148+1
 2589 0038 73000000 	 .word .L149+1
 2590 003c 7D000000 	 .word .L150+1
 2591 0040 87000000 	 .word .L151+1
 2592 0044 91000000 	 .word .L152+1
 2593 0048 9B000000 	 .word .L153+1
 2594 004c AF000000 	 .word .L156+1
 2595 0050 A5000000 	 .word .L154+1
 2596              	 .p2align 1
 2597              	.L145:
 975:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 976:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_POWER_ON):
 977:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.sessreqintr = 1U;
 2598              	 .loc 1 977 0
 2599 0054 FB7B     	 ldrb r3,[r7,#15]
 2600 0056 43F04003 	 orr r3,r3,#64
 2601 005a FB73     	 strb r3,[r7,#15]
 978:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2602              	 .loc 1 978 0
 2603 005c 28E0     	 b .L155
 2604              	.L147:
 979:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 980:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.usbreset = 1U;
 2605              	 .loc 1 980 0
 2606 005e 7B7B     	 ldrb r3,[r7,#13]
 2607 0060 43F01003 	 orr r3,r3,#16
 2608 0064 7B73     	 strb r3,[r7,#13]
 981:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2609              	 .loc 1 981 0
 2610 0066 23E0     	 b .L155
 2611              	.L148:
 982:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 983:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.usbsuspend = 1U;
 2612              	 .loc 1 983 0
 2613 0068 7B7B     	 ldrb r3,[r7,#13]
 2614 006a 43F00803 	 orr r3,r3,#8
 2615 006e 7B73     	 strb r3,[r7,#13]
 984:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2616              	 .loc 1 984 0
 2617 0070 1EE0     	 b .L155
 2618              	.L149:
 985:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 986:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.wkupintr = 1U;
 2619              	 .loc 1 986 0
 2620 0072 FB7B     	 ldrb r3,[r7,#15]
 2621 0074 43F08003 	 orr r3,r3,#128
 2622 0078 FB73     	 strb r3,[r7,#15]
 987:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2623              	 .loc 1 987 0
 2624 007a 19E0     	 b .L155
 2625              	.L150:
 988:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_REMOTE_WAKEUP):
 989:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.wkupintr = 1U;
 2626              	 .loc 1 989 0
 2627 007c FB7B     	 ldrb r3,[r7,#15]
 2628 007e 43F08003 	 orr r3,r3,#128
 2629 0082 FB73     	 strb r3,[r7,#15]
 990:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2630              	 .loc 1 990 0
 2631 0084 14E0     	 b .L155
 2632              	.L151:
 991:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 992:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.sofintr = 1U;
 2633              	 .loc 1 992 0
 2634 0086 3B7B     	 ldrb r3,[r7,#12]
 2635 0088 43F00803 	 orr r3,r3,#8
 2636 008c 3B73     	 strb r3,[r7,#12]
 993:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2637              	 .loc 1 993 0
 2638 008e 0FE0     	 b .L155
 2639              	.L152:
 994:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 995:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.erlysuspend = 1U;
 2640              	 .loc 1 995 0
 2641 0090 7B7B     	 ldrb r3,[r7,#13]
 2642 0092 43F00403 	 orr r3,r3,#4
 2643 0096 7B73     	 strb r3,[r7,#13]
 996:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2644              	 .loc 1 996 0
 2645 0098 0AE0     	 b .L155
 2646              	.L153:
 997:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 998:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.enumdone = 1U;
 2647              	 .loc 1 998 0
 2648 009a 7B7B     	 ldrb r3,[r7,#13]
 2649 009c 43F02003 	 orr r3,r3,#32
 2650 00a0 7B73     	 strb r3,[r7,#13]
 999:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2651              	 .loc 1 999 0
 2652 00a2 05E0     	 b .L155
 2653              	.L154:
1000:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
1001:../Libraries/XMCLib/src/xmc_usbd.c ****       clear.b.outepintr = 1U;
 2654              	 .loc 1 1001 0
 2655 00a4 BB7B     	 ldrb r3,[r7,#14]
 2656 00a6 43F00803 	 orr r3,r3,#8
 2657 00aa BB73     	 strb r3,[r7,#14]
1002:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2658              	 .loc 1 1002 0
 2659 00ac 00E0     	 b .L155
 2660              	.L156:
1003:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
1004:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2661              	 .loc 1 1004 0
 2662 00ae 00BF     	 nop
 2663              	.L155:
1005:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1006:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = clear.d32;
 2664              	 .loc 1 1006 0
 2665 00b0 044B     	 ldr r3,.L157
 2666 00b2 D3F8A031 	 ldr r3,[r3,#416]
 2667 00b6 FA68     	 ldr r2,[r7,#12]
 2668 00b8 5A61     	 str r2,[r3,#20]
1007:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2669              	 .loc 1 1007 0
 2670 00ba 1437     	 adds r7,r7,#20
 2671              	.LCFI96:
 2672              	 .cfi_def_cfa_offset 4
 2673 00bc BD46     	 mov sp,r7
 2674              	.LCFI97:
 2675              	 .cfi_def_cfa_register 13
 2676              	 
 2677 00be 5DF8047B 	 ldr r7,[sp],#4
 2678              	.LCFI98:
 2679              	 .cfi_restore 7
 2680              	 .cfi_def_cfa_offset 0
 2681 00c2 7047     	 bx lr
 2682              	.L158:
 2683              	 .align 2
 2684              	.L157:
 2685 00c4 00000000 	 .word xmc_device
 2686              	 .cfi_endproc
 2687              	.LFE189:
 2689              	 .section .text.XMC_USBD_lClearEventOTG,"ax",%progbits
 2690              	 .align 2
 2691              	 .thumb
 2692              	 .thumb_func
 2694              	XMC_USBD_lClearEventOTG:
 2695              	.LFB190:
1008:../Libraries/XMCLib/src/xmc_usbd.c **** 
1009:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1010:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OTG events
1011:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1012:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event)
1013:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2696              	 .loc 1 1013 0
 2697              	 .cfi_startproc
 2698              	 
 2699              	 
 2700              	 
 2701 0000 80B4     	 push {r7}
 2702              	.LCFI99:
 2703              	 .cfi_def_cfa_offset 4
 2704              	 .cfi_offset 7,-4
 2705 0002 85B0     	 sub sp,sp,#20
 2706              	.LCFI100:
 2707              	 .cfi_def_cfa_offset 24
 2708 0004 00AF     	 add r7,sp,#0
 2709              	.LCFI101:
 2710              	 .cfi_def_cfa_register 7
 2711 0006 7860     	 str r0,[r7,#4]
1014:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t clear = { .d32 = 0U};
 2712              	 .loc 1 1014 0
 2713 0008 0023     	 movs r3,#0
 2714 000a FB60     	 str r3,[r7,#12]
1015:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2715              	 .loc 1 1015 0
 2716 000c 7B68     	 ldr r3,[r7,#4]
 2717 000e FB60     	 str r3,[r7,#12]
1016:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gotgint = clear.d32;
 2718              	 .loc 1 1016 0
 2719 0010 044B     	 ldr r3,.L160
 2720 0012 D3F8A031 	 ldr r3,[r3,#416]
 2721 0016 FA68     	 ldr r2,[r7,#12]
 2722 0018 5A60     	 str r2,[r3,#4]
1017:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2723              	 .loc 1 1017 0
 2724 001a 1437     	 adds r7,r7,#20
 2725              	.LCFI102:
 2726              	 .cfi_def_cfa_offset 4
 2727 001c BD46     	 mov sp,r7
 2728              	.LCFI103:
 2729              	 .cfi_def_cfa_register 13
 2730              	 
 2731 001e 5DF8047B 	 ldr r7,[sp],#4
 2732              	.LCFI104:
 2733              	 .cfi_restore 7
 2734              	 .cfi_def_cfa_offset 0
 2735 0022 7047     	 bx lr
 2736              	.L161:
 2737              	 .align 2
 2738              	.L160:
 2739 0024 00000000 	 .word xmc_device
 2740              	 .cfi_endproc
 2741              	.LFE190:
 2743              	 .section .text.XMC_USBD_ClearEventINEP,"ax",%progbits
 2744              	 .align 2
 2745              	 .global XMC_USBD_ClearEventINEP
 2746              	 .thumb
 2747              	 .thumb_func
 2749              	XMC_USBD_ClearEventINEP:
 2750              	.LFB191:
1018:../Libraries/XMCLib/src/xmc_usbd.c **** 
1019:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1020:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB IN EP events
1021:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1022:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventINEP(uint32_t event, const uint8_t ep_num)
1023:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2751              	 .loc 1 1023 0
 2752              	 .cfi_startproc
 2753              	 
 2754              	 
 2755              	 
 2756 0000 80B4     	 push {r7}
 2757              	.LCFI105:
 2758              	 .cfi_def_cfa_offset 4
 2759              	 .cfi_offset 7,-4
 2760 0002 85B0     	 sub sp,sp,#20
 2761              	.LCFI106:
 2762              	 .cfi_def_cfa_offset 24
 2763 0004 00AF     	 add r7,sp,#0
 2764              	.LCFI107:
 2765              	 .cfi_def_cfa_register 7
 2766 0006 7860     	 str r0,[r7,#4]
 2767 0008 0B46     	 mov r3,r1
 2768 000a FB70     	 strb r3,[r7,#3]
1024:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
1025:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2769              	 .loc 1 1025 0
 2770 000c 7B68     	 ldr r3,[r7,#4]
 2771 000e FB60     	 str r3,[r7,#12]
1026:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep_num]->diepint = clear.d32;
 2772              	 .loc 1 1026 0
 2773 0010 FB78     	 ldrb r3,[r7,#3]
 2774 0012 054A     	 ldr r2,.L163
 2775 0014 6A33     	 adds r3,r3,#106
 2776 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2777 001a FA68     	 ldr r2,[r7,#12]
 2778 001c 9A60     	 str r2,[r3,#8]
1027:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2779              	 .loc 1 1027 0
 2780 001e 1437     	 adds r7,r7,#20
 2781              	.LCFI108:
 2782              	 .cfi_def_cfa_offset 4
 2783 0020 BD46     	 mov sp,r7
 2784              	.LCFI109:
 2785              	 .cfi_def_cfa_register 13
 2786              	 
 2787 0022 5DF8047B 	 ldr r7,[sp],#4
 2788              	.LCFI110:
 2789              	 .cfi_restore 7
 2790              	 .cfi_def_cfa_offset 0
 2791 0026 7047     	 bx lr
 2792              	.L164:
 2793              	 .align 2
 2794              	.L163:
 2795 0028 00000000 	 .word xmc_device
 2796              	 .cfi_endproc
 2797              	.LFE191:
 2799              	 .section .text.XMC_USBD_ClearEventOUTEP,"ax",%progbits
 2800              	 .align 2
 2801              	 .global XMC_USBD_ClearEventOUTEP
 2802              	 .thumb
 2803              	 .thumb_func
 2805              	XMC_USBD_ClearEventOUTEP:
 2806              	.LFB192:
1028:../Libraries/XMCLib/src/xmc_usbd.c **** 
1029:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1030:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OUT EP events
1031:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1032:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventOUTEP(uint32_t event, const uint8_t ep_num)
1033:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2807              	 .loc 1 1033 0
 2808              	 .cfi_startproc
 2809              	 
 2810              	 
 2811              	 
 2812 0000 80B4     	 push {r7}
 2813              	.LCFI111:
 2814              	 .cfi_def_cfa_offset 4
 2815              	 .cfi_offset 7,-4
 2816 0002 85B0     	 sub sp,sp,#20
 2817              	.LCFI112:
 2818              	 .cfi_def_cfa_offset 24
 2819 0004 00AF     	 add r7,sp,#0
 2820              	.LCFI113:
 2821              	 .cfi_def_cfa_register 7
 2822 0006 7860     	 str r0,[r7,#4]
 2823 0008 0B46     	 mov r3,r1
 2824 000a FB70     	 strb r3,[r7,#3]
1034:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
1035:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2825              	 .loc 1 1035 0
 2826 000c 7B68     	 ldr r3,[r7,#4]
 2827 000e FB60     	 str r3,[r7,#12]
1036:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep_num]->doepint = clear.d32;
 2828              	 .loc 1 1036 0
 2829 0010 FB78     	 ldrb r3,[r7,#3]
 2830 0012 064A     	 ldr r2,.L166
 2831 0014 7033     	 adds r3,r3,#112
 2832 0016 9B00     	 lsls r3,r3,#2
 2833 0018 1344     	 add r3,r3,r2
 2834 001a 5B68     	 ldr r3,[r3,#4]
 2835 001c FA68     	 ldr r2,[r7,#12]
 2836 001e 9A60     	 str r2,[r3,#8]
1037:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2837              	 .loc 1 1037 0
 2838 0020 1437     	 adds r7,r7,#20
 2839              	.LCFI114:
 2840              	 .cfi_def_cfa_offset 4
 2841 0022 BD46     	 mov sp,r7
 2842              	.LCFI115:
 2843              	 .cfi_def_cfa_register 13
 2844              	 
 2845 0024 5DF8047B 	 ldr r7,[sp],#4
 2846              	.LCFI116:
 2847              	 .cfi_restore 7
 2848              	 .cfi_def_cfa_offset 0
 2849 0028 7047     	 bx lr
 2850              	.L167:
 2851 002a 00BF     	 .align 2
 2852              	.L166:
 2853 002c 00000000 	 .word xmc_device
 2854              	 .cfi_endproc
 2855              	.LFE192:
 2857              	 .section .text.XMC_USBD_EnableEventOUTEP,"ax",%progbits
 2858              	 .align 2
 2859              	 .global XMC_USBD_EnableEventOUTEP
 2860              	 .thumb
 2861              	 .thumb_func
 2863              	XMC_USBD_EnableEventOUTEP:
 2864              	.LFB193:
1038:../Libraries/XMCLib/src/xmc_usbd.c **** 
1039:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1040:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB OUT EP events
1041:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1042:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventOUTEP(uint32_t event)
1043:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2865              	 .loc 1 1043 0
 2866              	 .cfi_startproc
 2867              	 
 2868              	 
 2869              	 
 2870 0000 80B4     	 push {r7}
 2871              	.LCFI117:
 2872              	 .cfi_def_cfa_offset 4
 2873              	 .cfi_offset 7,-4
 2874 0002 85B0     	 sub sp,sp,#20
 2875              	.LCFI118:
 2876              	 .cfi_def_cfa_offset 24
 2877 0004 00AF     	 add r7,sp,#0
 2878              	.LCFI119:
 2879              	 .cfi_def_cfa_register 7
 2880 0006 7860     	 str r0,[r7,#4]
1044:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
1045:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint.d32 = event;
 2881              	 .loc 1 1045 0
 2882 0008 7B68     	 ldr r3,[r7,#4]
 2883 000a FB60     	 str r3,[r7,#12]
1046:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->doepmsk |= doepint.d32;
 2884              	 .loc 1 1046 0
 2885 000c 074B     	 ldr r3,.L169
 2886 000e D3F8A431 	 ldr r3,[r3,#420]
 2887 0012 064A     	 ldr r2,.L169
 2888 0014 D2F8A421 	 ldr r2,[r2,#420]
 2889 0018 5169     	 ldr r1,[r2,#20]
 2890 001a FA68     	 ldr r2,[r7,#12]
 2891 001c 0A43     	 orrs r2,r2,r1
 2892 001e 5A61     	 str r2,[r3,#20]
1047:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2893              	 .loc 1 1047 0
 2894 0020 1437     	 adds r7,r7,#20
 2895              	.LCFI120:
 2896              	 .cfi_def_cfa_offset 4
 2897 0022 BD46     	 mov sp,r7
 2898              	.LCFI121:
 2899              	 .cfi_def_cfa_register 13
 2900              	 
 2901 0024 5DF8047B 	 ldr r7,[sp],#4
 2902              	.LCFI122:
 2903              	 .cfi_restore 7
 2904              	 .cfi_def_cfa_offset 0
 2905 0028 7047     	 bx lr
 2906              	.L170:
 2907 002a 00BF     	 .align 2
 2908              	.L169:
 2909 002c 00000000 	 .word xmc_device
 2910              	 .cfi_endproc
 2911              	.LFE193:
 2913              	 .section .text.XMC_USBD_EnableEventINEP,"ax",%progbits
 2914              	 .align 2
 2915              	 .global XMC_USBD_EnableEventINEP
 2916              	 .thumb
 2917              	 .thumb_func
 2919              	XMC_USBD_EnableEventINEP:
 2920              	.LFB194:
1048:../Libraries/XMCLib/src/xmc_usbd.c **** 
1049:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1050:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB IN EP events
1051:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1052:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventINEP(uint32_t event)
1053:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2921              	 .loc 1 1053 0
 2922              	 .cfi_startproc
 2923              	 
 2924              	 
 2925              	 
 2926 0000 80B4     	 push {r7}
 2927              	.LCFI123:
 2928              	 .cfi_def_cfa_offset 4
 2929              	 .cfi_offset 7,-4
 2930 0002 85B0     	 sub sp,sp,#20
 2931              	.LCFI124:
 2932              	 .cfi_def_cfa_offset 24
 2933 0004 00AF     	 add r7,sp,#0
 2934              	.LCFI125:
 2935              	 .cfi_def_cfa_register 7
 2936 0006 7860     	 str r0,[r7,#4]
1054:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
1055:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint.d32 = event;
 2937              	 .loc 1 1055 0
 2938 0008 7B68     	 ldr r3,[r7,#4]
 2939 000a FB60     	 str r3,[r7,#12]
1056:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->diepmsk |= diepint.d32;
 2940              	 .loc 1 1056 0
 2941 000c 074B     	 ldr r3,.L172
 2942 000e D3F8A431 	 ldr r3,[r3,#420]
 2943 0012 064A     	 ldr r2,.L172
 2944 0014 D2F8A421 	 ldr r2,[r2,#420]
 2945 0018 1169     	 ldr r1,[r2,#16]
 2946 001a FA68     	 ldr r2,[r7,#12]
 2947 001c 0A43     	 orrs r2,r2,r1
 2948 001e 1A61     	 str r2,[r3,#16]
1057:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2949              	 .loc 1 1057 0
 2950 0020 1437     	 adds r7,r7,#20
 2951              	.LCFI126:
 2952              	 .cfi_def_cfa_offset 4
 2953 0022 BD46     	 mov sp,r7
 2954              	.LCFI127:
 2955              	 .cfi_def_cfa_register 13
 2956              	 
 2957 0024 5DF8047B 	 ldr r7,[sp],#4
 2958              	.LCFI128:
 2959              	 .cfi_restore 7
 2960              	 .cfi_def_cfa_offset 0
 2961 0028 7047     	 bx lr
 2962              	.L173:
 2963 002a 00BF     	 .align 2
 2964              	.L172:
 2965 002c 00000000 	 .word xmc_device
 2966              	 .cfi_endproc
 2967              	.LFE194:
 2969              	 .section .text.XMC_USBD_GetCapabilities,"ax",%progbits
 2970              	 .align 2
 2971              	 .global XMC_USBD_GetCapabilities
 2972              	 .thumb
 2973              	 .thumb_func
 2975              	XMC_USBD_GetCapabilities:
 2976              	.LFB195:
1058:../Libraries/XMCLib/src/xmc_usbd.c **** 
1059:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1060:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device capabilities
1061:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1062:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_CAPABILITIES_t XMC_USBD_GetCapabilities()
1063:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2977              	 .loc 1 1063 0
 2978              	 .cfi_startproc
 2979              	 
 2980              	 
 2981              	 
 2982 0000 80B4     	 push {r7}
 2983              	.LCFI129:
 2984              	 .cfi_def_cfa_offset 4
 2985              	 .cfi_offset 7,-4
 2986 0002 83B0     	 sub sp,sp,#12
 2987              	.LCFI130:
 2988              	 .cfi_def_cfa_offset 16
 2989 0004 00AF     	 add r7,sp,#0
 2990              	.LCFI131:
 2991              	 .cfi_def_cfa_register 7
1064:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_CAPABILITIES_t cap = {0U};
 2992              	 .loc 1 1064 0
 2993 0006 0023     	 movs r3,#0
 2994 0008 7B60     	 str r3,[r7,#4]
1065:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_connect = 1U;
 2995              	 .loc 1 1065 0
 2996 000a 3B79     	 ldrb r3,[r7,#4]
 2997 000c 43F00403 	 orr r3,r3,#4
 2998 0010 3B71     	 strb r3,[r7,#4]
1066:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_disconnect = 1U;
 2999              	 .loc 1 1066 0
 3000 0012 3B79     	 ldrb r3,[r7,#4]
 3001 0014 43F00803 	 orr r3,r3,#8
 3002 0018 3B71     	 strb r3,[r7,#4]
1067:../Libraries/XMCLib/src/xmc_usbd.c **** #if UC_SERIES == 45
1068:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 1U;
1069:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 1U;
1070:../Libraries/XMCLib/src/xmc_usbd.c **** #else
1071:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 0U;
 3003              	 .loc 1 1071 0
 3004 001a 3B79     	 ldrb r3,[r7,#4]
 3005 001c 6FF34103 	 bfc r3,#1,#1
 3006 0020 3B71     	 strb r3,[r7,#4]
1072:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 0U;
 3007              	 .loc 1 1072 0
 3008 0022 3B79     	 ldrb r3,[r7,#4]
 3009 0024 6FF30003 	 bfc r3,#0,#1
 3010 0028 3B71     	 strb r3,[r7,#4]
1073:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
1074:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_high_speed = 0U;
 3011              	 .loc 1 1074 0
 3012 002a 3B79     	 ldrb r3,[r7,#4]
 3013 002c 6FF34513 	 bfc r3,#5,#1
 3014 0030 3B71     	 strb r3,[r7,#4]
1075:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_remote_wakeup = 1U;
 3015              	 .loc 1 1075 0
 3016 0032 7B79     	 ldrb r3,[r7,#5]
 3017 0034 43F00103 	 orr r3,r3,#1
 3018 0038 7B71     	 strb r3,[r7,#5]
1076:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_reset = 1U;
 3019              	 .loc 1 1076 0
 3020 003a 3B79     	 ldrb r3,[r7,#4]
 3021 003c 43F01003 	 orr r3,r3,#16
 3022 0040 3B71     	 strb r3,[r7,#4]
1077:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_resume = 1U;
 3023              	 .loc 1 1077 0
 3024 0042 3B79     	 ldrb r3,[r7,#4]
 3025 0044 43F08003 	 orr r3,r3,#128
 3026 0048 3B71     	 strb r3,[r7,#4]
1078:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_suspend = 1U;
 3027              	 .loc 1 1078 0
 3028 004a 3B79     	 ldrb r3,[r7,#4]
 3029 004c 43F04003 	 orr r3,r3,#64
 3030 0050 3B71     	 strb r3,[r7,#4]
1079:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.reserved = 0U;
 3031              	 .loc 1 1079 0
 3032 0052 7B68     	 ldr r3,[r7,#4]
 3033 0054 6FF35F23 	 bfc r3,#9,#23
 3034 0058 7B60     	 str r3,[r7,#4]
1080:../Libraries/XMCLib/src/xmc_usbd.c ****   return cap;
 3035              	 .loc 1 1080 0
 3036 005a 7B68     	 ldr r3,[r7,#4]
1081:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3037              	 .loc 1 1081 0
 3038 005c 1846     	 mov r0,r3
 3039 005e 0C37     	 adds r7,r7,#12
 3040              	.LCFI132:
 3041              	 .cfi_def_cfa_offset 4
 3042 0060 BD46     	 mov sp,r7
 3043              	.LCFI133:
 3044              	 .cfi_def_cfa_register 13
 3045              	 
 3046 0062 5DF8047B 	 ldr r7,[sp],#4
 3047              	.LCFI134:
 3048              	 .cfi_restore 7
 3049              	 .cfi_def_cfa_offset 0
 3050 0066 7047     	 bx lr
 3051              	 .cfi_endproc
 3052              	.LFE195:
 3054              	 .section .text.XMC_USBD_Init,"ax",%progbits
 3055              	 .align 2
 3056              	 .global XMC_USBD_Init
 3057              	 .thumb
 3058              	 .thumb_func
 3060              	XMC_USBD_Init:
 3061              	.LFB196:
1082:../Libraries/XMCLib/src/xmc_usbd.c **** 
1083:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1084:../Libraries/XMCLib/src/xmc_usbd.c ****  * Initializes the USB device
1085:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1086:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Init(XMC_USBD_t *obj)
1087:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3062              	 .loc 1 1087 0
 3063              	 .cfi_startproc
 3064              	 
 3065              	 
 3066 0000 80B5     	 push {r7,lr}
 3067              	.LCFI135:
 3068              	 .cfi_def_cfa_offset 8
 3069              	 .cfi_offset 7,-8
 3070              	 .cfi_offset 14,-4
 3071 0002 8AB0     	 sub sp,sp,#40
 3072              	.LCFI136:
 3073              	 .cfi_def_cfa_offset 48
 3074 0004 00AF     	 add r7,sp,#0
 3075              	.LCFI137:
 3076              	 .cfi_def_cfa_register 7
 3077 0006 7860     	 str r0,[r7,#4]
1088:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
1089:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
1090:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg_data_t gahbcfg;
1091:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
1092:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
1093:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1094:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
1095:../Libraries/XMCLib/src/xmc_usbd.c **** 
1096:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_ASSERT("XMC_USBD_Init: obj.usbd_max_num_eps not of type XMC_USBD_MAX_NUM_EPS_t",
1097:../Libraries/XMCLib/src/xmc_usbd.c ****              XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(obj->usbd_max_num_eps))
1098:../Libraries/XMCLib/src/xmc_usbd.c **** 
1099:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_Enable();
 3078              	 .loc 1 1099 0
 3079 0008 FFF7FEFF 	 bl XMC_USBD_Enable
1100:../Libraries/XMCLib/src/xmc_usbd.c **** 
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   usbd_init = obj;
 3080              	 .loc 1 1101 0
 3081 000c 874A     	 ldr r2,.L189
 3082 000e 7B68     	 ldr r3,[r7,#4]
 3083 0010 1360     	 str r3,[r2]
1102:../Libraries/XMCLib/src/xmc_usbd.c **** 
1103:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Filling out buffer size */
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3084              	 .loc 1 1104 0
 3085 0012 0023     	 movs r3,#0
 3086 0014 7B62     	 str r3,[r7,#36]
 3087 0016 0CE0     	 b .L177
 3088              	.L178:
1105:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1106:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_EP_OUT_BUFFERSIZE[i] = XMC_USBD_EP0_BUFFER_SIZE;
 3089              	 .loc 1 1106 0 discriminator 3
 3090 0018 854A     	 ldr r2,.L189+4
 3091 001a 7B6A     	 ldr r3,[r7,#36]
 3092 001c 4021     	 movs r1,#64
 3093 001e 42F82310 	 str r1,[r2,r3,lsl#2]
1107:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 3094              	 .loc 1 1107 0 discriminator 3
 3095 0022 844A     	 ldr r2,.L189+8
 3096 0024 7B6A     	 ldr r3,[r7,#36]
 3097 0026 4021     	 movs r1,#64
 3098 0028 42F82310 	 str r1,[r2,r3,lsl#2]
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3099              	 .loc 1 1104 0 discriminator 3
 3100 002c 7B6A     	 ldr r3,[r7,#36]
 3101 002e 0133     	 adds r3,r3,#1
 3102 0030 7B62     	 str r3,[r7,#36]
 3103              	.L177:
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3104              	 .loc 1 1104 0 is_stmt 0 discriminator 1
 3105 0032 7B6A     	 ldr r3,[r7,#36]
 3106 0034 062B     	 cmp r3,#6
 3107 0036 EFD9     	 bls .L178
1108:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1109:../Libraries/XMCLib/src/xmc_usbd.c **** 
1110:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear device status */
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void *)&xmc_device, 0x0U, sizeof(XMC_USBD_DEVICE_t));
 3108              	 .loc 1 1111 0 is_stmt 1
 3109 0038 7F48     	 ldr r0,.L189+12
 3110 003a 0021     	 movs r1,#0
 3111 003c 4FF40272 	 mov r2,#520
 3112 0040 FFF7FEFF 	 bl memset
1112:../Libraries/XMCLib/src/xmc_usbd.c **** 
1113:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign callbacks */
1114:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb = obj->cb_xmc_device_event;
 3113              	 .loc 1 1114 0
 3114 0044 7B68     	 ldr r3,[r7,#4]
 3115 0046 5B68     	 ldr r3,[r3,#4]
 3116 0048 7B4A     	 ldr r2,.L189+12
 3117 004a C2F80032 	 str r3,[r2,#512]
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
 3118              	 .loc 1 1115 0
 3119 004e 7B68     	 ldr r3,[r7,#4]
 3120 0050 9B68     	 ldr r3,[r3,#8]
 3121 0052 794A     	 ldr r2,.L189+12
 3122 0054 C2F80432 	 str r3,[r2,#516]
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
 3123              	 .loc 1 1116 0
 3124 0058 7B68     	 ldr r3,[r7,#4]
 3125 005a 1B68     	 ldr r3,[r3]
 3126 005c 3B62     	 str r3,[r7,#32]
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
1118:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register = (dwc_otg_core_global_regs_t *)(obj->usbd);
 3127              	 .loc 1 1118 0
 3128 005e 7B68     	 ldr r3,[r7,#4]
 3129 0060 1B68     	 ldr r3,[r3]
 3130 0062 754A     	 ldr r2,.L189+12
 3131 0064 C2F8A031 	 str r3,[r2,#416]
1119:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t *)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GL
 3132              	 .loc 1 1119 0
 3133 0068 3B6A     	 ldr r3,[r7,#32]
 3134 006a 03F50063 	 add r3,r3,#2048
 3135 006e 724A     	 ldr r2,.L189+12
 3136 0070 C2F8A431 	 str r3,[r2,#420]
1120:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3137              	 .loc 1 1120 0
 3138 0074 0023     	 movs r3,#0
 3139 0076 7B62     	 str r3,[r7,#36]
 3140 0078 0CE0     	 b .L179
 3141              	.L180:
1121:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1122:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[i] = (dwc_otg_dev_in_ep_regs_t *)(XMC_USBD_BASE_ADDRESS + DWC_D
 3142              	 .loc 1 1122 0 discriminator 3
 3143 007a 7B6A     	 ldr r3,[r7,#36]
 3144 007c 4833     	 adds r3,r3,#72
 3145 007e 5B01     	 lsls r3,r3,#5
 3146 0080 3A6A     	 ldr r2,[r7,#32]
 3147 0082 1A44     	 add r2,r2,r3
 3148 0084 6C49     	 ldr r1,.L189+12
 3149 0086 7B6A     	 ldr r3,[r7,#36]
 3150 0088 6A33     	 adds r3,r3,#106
 3151 008a 41F82320 	 str r2,[r1,r3,lsl#2]
1120:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3152              	 .loc 1 1120 0 discriminator 3
 3153 008e 7B6A     	 ldr r3,[r7,#36]
 3154 0090 0133     	 adds r3,r3,#1
 3155 0092 7B62     	 str r3,[r7,#36]
 3156              	.L179:
1120:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3157              	 .loc 1 1120 0 is_stmt 0 discriminator 1
 3158 0094 7B6A     	 ldr r3,[r7,#36]
 3159 0096 062B     	 cmp r3,#6
 3160 0098 EFD9     	 bls .L180
1123:../Libraries/XMCLib/src/xmc_usbd.c ****                                          ((uint32_t)DWC_EP_REG_OFFSET * i));
1124:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1125:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_EPS; i++)
 3161              	 .loc 1 1125 0 is_stmt 1
 3162 009a 0023     	 movs r3,#0
 3163 009c 7B62     	 str r3,[r7,#36]
 3164 009e 0DE0     	 b .L181
 3165              	.L182:
1126:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1127:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i] = (dwc_otg_dev_out_ep_regs_t *)(XMC_USBD_BASE_ADDRESS +
1128:../Libraries/XMCLib/src/xmc_usbd.c ****                                           DWC_DEV_OUT_EP_REG_OFFSET +
 3166              	 .loc 1 1128 0 discriminator 3
 3167 00a0 7B6A     	 ldr r3,[r7,#36]
 3168 00a2 5833     	 adds r3,r3,#88
 3169 00a4 5B01     	 lsls r3,r3,#5
 3170 00a6 3A6A     	 ldr r2,[r7,#32]
 3171 00a8 1A44     	 add r2,r2,r3
1127:../Libraries/XMCLib/src/xmc_usbd.c ****                                           DWC_DEV_OUT_EP_REG_OFFSET +
 3172              	 .loc 1 1127 0 discriminator 3
 3173 00aa 6349     	 ldr r1,.L189+12
 3174 00ac 7B6A     	 ldr r3,[r7,#36]
 3175 00ae 7033     	 adds r3,r3,#112
 3176 00b0 9B00     	 lsls r3,r3,#2
 3177 00b2 0B44     	 add r3,r3,r1
 3178 00b4 5A60     	 str r2,[r3,#4]
1125:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3179              	 .loc 1 1125 0 discriminator 3
 3180 00b6 7B6A     	 ldr r3,[r7,#36]
 3181 00b8 0133     	 adds r3,r3,#1
 3182 00ba 7B62     	 str r3,[r7,#36]
 3183              	.L181:
1125:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3184              	 .loc 1 1125 0 is_stmt 0 discriminator 1
 3185 00bc 7B6A     	 ldr r3,[r7,#36]
 3186 00be 062B     	 cmp r3,#6
 3187 00c0 EED9     	 bls .L182
1129:../Libraries/XMCLib/src/xmc_usbd.c ****                                           ((uint32_t)DWC_EP_REG_OFFSET * i));
1130:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1131:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint32_t)XMC_USBD_NUM_TX_FIFOS; i++)
 3188              	 .loc 1 1131 0 is_stmt 1
 3189 00c2 0023     	 movs r3,#0
 3190 00c4 7B62     	 str r3,[r7,#36]
 3191 00c6 0CE0     	 b .L183
 3192              	.L184:
1132:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1133:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.fifo[i] = (uint32_t *)(XMC_USBD_BASE_ADDRESS +
1134:../Libraries/XMCLib/src/xmc_usbd.c ****                                       XMC_USBD_TX_FIFO_REG_OFFSET +
 3193              	 .loc 1 1134 0 discriminator 3
 3194 00c8 7B6A     	 ldr r3,[r7,#36]
 3195 00ca 0133     	 adds r3,r3,#1
 3196 00cc 1B03     	 lsls r3,r3,#12
 3197 00ce 3A6A     	 ldr r2,[r7,#32]
 3198 00d0 1A44     	 add r2,r2,r3
1133:../Libraries/XMCLib/src/xmc_usbd.c ****                                       XMC_USBD_TX_FIFO_REG_OFFSET +
 3199              	 .loc 1 1133 0 discriminator 3
 3200 00d2 5949     	 ldr r1,.L189+12
 3201 00d4 7B6A     	 ldr r3,[r7,#36]
 3202 00d6 7833     	 adds r3,r3,#120
 3203 00d8 41F82320 	 str r2,[r1,r3,lsl#2]
1131:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3204              	 .loc 1 1131 0 discriminator 3
 3205 00dc 7B6A     	 ldr r3,[r7,#36]
 3206 00de 0133     	 adds r3,r3,#1
 3207 00e0 7B62     	 str r3,[r7,#36]
 3208              	.L183:
1131:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3209              	 .loc 1 1131 0 is_stmt 0 discriminator 1
 3210 00e2 7B6A     	 ldr r3,[r7,#36]
 3211 00e4 062B     	 cmp r3,#6
 3212 00e6 EFD9     	 bls .L184
1135:../Libraries/XMCLib/src/xmc_usbd.c ****                                       (i * XMC_USBD_TX_FIFO_OFFSET));
1136:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   /* obj data structure for endpoint 0 */
1138:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Done by driver core */
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure ahb details */
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.d32 = xmc_device.global_register->gahbcfg;
 3213              	 .loc 1 1140 0 is_stmt 1
 3214 00e8 534B     	 ldr r3,.L189+12
 3215 00ea D3F8A031 	 ldr r3,[r3,#416]
 3216 00ee 9B68     	 ldr r3,[r3,#8]
 3217 00f0 FB61     	 str r3,[r7,#28]
1141:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
 3218              	 .loc 1 1141 0
 3219 00f2 3B7F     	 ldrb r3,[r7,#28]
 3220 00f4 43F00103 	 orr r3,r3,#1
 3221 00f8 3B77     	 strb r3,[r7,#28]
1142:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.nptxfemplvl_txfemplvl = 1U;
 3222              	 .loc 1 1142 0
 3223 00fa 3B7F     	 ldrb r3,[r7,#28]
 3224 00fc 43F08003 	 orr r3,r3,#128
 3225 0100 3B77     	 strb r3,[r7,#28]
1143:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 3226              	 .loc 1 1143 0
 3227 0102 7B68     	 ldr r3,[r7,#4]
 3228 0104 5B7B     	 ldrb r3,[r3,#13]
 3229 0106 002B     	 cmp r3,#0
 3230 0108 04D1     	 bne .L185
1144:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1145:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Enable dma if needed */
1146:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 1U; /* enable dma if needed */
 3231              	 .loc 1 1146 0
 3232 010a 3B7F     	 ldrb r3,[r7,#28]
 3233 010c 43F02003 	 orr r3,r3,#32
 3234 0110 3B77     	 strb r3,[r7,#28]
 3235 0112 03E0     	 b .L186
 3236              	.L185:
1147:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1148:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1150:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 0U;
 3237              	 .loc 1 1150 0
 3238 0114 3B7F     	 ldrb r3,[r7,#28]
 3239 0116 6FF34513 	 bfc r3,#5,#1
 3240 011a 3B77     	 strb r3,[r7,#28]
 3241              	.L186:
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1152:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gahbcfg = gahbcfg.d32;
 3242              	 .loc 1 1152 0
 3243 011c 464B     	 ldr r3,.L189+12
 3244 011e D3F8A031 	 ldr r3,[r3,#416]
 3245 0122 FA69     	 ldr r2,[r7,#28]
 3246 0124 9A60     	 str r2,[r3,#8]
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */
1154:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 3247              	 .loc 1 1154 0
 3248 0126 444B     	 ldr r3,.L189+12
 3249 0128 D3F8A031 	 ldr r3,[r3,#416]
 3250 012c DB68     	 ldr r3,[r3,#12]
 3251 012e BB61     	 str r3,[r7,#24]
1155:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
 3252              	 .loc 1 1155 0
 3253 0130 FB7E     	 ldrb r3,[r7,#27]
 3254 0132 43F04003 	 orr r3,r3,#64
 3255 0136 FB76     	 strb r3,[r7,#27]
1156:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.srpcap = 1U; /* enable session request protocoll */
 3256              	 .loc 1 1156 0
 3257 0138 7B7E     	 ldrb r3,[r7,#25]
 3258 013a 43F00103 	 orr r3,r3,#1
 3259 013e 7B76     	 strb r3,[r7,#25]
1157:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 3260              	 .loc 1 1157 0
 3261 0140 3D4B     	 ldr r3,.L189+12
 3262 0142 D3F8A031 	 ldr r3,[r3,#416]
 3263 0146 BA69     	 ldr r2,[r7,#24]
 3264 0148 DA60     	 str r2,[r3,#12]
1158:../Libraries/XMCLib/src/xmc_usbd.c **** 
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Device init */
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device speed */
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 3265              	 .loc 1 1161 0
 3266 014a 3B4B     	 ldr r3,.L189+12
 3267 014c D3F8A431 	 ldr r3,[r3,#420]
 3268 0150 1B68     	 ldr r3,[r3]
 3269 0152 7B61     	 str r3,[r7,#20]
1162:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
 3270              	 .loc 1 1162 0
 3271 0154 3B7D     	 ldrb r3,[r7,#20]
 3272 0156 43F00303 	 orr r3,r3,#3
 3273 015a 3B75     	 strb r3,[r7,#20]
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
 3274              	 .loc 1 1163 0
 3275 015c BB7D     	 ldrb r3,[r7,#22]
 3276 015e 6FF3C713 	 bfc r3,#7,#1
 3277 0162 BB75     	 strb r3,[r7,#22]
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 3278              	 .loc 1 1164 0
 3279 0164 344B     	 ldr r3,.L189+12
 3280 0166 D3F8A431 	 ldr r3,[r3,#420]
 3281 016a 7A69     	 ldr r2,[r7,#20]
 3282 016c 1A60     	 str r2,[r3]
1165:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3283              	 .loc 1 1166 0
 3284 016e 324B     	 ldr r3,.L189+12
 3285 0170 D3F8A431 	 ldr r3,[r3,#420]
 3286 0174 5B68     	 ldr r3,[r3,#4]
 3287 0176 3B61     	 str r3,[r7,#16]
1167:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
 3288              	 .loc 1 1167 0
 3289 0178 3B7C     	 ldrb r3,[r7,#16]
 3290 017a 43F00203 	 orr r3,r3,#2
 3291 017e 3B74     	 strb r3,[r7,#16]
1168:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
1169:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3292              	 .loc 1 1169 0
 3293 0180 2D4B     	 ldr r3,.L189+12
 3294 0182 D3F8A431 	 ldr r3,[r3,#420]
 3295 0186 3A69     	 ldr r2,[r7,#16]
 3296 0188 5A60     	 str r2,[r3,#4]
1170:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
1171:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo((uint8_t)0x10U); /* 0x10 == all fifos, see doc */
 3297              	 .loc 1 1171 0
 3298 018a 1020     	 movs r0,#16
 3299 018c FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 3300              	 .loc 1 1172 0
 3301 0190 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
1173:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
1174:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt status bits prior to unmasking */
1175:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = 0U; /* disable all interrupts */
 3302              	 .loc 1 1175 0
 3303 0194 284B     	 ldr r3,.L189+12
 3304 0196 D3F8A031 	 ldr r3,[r3,#416]
 3305 019a 0022     	 movs r2,#0
 3306 019c 9A61     	 str r2,[r3,#24]
1176:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 3307              	 .loc 1 1176 0
 3308 019e 264B     	 ldr r3,.L189+12
 3309 01a0 D3F8A031 	 ldr r3,[r3,#416]
 3310 01a4 4FF0FF32 	 mov r2,#-1
 3311 01a8 5A61     	 str r2,[r3,#20]
1177:../Libraries/XMCLib/src/xmc_usbd.c **** 
1178:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = 0U;
 3312              	 .loc 1 1178 0
 3313 01aa 0023     	 movs r3,#0
 3314 01ac FB60     	 str r3,[r7,#12]
1179:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable common interrupts */
1180:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.modemismatch = 1U;
 3315              	 .loc 1 1180 0
 3316 01ae 3B7B     	 ldrb r3,[r7,#12]
 3317 01b0 43F00203 	 orr r3,r3,#2
 3318 01b4 3B73     	 strb r3,[r7,#12]
1181:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.otgintr = 1U;
 3319              	 .loc 1 1181 0
 3320 01b6 3B7B     	 ldrb r3,[r7,#12]
 3321 01b8 43F00403 	 orr r3,r3,#4
 3322 01bc 3B73     	 strb r3,[r7,#12]
1182:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sessreqintr = 1U;
 3323              	 .loc 1 1182 0
 3324 01be FB7B     	 ldrb r3,[r7,#15]
 3325 01c0 43F04003 	 orr r3,r3,#64
 3326 01c4 FB73     	 strb r3,[r7,#15]
1183:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable device interrupts */
1184:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbreset = 1U;
 3327              	 .loc 1 1184 0
 3328 01c6 7B7B     	 ldrb r3,[r7,#13]
 3329 01c8 43F01003 	 orr r3,r3,#16
 3330 01cc 7B73     	 strb r3,[r7,#13]
1185:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.enumdone = 1U;
 3331              	 .loc 1 1185 0
 3332 01ce 7B7B     	 ldrb r3,[r7,#13]
 3333 01d0 43F02003 	 orr r3,r3,#32
 3334 01d4 7B73     	 strb r3,[r7,#13]
1186:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.erlysuspend = 1U;
 3335              	 .loc 1 1186 0
 3336 01d6 7B7B     	 ldrb r3,[r7,#13]
 3337 01d8 43F00403 	 orr r3,r3,#4
 3338 01dc 7B73     	 strb r3,[r7,#13]
1187:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbsuspend = 1U;
 3339              	 .loc 1 1187 0
 3340 01de 7B7B     	 ldrb r3,[r7,#13]
 3341 01e0 43F00803 	 orr r3,r3,#8
 3342 01e4 7B73     	 strb r3,[r7,#13]
1188:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.wkupintr = 1U;
 3343              	 .loc 1 1188 0
 3344 01e6 FB7B     	 ldrb r3,[r7,#15]
 3345 01e8 43F08003 	 orr r3,r3,#128
 3346 01ec FB73     	 strb r3,[r7,#15]
1189:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sofintr = 1U;
 3347              	 .loc 1 1189 0
 3348 01ee 3B7B     	 ldrb r3,[r7,#12]
 3349 01f0 43F00803 	 orr r3,r3,#8
 3350 01f4 3B73     	 strb r3,[r7,#12]
1190:../Libraries/XMCLib/src/xmc_usbd.c ****   if (obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 3351              	 .loc 1 1190 0
 3352 01f6 7B68     	 ldr r3,[r7,#4]
 3353 01f8 5B7B     	 ldrb r3,[r3,#13]
 3354 01fa 012B     	 cmp r3,#1
 3355 01fc 03D1     	 bne .L187
1191:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1192:../Libraries/XMCLib/src/xmc_usbd.c ****     gintmsk.b.rxstsqlvl = 1U;
 3356              	 .loc 1 1192 0
 3357 01fe 3B7B     	 ldrb r3,[r7,#12]
 3358 0200 43F01003 	 orr r3,r3,#16
 3359 0204 3B73     	 strb r3,[r7,#12]
 3360              	.L187:
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1194:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.outepintr = 1U;
 3361              	 .loc 1 1194 0
 3362 0206 BB7B     	 ldrb r3,[r7,#14]
 3363 0208 43F00803 	 orr r3,r3,#8
 3364 020c BB73     	 strb r3,[r7,#14]
1195:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.inepintr = 1U;
 3365              	 .loc 1 1195 0
 3366 020e BB7B     	 ldrb r3,[r7,#14]
 3367 0210 43F00403 	 orr r3,r3,#4
 3368 0214 BB73     	 strb r3,[r7,#14]
1196:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
 3369              	 .loc 1 1196 0
 3370 0216 084B     	 ldr r3,.L189+12
 3371 0218 D3F8A031 	 ldr r3,[r3,#416]
 3372 021c FA68     	 ldr r2,[r7,#12]
 3373 021e 9A61     	 str r2,[r3,#24]
1197:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3374              	 .loc 1 1197 0
 3375 0220 0023     	 movs r3,#0
1198:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3376              	 .loc 1 1198 0
 3377 0222 1846     	 mov r0,r3
 3378 0224 2837     	 adds r7,r7,#40
 3379              	.LCFI138:
 3380              	 .cfi_def_cfa_offset 8
 3381 0226 BD46     	 mov sp,r7
 3382              	.LCFI139:
 3383              	 .cfi_def_cfa_register 13
 3384              	 
 3385 0228 80BD     	 pop {r7,pc}
 3386              	.L190:
 3387 022a 00BF     	 .align 2
 3388              	.L189:
 3389 022c 00000000 	 .word usbd_init
 3390 0230 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 3391 0234 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 3392 0238 00000000 	 .word xmc_device
 3393              	 .cfi_endproc
 3394              	.LFE196:
 3396              	 .section .text.XMC_USBD_Uninitialize,"ax",%progbits
 3397              	 .align 2
 3398              	 .global XMC_USBD_Uninitialize
 3399              	 .thumb
 3400              	 .thumb_func
 3402              	XMC_USBD_Uninitialize:
 3403              	.LFB197:
1199:../Libraries/XMCLib/src/xmc_usbd.c **** 
1200:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1201:../Libraries/XMCLib/src/xmc_usbd.c ****  * Uninitializes the USB device
1202:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1203:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Uninitialize()
1204:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3404              	 .loc 1 1204 0
 3405              	 .cfi_startproc
 3406              	 
 3407              	 
 3408 0000 80B5     	 push {r7,lr}
 3409              	.LCFI140:
 3410              	 .cfi_def_cfa_offset 8
 3411              	 .cfi_offset 7,-8
 3412              	 .cfi_offset 14,-4
 3413 0002 82B0     	 sub sp,sp,#8
 3414              	.LCFI141:
 3415              	 .cfi_def_cfa_offset 16
 3416 0004 00AF     	 add r7,sp,#0
 3417              	.LCFI142:
 3418              	 .cfi_def_cfa_register 7
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1207:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3419              	 .loc 1 1207 0
 3420 0006 0C4B     	 ldr r3,.L193
 3421 0008 D3F8A431 	 ldr r3,[r3,#420]
 3422 000c 5B68     	 ldr r3,[r3,#4]
 3423 000e 7B60     	 str r3,[r7,#4]
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3424              	 .loc 1 1208 0
 3425 0010 3B79     	 ldrb r3,[r7,#4]
 3426 0012 43F00203 	 orr r3,r3,#2
 3427 0016 3B71     	 strb r3,[r7,#4]
1209:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3428              	 .loc 1 1209 0
 3429 0018 074B     	 ldr r3,.L193
 3430 001a D3F8A431 	 ldr r3,[r3,#420]
 3431 001e 7A68     	 ldr r2,[r7,#4]
 3432 0020 5A60     	 str r2,[r3,#4]
1210:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
1211:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void *)&xmc_device, 0U, sizeof(xmc_device));
 3433              	 .loc 1 1211 0
 3434 0022 0548     	 ldr r0,.L193
 3435 0024 0021     	 movs r1,#0
 3436 0026 4FF40272 	 mov r2,#520
 3437 002a FFF7FEFF 	 bl memset
1212:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3438              	 .loc 1 1212 0
 3439 002e 0023     	 movs r3,#0
1213:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3440              	 .loc 1 1213 0
 3441 0030 1846     	 mov r0,r3
 3442 0032 0837     	 adds r7,r7,#8
 3443              	.LCFI143:
 3444              	 .cfi_def_cfa_offset 8
 3445 0034 BD46     	 mov sp,r7
 3446              	.LCFI144:
 3447              	 .cfi_def_cfa_register 13
 3448              	 
 3449 0036 80BD     	 pop {r7,pc}
 3450              	.L194:
 3451              	 .align 2
 3452              	.L193:
 3453 0038 00000000 	 .word xmc_device
 3454              	 .cfi_endproc
 3455              	.LFE197:
 3457              	 .section .text.XMC_USBD_DeviceConnect,"ax",%progbits
 3458              	 .align 2
 3459              	 .global XMC_USBD_DeviceConnect
 3460              	 .thumb
 3461              	 .thumb_func
 3463              	XMC_USBD_DeviceConnect:
 3464              	.LFB198:
1214:../Libraries/XMCLib/src/xmc_usbd.c **** 
1215:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1216:../Libraries/XMCLib/src/xmc_usbd.c ****  * Connects the USB device to host
1217:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1218:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceConnect()
1219:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3465              	 .loc 1 1219 0
 3466              	 .cfi_startproc
 3467              	 
 3468              	 
 3469              	 
 3470 0000 80B4     	 push {r7}
 3471              	.LCFI145:
 3472              	 .cfi_def_cfa_offset 4
 3473              	 .cfi_offset 7,-4
 3474 0002 83B0     	 sub sp,sp,#12
 3475              	.LCFI146:
 3476              	 .cfi_def_cfa_offset 16
 3477 0004 00AF     	 add r7,sp,#0
 3478              	.LCFI147:
 3479              	 .cfi_def_cfa_register 7
1220:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Just disable softdisconnect */
1221:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1222:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3480              	 .loc 1 1222 0
 3481 0006 0A4B     	 ldr r3,.L197
 3482 0008 D3F8A431 	 ldr r3,[r3,#420]
 3483 000c 5B68     	 ldr r3,[r3,#4]
 3484 000e 7B60     	 str r3,[r7,#4]
1223:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 0U;
 3485              	 .loc 1 1223 0
 3486 0010 3B79     	 ldrb r3,[r7,#4]
 3487 0012 6FF34103 	 bfc r3,#1,#1
 3488 0016 3B71     	 strb r3,[r7,#4]
1224:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3489              	 .loc 1 1224 0
 3490 0018 054B     	 ldr r3,.L197
 3491 001a D3F8A431 	 ldr r3,[r3,#420]
 3492 001e 7A68     	 ldr r2,[r7,#4]
 3493 0020 5A60     	 str r2,[r3,#4]
1225:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3494              	 .loc 1 1225 0
 3495 0022 0023     	 movs r3,#0
1226:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3496              	 .loc 1 1226 0
 3497 0024 1846     	 mov r0,r3
 3498 0026 0C37     	 adds r7,r7,#12
 3499              	.LCFI148:
 3500              	 .cfi_def_cfa_offset 4
 3501 0028 BD46     	 mov sp,r7
 3502              	.LCFI149:
 3503              	 .cfi_def_cfa_register 13
 3504              	 
 3505 002a 5DF8047B 	 ldr r7,[sp],#4
 3506              	.LCFI150:
 3507              	 .cfi_restore 7
 3508              	 .cfi_def_cfa_offset 0
 3509 002e 7047     	 bx lr
 3510              	.L198:
 3511              	 .align 2
 3512              	.L197:
 3513 0030 00000000 	 .word xmc_device
 3514              	 .cfi_endproc
 3515              	.LFE198:
 3517              	 .section .text.XMC_USBD_DeviceDisconnect,"ax",%progbits
 3518              	 .align 2
 3519              	 .global XMC_USBD_DeviceDisconnect
 3520              	 .thumb
 3521              	 .thumb_func
 3523              	XMC_USBD_DeviceDisconnect:
 3524              	.LFB199:
1227:../Libraries/XMCLib/src/xmc_usbd.c **** 
1228:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1229:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disconnects the USB device from host
1230:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1231:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceDisconnect()
1232:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3525              	 .loc 1 1232 0
 3526              	 .cfi_startproc
 3527              	 
 3528              	 
 3529              	 
 3530 0000 80B4     	 push {r7}
 3531              	.LCFI151:
 3532              	 .cfi_def_cfa_offset 4
 3533              	 .cfi_offset 7,-4
 3534 0002 83B0     	 sub sp,sp,#12
 3535              	.LCFI152:
 3536              	 .cfi_def_cfa_offset 16
 3537 0004 00AF     	 add r7,sp,#0
 3538              	.LCFI153:
 3539              	 .cfi_def_cfa_register 7
1233:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1234:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3540              	 .loc 1 1234 0
 3541 0006 0A4B     	 ldr r3,.L201
 3542 0008 D3F8A431 	 ldr r3,[r3,#420]
 3543 000c 5B68     	 ldr r3,[r3,#4]
 3544 000e 7B60     	 str r3,[r7,#4]
1235:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3545              	 .loc 1 1235 0
 3546 0010 3B79     	 ldrb r3,[r7,#4]
 3547 0012 43F00203 	 orr r3,r3,#2
 3548 0016 3B71     	 strb r3,[r7,#4]
1236:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3549              	 .loc 1 1236 0
 3550 0018 054B     	 ldr r3,.L201
 3551 001a D3F8A431 	 ldr r3,[r3,#420]
 3552 001e 7A68     	 ldr r2,[r7,#4]
 3553 0020 5A60     	 str r2,[r3,#4]
1237:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3554              	 .loc 1 1237 0
 3555 0022 0023     	 movs r3,#0
1238:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3556              	 .loc 1 1238 0
 3557 0024 1846     	 mov r0,r3
 3558 0026 0C37     	 adds r7,r7,#12
 3559              	.LCFI154:
 3560              	 .cfi_def_cfa_offset 4
 3561 0028 BD46     	 mov sp,r7
 3562              	.LCFI155:
 3563              	 .cfi_def_cfa_register 13
 3564              	 
 3565 002a 5DF8047B 	 ldr r7,[sp],#4
 3566              	.LCFI156:
 3567              	 .cfi_restore 7
 3568              	 .cfi_def_cfa_offset 0
 3569 002e 7047     	 bx lr
 3570              	.L202:
 3571              	 .align 2
 3572              	.L201:
 3573 0030 00000000 	 .word xmc_device
 3574              	 .cfi_endproc
 3575              	.LFE199:
 3577              	 .section .text.XMC_USBD_DeviceGetState,"ax",%progbits
 3578              	 .align 2
 3579              	 .global XMC_USBD_DeviceGetState
 3580              	 .thumb
 3581              	 .thumb_func
 3583              	XMC_USBD_DeviceGetState:
 3584              	.LFB200:
1239:../Libraries/XMCLib/src/xmc_usbd.c **** 
1240:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1241:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device state.
1242:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1243:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATE_t XMC_USBD_DeviceGetState(const XMC_USBD_t *const obj)
1244:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3585              	 .loc 1 1244 0
 3586              	 .cfi_startproc
 3587              	 
 3588              	 
 3589 0000 80B5     	 push {r7,lr}
 3590              	.LCFI157:
 3591              	 .cfi_def_cfa_offset 8
 3592              	 .cfi_offset 7,-8
 3593              	 .cfi_offset 14,-4
 3594 0002 84B0     	 sub sp,sp,#16
 3595              	.LCFI158:
 3596              	 .cfi_def_cfa_offset 24
 3597 0004 00AF     	 add r7,sp,#0
 3598              	.LCFI159:
 3599              	 .cfi_def_cfa_register 7
 3600 0006 7860     	 str r0,[r7,#4]
1245:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state = {0U};
 3601              	 .loc 1 1245 0
 3602 0008 0023     	 movs r3,#0
 3603 000a FB60     	 str r3,[r7,#12]
1246:../Libraries/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
 3604              	 .loc 1 1246 0
 3605 000c 3B7B     	 ldrb r3,[r7,#12]
 3606 000e 0122     	 movs r2,#1
 3607 0010 62F3C403 	 bfi r3,r2,#3,#2
 3608 0014 3B73     	 strb r3,[r7,#12]
1247:../Libraries/XMCLib/src/xmc_usbd.c ****   state.connected = xmc_device.IsConnected;
 3609              	 .loc 1 1247 0
 3610 0016 124B     	 ldr r3,.L205
 3611 0018 93F8FE31 	 ldrb r3,[r3,#510]
 3612 001c C3F30003 	 ubfx r3,r3,#0,#1
 3613 0020 DAB2     	 uxtb r2,r3
 3614 0022 3B7B     	 ldrb r3,[r7,#12]
 3615 0024 62F34103 	 bfi r3,r2,#1,#1
 3616 0028 3B73     	 strb r3,[r7,#12]
1248:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
 3617              	 .loc 1 1248 0
 3618 002a 7868     	 ldr r0,[r7,#4]
 3619 002c FFF7FEFF 	 bl XMC_USBD_lDeviceActive
 3620 0030 0346     	 mov r3,r0
 3621 0032 03F00103 	 and r3,r3,#1
 3622 0036 DAB2     	 uxtb r2,r3
 3623 0038 3B7B     	 ldrb r3,[r7,#12]
 3624 003a 62F38203 	 bfi r3,r2,#2,#1
 3625 003e 3B73     	 strb r3,[r7,#12]
1249:../Libraries/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
 3626              	 .loc 1 1249 0
 3627 0040 074B     	 ldr r3,.L205
 3628 0042 93F8FE31 	 ldrb r3,[r3,#510]
 3629 0046 C3F38003 	 ubfx r3,r3,#2,#1
 3630 004a DAB2     	 uxtb r2,r3
 3631 004c 3B7B     	 ldrb r3,[r7,#12]
 3632 004e 62F30003 	 bfi r3,r2,#0,#1
 3633 0052 3B73     	 strb r3,[r7,#12]
1250:../Libraries/XMCLib/src/xmc_usbd.c ****   return state;
 3634              	 .loc 1 1250 0
 3635 0054 FB68     	 ldr r3,[r7,#12]
1251:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3636              	 .loc 1 1251 0
 3637 0056 1846     	 mov r0,r3
 3638 0058 1037     	 adds r7,r7,#16
 3639              	.LCFI160:
 3640              	 .cfi_def_cfa_offset 8
 3641 005a BD46     	 mov sp,r7
 3642              	.LCFI161:
 3643              	 .cfi_def_cfa_register 13
 3644              	 
 3645 005c 80BD     	 pop {r7,pc}
 3646              	.L206:
 3647 005e 00BF     	 .align 2
 3648              	.L205:
 3649 0060 00000000 	 .word xmc_device
 3650              	 .cfi_endproc
 3651              	.LFE200:
 3653              	 .section .text.XMC_USBD_EndpointReadStart,"ax",%progbits
 3654              	 .align 2
 3655              	 .global XMC_USBD_EndpointReadStart
 3656              	 .thumb
 3657              	 .thumb_func
 3659              	XMC_USBD_EndpointReadStart:
 3660              	.LFB201:
1252:../Libraries/XMCLib/src/xmc_usbd.c **** 
1253:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1254:../Libraries/XMCLib/src/xmc_usbd.c ****  * Prepares the endpoint to read next OUT packet
1255:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1256:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointReadStart(const uint8_t ep_addr, uint32_t size)
1257:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3661              	 .loc 1 1257 0
 3662              	 .cfi_startproc
 3663              	 
 3664              	 
 3665 0000 80B5     	 push {r7,lr}
 3666              	.LCFI162:
 3667              	 .cfi_def_cfa_offset 8
 3668              	 .cfi_offset 7,-8
 3669              	 .cfi_offset 14,-4
 3670 0002 84B0     	 sub sp,sp,#16
 3671              	.LCFI163:
 3672              	 .cfi_def_cfa_offset 24
 3673 0004 00AF     	 add r7,sp,#0
 3674              	.LCFI164:
 3675              	 .cfi_def_cfa_register 7
 3676 0006 0346     	 mov r3,r0
 3677 0008 3960     	 str r1,[r7]
 3678 000a FB71     	 strb r3,[r7,#7]
1258:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 3679              	 .loc 1 1258 0
 3680 000c FB79     	 ldrb r3,[r7,#7]
 3681 000e 03F00F03 	 and r3,r3,#15
 3682 0012 3422     	 movs r2,#52
 3683 0014 02FB03F3 	 mul r3,r2,r3
 3684 0018 1B4A     	 ldr r2,.L213
 3685 001a 1344     	 add r3,r3,r2
 3686 001c BB60     	 str r3,[r7,#8]
1259:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1260:../Libraries/XMCLib/src/xmc_usbd.c **** 
1261:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outInUse || !ep->isConfigured)
 3687              	 .loc 1 1261 0
 3688 001e BB68     	 ldr r3,[r7,#8]
 3689 0020 5B68     	 ldr r3,[r3,#4]
 3690 0022 1B09     	 lsrs r3,r3,#4
 3691 0024 03F00103 	 and r3,r3,#1
 3692 0028 DBB2     	 uxtb r3,r3
 3693 002a 002B     	 cmp r3,#0
 3694 002c 06D1     	 bne .L208
 3695              	 .loc 1 1261 0 is_stmt 0 discriminator 1
 3696 002e BB68     	 ldr r3,[r7,#8]
 3697 0030 1B79     	 ldrb r3,[r3,#4]
 3698 0032 03F00403 	 and r3,r3,#4
 3699 0036 DBB2     	 uxtb r3,r3
 3700 0038 002B     	 cmp r3,#0
 3701 003a 02D1     	 bne .L209
 3702              	.L208:
1262:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1263:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
 3703              	 .loc 1 1263 0 is_stmt 1
 3704 003c 0123     	 movs r3,#1
 3705 003e FB73     	 strb r3,[r7,#15]
 3706 0040 1CE0     	 b .L210
 3707              	.L209:
1264:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1265:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1266:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1267:../Libraries/XMCLib/src/xmc_usbd.c ****     /* short the length to buffer size if needed */
1268:../Libraries/XMCLib/src/xmc_usbd.c ****     if (size > ep->outBufferSize)
 3708              	 .loc 1 1268 0
 3709 0042 BB68     	 ldr r3,[r7,#8]
 3710 0044 5A69     	 ldr r2,[r3,#20]
 3711 0046 3B68     	 ldr r3,[r7]
 3712 0048 9A42     	 cmp r2,r3
 3713 004a 02D2     	 bcs .L211
1269:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1270:../Libraries/XMCLib/src/xmc_usbd.c ****       size = ep->outBufferSize;
 3714              	 .loc 1 1270 0
 3715 004c BB68     	 ldr r3,[r7,#8]
 3716 004e 5B69     	 ldr r3,[r3,#20]
 3717 0050 3B60     	 str r3,[r7]
 3718              	.L211:
1271:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1272:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep values */
1273:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = size;
 3719              	 .loc 1 1273 0
 3720 0052 BB68     	 ldr r3,[r7,#8]
 3721 0054 3A68     	 ldr r2,[r7]
 3722 0056 1A63     	 str r2,[r3,#48]
1274:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 3723              	 .loc 1 1274 0
 3724 0058 BB68     	 ldr r3,[r7,#8]
 3725 005a 0022     	 movs r2,#0
 3726 005c DA62     	 str r2,[r3,#44]
1275:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 3727              	 .loc 1 1275 0
 3728 005e BB68     	 ldr r3,[r7,#8]
 3729 0060 0022     	 movs r2,#0
 3730 0062 9A62     	 str r2,[r3,#40]
1276:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->outBuffer;
 3731              	 .loc 1 1276 0
 3732 0064 BB68     	 ldr r3,[r7,#8]
 3733 0066 DA68     	 ldr r2,[r3,#12]
 3734 0068 BB68     	 ldr r3,[r7,#8]
 3735 006a 5A62     	 str r2,[r3,#36]
1277:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
 3736              	 .loc 1 1277 0
 3737 006c BB68     	 ldr r3,[r7,#8]
 3738 006e 0022     	 movs r2,#0
 3739 0070 1A61     	 str r2,[r3,#16]
1278:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartReadXfer(ep);
 3740              	 .loc 1 1278 0
 3741 0072 B868     	 ldr r0,[r7,#8]
 3742 0074 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
1279:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 3743              	 .loc 1 1279 0
 3744 0078 0023     	 movs r3,#0
 3745 007a FB73     	 strb r3,[r7,#15]
 3746              	.L210:
1280:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1281:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 3747              	 .loc 1 1281 0
 3748 007c FB7B     	 ldrb r3,[r7,#15]
1282:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3749              	 .loc 1 1282 0
 3750 007e 1846     	 mov r0,r3
 3751 0080 1037     	 adds r7,r7,#16
 3752              	.LCFI165:
 3753              	 .cfi_def_cfa_offset 8
 3754 0082 BD46     	 mov sp,r7
 3755              	.LCFI166:
 3756              	 .cfi_def_cfa_register 13
 3757              	 
 3758 0084 80BD     	 pop {r7,pc}
 3759              	.L214:
 3760 0086 00BF     	 .align 2
 3761              	.L213:
 3762 0088 00000000 	 .word xmc_device
 3763              	 .cfi_endproc
 3764              	.LFE201:
 3766              	 .section .text.XMC_USBD_EndpointRead,"ax",%progbits
 3767              	 .align 2
 3768              	 .global XMC_USBD_EndpointRead
 3769              	 .thumb
 3770              	 .thumb_func
 3772              	XMC_USBD_EndpointRead:
 3773              	.LFB202:
1283:../Libraries/XMCLib/src/xmc_usbd.c **** 
1284:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1285:../Libraries/XMCLib/src/xmc_usbd.c ****  * Reads the number of bytes from the USB OUT endpoint
1286:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1287:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointRead(const uint8_t ep_num, uint8_t *buffer, uint32_t length)
1288:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3774              	 .loc 1 1288 0
 3775              	 .cfi_startproc
 3776              	 
 3777              	 
 3778 0000 80B5     	 push {r7,lr}
 3779              	.LCFI167:
 3780              	 .cfi_def_cfa_offset 8
 3781              	 .cfi_offset 7,-8
 3782              	 .cfi_offset 14,-4
 3783 0002 86B0     	 sub sp,sp,#24
 3784              	.LCFI168:
 3785              	 .cfi_def_cfa_offset 32
 3786 0004 00AF     	 add r7,sp,#0
 3787              	.LCFI169:
 3788              	 .cfi_def_cfa_register 7
 3789 0006 0346     	 mov r3,r0
 3790 0008 B960     	 str r1,[r7,#8]
 3791 000a 7A60     	 str r2,[r7,#4]
 3792 000c FB73     	 strb r3,[r7,#15]
1289:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 3793              	 .loc 1 1289 0
 3794 000e FB7B     	 ldrb r3,[r7,#15]
 3795 0010 3422     	 movs r2,#52
 3796 0012 02FB03F3 	 mul r3,r2,r3
 3797 0016 174A     	 ldr r2,.L220
 3798 0018 1344     	 add r3,r3,r2
 3799 001a 7B61     	 str r3,[r7,#20]
1290:../Libraries/XMCLib/src/xmc_usbd.c ****   if (length > ep->outBytesAvailable)
 3800              	 .loc 1 1290 0
 3801 001c 7B69     	 ldr r3,[r7,#20]
 3802 001e 1A69     	 ldr r2,[r3,#16]
 3803 0020 7B68     	 ldr r3,[r7,#4]
 3804 0022 9A42     	 cmp r2,r3
 3805 0024 02D2     	 bcs .L216
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1292:../Libraries/XMCLib/src/xmc_usbd.c ****     length = ep->outBytesAvailable;
 3806              	 .loc 1 1292 0
 3807 0026 7B69     	 ldr r3,[r7,#20]
 3808 0028 1B69     	 ldr r3,[r3,#16]
 3809 002a 7B60     	 str r3,[r7,#4]
 3810              	.L216:
1293:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1294:../Libraries/XMCLib/src/xmc_usbd.c ****   memcpy(buffer, &ep->outBuffer[ep->outOffset], length);
 3811              	 .loc 1 1294 0
 3812 002c 7B69     	 ldr r3,[r7,#20]
 3813 002e DA68     	 ldr r2,[r3,#12]
 3814 0030 7B69     	 ldr r3,[r7,#20]
 3815 0032 9B69     	 ldr r3,[r3,#24]
 3816 0034 1344     	 add r3,r3,r2
 3817 0036 B868     	 ldr r0,[r7,#8]
 3818 0038 1946     	 mov r1,r3
 3819 003a 7A68     	 ldr r2,[r7,#4]
 3820 003c FFF7FEFF 	 bl memcpy
1295:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
 3821              	 .loc 1 1295 0
 3822 0040 7B69     	 ldr r3,[r7,#20]
 3823 0042 1A69     	 ldr r2,[r3,#16]
 3824 0044 7B68     	 ldr r3,[r7,#4]
 3825 0046 D21A     	 subs r2,r2,r3
 3826 0048 7B69     	 ldr r3,[r7,#20]
 3827 004a 1A61     	 str r2,[r3,#16]
1296:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
 3828              	 .loc 1 1296 0
 3829 004c 7B69     	 ldr r3,[r7,#20]
 3830 004e 1B69     	 ldr r3,[r3,#16]
 3831 0050 002B     	 cmp r3,#0
 3832 0052 06D0     	 beq .L217
1297:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1298:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset += length;
 3833              	 .loc 1 1298 0
 3834 0054 7B69     	 ldr r3,[r7,#20]
 3835 0056 9A69     	 ldr r2,[r3,#24]
 3836 0058 7B68     	 ldr r3,[r7,#4]
 3837 005a 1A44     	 add r2,r2,r3
 3838 005c 7B69     	 ldr r3,[r7,#20]
 3839 005e 9A61     	 str r2,[r3,#24]
 3840 0060 02E0     	 b .L218
 3841              	.L217:
1299:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1300:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1301:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1302:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset = 0U;
 3842              	 .loc 1 1302 0
 3843 0062 7B69     	 ldr r3,[r7,#20]
 3844 0064 0022     	 movs r2,#0
 3845 0066 9A61     	 str r2,[r3,#24]
 3846              	.L218:
1303:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1304:../Libraries/XMCLib/src/xmc_usbd.c ****   return (int32_t)length;
 3847              	 .loc 1 1304 0
 3848 0068 7B68     	 ldr r3,[r7,#4]
1305:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3849              	 .loc 1 1305 0
 3850 006a 1846     	 mov r0,r3
 3851 006c 1837     	 adds r7,r7,#24
 3852              	.LCFI170:
 3853              	 .cfi_def_cfa_offset 8
 3854 006e BD46     	 mov sp,r7
 3855              	.LCFI171:
 3856              	 .cfi_def_cfa_register 13
 3857              	 
 3858 0070 80BD     	 pop {r7,pc}
 3859              	.L221:
 3860 0072 00BF     	 .align 2
 3861              	.L220:
 3862 0074 00000000 	 .word xmc_device
 3863              	 .cfi_endproc
 3864              	.LFE202:
 3866              	 .section .text.XMC_USBD_EndpointWrite,"ax",%progbits
 3867              	 .align 2
 3868              	 .global XMC_USBD_EndpointWrite
 3869              	 .thumb
 3870              	 .thumb_func
 3872              	XMC_USBD_EndpointWrite:
 3873              	.LFB203:
1306:../Libraries/XMCLib/src/xmc_usbd.c **** 
1307:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1308:../Libraries/XMCLib/src/xmc_usbd.c ****  * Writes number of bytes in to the USB IN endpoint.
1309:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1310:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointWrite(const uint8_t ep_num, const uint8_t *buffer, uint32_t length)
1311:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3874              	 .loc 1 1311 0
 3875              	 .cfi_startproc
 3876              	 
 3877              	 
 3878 0000 80B5     	 push {r7,lr}
 3879              	.LCFI172:
 3880              	 .cfi_def_cfa_offset 8
 3881              	 .cfi_offset 7,-8
 3882              	 .cfi_offset 14,-4
 3883 0002 86B0     	 sub sp,sp,#24
 3884              	.LCFI173:
 3885              	 .cfi_def_cfa_offset 32
 3886 0004 00AF     	 add r7,sp,#0
 3887              	.LCFI174:
 3888              	 .cfi_def_cfa_register 7
 3889 0006 0346     	 mov r3,r0
 3890 0008 B960     	 str r1,[r7,#8]
 3891 000a 7A60     	 str r2,[r7,#4]
 3892 000c FB73     	 strb r3,[r7,#15]
1312:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
 3893              	 .loc 1 1312 0
 3894 000e FB7B     	 ldrb r3,[r7,#15]
 3895 0010 03F00F03 	 and r3,r3,#15
 3896 0014 3422     	 movs r2,#52
 3897 0016 02FB03F3 	 mul r3,r2,r3
 3898 001a 224A     	 ldr r2,.L228
 3899 001c 1344     	 add r3,r3,r2
 3900 001e 3B61     	 str r3,[r7,#16]
1313:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
1314:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 3901              	 .loc 1 1314 0
 3902 0020 3B69     	 ldr r3,[r7,#16]
 3903 0022 1B79     	 ldrb r3,[r3,#4]
 3904 0024 03F00403 	 and r3,r3,#4
 3905 0028 DBB2     	 uxtb r3,r3
 3906 002a 002B     	 cmp r3,#0
 3907 002c 02D1     	 bne .L223
1315:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1316:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)XMC_USBD_STATUS_ERROR;
 3908              	 .loc 1 1316 0
 3909 002e 0123     	 movs r3,#1
 3910 0030 7B61     	 str r3,[r7,#20]
 3911 0032 31E0     	 b .L224
 3912              	.L223:
1317:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1318:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->inInUse == 1U)
 3913              	 .loc 1 1318 0
 3914 0034 3B69     	 ldr r3,[r7,#16]
 3915 0036 5B68     	 ldr r3,[r3,#4]
 3916 0038 DB08     	 lsrs r3,r3,#3
 3917 003a 03F00103 	 and r3,r3,#1
 3918 003e DBB2     	 uxtb r3,r3
 3919 0040 012B     	 cmp r3,#1
 3920 0042 02D1     	 bne .L225
1319:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1320:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)0;
 3921              	 .loc 1 1320 0
 3922 0044 0023     	 movs r3,#0
 3923 0046 7B61     	 str r3,[r7,#20]
 3924 0048 26E0     	 b .L224
 3925              	.L225:
1321:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1322:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1323:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1324:../Libraries/XMCLib/src/xmc_usbd.c ****     if (length > ep->inBufferSize)
 3926              	 .loc 1 1324 0
 3927 004a 3B69     	 ldr r3,[r7,#16]
 3928 004c 1A6A     	 ldr r2,[r3,#32]
 3929 004e 7B68     	 ldr r3,[r7,#4]
 3930 0050 9A42     	 cmp r2,r3
 3931 0052 02D2     	 bcs .L226
1325:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1326:../Libraries/XMCLib/src/xmc_usbd.c ****       length = ep->inBufferSize;
 3932              	 .loc 1 1326 0
 3933 0054 3B69     	 ldr r3,[r7,#16]
 3934 0056 1B6A     	 ldr r3,[r3,#32]
 3935 0058 7B60     	 str r3,[r7,#4]
 3936              	.L226:
1327:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1328:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data into input buffer for DMA and FIFO mode */
1329:../Libraries/XMCLib/src/xmc_usbd.c ****     memcpy(ep->inBuffer, (const void *)buffer, length);
 3937              	 .loc 1 1329 0
 3938 005a 3B69     	 ldr r3,[r7,#16]
 3939 005c DB69     	 ldr r3,[r3,#28]
 3940 005e 1846     	 mov r0,r3
 3941 0060 B968     	 ldr r1,[r7,#8]
 3942 0062 7A68     	 ldr r2,[r7,#4]
 3943 0064 FFF7FEFF 	 bl memcpy
1330:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->inBuffer;
 3944              	 .loc 1 1330 0
 3945 0068 3B69     	 ldr r3,[r7,#16]
 3946 006a DA69     	 ldr r2,[r3,#28]
 3947 006c 3B69     	 ldr r3,[r7,#16]
 3948 006e 5A62     	 str r2,[r3,#36]
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
 3949              	 .loc 1 1331 0
 3950 0070 3B69     	 ldr r3,[r7,#16]
 3951 0072 7A68     	 ldr r2,[r7,#4]
 3952 0074 1A63     	 str r2,[r3,#48]
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
1333:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 3953              	 .loc 1 1333 0
 3954 0076 3B69     	 ldr r3,[r7,#16]
 3955 0078 0022     	 movs r2,#0
 3956 007a 9A62     	 str r2,[r3,#40]
1334:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 3957              	 .loc 1 1334 0
 3958 007c 3B69     	 ldr r3,[r7,#16]
 3959 007e 0022     	 movs r2,#0
 3960 0080 DA62     	 str r2,[r3,#44]
1335:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
 3961              	 .loc 1 1335 0
 3962 0082 3B69     	 ldr r3,[r7,#16]
 3963 0084 5A68     	 ldr r2,[r3,#4]
 3964 0086 42F00802 	 orr r2,r2,#8
 3965 008a 5A60     	 str r2,[r3,#4]
1336:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
1337:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartWriteXfer(ep);
 3966              	 .loc 1 1337 0
 3967 008c 3869     	 ldr r0,[r7,#16]
 3968 008e FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
1338:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)ep->xferTotal;
 3969              	 .loc 1 1338 0
 3970 0092 3B69     	 ldr r3,[r7,#16]
 3971 0094 1B6B     	 ldr r3,[r3,#48]
 3972 0096 7B61     	 str r3,[r7,#20]
 3973              	.L224:
1339:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1340:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 3974              	 .loc 1 1340 0
 3975 0098 7B69     	 ldr r3,[r7,#20]
1341:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3976              	 .loc 1 1341 0
 3977 009a 1846     	 mov r0,r3
 3978 009c 1837     	 adds r7,r7,#24
 3979              	.LCFI175:
 3980              	 .cfi_def_cfa_offset 8
 3981 009e BD46     	 mov sp,r7
 3982              	.LCFI176:
 3983              	 .cfi_def_cfa_register 13
 3984              	 
 3985 00a0 80BD     	 pop {r7,pc}
 3986              	.L229:
 3987 00a2 00BF     	 .align 2
 3988              	.L228:
 3989 00a4 00000000 	 .word xmc_device
 3990              	 .cfi_endproc
 3991              	.LFE203:
 3993              	 .section .text.XMC_USBD_DeviceSetAddress,"ax",%progbits
 3994              	 .align 2
 3995              	 .global XMC_USBD_DeviceSetAddress
 3996              	 .thumb
 3997              	 .thumb_func
 3999              	XMC_USBD_DeviceSetAddress:
 4000              	.LFB204:
1342:../Libraries/XMCLib/src/xmc_usbd.c **** 
1343:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1344:../Libraries/XMCLib/src/xmc_usbd.c ****  * Sets the USB device address.
1345:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1346:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceSetAddress(const uint8_t address, const XMC_USBD_SET_ADDRESS_STAGE
1347:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4001              	 .loc 1 1347 0
 4002              	 .cfi_startproc
 4003              	 
 4004              	 
 4005              	 
 4006 0000 80B4     	 push {r7}
 4007              	.LCFI177:
 4008              	 .cfi_def_cfa_offset 4
 4009              	 .cfi_offset 7,-4
 4010 0002 85B0     	 sub sp,sp,#20
 4011              	.LCFI178:
 4012              	 .cfi_def_cfa_offset 24
 4013 0004 00AF     	 add r7,sp,#0
 4014              	.LCFI179:
 4015              	 .cfi_def_cfa_register 7
 4016 0006 0346     	 mov r3,r0
 4017 0008 0A46     	 mov r2,r1
 4018 000a FB71     	 strb r3,[r7,#7]
 4019 000c 1346     	 mov r3,r2
 4020 000e BB71     	 strb r3,[r7,#6]
1348:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t data;
1349:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.device_register->dcfg;
 4021              	 .loc 1 1349 0
 4022 0010 0D4B     	 ldr r3,.L233
 4023 0012 D3F8A431 	 ldr r3,[r3,#420]
 4024 0016 1B68     	 ldr r3,[r3]
 4025 0018 FB60     	 str r3,[r7,#12]
1350:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stage == XMC_USBD_SET_ADDRESS_STAGE_SETUP)
 4026              	 .loc 1 1350 0
 4027 001a BB79     	 ldrb r3,[r7,#6]
 4028 001c 002B     	 cmp r3,#0
 4029 001e 0CD1     	 bne .L231
1351:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1352:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.devaddr = address;
 4030              	 .loc 1 1352 0
 4031 0020 FB79     	 ldrb r3,[r7,#7]
 4032 0022 03F07F03 	 and r3,r3,#127
 4033 0026 DAB2     	 uxtb r2,r3
 4034 0028 BB89     	 ldrh r3,[r7,#12]
 4035 002a 62F30A13 	 bfi r3,r2,#4,#7
 4036 002e BB81     	 strh r3,[r7,#12]
1353:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dcfg = data.d32;
 4037              	 .loc 1 1353 0
 4038 0030 054B     	 ldr r3,.L233
 4039 0032 D3F8A431 	 ldr r3,[r3,#420]
 4040 0036 FA68     	 ldr r2,[r7,#12]
 4041 0038 1A60     	 str r2,[r3]
 4042              	.L231:
1354:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1355:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4043              	 .loc 1 1355 0
 4044 003a 0023     	 movs r3,#0
1356:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4045              	 .loc 1 1356 0
 4046 003c 1846     	 mov r0,r3
 4047 003e 1437     	 adds r7,r7,#20
 4048              	.LCFI180:
 4049              	 .cfi_def_cfa_offset 4
 4050 0040 BD46     	 mov sp,r7
 4051              	.LCFI181:
 4052              	 .cfi_def_cfa_register 13
 4053              	 
 4054 0042 5DF8047B 	 ldr r7,[sp],#4
 4055              	.LCFI182:
 4056              	 .cfi_restore 7
 4057              	 .cfi_def_cfa_offset 0
 4058 0046 7047     	 bx lr
 4059              	.L234:
 4060              	 .align 2
 4061              	.L233:
 4062 0048 00000000 	 .word xmc_device
 4063              	 .cfi_endproc
 4064              	.LFE204:
 4066              	 .section .text.XMC_USBD_EndpointStall,"ax",%progbits
 4067              	 .align 2
 4068              	 .global XMC_USBD_EndpointStall
 4069              	 .thumb
 4070              	 .thumb_func
 4072              	XMC_USBD_EndpointStall:
 4073              	.LFB205:
1357:../Libraries/XMCLib/src/xmc_usbd.c **** 
1358:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1359:../Libraries/XMCLib/src/xmc_usbd.c ****  * Set/clear stall on the selected endpoint.
1360:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1361:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointStall(const uint8_t ep_addr, const bool stall)
1362:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4074              	 .loc 1 1362 0
 4075              	 .cfi_startproc
 4076              	 
 4077              	 
 4078              	 
 4079 0000 80B4     	 push {r7}
 4080              	.LCFI183:
 4081              	 .cfi_def_cfa_offset 4
 4082              	 .cfi_offset 7,-4
 4083 0002 85B0     	 sub sp,sp,#20
 4084              	.LCFI184:
 4085              	 .cfi_def_cfa_offset 24
 4086 0004 00AF     	 add r7,sp,#0
 4087              	.LCFI185:
 4088              	 .cfi_def_cfa_register 7
 4089 0006 0346     	 mov r3,r0
 4090 0008 0A46     	 mov r2,r1
 4091 000a FB71     	 strb r3,[r7,#7]
 4092 000c 1346     	 mov r3,r2
 4093 000e BB71     	 strb r3,[r7,#6]
1363:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1364:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[(ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK)];
 4094              	 .loc 1 1364 0
 4095 0010 FB79     	 ldrb r3,[r7,#7]
 4096 0012 03F00F03 	 and r3,r3,#15
 4097 0016 3422     	 movs r2,#52
 4098 0018 02FB03F3 	 mul r3,r2,r3
 4099 001c 4A4A     	 ldr r2,.L243
 4100 001e 1344     	 add r3,r3,r2
 4101 0020 FB60     	 str r3,[r7,#12]
1365:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stall)
 4102              	 .loc 1 1365 0
 4103 0022 BB79     	 ldrb r3,[r7,#6]
 4104 0024 002B     	 cmp r3,#0
 4105 0026 40D0     	 beq .L236
1366:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1367:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 4106              	 .loc 1 1367 0
 4107 0028 FB79     	 ldrb r3,[r7,#7]
 4108 002a 5BB2     	 sxtb r3,r3
 4109 002c 002B     	 cmp r3,#0
 4110 002e 1ADA     	 bge .L237
1368:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1369:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1370:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4111              	 .loc 1 1370 0
 4112 0030 FB68     	 ldr r3,[r7,#12]
 4113 0032 1B78     	 ldrb r3,[r3]
 4114 0034 C3F30303 	 ubfx r3,r3,#0,#4
 4115 0038 DBB2     	 uxtb r3,r3
 4116 003a 434A     	 ldr r2,.L243
 4117 003c 6A33     	 adds r3,r3,#106
 4118 003e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4119 0042 1B68     	 ldr r3,[r3]
 4120 0044 BB60     	 str r3,[r7,#8]
1371:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 4121              	 .loc 1 1371 0
 4122 0046 BB7A     	 ldrb r3,[r7,#10]
 4123 0048 43F02003 	 orr r3,r3,#32
 4124 004c BB72     	 strb r3,[r7,#10]
1372:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4125              	 .loc 1 1372 0
 4126 004e FB68     	 ldr r3,[r7,#12]
 4127 0050 1B78     	 ldrb r3,[r3]
 4128 0052 C3F30303 	 ubfx r3,r3,#0,#4
 4129 0056 DBB2     	 uxtb r3,r3
 4130 0058 3B4A     	 ldr r2,.L243
 4131 005a 6A33     	 adds r3,r3,#106
 4132 005c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4133 0060 BA68     	 ldr r2,[r7,#8]
 4134 0062 1A60     	 str r2,[r3]
 4135 0064 1BE0     	 b .L238
 4136              	.L237:
1373:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1374:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1375:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1376:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1377:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4137              	 .loc 1 1377 0
 4138 0066 FB68     	 ldr r3,[r7,#12]
 4139 0068 1B78     	 ldrb r3,[r3]
 4140 006a C3F30303 	 ubfx r3,r3,#0,#4
 4141 006e DBB2     	 uxtb r3,r3
 4142 0070 354A     	 ldr r2,.L243
 4143 0072 7033     	 adds r3,r3,#112
 4144 0074 9B00     	 lsls r3,r3,#2
 4145 0076 1344     	 add r3,r3,r2
 4146 0078 5B68     	 ldr r3,[r3,#4]
 4147 007a 1B68     	 ldr r3,[r3]
 4148 007c BB60     	 str r3,[r7,#8]
1378:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 4149              	 .loc 1 1378 0
 4150 007e BB7A     	 ldrb r3,[r7,#10]
 4151 0080 43F02003 	 orr r3,r3,#32
 4152 0084 BB72     	 strb r3,[r7,#10]
1379:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4153              	 .loc 1 1379 0
 4154 0086 FB68     	 ldr r3,[r7,#12]
 4155 0088 1B78     	 ldrb r3,[r3]
 4156 008a C3F30303 	 ubfx r3,r3,#0,#4
 4157 008e DBB2     	 uxtb r3,r3
 4158 0090 2D4A     	 ldr r2,.L243
 4159 0092 7033     	 adds r3,r3,#112
 4160 0094 9B00     	 lsls r3,r3,#2
 4161 0096 1344     	 add r3,r3,r2
 4162 0098 5B68     	 ldr r3,[r3,#4]
 4163 009a BA68     	 ldr r2,[r7,#8]
 4164 009c 1A60     	 str r2,[r3]
 4165              	.L238:
1380:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1381:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 1U;
 4166              	 .loc 1 1381 0
 4167 009e FA68     	 ldr r2,[r7,#12]
 4168 00a0 1379     	 ldrb r3,[r2,#4]
 4169 00a2 43F02003 	 orr r3,r3,#32
 4170 00a6 1371     	 strb r3,[r2,#4]
 4171 00a8 47E0     	 b .L239
 4172              	.L236:
1382:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1383:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1384:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1385:../Libraries/XMCLib/src/xmc_usbd.c ****     /* just clear stall bit */
1386:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 4173              	 .loc 1 1386 0
 4174 00aa FB79     	 ldrb r3,[r7,#7]
 4175 00ac 5BB2     	 sxtb r3,r3
 4176 00ae 002B     	 cmp r3,#0
 4177 00b0 1EDA     	 bge .L240
1387:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1388:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4178              	 .loc 1 1388 0
 4179 00b2 FB68     	 ldr r3,[r7,#12]
 4180 00b4 1B78     	 ldrb r3,[r3]
 4181 00b6 C3F30303 	 ubfx r3,r3,#0,#4
 4182 00ba DBB2     	 uxtb r3,r3
 4183 00bc 224A     	 ldr r2,.L243
 4184 00be 6A33     	 adds r3,r3,#106
 4185 00c0 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4186 00c4 1B68     	 ldr r3,[r3]
 4187 00c6 BB60     	 str r3,[r7,#8]
1389:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 0U;
 4188              	 .loc 1 1389 0
 4189 00c8 BB7A     	 ldrb r3,[r7,#10]
 4190 00ca 6FF34513 	 bfc r3,#5,#1
 4191 00ce BB72     	 strb r3,[r7,#10]
1390:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.setd0pid = 1U; /* reset pid to 0 */
 4192              	 .loc 1 1390 0
 4193 00d0 FB7A     	 ldrb r3,[r7,#11]
 4194 00d2 43F01003 	 orr r3,r3,#16
 4195 00d6 FB72     	 strb r3,[r7,#11]
1391:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4196              	 .loc 1 1391 0
 4197 00d8 FB68     	 ldr r3,[r7,#12]
 4198 00da 1B78     	 ldrb r3,[r3]
 4199 00dc C3F30303 	 ubfx r3,r3,#0,#4
 4200 00e0 DBB2     	 uxtb r3,r3
 4201 00e2 194A     	 ldr r2,.L243
 4202 00e4 6A33     	 adds r3,r3,#106
 4203 00e6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4204 00ea BA68     	 ldr r2,[r7,#8]
 4205 00ec 1A60     	 str r2,[r3]
 4206 00ee 1FE0     	 b .L241
 4207              	.L240:
1392:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1393:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1394:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1395:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4208              	 .loc 1 1395 0
 4209 00f0 FB68     	 ldr r3,[r7,#12]
 4210 00f2 1B78     	 ldrb r3,[r3]
 4211 00f4 C3F30303 	 ubfx r3,r3,#0,#4
 4212 00f8 DBB2     	 uxtb r3,r3
 4213 00fa 134A     	 ldr r2,.L243
 4214 00fc 7033     	 adds r3,r3,#112
 4215 00fe 9B00     	 lsls r3,r3,#2
 4216 0100 1344     	 add r3,r3,r2
 4217 0102 5B68     	 ldr r3,[r3,#4]
 4218 0104 1B68     	 ldr r3,[r3]
 4219 0106 BB60     	 str r3,[r7,#8]
1396:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 0U;
 4220              	 .loc 1 1396 0
 4221 0108 BB7A     	 ldrb r3,[r7,#10]
 4222 010a 6FF34513 	 bfc r3,#5,#1
 4223 010e BB72     	 strb r3,[r7,#10]
1397:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.setd0pid = 1U; /* reset pid to 0 */
 4224              	 .loc 1 1397 0
 4225 0110 FB7A     	 ldrb r3,[r7,#11]
 4226 0112 43F01003 	 orr r3,r3,#16
 4227 0116 FB72     	 strb r3,[r7,#11]
1398:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4228              	 .loc 1 1398 0
 4229 0118 FB68     	 ldr r3,[r7,#12]
 4230 011a 1B78     	 ldrb r3,[r3]
 4231 011c C3F30303 	 ubfx r3,r3,#0,#4
 4232 0120 DBB2     	 uxtb r3,r3
 4233 0122 094A     	 ldr r2,.L243
 4234 0124 7033     	 adds r3,r3,#112
 4235 0126 9B00     	 lsls r3,r3,#2
 4236 0128 1344     	 add r3,r3,r2
 4237 012a 5B68     	 ldr r3,[r3,#4]
 4238 012c BA68     	 ldr r2,[r7,#8]
 4239 012e 1A60     	 str r2,[r3]
 4240              	.L241:
1399:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1400:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 0U;
 4241              	 .loc 1 1400 0
 4242 0130 FA68     	 ldr r2,[r7,#12]
 4243 0132 1379     	 ldrb r3,[r2,#4]
 4244 0134 6FF34513 	 bfc r3,#5,#1
 4245 0138 1371     	 strb r3,[r2,#4]
 4246              	.L239:
1401:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1402:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4247              	 .loc 1 1402 0
 4248 013a 0023     	 movs r3,#0
1403:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4249              	 .loc 1 1403 0
 4250 013c 1846     	 mov r0,r3
 4251 013e 1437     	 adds r7,r7,#20
 4252              	.LCFI186:
 4253              	 .cfi_def_cfa_offset 4
 4254 0140 BD46     	 mov sp,r7
 4255              	.LCFI187:
 4256              	 .cfi_def_cfa_register 13
 4257              	 
 4258 0142 5DF8047B 	 ldr r7,[sp],#4
 4259              	.LCFI188:
 4260              	 .cfi_restore 7
 4261              	 .cfi_def_cfa_offset 0
 4262 0146 7047     	 bx lr
 4263              	.L244:
 4264              	 .align 2
 4265              	.L243:
 4266 0148 00000000 	 .word xmc_device
 4267              	 .cfi_endproc
 4268              	.LFE205:
 4270              	 .section .text.XMC_USBD_EndpointAbort,"ax",%progbits
 4271              	 .align 2
 4272              	 .global XMC_USBD_EndpointAbort
 4273              	 .thumb
 4274              	 .thumb_func
 4276              	XMC_USBD_EndpointAbort:
 4277              	.LFB206:
1404:../Libraries/XMCLib/src/xmc_usbd.c **** 
1405:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1406:../Libraries/XMCLib/src/xmc_usbd.c ****  * Aborts the data transfer on the selected endpoint
1407:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1408:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointAbort(const uint8_t ep_addr)
1409:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4278              	 .loc 1 1409 0
 4279              	 .cfi_startproc
 4280              	 
 4281              	 
 4282              	 
 4283 0000 80B4     	 push {r7}
 4284              	.LCFI189:
 4285              	 .cfi_def_cfa_offset 4
 4286              	 .cfi_offset 7,-4
 4287 0002 85B0     	 sub sp,sp,#20
 4288              	.LCFI190:
 4289              	 .cfi_def_cfa_offset 24
 4290 0004 00AF     	 add r7,sp,#0
 4291              	.LCFI191:
 4292              	 .cfi_def_cfa_register 7
 4293 0006 0346     	 mov r3,r0
 4294 0008 FB71     	 strb r3,[r7,#7]
1410:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4295              	 .loc 1 1410 0
 4296 000a FB79     	 ldrb r3,[r7,#7]
 4297 000c 03F00F03 	 and r3,r3,#15
 4298 0010 3422     	 movs r2,#52
 4299 0012 02FB03F3 	 mul r3,r2,r3
 4300 0016 1B4A     	 ldr r2,.L249
 4301 0018 1344     	 add r3,r3,r2
 4302 001a FB60     	 str r3,[r7,#12]
1411:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.direction)
 4303              	 .loc 1 1411 0
 4304 001c FB68     	 ldr r3,[r7,#12]
 4305 001e 1B78     	 ldrb r3,[r3]
 4306 0020 23F07F03 	 bic r3,r3,#127
 4307 0024 DBB2     	 uxtb r3,r3
 4308 0026 002B     	 cmp r3,#0
 4309 0028 04D0     	 beq .L246
1412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1413:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 0U;
 4310              	 .loc 1 1413 0
 4311 002a FB68     	 ldr r3,[r7,#12]
 4312 002c 5A68     	 ldr r2,[r3,#4]
 4313 002e 22F00802 	 bic r2,r2,#8
 4314 0032 5A60     	 str r2,[r3,#4]
 4315              	.L246:
1414:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->address_u.address_st.direction)
 4316              	 .loc 1 1415 0
 4317 0034 FB68     	 ldr r3,[r7,#12]
 4318 0036 1B78     	 ldrb r3,[r3]
 4319 0038 23F07F03 	 bic r3,r3,#127
 4320 003c DBB2     	 uxtb r3,r3
 4321 003e 002B     	 cmp r3,#0
 4322 0040 04D1     	 bne .L247
1416:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1417:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse = 0U;
 4323              	 .loc 1 1417 0
 4324 0042 FB68     	 ldr r3,[r7,#12]
 4325 0044 5A68     	 ldr r2,[r3,#4]
 4326 0046 22F01002 	 bic r2,r2,#16
 4327 004a 5A60     	 str r2,[r3,#4]
 4328              	.L247:
1418:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1419:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isStalled = 0U;
 4329              	 .loc 1 1419 0
 4330 004c FA68     	 ldr r2,[r7,#12]
 4331 004e 1379     	 ldrb r3,[r2,#4]
 4332 0050 6FF34513 	 bfc r3,#5,#1
 4333 0054 1371     	 strb r3,[r2,#4]
1420:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 4334              	 .loc 1 1420 0
 4335 0056 FB68     	 ldr r3,[r7,#12]
 4336 0058 0022     	 movs r2,#0
 4337 005a 1A61     	 str r2,[r3,#16]
1421:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
 4338              	 .loc 1 1421 0
 4339 005c FB68     	 ldr r3,[r7,#12]
 4340 005e 0022     	 movs r2,#0
 4341 0060 9A61     	 str r2,[r3,#24]
1422:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferLength = 0U;
 4342              	 .loc 1 1422 0
 4343 0062 FB68     	 ldr r3,[r7,#12]
 4344 0064 0022     	 movs r2,#0
 4345 0066 9A62     	 str r2,[r3,#40]
1423:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferCount = 0U;
 4346              	 .loc 1 1423 0
 4347 0068 FB68     	 ldr r3,[r7,#12]
 4348 006a 0022     	 movs r2,#0
 4349 006c DA62     	 str r2,[r3,#44]
1424:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferTotal = 0U;
 4350              	 .loc 1 1424 0
 4351 006e FB68     	 ldr r3,[r7,#12]
 4352 0070 0022     	 movs r2,#0
 4353 0072 1A63     	 str r2,[r3,#48]
1425:../Libraries/XMCLib/src/xmc_usbd.c **** 
1426:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4354              	 .loc 1 1426 0
 4355 0074 0023     	 movs r3,#0
1427:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4356              	 .loc 1 1427 0
 4357 0076 1846     	 mov r0,r3
 4358 0078 1437     	 adds r7,r7,#20
 4359              	.LCFI192:
 4360              	 .cfi_def_cfa_offset 4
 4361 007a BD46     	 mov sp,r7
 4362              	.LCFI193:
 4363              	 .cfi_def_cfa_register 13
 4364              	 
 4365 007c 5DF8047B 	 ldr r7,[sp],#4
 4366              	.LCFI194:
 4367              	 .cfi_restore 7
 4368              	 .cfi_def_cfa_offset 0
 4369 0080 7047     	 bx lr
 4370              	.L250:
 4371 0082 00BF     	 .align 2
 4372              	.L249:
 4373 0084 00000000 	 .word xmc_device
 4374              	 .cfi_endproc
 4375              	.LFE206:
 4377              	 .section .text.XMC_USBD_EndpointConfigure,"ax",%progbits
 4378              	 .align 2
 4379              	 .global XMC_USBD_EndpointConfigure
 4380              	 .thumb
 4381              	 .thumb_func
 4383              	XMC_USBD_EndpointConfigure:
 4384              	.LFB207:
1428:../Libraries/XMCLib/src/xmc_usbd.c **** 
1429:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1430:../Libraries/XMCLib/src/xmc_usbd.c ****  * Configures the given endpoint
1431:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1432:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointConfigure(const uint8_t ep_addr,
1433:../Libraries/XMCLib/src/xmc_usbd.c ****     const XMC_USBD_ENDPOINT_TYPE_t ep_type,
1434:../Libraries/XMCLib/src/xmc_usbd.c ****     const uint16_t ep_max_packet_size)
1435:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4385              	 .loc 1 1435 0
 4386              	 .cfi_startproc
 4387              	 
 4388              	 
 4389 0000 80B5     	 push {r7,lr}
 4390              	.LCFI195:
 4391              	 .cfi_def_cfa_offset 8
 4392              	 .cfi_offset 7,-8
 4393              	 .cfi_offset 14,-4
 4394 0002 86B0     	 sub sp,sp,#24
 4395              	.LCFI196:
 4396              	 .cfi_def_cfa_offset 32
 4397 0004 00AF     	 add r7,sp,#0
 4398              	.LCFI197:
 4399              	 .cfi_def_cfa_register 7
 4400 0006 0346     	 mov r3,r0
 4401 0008 FB71     	 strb r3,[r7,#7]
 4402 000a 0B46     	 mov r3,r1
 4403 000c BB71     	 strb r3,[r7,#6]
 4404 000e 1346     	 mov r3,r2
 4405 0010 BB80     	 strh r3,[r7,#4]
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1437:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 4406              	 .loc 1 1438 0
 4407 0012 984B     	 ldr r3,.L277
 4408 0014 D3F8A431 	 ldr r3,[r3,#420]
 4409 0018 DB69     	 ldr r3,[r3,#28]
 4410 001a 3B61     	 str r3,[r7,#16]
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep = &xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4411              	 .loc 1 1439 0
 4412 001c FB79     	 ldrb r3,[r7,#7]
 4413 001e 03F00F03 	 and r3,r3,#15
 4414 0022 3422     	 movs r2,#52
 4415 0024 02FB03F3 	 mul r3,r2,r3
 4416 0028 924A     	 ldr r2,.L277
 4417 002a 1344     	 add r3,r3,r2
 4418 002c 7B61     	 str r3,[r7,#20]
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void *)ep, 0x0U, sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
 4419              	 .loc 1 1440 0
 4420 002e 7869     	 ldr r0,[r7,#20]
 4421 0030 0021     	 movs r1,#0
 4422 0032 3422     	 movs r2,#52
 4423 0034 FFF7FEFF 	 bl memset
1441:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
1442:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->address_u.address = ep_addr;
 4424              	 .loc 1 1442 0
 4425 0038 7B69     	 ldr r3,[r7,#20]
 4426 003a FA79     	 ldrb r2,[r7,#7]
 4427 003c 1A70     	 strb r2,[r3]
1443:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
 4428              	 .loc 1 1443 0
 4429 003e 7A69     	 ldr r2,[r7,#20]
 4430 0040 1379     	 ldrb r3,[r2,#4]
 4431 0042 43F00403 	 orr r3,r3,#4
 4432 0046 1371     	 strb r3,[r2,#4]
1444:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 4433              	 .loc 1 1444 0
 4434 0048 BB88     	 ldrh r3,[r7,#4]
 4435 004a DBB2     	 uxtb r3,r3
 4436 004c 03F07F03 	 and r3,r3,#127
 4437 0050 D9B2     	 uxtb r1,r3
 4438 0052 7A69     	 ldr r2,[r7,#20]
 4439 0054 5368     	 ldr r3,[r2,#4]
 4440 0056 61F3D123 	 bfi r3,r1,#11,#7
 4441 005a 5360     	 str r3,[r2,#4]
1445:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
 4442              	 .loc 1 1445 0
 4443 005c 7B69     	 ldr r3,[r7,#20]
 4444 005e 1B78     	 ldrb r3,[r3]
 4445 0060 002B     	 cmp r3,#0
 4446 0062 07D0     	 beq .L252
1446:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1447:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE;
 4447              	 .loc 1 1447 0
 4448 0064 7A69     	 ldr r2,[r7,#20]
 4449 0066 9368     	 ldr r3,[r2,#8]
 4450 0068 4FF6C071 	 movw r1,#65472
 4451 006c 61F31203 	 bfi r3,r1,#0,#19
 4452 0070 9360     	 str r3,[r2,#8]
 4453 0072 05E0     	 b .L253
 4454              	.L252:
1448:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1449:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1451:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE_EP0;
 4455              	 .loc 1 1451 0
 4456 0074 7A69     	 ldr r2,[r7,#20]
 4457 0076 9368     	 ldr r3,[r2,#8]
 4458 0078 4021     	 movs r1,#64
 4459 007a 61F31203 	 bfi r3,r1,#0,#19
 4460 007e 9360     	 str r3,[r2,#8]
 4461              	.L253:
1452:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   /* transfer buffer */
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBuffer = XMC_USBD_EP_IN_BUFFER[ep->address_u.address_st.number];
 4462              	 .loc 1 1454 0
 4463 0080 7B69     	 ldr r3,[r7,#20]
 4464 0082 1B78     	 ldrb r3,[r3]
 4465 0084 C3F30303 	 ubfx r3,r3,#0,#4
 4466 0088 DBB2     	 uxtb r3,r3
 4467 008a 1B02     	 lsls r3,r3,#8
 4468 008c 7A4A     	 ldr r2,.L277+4
 4469 008e 1A44     	 add r2,r2,r3
 4470 0090 7B69     	 ldr r3,[r7,#20]
 4471 0092 DA61     	 str r2,[r3,#28]
1455:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 4472              	 .loc 1 1455 0
 4473 0094 7B69     	 ldr r3,[r7,#20]
 4474 0096 1B78     	 ldrb r3,[r3]
 4475 0098 C3F30303 	 ubfx r3,r3,#0,#4
 4476 009c DBB2     	 uxtb r3,r3
 4477 009e 1B02     	 lsls r3,r3,#8
 4478 00a0 764A     	 ldr r2,.L277+8
 4479 00a2 1A44     	 add r2,r2,r3
 4480 00a4 7B69     	 ldr r3,[r7,#20]
 4481 00a6 DA60     	 str r2,[r3,#12]
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
1457:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBufferSize = XMC_USBD_EP_IN_BUFFERSIZE[ep->address_u.address_st.number];
 4482              	 .loc 1 1457 0
 4483 00a8 7B69     	 ldr r3,[r7,#20]
 4484 00aa 1B78     	 ldrb r3,[r3]
 4485 00ac C3F30303 	 ubfx r3,r3,#0,#4
 4486 00b0 DBB2     	 uxtb r3,r3
 4487 00b2 1A46     	 mov r2,r3
 4488 00b4 724B     	 ldr r3,.L277+12
 4489 00b6 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4490 00ba 7B69     	 ldr r3,[r7,#20]
 4491 00bc 1A62     	 str r2,[r3,#32]
1458:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 4492              	 .loc 1 1458 0
 4493 00be 7B69     	 ldr r3,[r7,#20]
 4494 00c0 1B78     	 ldrb r3,[r3]
 4495 00c2 C3F30303 	 ubfx r3,r3,#0,#4
 4496 00c6 DBB2     	 uxtb r3,r3
 4497 00c8 1A46     	 mov r2,r3
 4498 00ca 6E4B     	 ldr r3,.L277+16
 4499 00cc 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4500 00d0 7B69     	 ldr r3,[r7,#20]
 4501 00d2 5A61     	 str r2,[r3,#20]
1459:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
1460:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 1U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4502              	 .loc 1 1460 0
 4503 00d4 7B69     	 ldr r3,[r7,#20]
 4504 00d6 1B78     	 ldrb r3,[r3]
 4505 00d8 23F07F03 	 bic r3,r3,#127
 4506 00dc DBB2     	 uxtb r3,r3
 4507 00de 002B     	 cmp r3,#0
 4508 00e0 02D1     	 bne .L254
 4509              	 .loc 1 1460 0 is_stmt 0 discriminator 1
 4510 00e2 BB79     	 ldrb r3,[r7,#6]
 4511 00e4 002B     	 cmp r3,#0
 4512 00e6 7AD1     	 bne .L255
 4513              	.L254:
 4514              	.LBB6:
1461:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1462:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1463:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4515              	 .loc 1 1463 0 is_stmt 1
 4516 00e8 7B69     	 ldr r3,[r7,#20]
 4517 00ea 1B78     	 ldrb r3,[r3]
 4518 00ec C3F30303 	 ubfx r3,r3,#0,#4
 4519 00f0 DBB2     	 uxtb r3,r3
 4520 00f2 604A     	 ldr r2,.L277
 4521 00f4 6A33     	 adds r3,r3,#106
 4522 00f6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4523 00fa 1B68     	 ldr r3,[r3]
 4524 00fc FB60     	 str r3,[r7,#12]
1464:../Libraries/XMCLib/src/xmc_usbd.c ****     /*enable endpoint */
1465:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 1U;
 4525              	 .loc 1 1465 0
 4526 00fe 7B7B     	 ldrb r3,[r7,#13]
 4527 0100 43F08003 	 orr r3,r3,#128
 4528 0104 7B73     	 strb r3,[r7,#13]
1466:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep type */
1467:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.eptype = (uint8_t)ep_type;
 4529              	 .loc 1 1467 0
 4530 0106 BB79     	 ldrb r3,[r7,#6]
 4531 0108 03F00303 	 and r3,r3,#3
 4532 010c DAB2     	 uxtb r2,r3
 4533 010e BB7B     	 ldrb r3,[r7,#14]
 4534 0110 62F38303 	 bfi r3,r2,#2,#2
 4535 0114 BB73     	 strb r3,[r7,#14]
1468:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1469:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4536              	 .loc 1 1469 0
 4537 0116 BB79     	 ldrb r3,[r7,#6]
 4538 0118 002B     	 cmp r3,#0
 4539 011a 24D1     	 bne .L256
1470:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1471:../Libraries/XMCLib/src/xmc_usbd.c ****       switch (ep_max_packet_size)
 4540              	 .loc 1 1471 0
 4541 011c BB88     	 ldrh r3,[r7,#4]
 4542 011e 102B     	 cmp r3,#16
 4543 0120 14D0     	 beq .L258
 4544 0122 102B     	 cmp r3,#16
 4545 0124 02DC     	 bgt .L259
 4546 0126 082B     	 cmp r3,#8
 4547 0128 16D0     	 beq .L260
1472:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1473:../Libraries/XMCLib/src/xmc_usbd.c ****         case (64U):
1474:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x0U;
1475:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1476:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
1477:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x1U;
1478:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1479:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
1480:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x2U;
1481:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1482:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
1483:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x3U;
1484:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1485:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
1486:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4548              	 .loc 1 1486 0
 4549 012a 1BE0     	 b .L263
 4550              	.L259:
1471:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 4551              	 .loc 1 1471 0
 4552 012c 202B     	 cmp r3,#32
 4553 012e 07D0     	 beq .L261
 4554 0130 402B     	 cmp r3,#64
 4555 0132 00D0     	 beq .L262
 4556              	 .loc 1 1486 0
 4557 0134 16E0     	 b .L263
 4558              	.L262:
1474:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4559              	 .loc 1 1474 0
 4560 0136 BB89     	 ldrh r3,[r7,#12]
 4561 0138 6FF30A03 	 bfc r3,#0,#11
 4562 013c BB81     	 strh r3,[r7,#12]
1475:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
 4563              	 .loc 1 1475 0
 4564 013e 11E0     	 b .L263
 4565              	.L261:
1477:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4566              	 .loc 1 1477 0
 4567 0140 BB89     	 ldrh r3,[r7,#12]
 4568 0142 0122     	 movs r2,#1
 4569 0144 62F30A03 	 bfi r3,r2,#0,#11
 4570 0148 BB81     	 strh r3,[r7,#12]
1478:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
 4571              	 .loc 1 1478 0
 4572 014a 0BE0     	 b .L263
 4573              	.L258:
1480:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4574              	 .loc 1 1480 0
 4575 014c BB89     	 ldrh r3,[r7,#12]
 4576 014e 0222     	 movs r2,#2
 4577 0150 62F30A03 	 bfi r3,r2,#0,#11
 4578 0154 BB81     	 strh r3,[r7,#12]
1481:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
 4579              	 .loc 1 1481 0
 4580 0156 05E0     	 b .L263
 4581              	.L260:
1483:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4582              	 .loc 1 1483 0
 4583 0158 BB89     	 ldrh r3,[r7,#12]
 4584 015a 0322     	 movs r2,#3
 4585 015c 62F30A03 	 bfi r3,r2,#0,#11
 4586 0160 BB81     	 strh r3,[r7,#12]
1484:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
 4587              	 .loc 1 1484 0
 4588 0162 00BF     	 nop
 4589              	.L263:
 4590 0164 07E0     	 b .L264
 4591              	.L256:
1487:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1488:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1489:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1490:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1491:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.mps = ep_max_packet_size;
 4592              	 .loc 1 1491 0
 4593 0166 BB88     	 ldrh r3,[r7,#4]
 4594 0168 C3F30A03 	 ubfx r3,r3,#0,#11
 4595 016c 9AB2     	 uxth r2,r3
 4596 016e BB89     	 ldrh r3,[r7,#12]
 4597 0170 62F30A03 	 bfi r3,r2,#0,#11
 4598 0174 BB81     	 strh r3,[r7,#12]
 4599              	.L264:
1492:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1493:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set first data0 pid */
1494:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.setd0pid = 1U;
 4600              	 .loc 1 1494 0 discriminator 2
 4601 0176 FB7B     	 ldrb r3,[r7,#15]
 4602 0178 43F01003 	 orr r3,r3,#16
 4603 017c FB73     	 strb r3,[r7,#15]
1495:../Libraries/XMCLib/src/xmc_usbd.c ****     /* clear stall */
1496:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall = 0U;
 4604              	 .loc 1 1496 0 discriminator 2
 4605 017e BB7B     	 ldrb r3,[r7,#14]
 4606 0180 6FF34513 	 bfc r3,#5,#1
 4607 0184 BB73     	 strb r3,[r7,#14]
1497:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set tx fifo */
1498:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->txFifoNum = XMC_USBD_lAssignTXFifo(); /* get tx fifo */
 4608              	 .loc 1 1498 0 discriminator 2
 4609 0186 FFF7FEFF 	 bl XMC_USBD_lAssignTXFifo
 4610 018a 0346     	 mov r3,r0
 4611 018c 03F00F03 	 and r3,r3,#15
 4612 0190 D9B2     	 uxtb r1,r3
 4613 0192 7A69     	 ldr r2,[r7,#20]
 4614 0194 9388     	 ldrh r3,[r2,#4]
 4615 0196 61F38913 	 bfi r3,r1,#6,#4
 4616 019a 9380     	 strh r3,[r2,#4]
1499:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.txfnum = ep->txFifoNum;
 4617              	 .loc 1 1499 0 discriminator 2
 4618 019c 7B69     	 ldr r3,[r7,#20]
 4619 019e 9B88     	 ldrh r3,[r3,#4]
 4620 01a0 C3F38313 	 ubfx r3,r3,#6,#4
 4621 01a4 DAB2     	 uxtb r2,r3
 4622 01a6 FB89     	 ldrh r3,[r7,#14]
 4623 01a8 62F38913 	 bfi r3,r2,#6,#4
 4624 01ac FB81     	 strh r3,[r7,#14]
1500:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* config
 4625              	 .loc 1 1500 0 discriminator 2
 4626 01ae 7B69     	 ldr r3,[r7,#20]
 4627 01b0 1B78     	 ldrb r3,[r3]
 4628 01b2 C3F30303 	 ubfx r3,r3,#0,#4
 4629 01b6 DBB2     	 uxtb r3,r3
 4630 01b8 2E4A     	 ldr r2,.L277
 4631 01ba 6A33     	 adds r3,r3,#106
 4632 01bc 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4633 01c0 FA68     	 ldr r2,[r7,#12]
 4634 01c2 1A60     	 str r2,[r3]
1501:../Libraries/XMCLib/src/xmc_usbd.c ****     daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enab
 4635              	 .loc 1 1501 0 discriminator 2
 4636 01c4 3A8A     	 ldrh r2,[r7,#16]
 4637 01c6 7B69     	 ldr r3,[r7,#20]
 4638 01c8 1B78     	 ldrb r3,[r3]
 4639 01ca C3F30303 	 ubfx r3,r3,#0,#4
 4640 01ce DBB2     	 uxtb r3,r3
 4641 01d0 1946     	 mov r1,r3
 4642 01d2 0123     	 movs r3,#1
 4643 01d4 8B40     	 lsls r3,r3,r1
 4644 01d6 9BB2     	 uxth r3,r3
 4645 01d8 1343     	 orrs r3,r3,r2
 4646 01da 9BB2     	 uxth r3,r3
 4647 01dc 3B82     	 strh r3,[r7,#16]
 4648              	.L255:
 4649              	.LBE6:
1502:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1503:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 0U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4650              	 .loc 1 1503 0
 4651 01de 7B69     	 ldr r3,[r7,#20]
 4652 01e0 1B78     	 ldrb r3,[r3]
 4653 01e2 23F07F03 	 bic r3,r3,#127
 4654 01e6 DBB2     	 uxtb r3,r3
 4655 01e8 002B     	 cmp r3,#0
 4656 01ea 02D0     	 beq .L265
 4657              	 .loc 1 1503 0 is_stmt 0 discriminator 1
 4658 01ec BB79     	 ldrb r3,[r7,#6]
 4659 01ee 002B     	 cmp r3,#0
 4660 01f0 73D1     	 bne .L266
 4661              	.L265:
 4662              	.LBB7:
1504:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1505:../Libraries/XMCLib/src/xmc_usbd.c ****     /* is out */
1506:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1507:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4663              	 .loc 1 1507 0 is_stmt 1
 4664 01f2 7B69     	 ldr r3,[r7,#20]
 4665 01f4 1B78     	 ldrb r3,[r3]
 4666 01f6 C3F30303 	 ubfx r3,r3,#0,#4
 4667 01fa DBB2     	 uxtb r3,r3
 4668 01fc 1D4A     	 ldr r2,.L277
 4669 01fe 7033     	 adds r3,r3,#112
 4670 0200 9B00     	 lsls r3,r3,#2
 4671 0202 1344     	 add r3,r3,r2
 4672 0204 5B68     	 ldr r3,[r3,#4]
 4673 0206 1B68     	 ldr r3,[r3]
 4674 0208 BB60     	 str r3,[r7,#8]
1508:../Libraries/XMCLib/src/xmc_usbd.c ****     /*enable endpoint */
1509:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 1U;
 4675              	 .loc 1 1509 0
 4676 020a 7B7A     	 ldrb r3,[r7,#9]
 4677 020c 43F08003 	 orr r3,r3,#128
 4678 0210 7B72     	 strb r3,[r7,#9]
1510:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep type */
1511:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.eptype = (uint8_t)ep_type;
 4679              	 .loc 1 1511 0
 4680 0212 BB79     	 ldrb r3,[r7,#6]
 4681 0214 03F00303 	 and r3,r3,#3
 4682 0218 DAB2     	 uxtb r2,r3
 4683 021a BB7A     	 ldrb r3,[r7,#10]
 4684 021c 62F38303 	 bfi r3,r2,#2,#2
 4685 0220 BB72     	 strb r3,[r7,#10]
1512:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1513:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4686              	 .loc 1 1513 0
 4687 0222 BB79     	 ldrb r3,[r7,#6]
 4688 0224 002B     	 cmp r3,#0
 4689 0226 2FD1     	 bne .L267
1514:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1515:../Libraries/XMCLib/src/xmc_usbd.c ****       switch (ep_max_packet_size)
 4690              	 .loc 1 1515 0
 4691 0228 BB88     	 ldrh r3,[r7,#4]
 4692 022a 102B     	 cmp r3,#16
 4693 022c 14D0     	 beq .L269
 4694 022e 102B     	 cmp r3,#16
 4695 0230 02DC     	 bgt .L270
 4696 0232 082B     	 cmp r3,#8
 4697 0234 16D0     	 beq .L271
1516:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1517:../Libraries/XMCLib/src/xmc_usbd.c ****         case (64U):
1518:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x0U;
1519:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1520:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
1521:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x1U;
1522:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1523:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
1524:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x2U;
1525:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1526:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
1527:../Libraries/XMCLib/src/xmc_usbd.c ****           data.b.mps = 0x3U;
1528:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
1529:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
1530:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4698              	 .loc 1 1530 0
 4699 0236 1BE0     	 b .L274
 4700              	.L270:
1515:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 4701              	 .loc 1 1515 0
 4702 0238 202B     	 cmp r3,#32
 4703 023a 07D0     	 beq .L272
 4704 023c 402B     	 cmp r3,#64
 4705 023e 00D0     	 beq .L273
 4706              	 .loc 1 1530 0
 4707 0240 16E0     	 b .L274
 4708              	.L273:
1518:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4709              	 .loc 1 1518 0
 4710 0242 3B89     	 ldrh r3,[r7,#8]
 4711 0244 6FF30A03 	 bfc r3,#0,#11
 4712 0248 3B81     	 strh r3,[r7,#8]
1519:../Libraries/XMCLib/src/xmc_usbd.c ****         case (32U):
 4713              	 .loc 1 1519 0
 4714 024a 11E0     	 b .L274
 4715              	.L272:
1521:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4716              	 .loc 1 1521 0
 4717 024c 3B89     	 ldrh r3,[r7,#8]
 4718 024e 0122     	 movs r2,#1
 4719 0250 62F30A03 	 bfi r3,r2,#0,#11
 4720 0254 3B81     	 strh r3,[r7,#8]
1522:../Libraries/XMCLib/src/xmc_usbd.c ****         case (16U):
 4721              	 .loc 1 1522 0
 4722 0256 0BE0     	 b .L274
 4723              	.L269:
1524:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4724              	 .loc 1 1524 0
 4725 0258 3B89     	 ldrh r3,[r7,#8]
 4726 025a 0222     	 movs r2,#2
 4727 025c 62F30A03 	 bfi r3,r2,#0,#11
 4728 0260 3B81     	 strh r3,[r7,#8]
1525:../Libraries/XMCLib/src/xmc_usbd.c ****         case (8U):
 4729              	 .loc 1 1525 0
 4730 0262 05E0     	 b .L274
 4731              	.L271:
1527:../Libraries/XMCLib/src/xmc_usbd.c ****           break;
 4732              	 .loc 1 1527 0
 4733 0264 3B89     	 ldrh r3,[r7,#8]
 4734 0266 0322     	 movs r2,#3
 4735 0268 62F30A03 	 bfi r3,r2,#0,#11
 4736 026c 3B81     	 strh r3,[r7,#8]
1528:../Libraries/XMCLib/src/xmc_usbd.c ****         default:
 4737              	 .loc 1 1528 0
 4738 026e 00BF     	 nop
 4739              	.L274:
 4740 0270 12E0     	 b .L275
 4741              	.L278:
 4742 0272 00BF     	 .align 2
 4743              	.L277:
 4744 0274 00000000 	 .word xmc_device
 4745 0278 00070000 	 .word XMC_USBD_EP_IN_BUFFER
 4746 027c 00000000 	 .word XMC_USBD_EP_OUT_BUFFER
 4747 0280 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 4748 0284 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 4749              	.L267:
1531:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1532:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1533:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1534:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1535:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.mps = ep_max_packet_size;
 4750              	 .loc 1 1535 0
 4751 0288 BB88     	 ldrh r3,[r7,#4]
 4752 028a C3F30A03 	 ubfx r3,r3,#0,#11
 4753 028e 9AB2     	 uxth r2,r3
 4754 0290 3B89     	 ldrh r3,[r7,#8]
 4755 0292 62F30A03 	 bfi r3,r2,#0,#11
 4756 0296 3B81     	 strh r3,[r7,#8]
 4757              	.L275:
1536:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1537:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set first data0 pid */
1538:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.setd0pid = 1U;
 4758              	 .loc 1 1538 0 discriminator 4
 4759 0298 FB7A     	 ldrb r3,[r7,#11]
 4760 029a 43F01003 	 orr r3,r3,#16
 4761 029e FB72     	 strb r3,[r7,#11]
1539:../Libraries/XMCLib/src/xmc_usbd.c ****     /* clear stall */
1540:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall = (uint8_t) 0U;
 4762              	 .loc 1 1540 0 discriminator 4
 4763 02a0 BB7A     	 ldrb r3,[r7,#10]
 4764 02a2 6FF34513 	 bfc r3,#5,#1
 4765 02a6 BB72     	 strb r3,[r7,#10]
1541:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* confi
 4766              	 .loc 1 1541 0 discriminator 4
 4767 02a8 7B69     	 ldr r3,[r7,#20]
 4768 02aa 1B78     	 ldrb r3,[r3]
 4769 02ac C3F30303 	 ubfx r3,r3,#0,#4
 4770 02b0 DBB2     	 uxtb r3,r3
 4771 02b2 0F4A     	 ldr r2,.L279
 4772 02b4 7033     	 adds r3,r3,#112
 4773 02b6 9B00     	 lsls r3,r3,#2
 4774 02b8 1344     	 add r3,r3,r2
 4775 02ba 5B68     	 ldr r3,[r3,#4]
 4776 02bc BA68     	 ldr r2,[r7,#8]
 4777 02be 1A60     	 str r2,[r3]
1542:../Libraries/XMCLib/src/xmc_usbd.c ****     daintmsk.ep.out |= (uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* en
 4778              	 .loc 1 1542 0 discriminator 4
 4779 02c0 7A8A     	 ldrh r2,[r7,#18]
 4780 02c2 7B69     	 ldr r3,[r7,#20]
 4781 02c4 1B78     	 ldrb r3,[r3]
 4782 02c6 C3F30303 	 ubfx r3,r3,#0,#4
 4783 02ca DBB2     	 uxtb r3,r3
 4784 02cc 1946     	 mov r1,r3
 4785 02ce 0123     	 movs r3,#1
 4786 02d0 8B40     	 lsls r3,r3,r1
 4787 02d2 9BB2     	 uxth r3,r3
 4788 02d4 1343     	 orrs r3,r3,r2
 4789 02d6 9BB2     	 uxth r3,r3
 4790 02d8 7B82     	 strh r3,[r7,#18]
 4791              	.L266:
 4792              	.LBE7:
1543:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1544:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daintmsk.d32;
 4793              	 .loc 1 1544 0
 4794 02da 054B     	 ldr r3,.L279
 4795 02dc D3F8A431 	 ldr r3,[r3,#420]
 4796 02e0 3A69     	 ldr r2,[r7,#16]
 4797 02e2 DA61     	 str r2,[r3,#28]
1545:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4798              	 .loc 1 1545 0
 4799 02e4 0023     	 movs r3,#0
1546:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4800              	 .loc 1 1546 0
 4801 02e6 1846     	 mov r0,r3
 4802 02e8 1837     	 adds r7,r7,#24
 4803              	.LCFI198:
 4804              	 .cfi_def_cfa_offset 8
 4805 02ea BD46     	 mov sp,r7
 4806              	.LCFI199:
 4807              	 .cfi_def_cfa_register 13
 4808              	 
 4809 02ec 80BD     	 pop {r7,pc}
 4810              	.L280:
 4811 02ee 00BF     	 .align 2
 4812              	.L279:
 4813 02f0 00000000 	 .word xmc_device
 4814              	 .cfi_endproc
 4815              	.LFE207:
 4817              	 .section .text.XMC_USBD_EndpointUnconfigure,"ax",%progbits
 4818              	 .align 2
 4819              	 .global XMC_USBD_EndpointUnconfigure
 4820              	 .thumb
 4821              	 .thumb_func
 4823              	XMC_USBD_EndpointUnconfigure:
 4824              	.LFB208:
1547:../Libraries/XMCLib/src/xmc_usbd.c **** 
1548:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1549:../Libraries/XMCLib/src/xmc_usbd.c ****  * Unconfigure the selected endpoint.
1550:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1551:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointUnconfigure(const uint8_t ep_addr)
1552:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4825              	 .loc 1 1552 0
 4826              	 .cfi_startproc
 4827              	 
 4828              	 
 4829 0000 80B5     	 push {r7,lr}
 4830              	.LCFI200:
 4831              	 .cfi_def_cfa_offset 8
 4832              	 .cfi_offset 7,-8
 4833              	 .cfi_offset 14,-4
 4834 0002 88B0     	 sub sp,sp,#32
 4835              	.LCFI201:
 4836              	 .cfi_def_cfa_offset 40
 4837 0004 00AF     	 add r7,sp,#0
 4838              	.LCFI202:
 4839              	 .cfi_def_cfa_register 7
 4840 0006 0346     	 mov r3,r0
 4841 0008 FB71     	 strb r3,[r7,#7]
1553:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4842              	 .loc 1 1553 0
 4843 000a FB79     	 ldrb r3,[r7,#7]
 4844 000c 03F00F03 	 and r3,r3,#15
 4845 0010 3422     	 movs r2,#52
 4846 0012 02FB03F3 	 mul r3,r2,r3
 4847 0016 544A     	 ldr r2,.L289
 4848 0018 1344     	 add r3,r3,r2
 4849 001a BB61     	 str r3,[r7,#24]
1554:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1557:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t number_temp;
1558:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 4850              	 .loc 1 1558 0
 4851 001c 0023     	 movs r3,#0
 4852 001e 3B61     	 str r3,[r7,#16]
1559:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 4853              	 .loc 1 1559 0
 4854 0020 514B     	 ldr r3,.L289
 4855 0022 D3F8A431 	 ldr r3,[r3,#420]
 4856 0026 DB69     	 ldr r3,[r3,#28]
 4857 0028 FB60     	 str r3,[r7,#12]
1560:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 4858              	 .loc 1 1560 0
 4859 002a BB69     	 ldr r3,[r7,#24]
 4860 002c 1B78     	 ldrb r3,[r3]
 4861 002e C3F30303 	 ubfx r3,r3,#0,#4
 4862 0032 DBB2     	 uxtb r3,r3
 4863 0034 1A46     	 mov r2,r3
 4864 0036 0123     	 movs r3,#1
 4865 0038 9340     	 lsls r3,r3,r2
 4866 003a 7B61     	 str r3,[r7,#20]
1561:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
1562:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 4867              	 .loc 1 1562 0
 4868 003c BB69     	 ldr r3,[r7,#24]
 4869 003e 1B79     	 ldrb r3,[r3,#4]
 4870 0040 03F00403 	 and r3,r3,#4
 4871 0044 DBB2     	 uxtb r3,r3
 4872 0046 002B     	 cmp r3,#0
 4873 0048 02D1     	 bne .L282
1563:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1564:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
 4874              	 .loc 1 1564 0
 4875 004a 0123     	 movs r3,#1
 4876 004c FB77     	 strb r3,[r7,#31]
 4877 004e 85E0     	 b .L283
 4878              	.L282:
1565:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1566:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1567:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1568:../Libraries/XMCLib/src/xmc_usbd.c ****     /* disable the endpoint, deactivate it and only send naks */
1569:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 0U;
 4879              	 .loc 1 1569 0
 4880 0050 7B7C     	 ldrb r3,[r7,#17]
 4881 0052 6FF3C713 	 bfc r3,#7,#1
 4882 0056 7B74     	 strb r3,[r7,#17]
1570:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
 4883              	 .loc 1 1570 0
 4884 0058 FB7C     	 ldrb r3,[r7,#19]
 4885 005a 43F04003 	 orr r3,r3,#64
 4886 005e FB74     	 strb r3,[r7,#19]
1571:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.snak =  1U;
 4887              	 .loc 1 1571 0
 4888 0060 FB7C     	 ldrb r3,[r7,#19]
 4889 0062 43F00803 	 orr r3,r3,#8
 4890 0066 FB74     	 strb r3,[r7,#19]
1572:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
 4891              	 .loc 1 1572 0
 4892 0068 BB7C     	 ldrb r3,[r7,#18]
 4893 006a 6FF34513 	 bfc r3,#5,#1
 4894 006e BB74     	 strb r3,[r7,#18]
1573:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
 4895              	 .loc 1 1573 0
 4896 0070 BA69     	 ldr r2,[r7,#24]
 4897 0072 1379     	 ldrb r3,[r2,#4]
 4898 0074 6FF38203 	 bfc r3,#2,#1
 4899 0078 1371     	 strb r3,[r2,#4]
1574:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled =  0U;
 4900              	 .loc 1 1574 0
 4901 007a BA69     	 ldr r2,[r7,#24]
 4902 007c 1379     	 ldrb r3,[r2,#4]
 4903 007e 6FF34513 	 bfc r3,#5,#1
 4904 0082 1371     	 strb r3,[r2,#4]
1575:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse =  0U;
 4905              	 .loc 1 1575 0
 4906 0084 BB69     	 ldr r3,[r7,#24]
 4907 0086 5A68     	 ldr r2,[r3,#4]
 4908 0088 22F01002 	 bic r2,r2,#16
 4909 008c 5A60     	 str r2,[r3,#4]
1576:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse =  0U;
 4910              	 .loc 1 1576 0
 4911 008e BB69     	 ldr r3,[r7,#24]
 4912 0090 5A68     	 ldr r2,[r3,#4]
 4913 0092 22F00802 	 bic r2,r2,#8
 4914 0096 5A60     	 str r2,[r3,#4]
1577:../Libraries/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
1578:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 1U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 4915              	 .loc 1 1578 0
 4916 0098 BB69     	 ldr r3,[r7,#24]
 4917 009a 1B78     	 ldrb r3,[r3]
 4918 009c 23F07F03 	 bic r3,r3,#127
 4919 00a0 DBB2     	 uxtb r3,r3
 4920 00a2 002B     	 cmp r3,#0
 4921 00a4 06D1     	 bne .L284
 4922              	 .loc 1 1578 0 is_stmt 0 discriminator 1
 4923 00a6 BB69     	 ldr r3,[r7,#24]
 4924 00a8 1B79     	 ldrb r3,[r3,#4]
 4925 00aa 03F00303 	 and r3,r3,#3
 4926 00ae DBB2     	 uxtb r3,r3
 4927 00b0 002B     	 cmp r3,#0
 4928 00b2 12D1     	 bne .L285
 4929              	.L284:
1579:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1580:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable endpoint configuration */
1581:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4930              	 .loc 1 1581 0 is_stmt 1
 4931 00b4 BB69     	 ldr r3,[r7,#24]
 4932 00b6 1B78     	 ldrb r3,[r3]
 4933 00b8 C3F30303 	 ubfx r3,r3,#0,#4
 4934 00bc DBB2     	 uxtb r3,r3
 4935 00be 2A4A     	 ldr r2,.L289
 4936 00c0 6A33     	 adds r3,r3,#106
 4937 00c2 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4938 00c6 3A69     	 ldr r2,[r7,#16]
 4939 00c8 1A60     	 str r2,[r3]
1582:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
1583:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.in = (uint16_t)((uint32_t)daintmsk.ep.in & (~(uint32_t)number_temp));
 4940              	 .loc 1 1583 0
 4941 00ca BA89     	 ldrh r2,[r7,#12]
 4942 00cc 7B69     	 ldr r3,[r7,#20]
 4943 00ce 9BB2     	 uxth r3,r3
 4944 00d0 DB43     	 mvns r3,r3
 4945 00d2 9BB2     	 uxth r3,r3
 4946 00d4 1340     	 ands r3,r3,r2
 4947 00d6 9BB2     	 uxth r3,r3
 4948 00d8 BB81     	 strh r3,[r7,#12]
 4949              	.L285:
1584:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1585:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 0U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 4950              	 .loc 1 1585 0
 4951 00da BB69     	 ldr r3,[r7,#24]
 4952 00dc 1B78     	 ldrb r3,[r3]
 4953 00de 23F07F03 	 bic r3,r3,#127
 4954 00e2 DBB2     	 uxtb r3,r3
 4955 00e4 002B     	 cmp r3,#0
 4956 00e6 06D0     	 beq .L286
 4957              	 .loc 1 1585 0 is_stmt 0 discriminator 1
 4958 00e8 BB69     	 ldr r3,[r7,#24]
 4959 00ea 1B79     	 ldrb r3,[r3,#4]
 4960 00ec 03F00303 	 and r3,r3,#3
 4961 00f0 DBB2     	 uxtb r3,r3
 4962 00f2 002B     	 cmp r3,#0
 4963 00f4 23D1     	 bne .L287
 4964              	.L286:
1586:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1587:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4965              	 .loc 1 1587 0 is_stmt 1
 4966 00f6 BB69     	 ldr r3,[r7,#24]
 4967 00f8 1B78     	 ldrb r3,[r3]
 4968 00fa C3F30303 	 ubfx r3,r3,#0,#4
 4969 00fe DBB2     	 uxtb r3,r3
 4970 0100 194A     	 ldr r2,.L289
 4971 0102 7033     	 adds r3,r3,#112
 4972 0104 9B00     	 lsls r3,r3,#2
 4973 0106 1344     	 add r3,r3,r2
 4974 0108 5B68     	 ldr r3,[r3,#4]
 4975 010a 3A69     	 ldr r2,[r7,#16]
 4976 010c 1A60     	 str r2,[r3]
1588:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 4977              	 .loc 1 1588 0
 4978 010e FA89     	 ldrh r2,[r7,#14]
 4979 0110 7B69     	 ldr r3,[r7,#20]
 4980 0112 9BB2     	 uxth r3,r3
 4981 0114 DB43     	 mvns r3,r3
 4982 0116 9BB2     	 uxth r3,r3
 4983 0118 1340     	 ands r3,r3,r2
 4984 011a 9BB2     	 uxth r3,r3
 4985 011c FB81     	 strh r3,[r7,#14]
1589:../Libraries/XMCLib/src/xmc_usbd.c ****       if (usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 4986              	 .loc 1 1589 0
 4987 011e 134B     	 ldr r3,.L289+4
 4988 0120 1B68     	 ldr r3,[r3]
 4989 0122 5B7B     	 ldrb r3,[r3,#13]
 4990 0124 012B     	 cmp r3,#1
 4991 0126 0AD1     	 bne .L287
1590:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1591:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.device_register->dtknqr4_fifoemptymsk &= ~number_temp;
 4992              	 .loc 1 1591 0
 4993 0128 0F4B     	 ldr r3,.L289
 4994 012a D3F8A431 	 ldr r3,[r3,#420]
 4995 012e 0E4A     	 ldr r2,.L289
 4996 0130 D2F8A421 	 ldr r2,[r2,#420]
 4997 0134 516B     	 ldr r1,[r2,#52]
 4998 0136 7A69     	 ldr r2,[r7,#20]
 4999 0138 D243     	 mvns r2,r2
 5000 013a 0A40     	 ands r2,r2,r1
 5001 013c 5A63     	 str r2,[r3,#52]
 5002              	.L287:
1592:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1593:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1594:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->daintmsk = daintmsk.d32;
 5003              	 .loc 1 1594 0
 5004 013e 0A4B     	 ldr r3,.L289
 5005 0140 D3F8A431 	 ldr r3,[r3,#420]
 5006 0144 FA68     	 ldr r2,[r7,#12]
 5007 0146 DA61     	 str r2,[r3,#28]
1595:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 5008              	 .loc 1 1595 0
 5009 0148 BB69     	 ldr r3,[r7,#24]
 5010 014a 9B88     	 ldrh r3,[r3,#4]
 5011 014c C3F38313 	 ubfx r3,r3,#6,#4
 5012 0150 DBB2     	 uxtb r3,r3
 5013 0152 1846     	 mov r0,r3
 5014 0154 FFF7FEFF 	 bl XMC_USBD_lUnassignFifo
1596:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 5015              	 .loc 1 1596 0
 5016 0158 0023     	 movs r3,#0
 5017 015a FB77     	 strb r3,[r7,#31]
 5018              	.L283:
1597:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1598:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 5019              	 .loc 1 1598 0
 5020 015c FB7F     	 ldrb r3,[r7,#31]
1599:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5021              	 .loc 1 1599 0
 5022 015e 1846     	 mov r0,r3
 5023 0160 2037     	 adds r7,r7,#32
 5024              	.LCFI203:
 5025              	 .cfi_def_cfa_offset 8
 5026 0162 BD46     	 mov sp,r7
 5027              	.LCFI204:
 5028              	 .cfi_def_cfa_register 13
 5029              	 
 5030 0164 80BD     	 pop {r7,pc}
 5031              	.L290:
 5032 0166 00BF     	 .align 2
 5033              	.L289:
 5034 0168 00000000 	 .word xmc_device
 5035 016c 00000000 	 .word usbd_init
 5036              	 .cfi_endproc
 5037              	.LFE208:
 5039              	 .section .text.XMC_USBD_GetFrameNumber,"ax",%progbits
 5040              	 .align 2
 5041              	 .global XMC_USBD_GetFrameNumber
 5042              	 .thumb
 5043              	 .thumb_func
 5045              	XMC_USBD_GetFrameNumber:
 5046              	.LFB209:
1600:../Libraries/XMCLib/src/xmc_usbd.c **** 
1601:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1602:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the current USB frame number
1603:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1604:../Libraries/XMCLib/src/xmc_usbd.c **** uint16_t XMC_USBD_GetFrameNumber(void)
1605:../Libraries/XMCLib/src/xmc_usbd.c **** {
 5047              	 .loc 1 1605 0
 5048              	 .cfi_startproc
 5049              	 
 5050              	 
 5051              	 
 5052 0000 80B4     	 push {r7}
 5053              	.LCFI205:
 5054              	 .cfi_def_cfa_offset 4
 5055              	 .cfi_offset 7,-4
 5056 0002 83B0     	 sub sp,sp,#12
 5057              	.LCFI206:
 5058              	 .cfi_def_cfa_offset 16
 5059 0004 00AF     	 add r7,sp,#0
 5060              	.LCFI207:
 5061              	 .cfi_def_cfa_register 7
1606:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t result;
1607:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts_data_t dsts;
1608:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts.d32 = xmc_device.device_register->dsts;
 5062              	 .loc 1 1608 0
 5063 0006 084B     	 ldr r3,.L293
 5064 0008 D3F8A431 	 ldr r3,[r3,#420]
 5065 000c 9B68     	 ldr r3,[r3,#8]
 5066 000e 3B60     	 str r3,[r7]
1609:../Libraries/XMCLib/src/xmc_usbd.c ****   result = (uint16_t)dsts.b.soffn;
 5067              	 .loc 1 1609 0
 5068 0010 3B68     	 ldr r3,[r7]
 5069 0012 C3F30D23 	 ubfx r3,r3,#8,#14
 5070 0016 9BB2     	 uxth r3,r3
 5071 0018 FB80     	 strh r3,[r7,#6]
1610:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 5072              	 .loc 1 1610 0
 5073 001a FB88     	 ldrh r3,[r7,#6]
1611:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5074              	 .loc 1 1611 0
 5075 001c 1846     	 mov r0,r3
 5076 001e 0C37     	 adds r7,r7,#12
 5077              	.LCFI208:
 5078              	 .cfi_def_cfa_offset 4
 5079 0020 BD46     	 mov sp,r7
 5080              	.LCFI209:
 5081              	 .cfi_def_cfa_register 13
 5082              	 
 5083 0022 5DF8047B 	 ldr r7,[sp],#4
 5084              	.LCFI210:
 5085              	 .cfi_restore 7
 5086              	 .cfi_def_cfa_offset 0
 5087 0026 7047     	 bx lr
 5088              	.L294:
 5089              	 .align 2
 5090              	.L293:
 5091 0028 00000000 	 .word xmc_device
 5092              	 .cfi_endproc
 5093              	.LFE209:
 5095              	 .section .text.XMC_USBD_IsEnumDone,"ax",%progbits
 5096              	 .align 2
 5097              	 .global XMC_USBD_IsEnumDone
 5098              	 .thumb
 5099              	 .thumb_func
 5101              	XMC_USBD_IsEnumDone:
 5102              	.LFB210:
1612:../Libraries/XMCLib/src/xmc_usbd.c **** 
1613:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1614:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB speed enumeration completion status.
1615:../Libraries/XMCLib/src/xmc_usbd.c ****  * This should not be used for the actual USB enumeration completion status. For the actual USB enu
1616:../Libraries/XMCLib/src/xmc_usbd.c ****  * the application layer should check for the completion of USB standard request Set configuration.
1617:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1618:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_IsEnumDone(void)
1619:../Libraries/XMCLib/src/xmc_usbd.c **** {
 5103              	 .loc 1 1619 0
 5104              	 .cfi_startproc
 5105              	 
 5106              	 
 5107              	 
 5108 0000 80B4     	 push {r7}
 5109              	.LCFI211:
 5110              	 .cfi_def_cfa_offset 4
 5111              	 .cfi_offset 7,-4
 5112 0002 00AF     	 add r7,sp,#0
 5113              	.LCFI212:
 5114              	 .cfi_def_cfa_register 7
1620:../Libraries/XMCLib/src/xmc_usbd.c ****   return (uint32_t)((uint8_t)xmc_device.IsConnected && (uint8_t)xmc_device.IsPowered);
 5115              	 .loc 1 1620 0
 5116 0004 0B4B     	 ldr r3,.L299
 5117 0006 93F8FE31 	 ldrb r3,[r3,#510]
 5118 000a 03F00103 	 and r3,r3,#1
 5119 000e DBB2     	 uxtb r3,r3
 5120 0010 002B     	 cmp r3,#0
 5121 0012 09D0     	 beq .L296
 5122              	 .loc 1 1620 0 is_stmt 0 discriminator 1
 5123 0014 074B     	 ldr r3,.L299
 5124 0016 93F8FE31 	 ldrb r3,[r3,#510]
 5125 001a 03F00403 	 and r3,r3,#4
 5126 001e DBB2     	 uxtb r3,r3
 5127 0020 002B     	 cmp r3,#0
 5128 0022 01D0     	 beq .L296
 5129              	 .loc 1 1620 0 discriminator 3
 5130 0024 0123     	 movs r3,#1
 5131 0026 00E0     	 b .L297
 5132              	.L296:
 5133              	 .loc 1 1620 0 discriminator 4
 5134 0028 0023     	 movs r3,#0
 5135              	.L297:
1621:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5136              	 .loc 1 1621 0 is_stmt 1 discriminator 6
 5137 002a 1846     	 mov r0,r3
 5138 002c BD46     	 mov sp,r7
 5139              	.LCFI213:
 5140              	 .cfi_def_cfa_register 13
 5141              	 
 5142 002e 5DF8047B 	 ldr r7,[sp],#4
 5143              	.LCFI214:
 5144              	 .cfi_restore 7
 5145              	 .cfi_def_cfa_offset 0
 5146 0032 7047     	 bx lr
 5147              	.L300:
 5148              	 .align 2
 5149              	.L299:
 5150 0034 00000000 	 .word xmc_device
 5151              	 .cfi_endproc
 5152              	.LFE210:
 5154              	 .text
 5155              	.Letext0:
 5156              	 .file 2 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5157              	 .file 3 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5158              	 .file 4 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 5159              	 .file 5 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 5160              	 .file 6 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc4_scu.h"
 5161              	 .file 7 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_usbd.h"
 5162              	 .file 8 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/cmsis_gcc.h"
 5163              	 .file 9 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/core_cm4.h"
 5164              	 .file 10 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbd.c
    {standard input}:20     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 $d
    {standard input}:23     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 XMC_USBD_EP_OUT_BUFFERSIZE
    {standard input}:26     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 $d
    {standard input}:29     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 XMC_USBD_EP_IN_BUFFERSIZE
                            *COM*:00000208 xmc_device
    {standard input}:33     USB_RAM:00000000 $d
    {standard input}:36     USB_RAM:00000000 XMC_USBD_EP_OUT_BUFFER
    {standard input}:41     USB_RAM:00000700 XMC_USBD_EP_IN_BUFFER
    {standard input}:44     .bss.usbd_init:00000000 $d
    {standard input}:47     .bss.usbd_init:00000000 usbd_init
    {standard input}:54     .rodata.Driver_USBD0:00000000 Driver_USBD0
    {standard input}:51     .rodata.Driver_USBD0:00000000 $d
    {standard input}:2975   .text.XMC_USBD_GetCapabilities:00000000 XMC_USBD_GetCapabilities
    {standard input}:3060   .text.XMC_USBD_Init:00000000 XMC_USBD_Init
    {standard input}:3402   .text.XMC_USBD_Uninitialize:00000000 XMC_USBD_Uninitialize
    {standard input}:3463   .text.XMC_USBD_DeviceConnect:00000000 XMC_USBD_DeviceConnect
    {standard input}:3523   .text.XMC_USBD_DeviceDisconnect:00000000 XMC_USBD_DeviceDisconnect
    {standard input}:3583   .text.XMC_USBD_DeviceGetState:00000000 XMC_USBD_DeviceGetState
    {standard input}:3999   .text.XMC_USBD_DeviceSetAddress:00000000 XMC_USBD_DeviceSetAddress
    {standard input}:4383   .text.XMC_USBD_EndpointConfigure:00000000 XMC_USBD_EndpointConfigure
    {standard input}:4823   .text.XMC_USBD_EndpointUnconfigure:00000000 XMC_USBD_EndpointUnconfigure
    {standard input}:4072   .text.XMC_USBD_EndpointStall:00000000 XMC_USBD_EndpointStall
    {standard input}:3659   .text.XMC_USBD_EndpointReadStart:00000000 XMC_USBD_EndpointReadStart
    {standard input}:3772   .text.XMC_USBD_EndpointRead:00000000 XMC_USBD_EndpointRead
    {standard input}:3872   .text.XMC_USBD_EndpointWrite:00000000 XMC_USBD_EndpointWrite
    {standard input}:4276   .text.XMC_USBD_EndpointAbort:00000000 XMC_USBD_EndpointAbort
    {standard input}:5045   .text.XMC_USBD_GetFrameNumber:00000000 XMC_USBD_GetFrameNumber
    {standard input}:5101   .text.XMC_USBD_IsEnumDone:00000000 XMC_USBD_IsEnumDone
    {standard input}:72     .text.XMC_USBD_lDeviceActive:00000000 $t
    {standard input}:76     .text.XMC_USBD_lDeviceActive:00000000 XMC_USBD_lDeviceActive
    {standard input}:162    .text.XMC_USBD_lDeviceActive:00000068 $d
    {standard input}:167    .text.XMC_USBD_lReadFifo:00000000 $t
    {standard input}:171    .text.XMC_USBD_lReadFifo:00000000 XMC_USBD_lReadFifo
    {standard input}:331    .text.XMC_USBD_lReadFifo:000000e4 $d
    {standard input}:336    .text.XMC_USBD_lWriteFifo:00000000 $t
    {standard input}:340    .text.XMC_USBD_lWriteFifo:00000000 XMC_USBD_lWriteFifo
    {standard input}:462    .text.XMC_USBD_lWriteFifo:000000a0 $d
    {standard input}:467    .text.XMC_USBD_lFlushTXFifo:00000000 $t
    {standard input}:471    .text.XMC_USBD_lFlushTXFifo:00000000 XMC_USBD_lFlushTXFifo
    {standard input}:567    .text.XMC_USBD_lFlushTXFifo:00000080 $d
    {standard input}:572    .text.XMC_USBD_lFlushRXFifo:00000000 $t
    {standard input}:576    .text.XMC_USBD_lFlushRXFifo:00000000 XMC_USBD_lFlushRXFifo
    {standard input}:660    .text.XMC_USBD_lFlushRXFifo:00000064 $d
    {standard input}:665    .text.XMC_USBD_lAssignTXFifo:00000000 $t
    {standard input}:669    .text.XMC_USBD_lAssignTXFifo:00000000 XMC_USBD_lAssignTXFifo
    {standard input}:759    .text.XMC_USBD_lAssignTXFifo:0000006c $d
    {standard input}:764    .text.XMC_USBD_lUnassignFifo:00000000 $t
    {standard input}:768    .text.XMC_USBD_lUnassignFifo:00000000 XMC_USBD_lUnassignFifo
    {standard input}:816    .text.XMC_USBD_lUnassignFifo:00000034 $d
    {standard input}:821    .text.XMC_USBD_lStartReadXfer:00000000 $t
    {standard input}:825    .text.XMC_USBD_lStartReadXfer:00000000 XMC_USBD_lStartReadXfer
    {standard input}:1039   .text.XMC_USBD_lStartReadXfer:00000170 $d
    {standard input}:1045   .text.XMC_USBD_lStartWriteXfer:00000000 $t
    {standard input}:1049   .text.XMC_USBD_lStartWriteXfer:00000000 XMC_USBD_lStartWriteXfer
    {standard input}:1274   .text.XMC_USBD_lStartWriteXfer:0000018c $d
    {standard input}:1280   .text.XMC_USBD_lHandleUSBReset:00000000 $t
    {standard input}:1284   .text.XMC_USBD_lHandleUSBReset:00000000 XMC_USBD_lHandleUSBReset
    {standard input}:2863   .text.XMC_USBD_EnableEventOUTEP:00000000 XMC_USBD_EnableEventOUTEP
    {standard input}:2919   .text.XMC_USBD_EnableEventINEP:00000000 XMC_USBD_EnableEventINEP
    {standard input}:2552   .text.XMC_USBD_ClearEvent:00000000 XMC_USBD_ClearEvent
    {standard input}:1488   .text.XMC_USBD_lHandleUSBReset:00000148 $d
    {standard input}:1493   .text.XMC_USBD_lHandleOTGInt:00000000 $t
    {standard input}:1497   .text.XMC_USBD_lHandleOTGInt:00000000 XMC_USBD_lHandleOTGInt
    {standard input}:2694   .text.XMC_USBD_lClearEventOTG:00000000 XMC_USBD_lClearEventOTG
    {standard input}:1552   .text.XMC_USBD_lHandleOTGInt:00000044 $d
    {standard input}:1557   .text.XMC_USBD_lHandleEnumDone:00000000 $t
    {standard input}:1561   .text.XMC_USBD_lHandleEnumDone:00000000 XMC_USBD_lHandleEnumDone
    {standard input}:1637   .text.XMC_USBD_lHandleEnumDone:00000074 $d
    {standard input}:1642   .text.XMC_USBD_lHandleOEPInt:00000000 $t
    {standard input}:1646   .text.XMC_USBD_lHandleOEPInt:00000000 XMC_USBD_lHandleOEPInt
    {standard input}:2805   .text.XMC_USBD_ClearEventOUTEP:00000000 XMC_USBD_ClearEventOUTEP
    {standard input}:1902   .text.XMC_USBD_lHandleOEPInt:000001b4 $d
    {standard input}:1907   .text.XMC_USBD_lHandleIEPInt:00000000 $t
    {standard input}:1911   .text.XMC_USBD_lHandleIEPInt:00000000 XMC_USBD_lHandleIEPInt
    {standard input}:2749   .text.XMC_USBD_ClearEventINEP:00000000 XMC_USBD_ClearEventINEP
    {standard input}:2168   .text.XMC_USBD_lHandleIEPInt:000001b4 $d
    {standard input}:2173   .text.XMC_USBD_lHandleRxFLvl:00000000 $t
    {standard input}:2177   .text.XMC_USBD_lHandleRxFLvl:00000000 XMC_USBD_lHandleRxFLvl
    {standard input}:2210   .text.XMC_USBD_lHandleRxFLvl:00000024 $d
    {standard input}:2216   .text.XMC_USBD_lHandleRxFLvl:0000003c $t
    {standard input}:2261   .text.XMC_USBD_lHandleRxFLvl:0000007c $d
    {standard input}:2266   .text.XMC_USBD_IRQHandler:00000000 $t
    {standard input}:2271   .text.XMC_USBD_IRQHandler:00000000 XMC_USBD_IRQHandler
    {standard input}:2468   .text.XMC_USBD_IRQHandler:00000148 $d
    {standard input}:2473   .text.XMC_USBD_Enable:00000000 $t
    {standard input}:2478   .text.XMC_USBD_Enable:00000000 XMC_USBD_Enable
    {standard input}:2505   .text.XMC_USBD_Enable:00000018 $d
    {standard input}:2510   .text.XMC_USBD_Disable:00000000 $t
    {standard input}:2515   .text.XMC_USBD_Disable:00000000 XMC_USBD_Disable
    {standard input}:2542   .text.XMC_USBD_Disable:00000018 $d
    {standard input}:2547   .text.XMC_USBD_ClearEvent:00000000 $t
    {standard input}:2582   .text.XMC_USBD_ClearEvent:0000001c $d
    {standard input}:2596   .text.XMC_USBD_ClearEvent:00000054 $t
    {standard input}:2685   .text.XMC_USBD_ClearEvent:000000c4 $d
    {standard input}:2690   .text.XMC_USBD_lClearEventOTG:00000000 $t
    {standard input}:2739   .text.XMC_USBD_lClearEventOTG:00000024 $d
    {standard input}:2744   .text.XMC_USBD_ClearEventINEP:00000000 $t
    {standard input}:2795   .text.XMC_USBD_ClearEventINEP:00000028 $d
    {standard input}:2800   .text.XMC_USBD_ClearEventOUTEP:00000000 $t
    {standard input}:2853   .text.XMC_USBD_ClearEventOUTEP:0000002c $d
    {standard input}:2858   .text.XMC_USBD_EnableEventOUTEP:00000000 $t
    {standard input}:2909   .text.XMC_USBD_EnableEventOUTEP:0000002c $d
    {standard input}:2914   .text.XMC_USBD_EnableEventINEP:00000000 $t
    {standard input}:2965   .text.XMC_USBD_EnableEventINEP:0000002c $d
    {standard input}:2970   .text.XMC_USBD_GetCapabilities:00000000 $t
    {standard input}:3055   .text.XMC_USBD_Init:00000000 $t
    {standard input}:3389   .text.XMC_USBD_Init:0000022c $d
    {standard input}:3397   .text.XMC_USBD_Uninitialize:00000000 $t
    {standard input}:3453   .text.XMC_USBD_Uninitialize:00000038 $d
    {standard input}:3458   .text.XMC_USBD_DeviceConnect:00000000 $t
    {standard input}:3513   .text.XMC_USBD_DeviceConnect:00000030 $d
    {standard input}:3518   .text.XMC_USBD_DeviceDisconnect:00000000 $t
    {standard input}:3573   .text.XMC_USBD_DeviceDisconnect:00000030 $d
    {standard input}:3578   .text.XMC_USBD_DeviceGetState:00000000 $t
    {standard input}:3649   .text.XMC_USBD_DeviceGetState:00000060 $d
    {standard input}:3654   .text.XMC_USBD_EndpointReadStart:00000000 $t
    {standard input}:3762   .text.XMC_USBD_EndpointReadStart:00000088 $d
    {standard input}:3767   .text.XMC_USBD_EndpointRead:00000000 $t
    {standard input}:3862   .text.XMC_USBD_EndpointRead:00000074 $d
    {standard input}:3867   .text.XMC_USBD_EndpointWrite:00000000 $t
    {standard input}:3989   .text.XMC_USBD_EndpointWrite:000000a4 $d
    {standard input}:3994   .text.XMC_USBD_DeviceSetAddress:00000000 $t
    {standard input}:4062   .text.XMC_USBD_DeviceSetAddress:00000048 $d
    {standard input}:4067   .text.XMC_USBD_EndpointStall:00000000 $t
    {standard input}:4266   .text.XMC_USBD_EndpointStall:00000148 $d
    {standard input}:4271   .text.XMC_USBD_EndpointAbort:00000000 $t
    {standard input}:4373   .text.XMC_USBD_EndpointAbort:00000084 $d
    {standard input}:4378   .text.XMC_USBD_EndpointConfigure:00000000 $t
    {standard input}:4744   .text.XMC_USBD_EndpointConfigure:00000274 $d
    {standard input}:4751   .text.XMC_USBD_EndpointConfigure:00000288 $t
    {standard input}:4813   .text.XMC_USBD_EndpointConfigure:000002f0 $d
    {standard input}:4818   .text.XMC_USBD_EndpointUnconfigure:00000000 $t
    {standard input}:5034   .text.XMC_USBD_EndpointUnconfigure:00000168 $d
    {standard input}:5040   .text.XMC_USBD_GetFrameNumber:00000000 $t
    {standard input}:5091   .text.XMC_USBD_GetFrameNumber:00000028 $d
    {standard input}:5096   .text.XMC_USBD_IsEnumDone:00000000 $t
    {standard input}:5150   .text.XMC_USBD_IsEnumDone:00000034 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_POWER_DisableUsb
memset
memcpy
