   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_dac.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_DAC_CH_EnableOutput,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_DAC_CH_EnableOutput:
  25              	.LFB136:
  26              	 .file 1 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc_dac.h"
   1:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
   2:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @file xmc_dac.h
   3:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @date 2012-12-16
   4:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
   5:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @cond
   6:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *****************************************************************************
   7:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
   9:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * All rights reserved.
  11:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  12:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  14:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * do so, all subject to the following:
  20:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  21:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * a source language processor.
  27:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  28:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  36:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * at XMCSupport@infineon.com.
  39:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *****************************************************************************
  40:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  41:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Change History
  42:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * --------------
  43:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  44:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-02-18:
  45:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Initial version
  46:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  47:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-02-20:
  48:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Driver description added
  49:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  50:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-06-19:
  51:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  52:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  53:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-08-31:
  54:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Help document updated
  55:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  56:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 2019-12-16:
  57:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Fix including xmc_common.h following the convention: angle brackets are used for standard 
  58:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  59:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @endcond
  60:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  61:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
  62:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
  63:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #ifndef XMC_DAC_H
  64:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_H
  65:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
  66:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
  67:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * HEADER FILES
  68:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
  69:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
  70:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #include "xmc_common.h"
  71:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
  72:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /* DAC peripheral is not available on XMC1X devices. */
  73:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #if defined(DAC)
  74:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
  75:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
  76:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @addtogroup XMClib
  77:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @{
  78:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
  79:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
  80:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
  81:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @addtogroup DAC
  82:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @{
  83:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  84:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @brief Digital to Analog Converter (DAC) driver for XMC 4000 microcontroller family. <br>
  85:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  86:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC driver uses DAC peripheral to convert digital value to analog value. XMC4000 microcontroller
  87:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * and maximum conversion rate of 2MHz with full accuracy and 5MHz with reduced accuracy.
  88:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * It consists of inbuilt pattern generator, ramp generator and noise generator modes. Additionally
  89:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * in single value mode and in data mode.
  90:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * It has DMA handling capability to generate custom waveforms in data mode without CPU interventio
  91:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
  92:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC driver features:
  93:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * -#  Configuration structure XMC_DAC_CH_CONFIG_t and initialization function XMC_DAC_CH_Init() to
  94:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * -#  Pattern Generator Mode:
  95:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in pattern generator mode using XMC_DAC_CH_StartPatternMode()
  96:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- XMC_DAC_CH_SetPattern() is used to set the waveform pattern values in pattern register for on
  97:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetPatternFrequency()
  98:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * -#  Single Value Mode:
  99:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in single value mode using XMC_DAC_CH_StartSingleValueMode()
 100:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetFrequency()
 101:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Data Mode:
 102:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in data mode using XMC_DAC_CH_StartDataMode()
 103:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetFrequency()
 104:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Ramp Mode:
 105:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *  - DAC is configured in ramp generator mode using XMC_DAC_CH_StartRampMode()
 106:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *  - Allows to change the trigger frequency using XMC_DAC_CH_SetRampFrequency()
 107:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *  - Allows to set the start and stop values of the ramp using XMC_DAC_CH_SetRampStart() and XMC_D
 108:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Noise Mode:
 109:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in noise mode using XMC_DAC_CH_StartNoiseMode()
 110:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetFrequency()
 111:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Allows to change the scale, offset dynamically using XMC_DAC_CH_SetOutputScale() and XMC_DAC_
 112:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Allows to select one of the eight possible trigger sources using XMC_DAC_CH_SetTrigger()
 113:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * -# 2 DAC channels can be used in synchronization in single value mode and data mode to generate 
 114:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 115:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 116:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 117:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * MACROS
 118:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 119:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 120:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC0 ((XMC_DAC_t *)DAC_BASE)         /**< DAC module register base */
 121:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 122:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_DACCFG_NEGATE_Msk (0x10000000UL) /*< DAC negation enable mask in XMC44 device */
 123:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_NO_CHANNELS (2U)                 /**< DAC maximum channels */
 124:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_SAMPLES_PER_PERIOD (32U)         /**< DAC samples per period in pattern mode */
 125:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 126:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_PATTERN_TRIANGLE  {0U, 4U, 8U, 12U, 16U, 19U, 23U, 27U, 31U} /**< First quarter Tri
 127:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_PATTERN_SINE      {0U, 6U, 12U, 17U, 22U, 26U, 29U, 30U, 31U} /**< First quarter Si
 128:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_PATTERN_RECTANGLE {31U, 31U, 31U, 31U, 31U, 31U, 31U, 31U, 31U} /**< First quarter 
 129:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 130:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_DAC_VALID(PTR)            ((PTR) == XMC_DAC0)
 131:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_CHANNEL_VALID(CH)         (CH < XMC_DAC_NO_CHANNELS)
 132:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_TRIGGER_VALID(TRIGGER)    ((TRIGGER == XMC_DAC_CH_TRIGGER_INTERNAL) ||\
 133:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_CCU80_SR1) ||
 134:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_CCU40_SR1) ||
 135:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_CCU41_SR1) ||
 136:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_P2_9) ||\
 137:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_P2_8) ||\
 138:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_U0C0_DX1INS) 
 139:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_U1C0_DX1INS) 
 140:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_SOFTWARE))
 141:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_MODE_VALID(MODE)          ((MODE == XMC_DAC_CH_MODE_IDLE) ||\
 142:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_SINGLE) ||\
 143:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_DATA) ||\
 144:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_PATTERN) ||\
 145:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_NOISE) ||\
 146:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_RAMP))
 147:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_OUTPUT_SCALE_VALID(SCALE) ((SCALE == XMC_DAC_CH_OUTPUT_SCALE_NONE) ||\
 148:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_2) ||\
 149:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_4) ||\
 150:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_8) ||\
 151:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_16) ||\
 152:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_32) ||\
 153:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_64) ||\
 154:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_128) ||\
 155:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_2) ||\
 156:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_4) ||\
 157:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_8) ||\
 158:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_16) ||\
 159:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_32) ||\
 160:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_64) ||\
 161:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_128))
 162:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 163:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 164:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 165:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * ENUMS
 166:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 167:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 168:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 169:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Return types of the API's
 170:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 171:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_STATUS
 172:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 173:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_OK              = 0U, /**< Status is ok, no error detected */
 174:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_ERROR           = 1U, /**< Error detected */
 175:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_BUSY            = 2U, /**< DAC is busy */
 176:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_ERROR_FREQ2LOW  = 3U, /**< Frequency can't be configured. Frequency is to low. 
 177:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_ERROR_FREQ2HIGH = 4U  /**< Frequency can't be configured. Frequency is to high.
 178:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_STATUS_t;
 179:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 180:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 181:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Operating modes of DAC
 182:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 183:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_MODE
 184:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 185:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_IDLE    = 0x0U << DAC_DAC0CFG0_MODE_Pos,    /**< DAC is disabled */
 186:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_SINGLE  = 0x1U << DAC_DAC0CFG0_MODE_Pos,    /**< Single value mode - single data 
 187:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_DATA    = 0x2U << DAC_DAC0CFG0_MODE_Pos,    /**< Data mode - continuous data proc
 188:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_PATTERN = 0x3U << DAC_DAC0CFG0_MODE_Pos,    /**< Pattern mode - inbuilt pattern w
 189:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                                                                    Sine, Triangle, Rectangle */
 190:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_NOISE   = 0x4U << DAC_DAC0CFG0_MODE_Pos,    /**< Noise mode - pseudo-random noise
 191:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_RAMP    = 0x5U << DAC_DAC0CFG0_MODE_Pos     /**< Ramp mode - ramp generation */
 192:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_MODE_t;
 193:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 194:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 195:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Trigger sources for the data update
 196:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 197:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_TRIGGER
 198:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 199:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_INTERNAL =
 200:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x0U << DAC_DAC0CFG1_TRIGMOD_Pos),                                      /**< Internal trigger 
 201:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_CCU80_SR1 =
 202:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | 0x0U,                               /**< External trigger 
 203:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_CCU40_SR1 =
 204:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x2U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigger 
 205:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_CCU41_SR1 =
 206:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x3U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigger 
 207:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_P2_9 =
 208:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x4U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigger 
 209:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_P2_8 =
 210:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x5U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigger 
 211:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_U0C0_DX1INS =
 212:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x6U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigger 
 213:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_U1C0_DX1INS =
 214:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x7U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigger 
 215:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_SOFTWARE =
 216:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x2U << DAC_DAC0CFG1_TRIGMOD_Pos)                                       /**< Software trigger 
 217:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_TRIGGER_t;
 218:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 219:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 220:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Data type of the input data
 221:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 222:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_DATA_TYPE
 223:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 224:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_DATA_TYPE_UNSIGNED = 0U,  /**< input data is unsigned */
 225:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_DATA_TYPE_SIGNED = 1U     /**< input data is signed */
 226:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_DATA_TYPE_t;
 227:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 228:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 229:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Scaling of the input data
 230:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 231:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_OUTPUT_SCALE
 232:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 233:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_NONE =
 234:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     0x0U,                                                                   /**< No scaling */
 235:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_2 =
 236:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x1U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 2 */
 237:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_4 =
 238:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x2U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 4 */
 239:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_8 =
 240:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x3U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 8 */
 241:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_16 =
 242:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x4U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 16 *
 243:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_32 =
 244:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x5U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 32 *
 245:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_64 =
 246:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x6U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 64 *
 247:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_128 =
 248:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x7U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 128 
 249:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_2 =
 250:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     0x1U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 2 */
 251:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_4 =
 252:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     0x2U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 4 */
 253:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_8 =
 254:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     0x3U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 8 */
 255:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_16 =
 256:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     0x4U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 16 */
 257:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_32 =
 258:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     0x5U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 32 */
 259:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_64 =
 260:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     0x6U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 64 */
 261:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_128 =
 262:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     0x7U << DAC_DAC0CFG1_SCALE_Pos                                          /**< divided by 128 */
 263:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_OUTPUT_SCALE_t;
 264:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 265:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 266:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Negation of input data (applicable only for XMC44 device)
 267:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 268:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_OUTPUT_NEGATION
 269:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 270:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_NEGATION_DISABLED = 0U,                   /**< XMC_DAC_CH_OUTPUT_NEGATION_DISAB
 271:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_NEGATION_ENABLED = 1U                     /**< XMC_DAC_CH_OUTPUT_NEGATION_ENABL
 272:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_OUTPUT_NEGATION_t;
 273:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 274:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 275:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Output sign signal for the Pattern Generation Mode
 276:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 277:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_PATTERN_SIGN_OUTPUT
 278:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 279:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_PATTERN_SIGN_OUTPUT_DISABLED = 0U,  /**< Sign output signal generation is disabled */
 280:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_PATTERN_SIGN_OUTPUT_ENABLED = 1U    /**< Sign output signal generation is enabled */
 281:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_PATTERN_SIGN_OUTPUT_t;
 282:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 283:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 284:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * DATA STRUCTURES
 285:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 286:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 287:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC peripheral registers configuration.
 288:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 289:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** typedef struct
 290:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 291:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   __I  uint32_t  ID;
 292:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 293:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   struct
 294:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   {
 295:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     __IO uint32_t low;
 296:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     __IO uint32_t high;
 297:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   } DACCFG[XMC_DAC_NO_CHANNELS];
 298:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 299:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   __IO uint32_t DACDATA[XMC_DAC_NO_CHANNELS];
 300:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   __IO uint32_t DAC01DATA;
 301:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 302:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   struct
 303:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   {
 304:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     __IO uint32_t low;
 305:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     __IO uint32_t high;
 306:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   } DACPAT[XMC_DAC_NO_CHANNELS];
 307:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 308:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_t;
 309:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 310:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /*Anonymous structure/union guard start*/
 311:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #if defined(__CC_ARM)
 312:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #pragma push
 313:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #pragma anon_unions
 314:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #elif defined(__TASKING__)
 315:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #pragma warning 586
 316:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #endif
 317:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 318:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 319:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel related configuration
 320:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 321:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** typedef struct XMC_DAC_CH_CONFIG
 322:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 323:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   union
 324:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   {
 325:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     struct
 326:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     {
 327:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****       uint32_t : 23;               /**< Not used bits */
 328:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****       uint32_t data_type: 1;       /**< input data type - unsigned / signed */
 329:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****       uint32_t : 4;                /**< Not used bits */
 330:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****       uint32_t output_negation: 1; /**< Negation of the output waveform enabled/disabled */
 331:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****       uint32_t : 3;
 332:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     };
 333:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t cfg0;
 334:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   };
 335:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   union
 336:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   {
 337:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     struct
 338:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     {
 339:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****       uint32_t output_scale: 4; /**< Scale value of type XMC_DAC_CH_OUTPUT_SCALE_t. It includes sca
 340:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****       uint32_t output_offset: 8; /**< offset value */
 341:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****       uint32_t : 20;
 342:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     };
 343:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t cfg1;
 344:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   };
 345:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_CONFIG_t;
 346:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /*Anonymous structure/union guard end*/
 347:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #if defined(__CC_ARM)
 348:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #pragma pop
 349:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #elif defined(__TASKING__)
 350:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #pragma warning restore
 351:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #endif
 352:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 353:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * API PROTOTYPES
 354:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 355:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 356:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #ifdef __cplusplus
 357:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** extern "C" {
 358:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** #endif
 359:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 360:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 361:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 362:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 363:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 364:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 365:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 366:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Enables DAC clock and releases DAC reset.<br>
 367:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 368:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 369:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Enabling DAC is the first step of DAC initialisation. This API is called by XMC_DAC_CH_Init().
 370:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC clock is enabled by setting \a DAC bit of \a CGATCLR1 register. DAC reset is released by set
 371:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 372:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 373:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 374:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_IsEnabled(), XMC_DAC_Disable(), XMC_DAC_CH_Init()\n\n\n
 375:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 376:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 377:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_Enable(XMC_DAC_t *const dac);
 378:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 379:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 380:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 381:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 382:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 383:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 384:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 385:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Disables DAC clock and resets DAC.
 386:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 387:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 388:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC clock is disabled by setting \a DAC bit of \a CGATSET1 register. DAC is reset by setting \a 
 389:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 390:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 391:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_IsEnabled(), XMC_DAC_Enable()\n\n\n
 392:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 393:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 394:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_Disable(XMC_DAC_t *const dac);
 395:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 396:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 397:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 398:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 399:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return bool<br>
 400:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * true  - if DAC is enabled<br>
 401:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * false - if DAC is disabled
 402:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 403:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 404:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Returns the state of the DAC.
 405:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 406:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 407:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC enabled status is determined by referring to \a DACRS bit of \a PRSTAT1 register.
 408:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 409:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 410:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_Enable(), XMC_DAC_Disable()\n\n\n
 411:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 412:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 413:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** bool XMC_DAC_IsEnabled(const XMC_DAC_t *const dac);
 414:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 415:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 416:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 417:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 418:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 419:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 420:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 421:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC switches to Simultaneous data mode from Independent data mode.
 422:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 423:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 424:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Independent data mode is the default data mode.
 425:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Simultaneous data mode is enabled by setting \a DATMOD bit of \a DAC0CFG1 register.
 426:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 427:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 428:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Set channel 0 and channel 1 to Data mode before calling this API.
 429:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 430:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 431:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartSingleValueMode(), XMC_DAC_CH_StartDataMode(), XMC_DAC_SimultaneousWrite(), XMC_
 432:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 433:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 434:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_EnableSimultaneousDataMode(XMC_DAC_t *const dac)
 435:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 436:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_EnableSimultaneousDataMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(
 437:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 438:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[0].high |= DAC_DAC0CFG1_DATMOD_Msk;
 439:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 440:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 441:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 442:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 443:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 444:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 445:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 446:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 447:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC switches to independent data mode from simultaneous Data mode.
 448:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 449:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 450:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Independent data mode is the default data mode.
 451:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Simultaneous data mode is disabled by clearing \a DATMOD bit of \a DAC0CFG1 register.
 452:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 453:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 454:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartDataMode(), XMC_DAC_EnableSimultaneousDataMode()\n\n\n
 455:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 456:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 457:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_DisableSimultaneousDataMode(XMC_DAC_t *const dac)
 458:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 459:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_DisableSimultaneousDataMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID
 460:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 461:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[0].high &= ~DAC_DAC0CFG1_DATMOD_Msk;
 462:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 463:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 464:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 465:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 466:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param data0 Data for DAC channel 0 [0-4095]
 467:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param data1 Data for DAC channel 1 [0-4095]
 468:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 469:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 470:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 471:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 472:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * The data (\e data0 & \e data1) to be converted by channel 0 & channel 1 are updated to \a DATA1 
 473:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * data0 and data1 have the range of [0-4095].
 474:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 475:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 476:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel 0 and Channel 1 should be set to simultaneous data mode before calling this API.
 477:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 478:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 479:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_EnableSimultaneousDataMode()\n\n\n
 480:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 481:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 482:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_SimultaneousWrite(XMC_DAC_t *const dac, const uint16_t data0, const ui
 483:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 484:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_SimultaneousWrite: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 485:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 486:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DAC01DATA = (data0 << DAC_DAC01DATA_DATA0_Pos) | (data1 << DAC_DAC01DATA_DATA1_Pos);
 487:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 488:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 489:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 490:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 491:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 492:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param config Pointer to the DAC channel configuration structure
 493:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 494:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 495:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 496:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 497:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Initialises and configures the DAC \e channel with the configuration date pointed by \e config.
 498:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 499:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 500:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC channel is initialised by configuring the registers \a DAC0CFG0 and \a DAC0CFG1 registers (f
 501:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * It enables the channel output by calling XMC_DAC_CH_EnableOutput().
 502:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 503:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 504:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_CH_Init(XMC_DAC_t *const dac, const uint8_t channel, const XMC_DAC_CH_CONFIG_t *const 
 505:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 506:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 507:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 508:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 509:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 510:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 511:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 512:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 513:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel output is enabled by setting the \a ANAEN bit of \a DAC0CFG1 register (for ch
 514:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 515:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><BR>
 516:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \a tSTARTUP time for DAC analog output starts after the \a ANAEN bit is set to one.
 517:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * After the expiry of the startup time the default value is driven to DAC output and a new value c
 518:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 519:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 520:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_DisableOutput(), XMC_DAC_CH_IsOutputEnabled()\n\n\n
 521:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 522:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 523:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_EnableOutput(XMC_DAC_t *const dac, const uint8_t channel)
 524:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
  27              	 .loc 1 524 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 525:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnableOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 526:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnableOutput: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(cha
 527:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 528:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].high |= DAC_DAC0CFG1_ANAEN_Msk;
  45              	 .loc 1 528 0
  46 000c F878     	 ldrb r0,[r7,#3]
  47 000e FB78     	 ldrb r3,[r7,#3]
  48 0010 7A68     	 ldr r2,[r7,#4]
  49 0012 DB00     	 lsls r3,r3,#3
  50 0014 1344     	 add r3,r3,r2
  51 0016 9B68     	 ldr r3,[r3,#8]
  52 0018 43F08072 	 orr r2,r3,#16777216
  53 001c 7968     	 ldr r1,[r7,#4]
  54 001e C300     	 lsls r3,r0,#3
  55 0020 0B44     	 add r3,r3,r1
  56 0022 9A60     	 str r2,[r3,#8]
 529:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
  57              	 .loc 1 529 0
  58 0024 0C37     	 adds r7,r7,#12
  59              	.LCFI3:
  60              	 .cfi_def_cfa_offset 4
  61 0026 BD46     	 mov sp,r7
  62              	.LCFI4:
  63              	 .cfi_def_cfa_register 13
  64              	 
  65 0028 5DF8047B 	 ldr r7,[sp],#4
  66              	.LCFI5:
  67              	 .cfi_restore 7
  68              	 .cfi_def_cfa_offset 0
  69 002c 7047     	 bx lr
  70              	 .cfi_endproc
  71              	.LFE136:
  73 002e 00BF     	 .section .text.XMC_DAC_CH_EnablePatternSignOutput,"ax",%progbits
  74              	 .align 2
  75              	 .thumb
  76              	 .thumb_func
  78              	XMC_DAC_CH_EnablePatternSignOutput:
  79              	.LFB140:
 530:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 531:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 532:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 533:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 534:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 535:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 536:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 537:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 538:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel output is disabled by clearing the \a ANAEN bit of \a DAC0CFG1 register (for 
 539:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 540:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 541:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * A call to this API stops driving the converted digital input to its output.
 542:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 543:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 544:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_EnableOutput(), XMC_DAC_CH_IsOutputEnabled()\n\n\n
 545:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 546:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 547:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_DisableOutput(XMC_DAC_t *const dac, const uint8_t channel)
 548:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 549:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisableOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 550:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisableOutput: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(ch
 551:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 552:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].high &= ~DAC_DAC0CFG1_ANAEN_Msk;
 553:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 554:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 555:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 556:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 557:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 558:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 559:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return bool <BR>
 560:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * true  - if analog output is enabled <BR>
 561:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * false - if analog output is disabled <BR>
 562:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 563:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 564:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Returns the status of DAC analog output.
 565:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 566:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 567:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel output enabled or disabled is determined by reading the \a ANAEN bit of \a DA
 568:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 569:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 570:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_EnableOutput(), XMC_DAC_CH_DisableOutput()\n\n\n
 571:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 572:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 573:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE bool XMC_DAC_CH_IsOutputEnabled(const XMC_DAC_t *const dac, const uint8_t channel)
 574:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 575:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_IsOutputEnabled: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 576:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_IsOutputEnabled: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(
 577:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 578:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   return (bool)(dac->DACCFG[channel].high & DAC_DAC0CFG1_ANAEN_Msk);
 579:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 580:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 581:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 582:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 583:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 584:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param data Data to be written  [0-4095]
 585:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 586:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 587:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 588:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 589:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Writes the \e data to the \e channel's DATA register.
 590:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 591:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 592:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * The \e data is then converted and driven to the output.
 593:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * If the trigger is set, On a trigger event the data in DATA register is converted and driven to \
 594:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Data \a data is written to the \a channel by loading \a data to \a DATA0 bit-field of \a DAC0DAT
 595:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * data has the range of [0-4095].
 596:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 597:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 598:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * The API can be used for Single Value Mode, Data Mode (Individual) & Ramp Mode.
 599:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_EnableOutput() API to enable analog output.
 600:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 601:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 602:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartSingleValueMode(), XMC_DAC_CH_StartDataMode(), XMC_DAC_CH_StartRampMode()\n\n\n
 603:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 604:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 605:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_Write(XMC_DAC_t *const dac, const uint8_t channel, const uint16_t d
 606:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 607:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_Write: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 608:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_Write: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(channel));
 609:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 610:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACDATA[channel] = data;
 611:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 612:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 613:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 614:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 615:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 616:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 617:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 618:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 619:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 620:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Single Value Mode by calling XMC_DAC_CH_SetMode().
 621:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 622:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 623:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_Write() API to write the data.
 624:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 625:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 626:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Write()\n\n\n
 627:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 628:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 629:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartSingleValueMode(XMC_DAC_t *const dac, const uint8_t channel);
 630:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 631:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 632:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 633:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 634:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 635:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency [Hz]
 636:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 637:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 638:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 639:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 640:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Data mode. Trigger and frequency are configured.
 641:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 642:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 643:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_Write() API to write the data. Call XMC_DAC_EnableSimultaneousDataMode() to swit
 644:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 645:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 646:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init(), XMC_DAC_CH_Write(), XMC_DAC_EnableSimultaneousDataMode() \n\n\n
 647:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 648:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 649:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartDataMode(XMC_DAC_t *const dac,
 650:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint8_t channel,
 651:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const XMC_DAC_CH_TRIGGER_t trigger,
 652:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint32_t frequency);
 653:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 654:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 655:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 656:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 657:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param start Start point of the ramp [0-4095]
 658:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param stop Stop point of the ramp [0-4095]
 659:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 660:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Ramp frequency in [Hz]
 661:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 662:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 663:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 664:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 665:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Ramp mode. Trigger, frequency, start and stop values are configured.
 666:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * On a \e trigger ramp values are converted and driven to \e channel output.
 667:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Start and stop have the range of [0-4095]. Stop should be equal or greater than start.
 668:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 669:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 670:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its \e stop value, it restarts from the \e start value with the next
 671:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 672:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 673:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init(), XMC_DAC_CH_GetRampStart(), XMC_DAC_CH_GetRampStop() \n\n\n
 674:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 675:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 676:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartRampMode(XMC_DAC_t *const dac,
 677:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint8_t channel,
 678:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint16_t start,
 679:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint16_t stop,
 680:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const XMC_DAC_CH_TRIGGER_t trigger,
 681:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint32_t frequency);
 682:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 683:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 684:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 685:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 686:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param pattern Data table of a pattern
 687:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param sign_output Sign information of the waveform
 688:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 689:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency in [Hz]
 690:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 691:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 692:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 693:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 694:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Pattern mode. Trigger, frequency, sign output and data are configured.
 695:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * On a \e trigger, the \e pattern values are converted and driven to \e channel output.
 696:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 697:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 698:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init(), XMC_DAC_CH_DisablePatternSignOutput() \n\n\n
 699:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 700:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 701:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartPatternMode(XMC_DAC_t *const dac,
 702:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint8_t channel,
 703:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint8_t *const pattern,
 704:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const XMC_DAC_CH_PATTERN_SIGN_OUTPUT_t sign_output,
 705:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const XMC_DAC_CH_TRIGGER_t trigger,
 706:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint32_t frequency);
 707:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 708:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 709:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 710:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 711:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 712:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency in [Hz]
 713:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 714:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 715:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 716:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 717:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Noise mode. Trigger and frequency are configured.
 718:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * On a \e trigger the DAC starts converting and drives to \e channel output.
 719:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 720:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 721:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init()\n\n\n
 722:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 723:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 724:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartNoiseMode(XMC_DAC_t *const dac,
 725:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint8_t channel,
 726:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const XMC_DAC_CH_TRIGGER_t trigger,
 727:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint32_t frequency);
 728:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 729:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 730:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 731:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 732:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param pattern Pointer to the data table
 733:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 734:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 735:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 736:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 737:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * The data for the Pattern mode is written to the \a DAC0PATL and \a DAC0PATH registers.
 738:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * The API is called by XMC_DAC_CH_StartPatternMode().
 739:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 740:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 741:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \a channel is set to Pattern mode.
 742:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 743:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 744:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_EnablePatternSignOutput(), XMC_DAC_CH_DisablePatternSignOutput()\n\n\n
 745:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 746:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 747:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_CH_SetPattern(XMC_DAC_t *const dac, const uint8_t channel, const uint8_t *const patter
 748:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 749:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 750:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 751:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 752:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 753:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 754:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 755:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 756:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Enables the output sign information for Pattern Mode.
 757:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 758:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 759:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sign output is enabled by setting \a SIGNEN bit of \a DAC0CFG0 register (for channel 0) / DAC1CF
 760:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 761:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 762:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Pattern mode.
 763:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 764:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 765:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartPatternMode(), XMC_DAC_CH_DisablePatternSignOutput()\n\n\n
 766:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 767:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 768:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_EnablePatternSignOutput(XMC_DAC_t *const dac,
 769:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint8_t channel)
 770:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
  80              	 .loc 1 770 0
  81              	 .cfi_startproc
  82              	 
  83              	 
  84              	 
  85 0000 80B4     	 push {r7}
  86              	.LCFI6:
  87              	 .cfi_def_cfa_offset 4
  88              	 .cfi_offset 7,-4
  89 0002 83B0     	 sub sp,sp,#12
  90              	.LCFI7:
  91              	 .cfi_def_cfa_offset 16
  92 0004 00AF     	 add r7,sp,#0
  93              	.LCFI8:
  94              	 .cfi_def_cfa_register 7
  95 0006 7860     	 str r0,[r7,#4]
  96 0008 0B46     	 mov r3,r1
  97 000a FB70     	 strb r3,[r7,#3]
 771:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnablePatternSignOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(
 772:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnablePatternSignOutput: channel parameter not valid\n", XMC_DAC_IS_CHANNE
 773:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 774:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].low |= DAC_DAC0CFG0_SIGNEN_Msk;
  98              	 .loc 1 774 0
  99 000c F878     	 ldrb r0,[r7,#3]
 100 000e FB78     	 ldrb r3,[r7,#3]
 101 0010 7A68     	 ldr r2,[r7,#4]
 102 0012 DB00     	 lsls r3,r3,#3
 103 0014 1344     	 add r3,r3,r2
 104 0016 5B68     	 ldr r3,[r3,#4]
 105 0018 43F00052 	 orr r2,r3,#536870912
 106 001c 7968     	 ldr r1,[r7,#4]
 107 001e C300     	 lsls r3,r0,#3
 108 0020 0B44     	 add r3,r3,r1
 109 0022 5A60     	 str r2,[r3,#4]
 775:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 110              	 .loc 1 775 0
 111 0024 0C37     	 adds r7,r7,#12
 112              	.LCFI9:
 113              	 .cfi_def_cfa_offset 4
 114 0026 BD46     	 mov sp,r7
 115              	.LCFI10:
 116              	 .cfi_def_cfa_register 13
 117              	 
 118 0028 5DF8047B 	 ldr r7,[sp],#4
 119              	.LCFI11:
 120              	 .cfi_restore 7
 121              	 .cfi_def_cfa_offset 0
 122 002c 7047     	 bx lr
 123              	 .cfi_endproc
 124              	.LFE140:
 126 002e 00BF     	 .section .text.XMC_DAC_CH_DisablePatternSignOutput,"ax",%progbits
 127              	 .align 2
 128              	 .thumb
 129              	 .thumb_func
 131              	XMC_DAC_CH_DisablePatternSignOutput:
 132              	.LFB141:
 776:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 777:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 778:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 779:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 780:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 781:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 782:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 783:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 784:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Disables output sign information for Pattern Mode.
 785:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 786:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 787:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sign output is disabled by clearing \a SIGNEN bit of \a DAC0CFG0 register (for channel 0) / DAC1
 788:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 789:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 790:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Pattern mode.
 791:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 792:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 793:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartPatternMode(), XMC_DAC_CH_EnablePatternSignOutput()\n\n\n
 794:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 795:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 796:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_DisablePatternSignOutput(XMC_DAC_t *const dac,
 797:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint8_t channel)
 798:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 133              	 .loc 1 798 0
 134              	 .cfi_startproc
 135              	 
 136              	 
 137              	 
 138 0000 80B4     	 push {r7}
 139              	.LCFI12:
 140              	 .cfi_def_cfa_offset 4
 141              	 .cfi_offset 7,-4
 142 0002 83B0     	 sub sp,sp,#12
 143              	.LCFI13:
 144              	 .cfi_def_cfa_offset 16
 145 0004 00AF     	 add r7,sp,#0
 146              	.LCFI14:
 147              	 .cfi_def_cfa_register 7
 148 0006 7860     	 str r0,[r7,#4]
 149 0008 0B46     	 mov r3,r1
 150 000a FB70     	 strb r3,[r7,#3]
 799:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisablePatternSignOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID
 800:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisablePatternSignOutput: channel parameter not valid\n", XMC_DAC_IS_CHANN
 801:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 802:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].low &= ~DAC_DAC0CFG0_SIGNEN_Msk;
 151              	 .loc 1 802 0
 152 000c F878     	 ldrb r0,[r7,#3]
 153 000e FB78     	 ldrb r3,[r7,#3]
 154 0010 7A68     	 ldr r2,[r7,#4]
 155 0012 DB00     	 lsls r3,r3,#3
 156 0014 1344     	 add r3,r3,r2
 157 0016 5B68     	 ldr r3,[r3,#4]
 158 0018 23F00052 	 bic r2,r3,#536870912
 159 001c 7968     	 ldr r1,[r7,#4]
 160 001e C300     	 lsls r3,r0,#3
 161 0020 0B44     	 add r3,r3,r1
 162 0022 5A60     	 str r2,[r3,#4]
 803:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 163              	 .loc 1 803 0
 164 0024 0C37     	 adds r7,r7,#12
 165              	.LCFI15:
 166              	 .cfi_def_cfa_offset 4
 167 0026 BD46     	 mov sp,r7
 168              	.LCFI16:
 169              	 .cfi_def_cfa_register 13
 170              	 
 171 0028 5DF8047B 	 ldr r7,[sp],#4
 172              	.LCFI17:
 173              	 .cfi_restore 7
 174              	 .cfi_def_cfa_offset 0
 175 002c 7047     	 bx lr
 176              	 .cfi_endproc
 177              	.LFE141:
 179 002e 00BF     	 .section .text.XMC_DAC_CH_SetRampStart,"ax",%progbits
 180              	 .align 2
 181              	 .thumb
 182              	 .thumb_func
 184              	XMC_DAC_CH_SetRampStart:
 185              	.LFB142:
 804:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 805:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 806:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 807:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 808:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param start Ramp start point [0-4095]
 809:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 810:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 811:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 812:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 813:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the ramp start value by writing to the register \a DAC0DATA (for \e channel 0) or \a DAC1DA
 814:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its stop value, it restarts from the \a start value with the next tr
 815:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Ensure \e start value is lower than the stop value.
 816:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 817:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 818:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \a channel is set to Ramp mode.
 819:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Start value is a 12 bit data.
 820:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 821:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 822:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_GetRampStart(), XMC_DAC_CH_GetRampStop(), XMC_DAC_CH_SetRampStop()\n\n\n
 823:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 824:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 825:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetRampStart(XMC_DAC_t *const dac, const uint8_t channel, const uin
 826:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 186              	 .loc 1 826 0
 187              	 .cfi_startproc
 188              	 
 189              	 
 190              	 
 191 0000 80B4     	 push {r7}
 192              	.LCFI18:
 193              	 .cfi_def_cfa_offset 4
 194              	 .cfi_offset 7,-4
 195 0002 83B0     	 sub sp,sp,#12
 196              	.LCFI19:
 197              	 .cfi_def_cfa_offset 16
 198 0004 00AF     	 add r7,sp,#0
 199              	.LCFI20:
 200              	 .cfi_def_cfa_register 7
 201 0006 7860     	 str r0,[r7,#4]
 202 0008 0B46     	 mov r3,r1
 203 000a FB70     	 strb r3,[r7,#3]
 204 000c 1346     	 mov r3,r2
 205 000e 3B80     	 strh r3,[r7]
 827:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStart: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 828:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStart: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(cha
 829:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 830:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACDATA[channel] = start;
 206              	 .loc 1 830 0
 207 0010 FB78     	 ldrb r3,[r7,#3]
 208 0012 3A88     	 ldrh r2,[r7]
 209 0014 7968     	 ldr r1,[r7,#4]
 210 0016 0433     	 adds r3,r3,#4
 211 0018 9B00     	 lsls r3,r3,#2
 212 001a 0B44     	 add r3,r3,r1
 213 001c 5A60     	 str r2,[r3,#4]
 831:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 214              	 .loc 1 831 0
 215 001e 0C37     	 adds r7,r7,#12
 216              	.LCFI21:
 217              	 .cfi_def_cfa_offset 4
 218 0020 BD46     	 mov sp,r7
 219              	.LCFI22:
 220              	 .cfi_def_cfa_register 13
 221              	 
 222 0022 5DF8047B 	 ldr r7,[sp],#4
 223              	.LCFI23:
 224              	 .cfi_restore 7
 225              	 .cfi_def_cfa_offset 0
 226 0026 7047     	 bx lr
 227              	 .cfi_endproc
 228              	.LFE142:
 230              	 .section .text.XMC_DAC_CH_SetRampStop,"ax",%progbits
 231              	 .align 2
 232              	 .thumb
 233              	 .thumb_func
 235              	XMC_DAC_CH_SetRampStop:
 236              	.LFB144:
 832:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 833:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 834:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 835:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 836:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 837:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return uint16_t
 838:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 839:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 840:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Gets the ramp start value by reading \a DATA0 bit-field of \a DAC0DATA register (for channel 0) 
 841:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its stop value, it restarts from the start value with the next trigg
 842:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 843:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 844:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Ramp mode.
 845:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 846:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 847:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_SetRampStart(), XMC_DAC_CH_StartRampMode(), XMC_DAC_CH_GetRampStop(), XMC_DAC_CH_SetR
 848:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 849:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 850:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE uint16_t XMC_DAC_CH_GetRampStart(XMC_DAC_t *const dac, const uint8_t channel)
 851:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 852:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStart: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 853:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStart: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(cha
 854:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 855:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   return (uint16_t)(dac->DACDATA[channel]);
 856:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 857:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 858:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 859:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 860:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 861:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param stop Ramp stop point [0-4095]
 862:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 863:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 864:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 865:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 866:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the ramp stop value by writing to the bit-field \a DATA0 (for \e channel 0) or \a DATA1 (fo
 867:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its \a stop value, it restarts from the start value with the next tr
 868:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Ensure \e stop value is higher than the start value.
 869:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 870:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 871:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Ramp mode.
 872:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Stop value is a 12 bit data.
 873:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 874:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 875:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_GetRampStop(), XMC_DAC_CH_SetRampStart()\n\n\n
 876:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 877:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 878:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetRampStop(XMC_DAC_t *const dac, const uint8_t channel, const uint
 879:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 237              	 .loc 1 879 0
 238              	 .cfi_startproc
 239              	 
 240              	 
 241              	 
 242 0000 80B4     	 push {r7}
 243              	.LCFI24:
 244              	 .cfi_def_cfa_offset 4
 245              	 .cfi_offset 7,-4
 246 0002 83B0     	 sub sp,sp,#12
 247              	.LCFI25:
 248              	 .cfi_def_cfa_offset 16
 249 0004 00AF     	 add r7,sp,#0
 250              	.LCFI26:
 251              	 .cfi_def_cfa_register 7
 252 0006 7860     	 str r0,[r7,#4]
 253 0008 0B46     	 mov r3,r1
 254 000a FB70     	 strb r3,[r7,#3]
 255 000c 1346     	 mov r3,r2
 256 000e 3B80     	 strh r3,[r7]
 880:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStop: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 881:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStop: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(chan
 882:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 883:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DAC01DATA = (dac->DAC01DATA & ~(DAC_DAC01DATA_DATA0_Msk << (channel * DAC_DAC01DATA_DATA1_Po
 257              	 .loc 1 883 0
 258 0010 7B68     	 ldr r3,[r7,#4]
 259 0012 DA69     	 ldr r2,[r3,#28]
 260 0014 FB78     	 ldrb r3,[r7,#3]
 261 0016 1B01     	 lsls r3,r3,#4
 262 0018 1946     	 mov r1,r3
 263 001a 40F6FF73 	 movw r3,#4095
 264 001e 8B40     	 lsls r3,r3,r1
 265 0020 DB43     	 mvns r3,r3
 266 0022 1340     	 ands r3,r3,r2
 884:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                    (stop << (channel * DAC_DAC01DATA_DATA1_Pos));
 267              	 .loc 1 884 0
 268 0024 3A88     	 ldrh r2,[r7]
 269 0026 F978     	 ldrb r1,[r7,#3]
 270 0028 0901     	 lsls r1,r1,#4
 271 002a 8A40     	 lsls r2,r2,r1
 883:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                    (stop << (channel * DAC_DAC01DATA_DATA1_Pos));
 272              	 .loc 1 883 0
 273 002c 1A43     	 orrs r2,r2,r3
 274 002e 7B68     	 ldr r3,[r7,#4]
 275 0030 DA61     	 str r2,[r3,#28]
 885:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 276              	 .loc 1 885 0
 277 0032 0C37     	 adds r7,r7,#12
 278              	.LCFI27:
 279              	 .cfi_def_cfa_offset 4
 280 0034 BD46     	 mov sp,r7
 281              	.LCFI28:
 282              	 .cfi_def_cfa_register 13
 283              	 
 284 0036 5DF8047B 	 ldr r7,[sp],#4
 285              	.LCFI29:
 286              	 .cfi_restore 7
 287              	 .cfi_def_cfa_offset 0
 288 003a 7047     	 bx lr
 289              	 .cfi_endproc
 290              	.LFE144:
 292              	 .section .text.XMC_DAC_CH_SetTrigger,"ax",%progbits
 293              	 .align 2
 294              	 .thumb
 295              	 .thumb_func
 297              	XMC_DAC_CH_SetTrigger:
 298              	.LFB146:
 886:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 887:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 888:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 889:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 890:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 891:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return uint16_t
 892:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 893:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 894:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Gets the ramp stop value by reading \a DATA0 bit-field of \a DAC01DATA register (for channel 0) 
 895:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its stop value, it restarts from the start value with the next trigg
 896:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 897:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 898:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Ramp mode.
 899:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 900:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 901:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_SetRampStop(), XMC_DAC_CH_StartRampMode(), XMC_DAC_CH_GetRampStart()\n\n\n
 902:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 903:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 904:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE uint16_t XMC_DAC_CH_GetRampStop(XMC_DAC_t *const dac, const uint8_t channel)
 905:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 906:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStop: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 907:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStop: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(chan
 908:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 909:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   return ((dac->DAC01DATA >> (channel * DAC_DAC01DATA_DATA1_Pos)) & DAC_DAC01DATA_DATA0_Msk);
 910:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 911:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 912:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 913:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 914:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 915:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Trigger source
 916:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 917:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 918:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 919:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 920:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Selects the \e trigger source for the \e channel by configuring the bits TRIGSEL & TRIGMOD of CF
 921:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 922:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 923:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel trigger source is selected by \a TRIGSEL bit-field of \a DAC0CFG1 register (f
 924:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 925:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 926:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetTrigger(XMC_DAC_t *const dac, const uint8_t channel, const XMC_D
 927:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 299              	 .loc 1 927 0
 300              	 .cfi_startproc
 301              	 
 302              	 
 303              	 
 304 0000 80B4     	 push {r7}
 305              	.LCFI30:
 306              	 .cfi_def_cfa_offset 4
 307              	 .cfi_offset 7,-4
 308 0002 85B0     	 sub sp,sp,#20
 309              	.LCFI31:
 310              	 .cfi_def_cfa_offset 24
 311 0004 00AF     	 add r7,sp,#0
 312              	.LCFI32:
 313              	 .cfi_def_cfa_register 7
 314 0006 F860     	 str r0,[r7,#12]
 315 0008 0B46     	 mov r3,r1
 316 000a 7A60     	 str r2,[r7,#4]
 317 000c FB72     	 strb r3,[r7,#11]
 928:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetTrigger: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 929:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetTrigger: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(chann
 930:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetTrigger: trigger parameter not valid\n", XMC_DAC_IS_TRIGGER_VALID(trigg
 931:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 932:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].high = (dac->DACCFG[channel].high & ~(DAC_DAC0CFG1_TRIGSEL_Msk | DAC_DAC0CFG
 318              	 .loc 1 932 0
 319 000e F87A     	 ldrb r0,[r7,#11]
 320 0010 FB7A     	 ldrb r3,[r7,#11]
 321 0012 FA68     	 ldr r2,[r7,#12]
 322 0014 DB00     	 lsls r3,r3,#3
 323 0016 1344     	 add r3,r3,r2
 324 0018 9B68     	 ldr r3,[r3,#8]
 325 001a 23F4CE22 	 bic r2,r3,#421888
 326 001e 7B68     	 ldr r3,[r7,#4]
 327 0020 1A43     	 orrs r2,r2,r3
 328 0022 F968     	 ldr r1,[r7,#12]
 329 0024 C300     	 lsls r3,r0,#3
 330 0026 0B44     	 add r3,r3,r1
 331 0028 9A60     	 str r2,[r3,#8]
 933:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                               trigger;
 934:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 332              	 .loc 1 934 0
 333 002a 1437     	 adds r7,r7,#20
 334              	.LCFI33:
 335              	 .cfi_def_cfa_offset 4
 336 002c BD46     	 mov sp,r7
 337              	.LCFI34:
 338              	 .cfi_def_cfa_register 13
 339              	 
 340 002e 5DF8047B 	 ldr r7,[sp],#4
 341              	.LCFI35:
 342              	 .cfi_restore 7
 343              	 .cfi_def_cfa_offset 0
 344 0032 7047     	 bx lr
 345              	 .cfi_endproc
 346              	.LFE146:
 348              	 .section .text.XMC_DAC_CH_SetMode,"ax",%progbits
 349              	 .align 2
 350              	 .thumb
 351              	 .thumb_func
 353              	XMC_DAC_CH_SetMode:
 354              	.LFB148:
 935:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 936:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 937:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 938:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 939:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency in [Hz]
 940:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 941:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t
 942:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 943:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 944:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e frequency of DAC channel.
 945:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 946:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 947:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * The value \e frequency acts as clock divider. The smallest \e frequency divider value is 16.
 948:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * A valid \e frequency value should be within the range XMC_DAC_MIN_FREQ_DIVIDER to XMC_DAC_MAX_FR
 949:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Frequency \a frequency is configured by setting \a FREQ bit-field of \a DAC0CFG0 register (for c
 950:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 951:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 952:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API only for Single value mode, Data mode and Noise mode.
 953:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_SetRampFrequency() in case of Ramp mode and XMC_DAC_CH_SetPatternFrequency() in 
 954:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 955:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 956:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_SetRampFrequency(), XMC_DAC_CH_SetPatternFrequency()\n\n\n
 957:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 958:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 959:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetFrequency(XMC_DAC_t *const dac, const uint8_t channel, const uint
 960:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 961:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 962:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 963:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 964:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency [Hz]
 965:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 966:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t
 967:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 968:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 969:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e frequency of DAC channel by calling XMC_DAC_CH_SetFrequency().
 970:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 971:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 972:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * For the Ramp mode, the \a frequency of operation depends on the total number of sample points (\
 973:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Frequency \e frequency is multiplied by the total number of sample points, so that each trigger 
 974:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 975:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 976:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API only if the \a channel is set to Ramp mode.
 977:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 978:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 979:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartRampMode()\n\n\n
 980:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 981:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
 982:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetRampFrequency(XMC_DAC_t *const dac, const uint8_t channel, const 
 983:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
 984:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
 985:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 986:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 987:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency in [Hz]
 988:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 989:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t
 990:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 991:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 992:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e frequency of DAC channel by calling XMC_DAC_CH_SetFrequency().
 993:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 994:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 995:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * For the Pattern mode, the \a frequency of operation depends on the total number of sample points
 996:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Frequency \e frequency is multiplied by the total number of sample points, so that each trigger 
 997:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
 998:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 999:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API only if the \a channel is set to Pattern mode.
1000:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
1001:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
1002:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartPatternMode()\n\n\n
1003:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
1004:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
1005:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetPatternFrequency(XMC_DAC_t *const dac,
1006:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint8_t channel,
1007:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****     const uint32_t frequency)
1008:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
1009:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetPatternFrequency: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac)
1010:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetPatternFrequency: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VA
1011:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
1012:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   return XMC_DAC_CH_SetFrequency(dac, channel, frequency * XMC_DAC_SAMPLES_PER_PERIOD);
1013:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
1014:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
1015:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** /**
1016:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
1017:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
1018:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @param mode DAC operation mode
1019:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
1020:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
1021:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
1022:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
1023:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the operating \e mode for the \e channel by setting the \a MODE bit-field of \a DAC0CFG0 re
1024:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  * Different modes of DAC operation are defined by enum XMC_DAC_CH_MODE_t.
1025:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  *
1026:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****  */
1027:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetMode(XMC_DAC_t *const dac, const uint8_t channel, const XMC_DAC_
1028:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** {
 355              	 .loc 1 1028 0
 356              	 .cfi_startproc
 357              	 
 358              	 
 359              	 
 360 0000 80B4     	 push {r7}
 361              	.LCFI36:
 362              	 .cfi_def_cfa_offset 4
 363              	 .cfi_offset 7,-4
 364 0002 85B0     	 sub sp,sp,#20
 365              	.LCFI37:
 366              	 .cfi_def_cfa_offset 24
 367 0004 00AF     	 add r7,sp,#0
 368              	.LCFI38:
 369              	 .cfi_def_cfa_register 7
 370 0006 F860     	 str r0,[r7,#12]
 371 0008 0B46     	 mov r3,r1
 372 000a 7A60     	 str r2,[r7,#4]
 373 000c FB72     	 strb r3,[r7,#11]
1029:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
1030:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(channel)
1031:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetMode: trigger parameter not valid\n", XMC_DAC_IS_MODE_VALID(mode));
1032:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** 
1033:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].low = (dac->DACCFG[channel].low & ~DAC_DAC0CFG0_MODE_Msk) |
 374              	 .loc 1 1033 0
 375 000e F87A     	 ldrb r0,[r7,#11]
 376 0010 FB7A     	 ldrb r3,[r7,#11]
 377 0012 FA68     	 ldr r2,[r7,#12]
 378 0014 DB00     	 lsls r3,r3,#3
 379 0016 1344     	 add r3,r3,r2
 380 0018 5B68     	 ldr r3,[r3,#4]
 381 001a 23F4E002 	 bic r2,r3,#7340032
 382 001e 7B68     	 ldr r3,[r7,#4]
 383 0020 1A43     	 orrs r2,r2,r3
 384 0022 F968     	 ldr r1,[r7,#12]
 385 0024 C300     	 lsls r3,r0,#3
 386 0026 0B44     	 add r3,r3,r1
 387 0028 5A60     	 str r2,[r3,#4]
1034:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h ****                              mode;
1035:C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc\xmc_dac.h **** }
 388              	 .loc 1 1035 0
 389 002a 1437     	 adds r7,r7,#20
 390              	.LCFI39:
 391              	 .cfi_def_cfa_offset 4
 392 002c BD46     	 mov sp,r7
 393              	.LCFI40:
 394              	 .cfi_def_cfa_register 13
 395              	 
 396 002e 5DF8047B 	 ldr r7,[sp],#4
 397              	.LCFI41:
 398              	 .cfi_restore 7
 399              	 .cfi_def_cfa_offset 0
 400 0032 7047     	 bx lr
 401              	 .cfi_endproc
 402              	.LFE148:
 404              	 .section .text.XMC_DAC_Enable,"ax",%progbits
 405              	 .align 2
 406              	 .global XMC_DAC_Enable
 407              	 .thumb
 408              	 .thumb_func
 410              	XMC_DAC_Enable:
 411              	.LFB199:
 412              	 .file 2 "../Libraries/XMCLib/src/xmc_dac.c"
   1:../Libraries/XMCLib/src/xmc_dac.c **** /**
   2:../Libraries/XMCLib/src/xmc_dac.c ****  * @file xmc_dac.c
   3:../Libraries/XMCLib/src/xmc_dac.c ****  * @date 2019-12-16
   4:../Libraries/XMCLib/src/xmc_dac.c ****  *
   5:../Libraries/XMCLib/src/xmc_dac.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_dac.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_dac.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_dac.c ****  *
   9:../Libraries/XMCLib/src/xmc_dac.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_dac.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_dac.c ****  *
  12:../Libraries/XMCLib/src/xmc_dac.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_dac.c ****  *
  14:../Libraries/XMCLib/src/xmc_dac.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_dac.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_dac.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_dac.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_dac.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_dac.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_dac.c ****  *
  21:../Libraries/XMCLib/src/xmc_dac.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_dac.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_dac.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_dac.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_dac.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_dac.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_dac.c ****  *
  28:../Libraries/XMCLib/src/xmc_dac.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_dac.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_dac.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_dac.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_dac.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_dac.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_dac.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_dac.c ****  *
  36:../Libraries/XMCLib/src/xmc_dac.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_dac.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_dac.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_dac.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_dac.c ****  *
  41:../Libraries/XMCLib/src/xmc_dac.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_dac.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_dac.c ****  *
  44:../Libraries/XMCLib/src/xmc_dac.c ****  * 2015-02-18:
  45:../Libraries/XMCLib/src/xmc_dac.c ****  *     - Initial version
  46:../Libraries/XMCLib/src/xmc_dac.c ****  *
  47:../Libraries/XMCLib/src/xmc_dac.c ****  * 2015-06-19:
  48:../Libraries/XMCLib/src/xmc_dac.c ****  *     - Removed GetDriverVersion API
  49:../Libraries/XMCLib/src/xmc_dac.c ****  *
  50:../Libraries/XMCLib/src/xmc_dac.c ****  * 2019-12-16:
  51:../Libraries/XMCLib/src/xmc_dac.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  52:../Libraries/XMCLib/src/xmc_dac.c ****  *
  53:../Libraries/XMCLib/src/xmc_dac.c ****  * @endcond
  54:../Libraries/XMCLib/src/xmc_dac.c ****  *
  55:../Libraries/XMCLib/src/xmc_dac.c ****  */
  56:../Libraries/XMCLib/src/xmc_dac.c **** 
  57:../Libraries/XMCLib/src/xmc_dac.c **** /*******************************************************************************
  58:../Libraries/XMCLib/src/xmc_dac.c ****  * HEADER FILES
  59:../Libraries/XMCLib/src/xmc_dac.c ****  *******************************************************************************/
  60:../Libraries/XMCLib/src/xmc_dac.c **** 
  61:../Libraries/XMCLib/src/xmc_dac.c **** #include "xmc_dac.h"
  62:../Libraries/XMCLib/src/xmc_dac.c **** #include "xmc_scu.h"
  63:../Libraries/XMCLib/src/xmc_dac.c **** 
  64:../Libraries/XMCLib/src/xmc_dac.c **** /* DAC peripheral is not available on XMC1X devices. */
  65:../Libraries/XMCLib/src/xmc_dac.c **** #if defined(DAC)
  66:../Libraries/XMCLib/src/xmc_dac.c **** 
  67:../Libraries/XMCLib/src/xmc_dac.c **** /*******************************************************************************
  68:../Libraries/XMCLib/src/xmc_dac.c ****  * MACROS
  69:../Libraries/XMCLib/src/xmc_dac.c ****  *******************************************************************************/
  70:../Libraries/XMCLib/src/xmc_dac.c **** 
  71:../Libraries/XMCLib/src/xmc_dac.c **** #define XMC_DAC_MIN_FREQ_DIVIDER (16U)
  72:../Libraries/XMCLib/src/xmc_dac.c **** #define XMC_DAC_MAX_FREQ_DIVIDER (1048576U)
  73:../Libraries/XMCLib/src/xmc_dac.c **** #define XMC_DAC_DAC0PATL_PAT_BITSIZE (5U)
  74:../Libraries/XMCLib/src/xmc_dac.c **** 
  75:../Libraries/XMCLib/src/xmc_dac.c **** /*******************************************************************************
  76:../Libraries/XMCLib/src/xmc_dac.c ****  * API IMPLEMENTATION
  77:../Libraries/XMCLib/src/xmc_dac.c ****  *******************************************************************************/
  78:../Libraries/XMCLib/src/xmc_dac.c **** 
  79:../Libraries/XMCLib/src/xmc_dac.c **** /* API to enable the DAC module */
  80:../Libraries/XMCLib/src/xmc_dac.c **** void XMC_DAC_Enable(XMC_DAC_t *const dac)
  81:../Libraries/XMCLib/src/xmc_dac.c **** {
 413              	 .loc 2 81 0
 414              	 .cfi_startproc
 415              	 
 416              	 
 417 0000 80B5     	 push {r7,lr}
 418              	.LCFI42:
 419              	 .cfi_def_cfa_offset 8
 420              	 .cfi_offset 7,-8
 421              	 .cfi_offset 14,-4
 422 0002 82B0     	 sub sp,sp,#8
 423              	.LCFI43:
 424              	 .cfi_def_cfa_offset 16
 425 0004 00AF     	 add r7,sp,#0
 426              	.LCFI44:
 427              	 .cfi_def_cfa_register 7
 428 0006 7860     	 str r0,[r7,#4]
  82:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_UNUSED_ARG(dac);
  83:../Libraries/XMCLib/src/xmc_dac.c **** 
  84:../Libraries/XMCLib/src/xmc_dac.c **** #if defined(CLOCK_GATING_SUPPORTED)
  85:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_DAC);
 429              	 .loc 2 85 0
 430 0008 0448     	 ldr r0,.L9
 431 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  86:../Libraries/XMCLib/src/xmc_dac.c **** #endif
  87:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_DAC);
 432              	 .loc 2 87 0
 433 000e 0348     	 ldr r0,.L9
 434 0010 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  88:../Libraries/XMCLib/src/xmc_dac.c **** }
 435              	 .loc 2 88 0
 436 0014 0837     	 adds r7,r7,#8
 437              	.LCFI45:
 438              	 .cfi_def_cfa_offset 8
 439 0016 BD46     	 mov sp,r7
 440              	.LCFI46:
 441              	 .cfi_def_cfa_register 13
 442              	 
 443 0018 80BD     	 pop {r7,pc}
 444              	.L10:
 445 001a 00BF     	 .align 2
 446              	.L9:
 447 001c 20000010 	 .word 268435488
 448              	 .cfi_endproc
 449              	.LFE199:
 451              	 .section .text.XMC_DAC_Disable,"ax",%progbits
 452              	 .align 2
 453              	 .global XMC_DAC_Disable
 454              	 .thumb
 455              	 .thumb_func
 457              	XMC_DAC_Disable:
 458              	.LFB200:
  89:../Libraries/XMCLib/src/xmc_dac.c **** 
  90:../Libraries/XMCLib/src/xmc_dac.c **** /* API to disable the DAC module */
  91:../Libraries/XMCLib/src/xmc_dac.c **** void XMC_DAC_Disable(XMC_DAC_t *const dac)
  92:../Libraries/XMCLib/src/xmc_dac.c **** {
 459              	 .loc 2 92 0
 460              	 .cfi_startproc
 461              	 
 462              	 
 463 0000 80B5     	 push {r7,lr}
 464              	.LCFI47:
 465              	 .cfi_def_cfa_offset 8
 466              	 .cfi_offset 7,-8
 467              	 .cfi_offset 14,-4
 468 0002 82B0     	 sub sp,sp,#8
 469              	.LCFI48:
 470              	 .cfi_def_cfa_offset 16
 471 0004 00AF     	 add r7,sp,#0
 472              	.LCFI49:
 473              	 .cfi_def_cfa_register 7
 474 0006 7860     	 str r0,[r7,#4]
  93:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_UNUSED_ARG(dac);
  94:../Libraries/XMCLib/src/xmc_dac.c **** 
  95:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_DAC);
 475              	 .loc 2 95 0
 476 0008 0448     	 ldr r0,.L12
 477 000a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
  96:../Libraries/XMCLib/src/xmc_dac.c **** #if defined(CLOCK_GATING_SUPPORTED)
  97:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_DAC);
 478              	 .loc 2 97 0
 479 000e 0348     	 ldr r0,.L12
 480 0010 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
  98:../Libraries/XMCLib/src/xmc_dac.c **** #endif
  99:../Libraries/XMCLib/src/xmc_dac.c **** }
 481              	 .loc 2 99 0
 482 0014 0837     	 adds r7,r7,#8
 483              	.LCFI50:
 484              	 .cfi_def_cfa_offset 8
 485 0016 BD46     	 mov sp,r7
 486              	.LCFI51:
 487              	 .cfi_def_cfa_register 13
 488              	 
 489 0018 80BD     	 pop {r7,pc}
 490              	.L13:
 491 001a 00BF     	 .align 2
 492              	.L12:
 493 001c 20000010 	 .word 268435488
 494              	 .cfi_endproc
 495              	.LFE200:
 497              	 .section .text.XMC_DAC_IsEnabled,"ax",%progbits
 498              	 .align 2
 499              	 .global XMC_DAC_IsEnabled
 500              	 .thumb
 501              	 .thumb_func
 503              	XMC_DAC_IsEnabled:
 504              	.LFB201:
 100:../Libraries/XMCLib/src/xmc_dac.c **** 
 101:../Libraries/XMCLib/src/xmc_dac.c **** /* API to check whether DAC is enabled */
 102:../Libraries/XMCLib/src/xmc_dac.c **** bool XMC_DAC_IsEnabled(const XMC_DAC_t *const dac)
 103:../Libraries/XMCLib/src/xmc_dac.c **** {
 505              	 .loc 2 103 0
 506              	 .cfi_startproc
 507              	 
 508              	 
 509 0000 80B5     	 push {r7,lr}
 510              	.LCFI52:
 511              	 .cfi_def_cfa_offset 8
 512              	 .cfi_offset 7,-8
 513              	 .cfi_offset 14,-4
 514 0002 84B0     	 sub sp,sp,#16
 515              	.LCFI53:
 516              	 .cfi_def_cfa_offset 24
 517 0004 00AF     	 add r7,sp,#0
 518              	.LCFI54:
 519              	 .cfi_def_cfa_register 7
 520 0006 7860     	 str r0,[r7,#4]
 104:../Libraries/XMCLib/src/xmc_dac.c ****   bool status;
 105:../Libraries/XMCLib/src/xmc_dac.c **** 
 106:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_UNUSED_ARG(dac);
 107:../Libraries/XMCLib/src/xmc_dac.c **** 
 108:../Libraries/XMCLib/src/xmc_dac.c ****   status = XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_DAC);
 521              	 .loc 2 108 0
 522 0008 0848     	 ldr r0,.L18
 523 000a FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 524 000e 0346     	 mov r3,r0
 525 0010 FB73     	 strb r3,[r7,#15]
 109:../Libraries/XMCLib/src/xmc_dac.c ****   if (status == true)
 526              	 .loc 2 109 0
 527 0012 FB7B     	 ldrb r3,[r7,#15]
 528 0014 002B     	 cmp r3,#0
 529 0016 02D0     	 beq .L15
 110:../Libraries/XMCLib/src/xmc_dac.c ****   {
 111:../Libraries/XMCLib/src/xmc_dac.c ****     status = false;
 530              	 .loc 2 111 0
 531 0018 0023     	 movs r3,#0
 532 001a FB73     	 strb r3,[r7,#15]
 533 001c 01E0     	 b .L16
 534              	.L15:
 112:../Libraries/XMCLib/src/xmc_dac.c ****   }
 113:../Libraries/XMCLib/src/xmc_dac.c ****   else
 114:../Libraries/XMCLib/src/xmc_dac.c ****   {
 115:../Libraries/XMCLib/src/xmc_dac.c ****     status = true;
 535              	 .loc 2 115 0
 536 001e 0123     	 movs r3,#1
 537 0020 FB73     	 strb r3,[r7,#15]
 538              	.L16:
 116:../Libraries/XMCLib/src/xmc_dac.c ****   }
 117:../Libraries/XMCLib/src/xmc_dac.c ****   return (status);
 539              	 .loc 2 117 0
 540 0022 FB7B     	 ldrb r3,[r7,#15]
 118:../Libraries/XMCLib/src/xmc_dac.c **** }
 541              	 .loc 2 118 0
 542 0024 1846     	 mov r0,r3
 543 0026 1037     	 adds r7,r7,#16
 544              	.LCFI55:
 545              	 .cfi_def_cfa_offset 8
 546 0028 BD46     	 mov sp,r7
 547              	.LCFI56:
 548              	 .cfi_def_cfa_register 13
 549              	 
 550 002a 80BD     	 pop {r7,pc}
 551              	.L19:
 552              	 .align 2
 553              	.L18:
 554 002c 20000010 	 .word 268435488
 555              	 .cfi_endproc
 556              	.LFE201:
 558              	 .section .text.XMC_DAC_CH_Init,"ax",%progbits
 559              	 .align 2
 560              	 .global XMC_DAC_CH_Init
 561              	 .thumb
 562              	 .thumb_func
 564              	XMC_DAC_CH_Init:
 565              	.LFB202:
 119:../Libraries/XMCLib/src/xmc_dac.c **** 
 120:../Libraries/XMCLib/src/xmc_dac.c **** /* API to initialize DAC channel configuration */
 121:../Libraries/XMCLib/src/xmc_dac.c **** void XMC_DAC_CH_Init(XMC_DAC_t *const dac, const uint8_t channel, const XMC_DAC_CH_CONFIG_t *const 
 122:../Libraries/XMCLib/src/xmc_dac.c **** {
 566              	 .loc 2 122 0
 567              	 .cfi_startproc
 568              	 
 569              	 
 570 0000 80B5     	 push {r7,lr}
 571              	.LCFI57:
 572              	 .cfi_def_cfa_offset 8
 573              	 .cfi_offset 7,-8
 574              	 .cfi_offset 14,-4
 575 0002 84B0     	 sub sp,sp,#16
 576              	.LCFI58:
 577              	 .cfi_def_cfa_offset 24
 578 0004 00AF     	 add r7,sp,#0
 579              	.LCFI59:
 580              	 .cfi_def_cfa_register 7
 581 0006 F860     	 str r0,[r7,#12]
 582 0008 0B46     	 mov r3,r1
 583 000a 7A60     	 str r2,[r7,#4]
 584 000c FB72     	 strb r3,[r7,#11]
 123:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_Enable(dac);
 585              	 .loc 2 123 0
 586 000e F868     	 ldr r0,[r7,#12]
 587 0010 FFF7FEFF 	 bl XMC_DAC_Enable
 124:../Libraries/XMCLib/src/xmc_dac.c **** 
 125:../Libraries/XMCLib/src/xmc_dac.c ****   dac->DACCFG[channel].low = config->cfg0;
 588              	 .loc 2 125 0
 589 0014 FB7A     	 ldrb r3,[r7,#11]
 590 0016 7A68     	 ldr r2,[r7,#4]
 591 0018 1268     	 ldr r2,[r2]
 592 001a F968     	 ldr r1,[r7,#12]
 593 001c DB00     	 lsls r3,r3,#3
 594 001e 0B44     	 add r3,r3,r1
 595 0020 5A60     	 str r2,[r3,#4]
 126:../Libraries/XMCLib/src/xmc_dac.c ****   dac->DACCFG[channel].high = config->cfg1;
 596              	 .loc 2 126 0
 597 0022 FB7A     	 ldrb r3,[r7,#11]
 598 0024 7A68     	 ldr r2,[r7,#4]
 599 0026 5268     	 ldr r2,[r2,#4]
 600 0028 F968     	 ldr r1,[r7,#12]
 601 002a DB00     	 lsls r3,r3,#3
 602 002c 0B44     	 add r3,r3,r1
 603 002e 9A60     	 str r2,[r3,#8]
 127:../Libraries/XMCLib/src/xmc_dac.c ****   if (channel < XMC_DAC_NO_CHANNELS)
 604              	 .loc 2 127 0
 605 0030 FB7A     	 ldrb r3,[r7,#11]
 606 0032 012B     	 cmp r3,#1
 607 0034 04D8     	 bhi .L20
 128:../Libraries/XMCLib/src/xmc_dac.c ****   {
 129:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_EnableOutput(dac, channel);
 608              	 .loc 2 129 0
 609 0036 FB7A     	 ldrb r3,[r7,#11]
 610 0038 F868     	 ldr r0,[r7,#12]
 611 003a 1946     	 mov r1,r3
 612 003c FFF7FEFF 	 bl XMC_DAC_CH_EnableOutput
 613              	.L20:
 130:../Libraries/XMCLib/src/xmc_dac.c ****   }
 131:../Libraries/XMCLib/src/xmc_dac.c **** }
 614              	 .loc 2 131 0
 615 0040 1037     	 adds r7,r7,#16
 616              	.LCFI60:
 617              	 .cfi_def_cfa_offset 8
 618 0042 BD46     	 mov sp,r7
 619              	.LCFI61:
 620              	 .cfi_def_cfa_register 13
 621              	 
 622 0044 80BD     	 pop {r7,pc}
 623              	 .cfi_endproc
 624              	.LFE202:
 626 0046 00BF     	 .section .text.XMC_DAC_CH_SetFrequency,"ax",%progbits
 627              	 .align 2
 628              	 .global XMC_DAC_CH_SetFrequency
 629              	 .thumb
 630              	 .thumb_func
 632              	XMC_DAC_CH_SetFrequency:
 633              	.LFB203:
 132:../Libraries/XMCLib/src/xmc_dac.c **** 
 133:../Libraries/XMCLib/src/xmc_dac.c **** /* API to set the waveform frequency except in Ramp and Pattern generation mode. */
 134:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetFrequency(XMC_DAC_t *const dac,
 135:../Libraries/XMCLib/src/xmc_dac.c ****     const uint8_t channel,
 136:../Libraries/XMCLib/src/xmc_dac.c ****     const uint32_t frequency)
 137:../Libraries/XMCLib/src/xmc_dac.c **** {
 634              	 .loc 2 137 0
 635              	 .cfi_startproc
 636              	 
 637              	 
 638 0000 80B5     	 push {r7,lr}
 639              	.LCFI62:
 640              	 .cfi_def_cfa_offset 8
 641              	 .cfi_offset 7,-8
 642              	 .cfi_offset 14,-4
 643 0002 86B0     	 sub sp,sp,#24
 644              	.LCFI63:
 645              	 .cfi_def_cfa_offset 32
 646 0004 00AF     	 add r7,sp,#0
 647              	.LCFI64:
 648              	 .cfi_def_cfa_register 7
 649 0006 F860     	 str r0,[r7,#12]
 650 0008 0B46     	 mov r3,r1
 651 000a 7A60     	 str r2,[r7,#4]
 652 000c FB72     	 strb r3,[r7,#11]
 138:../Libraries/XMCLib/src/xmc_dac.c ****   uint32_t divider;
 139:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_STATUS_t status;
 140:../Libraries/XMCLib/src/xmc_dac.c **** 
 141:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_SetFrequency: frequency must be greater than zero", frequency > 0U);
 142:../Libraries/XMCLib/src/xmc_dac.c **** 
 143:../Libraries/XMCLib/src/xmc_dac.c ****   divider = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / frequency;
 653              	 .loc 2 143 0
 654 000e FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 655 0012 0246     	 mov r2,r0
 656 0014 7B68     	 ldr r3,[r7,#4]
 657 0016 B2FBF3F3 	 udiv r3,r2,r3
 658 001a 3B61     	 str r3,[r7,#16]
 144:../Libraries/XMCLib/src/xmc_dac.c **** 
 145:../Libraries/XMCLib/src/xmc_dac.c ****   if (divider < XMC_DAC_MIN_FREQ_DIVIDER)
 659              	 .loc 2 145 0
 660 001c 3B69     	 ldr r3,[r7,#16]
 661 001e 0F2B     	 cmp r3,#15
 662 0020 02D8     	 bhi .L23
 146:../Libraries/XMCLib/src/xmc_dac.c ****   {
 147:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_STATUS_ERROR_FREQ2HIGH;
 663              	 .loc 2 147 0
 664 0022 0423     	 movs r3,#4
 665 0024 FB75     	 strb r3,[r7,#23]
 666 0026 16E0     	 b .L24
 667              	.L23:
 148:../Libraries/XMCLib/src/xmc_dac.c ****   }
 149:../Libraries/XMCLib/src/xmc_dac.c ****   else if (divider >= XMC_DAC_MAX_FREQ_DIVIDER)
 668              	 .loc 2 149 0
 669 0028 3B69     	 ldr r3,[r7,#16]
 670 002a B3F5801F 	 cmp r3,#1048576
 671 002e 02D3     	 bcc .L25
 150:../Libraries/XMCLib/src/xmc_dac.c ****   {
 151:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_STATUS_ERROR_FREQ2LOW;
 672              	 .loc 2 151 0
 673 0030 0323     	 movs r3,#3
 674 0032 FB75     	 strb r3,[r7,#23]
 675 0034 0FE0     	 b .L24
 676              	.L25:
 152:../Libraries/XMCLib/src/xmc_dac.c ****   }
 153:../Libraries/XMCLib/src/xmc_dac.c ****   else
 154:../Libraries/XMCLib/src/xmc_dac.c ****   {
 155:../Libraries/XMCLib/src/xmc_dac.c ****     dac->DACCFG[channel].low = (dac->DACCFG[channel].low & (uint32_t)(~DAC_DAC0CFG0_FREQ_Msk)) |
 677              	 .loc 2 155 0
 678 0036 F87A     	 ldrb r0,[r7,#11]
 679 0038 FB7A     	 ldrb r3,[r7,#11]
 680 003a FA68     	 ldr r2,[r7,#12]
 681 003c DB00     	 lsls r3,r3,#3
 682 003e 1344     	 add r3,r3,r2
 683 0040 5B68     	 ldr r3,[r3,#4]
 684 0042 1B0D     	 lsrs r3,r3,#20
 685 0044 1B05     	 lsls r3,r3,#20
 686 0046 3A69     	 ldr r2,[r7,#16]
 687 0048 1A43     	 orrs r2,r2,r3
 688 004a F968     	 ldr r1,[r7,#12]
 689 004c C300     	 lsls r3,r0,#3
 690 004e 0B44     	 add r3,r3,r1
 691 0050 5A60     	 str r2,[r3,#4]
 156:../Libraries/XMCLib/src/xmc_dac.c ****                                (divider << DAC_DAC0CFG0_FREQ_Pos);
 157:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_STATUS_OK;
 692              	 .loc 2 157 0
 693 0052 0023     	 movs r3,#0
 694 0054 FB75     	 strb r3,[r7,#23]
 695              	.L24:
 158:../Libraries/XMCLib/src/xmc_dac.c ****   }
 159:../Libraries/XMCLib/src/xmc_dac.c **** 
 160:../Libraries/XMCLib/src/xmc_dac.c ****   return status;
 696              	 .loc 2 160 0
 697 0056 FB7D     	 ldrb r3,[r7,#23]
 161:../Libraries/XMCLib/src/xmc_dac.c **** }
 698              	 .loc 2 161 0
 699 0058 1846     	 mov r0,r3
 700 005a 1837     	 adds r7,r7,#24
 701              	.LCFI65:
 702              	 .cfi_def_cfa_offset 8
 703 005c BD46     	 mov sp,r7
 704              	.LCFI66:
 705              	 .cfi_def_cfa_register 13
 706              	 
 707 005e 80BD     	 pop {r7,pc}
 708              	 .cfi_endproc
 709              	.LFE203:
 711              	 .section .text.XMC_DAC_CH_SetRampFrequency,"ax",%progbits
 712              	 .align 2
 713              	 .global XMC_DAC_CH_SetRampFrequency
 714              	 .thumb
 715              	 .thumb_func
 717              	XMC_DAC_CH_SetRampFrequency:
 718              	.LFB204:
 162:../Libraries/XMCLib/src/xmc_dac.c **** 
 163:../Libraries/XMCLib/src/xmc_dac.c **** /* API to set the waveform frequency in Ramp Mode. */
 164:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetRampFrequency(XMC_DAC_t *const dac,
 165:../Libraries/XMCLib/src/xmc_dac.c ****     const uint8_t channel,
 166:../Libraries/XMCLib/src/xmc_dac.c ****     const uint32_t frequency)
 167:../Libraries/XMCLib/src/xmc_dac.c **** {
 719              	 .loc 2 167 0
 720              	 .cfi_startproc
 721              	 
 722              	 
 723 0000 80B5     	 push {r7,lr}
 724              	.LCFI67:
 725              	 .cfi_def_cfa_offset 8
 726              	 .cfi_offset 7,-8
 727              	 .cfi_offset 14,-4
 728 0002 86B0     	 sub sp,sp,#24
 729              	.LCFI68:
 730              	 .cfi_def_cfa_offset 32
 731 0004 00AF     	 add r7,sp,#0
 732              	.LCFI69:
 733              	 .cfi_def_cfa_register 7
 734 0006 F860     	 str r0,[r7,#12]
 735 0008 0B46     	 mov r3,r1
 736 000a 7A60     	 str r2,[r7,#4]
 737 000c FB72     	 strb r3,[r7,#11]
 168:../Libraries/XMCLib/src/xmc_dac.c ****   uint32_t stop;
 169:../Libraries/XMCLib/src/xmc_dac.c ****   uint32_t start;
 170:../Libraries/XMCLib/src/xmc_dac.c **** 
 171:../Libraries/XMCLib/src/xmc_dac.c ****   start = dac->DACDATA[channel];
 738              	 .loc 2 171 0
 739 000e FB7A     	 ldrb r3,[r7,#11]
 740 0010 FA68     	 ldr r2,[r7,#12]
 741 0012 0433     	 adds r3,r3,#4
 742 0014 9B00     	 lsls r3,r3,#2
 743 0016 1344     	 add r3,r3,r2
 744 0018 5B68     	 ldr r3,[r3,#4]
 745 001a 7B61     	 str r3,[r7,#20]
 172:../Libraries/XMCLib/src/xmc_dac.c ****   stop = (dac->DAC01DATA >> (channel * DAC_DAC01DATA_DATA1_Pos)) & (uint32_t)DAC_DAC01DATA_DATA0_Ms
 746              	 .loc 2 172 0
 747 001c FB68     	 ldr r3,[r7,#12]
 748 001e DB69     	 ldr r3,[r3,#28]
 749 0020 FA7A     	 ldrb r2,[r7,#11]
 750 0022 1201     	 lsls r2,r2,#4
 751 0024 D340     	 lsrs r3,r3,r2
 752 0026 C3F30B03 	 ubfx r3,r3,#0,#12
 753 002a 3B61     	 str r3,[r7,#16]
 173:../Libraries/XMCLib/src/xmc_dac.c **** 
 174:../Libraries/XMCLib/src/xmc_dac.c ****   return XMC_DAC_CH_SetFrequency(dac, channel, frequency * ((stop - start) + 1U));
 754              	 .loc 2 174 0
 755 002c 3A69     	 ldr r2,[r7,#16]
 756 002e 7B69     	 ldr r3,[r7,#20]
 757 0030 D31A     	 subs r3,r2,r3
 758 0032 0133     	 adds r3,r3,#1
 759 0034 7A68     	 ldr r2,[r7,#4]
 760 0036 02FB03F3 	 mul r3,r2,r3
 761 003a FA7A     	 ldrb r2,[r7,#11]
 762 003c F868     	 ldr r0,[r7,#12]
 763 003e 1146     	 mov r1,r2
 764 0040 1A46     	 mov r2,r3
 765 0042 FFF7FEFF 	 bl XMC_DAC_CH_SetFrequency
 766 0046 0346     	 mov r3,r0
 175:../Libraries/XMCLib/src/xmc_dac.c **** }
 767              	 .loc 2 175 0
 768 0048 1846     	 mov r0,r3
 769 004a 1837     	 adds r7,r7,#24
 770              	.LCFI70:
 771              	 .cfi_def_cfa_offset 8
 772 004c BD46     	 mov sp,r7
 773              	.LCFI71:
 774              	 .cfi_def_cfa_register 13
 775              	 
 776 004e 80BD     	 pop {r7,pc}
 777              	 .cfi_endproc
 778              	.LFE204:
 780              	 .section .text.XMC_DAC_CH_StartSingleValueMode,"ax",%progbits
 781              	 .align 2
 782              	 .global XMC_DAC_CH_StartSingleValueMode
 783              	 .thumb
 784              	 .thumb_func
 786              	XMC_DAC_CH_StartSingleValueMode:
 787              	.LFB205:
 176:../Libraries/XMCLib/src/xmc_dac.c **** 
 177:../Libraries/XMCLib/src/xmc_dac.c **** /* API to start the operation in Single Value Mode. */
 178:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartSingleValueMode(XMC_DAC_t *const dac, const uint8_t channel)
 179:../Libraries/XMCLib/src/xmc_dac.c **** {
 788              	 .loc 2 179 0
 789              	 .cfi_startproc
 790              	 
 791              	 
 792 0000 80B5     	 push {r7,lr}
 793              	.LCFI72:
 794              	 .cfi_def_cfa_offset 8
 795              	 .cfi_offset 7,-8
 796              	 .cfi_offset 14,-4
 797 0002 82B0     	 sub sp,sp,#8
 798              	.LCFI73:
 799              	 .cfi_def_cfa_offset 16
 800 0004 00AF     	 add r7,sp,#0
 801              	.LCFI74:
 802              	 .cfi_def_cfa_register 7
 803 0006 7860     	 str r0,[r7,#4]
 804 0008 0B46     	 mov r3,r1
 805 000a FB70     	 strb r3,[r7,#3]
 180:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartSingleValueMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac
 181:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartSingleValueMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_V
 182:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartSingleValueMode: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 183:../Libraries/XMCLib/src/xmc_dac.c **** 
 184:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_SINGLE);
 806              	 .loc 2 184 0
 807 000c FB78     	 ldrb r3,[r7,#3]
 808 000e 7868     	 ldr r0,[r7,#4]
 809 0010 1946     	 mov r1,r3
 810 0012 4FF48012 	 mov r2,#1048576
 811 0016 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 185:../Libraries/XMCLib/src/xmc_dac.c **** 
 186:../Libraries/XMCLib/src/xmc_dac.c ****   return XMC_DAC_CH_STATUS_OK;
 812              	 .loc 2 186 0
 813 001a 0023     	 movs r3,#0
 187:../Libraries/XMCLib/src/xmc_dac.c **** }
 814              	 .loc 2 187 0
 815 001c 1846     	 mov r0,r3
 816 001e 0837     	 adds r7,r7,#8
 817              	.LCFI75:
 818              	 .cfi_def_cfa_offset 8
 819 0020 BD46     	 mov sp,r7
 820              	.LCFI76:
 821              	 .cfi_def_cfa_register 13
 822              	 
 823 0022 80BD     	 pop {r7,pc}
 824              	 .cfi_endproc
 825              	.LFE205:
 827              	 .section .text.XMC_DAC_CH_StartDataMode,"ax",%progbits
 828              	 .align 2
 829              	 .global XMC_DAC_CH_StartDataMode
 830              	 .thumb
 831              	 .thumb_func
 833              	XMC_DAC_CH_StartDataMode:
 834              	.LFB206:
 188:../Libraries/XMCLib/src/xmc_dac.c **** 
 189:../Libraries/XMCLib/src/xmc_dac.c **** /* API to start the operation in Data Mode. */
 190:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartDataMode(XMC_DAC_t *const dac,
 191:../Libraries/XMCLib/src/xmc_dac.c ****     const uint8_t channel,
 192:../Libraries/XMCLib/src/xmc_dac.c ****     const XMC_DAC_CH_TRIGGER_t trigger,
 193:../Libraries/XMCLib/src/xmc_dac.c ****     const uint32_t frequency)
 194:../Libraries/XMCLib/src/xmc_dac.c **** {
 835              	 .loc 2 194 0
 836              	 .cfi_startproc
 837              	 
 838              	 
 839 0000 80B5     	 push {r7,lr}
 840              	.LCFI77:
 841              	 .cfi_def_cfa_offset 8
 842              	 .cfi_offset 7,-8
 843              	 .cfi_offset 14,-4
 844 0002 86B0     	 sub sp,sp,#24
 845              	.LCFI78:
 846              	 .cfi_def_cfa_offset 32
 847 0004 00AF     	 add r7,sp,#0
 848              	.LCFI79:
 849              	 .cfi_def_cfa_register 7
 850 0006 F860     	 str r0,[r7,#12]
 851 0008 7A60     	 str r2,[r7,#4]
 852 000a 3B60     	 str r3,[r7]
 853 000c 0B46     	 mov r3,r1
 854 000e FB72     	 strb r3,[r7,#11]
 195:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_STATUS_t status = XMC_DAC_CH_STATUS_OK;
 855              	 .loc 2 195 0
 856 0010 0023     	 movs r3,#0
 857 0012 FB75     	 strb r3,[r7,#23]
 196:../Libraries/XMCLib/src/xmc_dac.c **** 
 197:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartDataMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 198:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartDataMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(ch
 199:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartDataMode: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 200:../Libraries/XMCLib/src/xmc_dac.c **** 
 201:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_IDLE);
 858              	 .loc 2 201 0
 859 0014 FB7A     	 ldrb r3,[r7,#11]
 860 0016 F868     	 ldr r0,[r7,#12]
 861 0018 1946     	 mov r1,r3
 862 001a 0022     	 movs r2,#0
 863 001c FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 202:../Libraries/XMCLib/src/xmc_dac.c **** 
 203:../Libraries/XMCLib/src/xmc_dac.c ****   if (trigger == XMC_DAC_CH_TRIGGER_INTERNAL)
 864              	 .loc 2 203 0
 865 0020 7B68     	 ldr r3,[r7,#4]
 866 0022 002B     	 cmp r3,#0
 867 0024 07D1     	 bne .L32
 204:../Libraries/XMCLib/src/xmc_dac.c ****   {
 205:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_SetFrequency(dac, channel, frequency);
 868              	 .loc 2 205 0
 869 0026 FB7A     	 ldrb r3,[r7,#11]
 870 0028 F868     	 ldr r0,[r7,#12]
 871 002a 1946     	 mov r1,r3
 872 002c 3A68     	 ldr r2,[r7]
 873 002e FFF7FEFF 	 bl XMC_DAC_CH_SetFrequency
 874 0032 0346     	 mov r3,r0
 875 0034 FB75     	 strb r3,[r7,#23]
 876              	.L32:
 206:../Libraries/XMCLib/src/xmc_dac.c ****   }
 207:../Libraries/XMCLib/src/xmc_dac.c **** 
 208:../Libraries/XMCLib/src/xmc_dac.c ****   if (status == XMC_DAC_CH_STATUS_OK)
 877              	 .loc 2 208 0
 878 0036 FB7D     	 ldrb r3,[r7,#23]
 879 0038 002B     	 cmp r3,#0
 880 003a 0CD1     	 bne .L33
 209:../Libraries/XMCLib/src/xmc_dac.c ****   {
 210:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetTrigger(dac, channel, trigger);
 881              	 .loc 2 210 0
 882 003c FB7A     	 ldrb r3,[r7,#11]
 883 003e F868     	 ldr r0,[r7,#12]
 884 0040 1946     	 mov r1,r3
 885 0042 7A68     	 ldr r2,[r7,#4]
 886 0044 FFF7FEFF 	 bl XMC_DAC_CH_SetTrigger
 211:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_DATA);
 887              	 .loc 2 211 0
 888 0048 FB7A     	 ldrb r3,[r7,#11]
 889 004a F868     	 ldr r0,[r7,#12]
 890 004c 1946     	 mov r1,r3
 891 004e 4FF40012 	 mov r2,#2097152
 892 0052 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 893              	.L33:
 212:../Libraries/XMCLib/src/xmc_dac.c ****   }
 213:../Libraries/XMCLib/src/xmc_dac.c **** 
 214:../Libraries/XMCLib/src/xmc_dac.c ****   return status;
 894              	 .loc 2 214 0
 895 0056 FB7D     	 ldrb r3,[r7,#23]
 215:../Libraries/XMCLib/src/xmc_dac.c **** }
 896              	 .loc 2 215 0
 897 0058 1846     	 mov r0,r3
 898 005a 1837     	 adds r7,r7,#24
 899              	.LCFI80:
 900              	 .cfi_def_cfa_offset 8
 901 005c BD46     	 mov sp,r7
 902              	.LCFI81:
 903              	 .cfi_def_cfa_register 13
 904              	 
 905 005e 80BD     	 pop {r7,pc}
 906              	 .cfi_endproc
 907              	.LFE206:
 909              	 .section .text.XMC_DAC_CH_StartRampMode,"ax",%progbits
 910              	 .align 2
 911              	 .global XMC_DAC_CH_StartRampMode
 912              	 .thumb
 913              	 .thumb_func
 915              	XMC_DAC_CH_StartRampMode:
 916              	.LFB207:
 216:../Libraries/XMCLib/src/xmc_dac.c **** 
 217:../Libraries/XMCLib/src/xmc_dac.c **** /* API to start the operation in Ramp Mode. */
 218:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartRampMode(XMC_DAC_t *const dac,
 219:../Libraries/XMCLib/src/xmc_dac.c ****     const uint8_t channel,
 220:../Libraries/XMCLib/src/xmc_dac.c ****     const uint16_t start,
 221:../Libraries/XMCLib/src/xmc_dac.c ****     const uint16_t stop,
 222:../Libraries/XMCLib/src/xmc_dac.c ****     const XMC_DAC_CH_TRIGGER_t trigger,
 223:../Libraries/XMCLib/src/xmc_dac.c ****     const uint32_t frequency)
 224:../Libraries/XMCLib/src/xmc_dac.c **** {
 917              	 .loc 2 224 0
 918              	 .cfi_startproc
 919              	 
 920              	 
 921 0000 80B5     	 push {r7,lr}
 922              	.LCFI82:
 923              	 .cfi_def_cfa_offset 8
 924              	 .cfi_offset 7,-8
 925              	 .cfi_offset 14,-4
 926 0002 86B0     	 sub sp,sp,#24
 927              	.LCFI83:
 928              	 .cfi_def_cfa_offset 32
 929 0004 00AF     	 add r7,sp,#0
 930              	.LCFI84:
 931              	 .cfi_def_cfa_register 7
 932 0006 F860     	 str r0,[r7,#12]
 933 0008 0846     	 mov r0,r1
 934 000a 1146     	 mov r1,r2
 935 000c 1A46     	 mov r2,r3
 936 000e 0346     	 mov r3,r0
 937 0010 FB72     	 strb r3,[r7,#11]
 938 0012 0B46     	 mov r3,r1
 939 0014 3B81     	 strh r3,[r7,#8]
 940 0016 1346     	 mov r3,r2
 941 0018 FB80     	 strh r3,[r7,#6]
 225:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_STATUS_t status = XMC_DAC_CH_STATUS_OK;
 942              	 .loc 2 225 0
 943 001a 0023     	 movs r3,#0
 944 001c FB75     	 strb r3,[r7,#23]
 226:../Libraries/XMCLib/src/xmc_dac.c **** 
 227:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartRampMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 228:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartRampMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(ch
 229:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartRampMode: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 230:../Libraries/XMCLib/src/xmc_dac.c **** 
 231:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_IDLE);
 945              	 .loc 2 231 0
 946 001e FB7A     	 ldrb r3,[r7,#11]
 947 0020 F868     	 ldr r0,[r7,#12]
 948 0022 1946     	 mov r1,r3
 949 0024 0022     	 movs r2,#0
 950 0026 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 232:../Libraries/XMCLib/src/xmc_dac.c **** 
 233:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetRampStart(dac, channel, start);
 951              	 .loc 2 233 0
 952 002a FA7A     	 ldrb r2,[r7,#11]
 953 002c 3B89     	 ldrh r3,[r7,#8]
 954 002e F868     	 ldr r0,[r7,#12]
 955 0030 1146     	 mov r1,r2
 956 0032 1A46     	 mov r2,r3
 957 0034 FFF7FEFF 	 bl XMC_DAC_CH_SetRampStart
 234:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetRampStop(dac, channel, stop);
 958              	 .loc 2 234 0
 959 0038 FA7A     	 ldrb r2,[r7,#11]
 960 003a FB88     	 ldrh r3,[r7,#6]
 961 003c F868     	 ldr r0,[r7,#12]
 962 003e 1146     	 mov r1,r2
 963 0040 1A46     	 mov r2,r3
 964 0042 FFF7FEFF 	 bl XMC_DAC_CH_SetRampStop
 235:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetTrigger(dac, channel, trigger);
 965              	 .loc 2 235 0
 966 0046 FB7A     	 ldrb r3,[r7,#11]
 967 0048 F868     	 ldr r0,[r7,#12]
 968 004a 1946     	 mov r1,r3
 969 004c 3A6A     	 ldr r2,[r7,#32]
 970 004e FFF7FEFF 	 bl XMC_DAC_CH_SetTrigger
 236:../Libraries/XMCLib/src/xmc_dac.c **** 
 237:../Libraries/XMCLib/src/xmc_dac.c ****   if (trigger == XMC_DAC_CH_TRIGGER_INTERNAL)
 971              	 .loc 2 237 0
 972 0052 3B6A     	 ldr r3,[r7,#32]
 973 0054 002B     	 cmp r3,#0
 974 0056 07D1     	 bne .L36
 238:../Libraries/XMCLib/src/xmc_dac.c ****   {
 239:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_SetRampFrequency(dac, channel, frequency);
 975              	 .loc 2 239 0
 976 0058 FB7A     	 ldrb r3,[r7,#11]
 977 005a F868     	 ldr r0,[r7,#12]
 978 005c 1946     	 mov r1,r3
 979 005e 7A6A     	 ldr r2,[r7,#36]
 980 0060 FFF7FEFF 	 bl XMC_DAC_CH_SetRampFrequency
 981 0064 0346     	 mov r3,r0
 982 0066 FB75     	 strb r3,[r7,#23]
 983              	.L36:
 240:../Libraries/XMCLib/src/xmc_dac.c ****   }
 241:../Libraries/XMCLib/src/xmc_dac.c **** 
 242:../Libraries/XMCLib/src/xmc_dac.c ****   if (status == XMC_DAC_CH_STATUS_OK)
 984              	 .loc 2 242 0
 985 0068 FB7D     	 ldrb r3,[r7,#23]
 986 006a 002B     	 cmp r3,#0
 987 006c 06D1     	 bne .L37
 243:../Libraries/XMCLib/src/xmc_dac.c ****   {
 244:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_RAMP);
 988              	 .loc 2 244 0
 989 006e FB7A     	 ldrb r3,[r7,#11]
 990 0070 F868     	 ldr r0,[r7,#12]
 991 0072 1946     	 mov r1,r3
 992 0074 4FF4A002 	 mov r2,#5242880
 993 0078 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 994              	.L37:
 245:../Libraries/XMCLib/src/xmc_dac.c ****   }
 246:../Libraries/XMCLib/src/xmc_dac.c **** 
 247:../Libraries/XMCLib/src/xmc_dac.c ****   return status;
 995              	 .loc 2 247 0
 996 007c FB7D     	 ldrb r3,[r7,#23]
 248:../Libraries/XMCLib/src/xmc_dac.c **** }
 997              	 .loc 2 248 0
 998 007e 1846     	 mov r0,r3
 999 0080 1837     	 adds r7,r7,#24
 1000              	.LCFI85:
 1001              	 .cfi_def_cfa_offset 8
 1002 0082 BD46     	 mov sp,r7
 1003              	.LCFI86:
 1004              	 .cfi_def_cfa_register 13
 1005              	 
 1006 0084 80BD     	 pop {r7,pc}
 1007              	 .cfi_endproc
 1008              	.LFE207:
 1010 0086 00BF     	 .section .text.XMC_DAC_CH_StartPatternMode,"ax",%progbits
 1011              	 .align 2
 1012              	 .global XMC_DAC_CH_StartPatternMode
 1013              	 .thumb
 1014              	 .thumb_func
 1016              	XMC_DAC_CH_StartPatternMode:
 1017              	.LFB208:
 249:../Libraries/XMCLib/src/xmc_dac.c **** 
 250:../Libraries/XMCLib/src/xmc_dac.c **** /* API to start the operation in Pattern Mode. */
 251:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartPatternMode(XMC_DAC_t *const dac,
 252:../Libraries/XMCLib/src/xmc_dac.c ****     const uint8_t channel,
 253:../Libraries/XMCLib/src/xmc_dac.c ****     const uint8_t *const pattern,
 254:../Libraries/XMCLib/src/xmc_dac.c ****     const XMC_DAC_CH_PATTERN_SIGN_OUTPUT_t sign_output,
 255:../Libraries/XMCLib/src/xmc_dac.c ****     const XMC_DAC_CH_TRIGGER_t trigger,
 256:../Libraries/XMCLib/src/xmc_dac.c ****     const uint32_t frequency)
 257:../Libraries/XMCLib/src/xmc_dac.c **** {
 1018              	 .loc 2 257 0
 1019              	 .cfi_startproc
 1020              	 
 1021              	 
 1022 0000 80B5     	 push {r7,lr}
 1023              	.LCFI87:
 1024              	 .cfi_def_cfa_offset 8
 1025              	 .cfi_offset 7,-8
 1026              	 .cfi_offset 14,-4
 1027 0002 86B0     	 sub sp,sp,#24
 1028              	.LCFI88:
 1029              	 .cfi_def_cfa_offset 32
 1030 0004 00AF     	 add r7,sp,#0
 1031              	.LCFI89:
 1032              	 .cfi_def_cfa_register 7
 1033 0006 F860     	 str r0,[r7,#12]
 1034 0008 7A60     	 str r2,[r7,#4]
 1035 000a 1A46     	 mov r2,r3
 1036 000c 0B46     	 mov r3,r1
 1037 000e FB72     	 strb r3,[r7,#11]
 1038 0010 1346     	 mov r3,r2
 1039 0012 BB72     	 strb r3,[r7,#10]
 258:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_STATUS_t status = XMC_DAC_CH_STATUS_OK;
 1040              	 .loc 2 258 0
 1041 0014 0023     	 movs r3,#0
 1042 0016 FB75     	 strb r3,[r7,#23]
 259:../Libraries/XMCLib/src/xmc_dac.c **** 
 260:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartPatternMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 261:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartPatternMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID
 262:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartPatternMode: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 263:../Libraries/XMCLib/src/xmc_dac.c **** 
 264:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_IDLE);
 1043              	 .loc 2 264 0
 1044 0018 FB7A     	 ldrb r3,[r7,#11]
 1045 001a F868     	 ldr r0,[r7,#12]
 1046 001c 1946     	 mov r1,r3
 1047 001e 0022     	 movs r2,#0
 1048 0020 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 265:../Libraries/XMCLib/src/xmc_dac.c **** 
 266:../Libraries/XMCLib/src/xmc_dac.c ****   if (trigger == XMC_DAC_CH_TRIGGER_INTERNAL)
 1049              	 .loc 2 266 0
 1050 0024 3B6A     	 ldr r3,[r7,#32]
 1051 0026 002B     	 cmp r3,#0
 1052 0028 09D1     	 bne .L40
 267:../Libraries/XMCLib/src/xmc_dac.c ****   {
 268:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_SetFrequency(dac, channel, frequency * XMC_DAC_SAMPLES_PER_PERIOD);
 1053              	 .loc 2 268 0
 1054 002a 7B6A     	 ldr r3,[r7,#36]
 1055 002c 5B01     	 lsls r3,r3,#5
 1056 002e FA7A     	 ldrb r2,[r7,#11]
 1057 0030 F868     	 ldr r0,[r7,#12]
 1058 0032 1146     	 mov r1,r2
 1059 0034 1A46     	 mov r2,r3
 1060 0036 FFF7FEFF 	 bl XMC_DAC_CH_SetFrequency
 1061 003a 0346     	 mov r3,r0
 1062 003c FB75     	 strb r3,[r7,#23]
 1063              	.L40:
 269:../Libraries/XMCLib/src/xmc_dac.c ****   }
 270:../Libraries/XMCLib/src/xmc_dac.c **** 
 271:../Libraries/XMCLib/src/xmc_dac.c ****   if (status == XMC_DAC_CH_STATUS_OK)
 1064              	 .loc 2 271 0
 1065 003e FB7D     	 ldrb r3,[r7,#23]
 1066 0040 002B     	 cmp r3,#0
 1067 0042 20D1     	 bne .L41
 272:../Libraries/XMCLib/src/xmc_dac.c ****   {
 273:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetPattern(dac, channel, pattern);
 1068              	 .loc 2 273 0
 1069 0044 FB7A     	 ldrb r3,[r7,#11]
 1070 0046 F868     	 ldr r0,[r7,#12]
 1071 0048 1946     	 mov r1,r3
 1072 004a 7A68     	 ldr r2,[r7,#4]
 1073 004c FFF7FEFF 	 bl XMC_DAC_CH_SetPattern
 274:../Libraries/XMCLib/src/xmc_dac.c ****     if (XMC_DAC_CH_PATTERN_SIGN_OUTPUT_ENABLED == sign_output)
 1074              	 .loc 2 274 0
 1075 0050 BB7A     	 ldrb r3,[r7,#10]
 1076 0052 012B     	 cmp r3,#1
 1077 0054 05D1     	 bne .L42
 275:../Libraries/XMCLib/src/xmc_dac.c ****     {
 276:../Libraries/XMCLib/src/xmc_dac.c ****       XMC_DAC_CH_EnablePatternSignOutput(dac, channel);
 1078              	 .loc 2 276 0
 1079 0056 FB7A     	 ldrb r3,[r7,#11]
 1080 0058 F868     	 ldr r0,[r7,#12]
 1081 005a 1946     	 mov r1,r3
 1082 005c FFF7FEFF 	 bl XMC_DAC_CH_EnablePatternSignOutput
 1083 0060 04E0     	 b .L43
 1084              	.L42:
 277:../Libraries/XMCLib/src/xmc_dac.c ****     }
 278:../Libraries/XMCLib/src/xmc_dac.c ****     else
 279:../Libraries/XMCLib/src/xmc_dac.c ****     {
 280:../Libraries/XMCLib/src/xmc_dac.c ****       XMC_DAC_CH_DisablePatternSignOutput(dac, channel);
 1085              	 .loc 2 280 0
 1086 0062 FB7A     	 ldrb r3,[r7,#11]
 1087 0064 F868     	 ldr r0,[r7,#12]
 1088 0066 1946     	 mov r1,r3
 1089 0068 FFF7FEFF 	 bl XMC_DAC_CH_DisablePatternSignOutput
 1090              	.L43:
 281:../Libraries/XMCLib/src/xmc_dac.c ****     }
 282:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetTrigger(dac, channel, trigger);
 1091              	 .loc 2 282 0
 1092 006c FB7A     	 ldrb r3,[r7,#11]
 1093 006e F868     	 ldr r0,[r7,#12]
 1094 0070 1946     	 mov r1,r3
 1095 0072 3A6A     	 ldr r2,[r7,#32]
 1096 0074 FFF7FEFF 	 bl XMC_DAC_CH_SetTrigger
 283:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_PATTERN);
 1097              	 .loc 2 283 0
 1098 0078 FB7A     	 ldrb r3,[r7,#11]
 1099 007a F868     	 ldr r0,[r7,#12]
 1100 007c 1946     	 mov r1,r3
 1101 007e 4FF44012 	 mov r2,#3145728
 1102 0082 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 1103              	.L41:
 284:../Libraries/XMCLib/src/xmc_dac.c ****   }
 285:../Libraries/XMCLib/src/xmc_dac.c **** 
 286:../Libraries/XMCLib/src/xmc_dac.c ****   return status;
 1104              	 .loc 2 286 0
 1105 0086 FB7D     	 ldrb r3,[r7,#23]
 287:../Libraries/XMCLib/src/xmc_dac.c **** }
 1106              	 .loc 2 287 0
 1107 0088 1846     	 mov r0,r3
 1108 008a 1837     	 adds r7,r7,#24
 1109              	.LCFI90:
 1110              	 .cfi_def_cfa_offset 8
 1111 008c BD46     	 mov sp,r7
 1112              	.LCFI91:
 1113              	 .cfi_def_cfa_register 13
 1114              	 
 1115 008e 80BD     	 pop {r7,pc}
 1116              	 .cfi_endproc
 1117              	.LFE208:
 1119              	 .section .text.XMC_DAC_CH_StartNoiseMode,"ax",%progbits
 1120              	 .align 2
 1121              	 .global XMC_DAC_CH_StartNoiseMode
 1122              	 .thumb
 1123              	 .thumb_func
 1125              	XMC_DAC_CH_StartNoiseMode:
 1126              	.LFB209:
 288:../Libraries/XMCLib/src/xmc_dac.c **** 
 289:../Libraries/XMCLib/src/xmc_dac.c **** /* API to start the operation in Noise Mode. */
 290:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartNoiseMode(XMC_DAC_t *const dac,
 291:../Libraries/XMCLib/src/xmc_dac.c ****     const uint8_t channel,
 292:../Libraries/XMCLib/src/xmc_dac.c ****     const XMC_DAC_CH_TRIGGER_t trigger,
 293:../Libraries/XMCLib/src/xmc_dac.c ****     const uint32_t frequency)
 294:../Libraries/XMCLib/src/xmc_dac.c **** {
 1127              	 .loc 2 294 0
 1128              	 .cfi_startproc
 1129              	 
 1130              	 
 1131 0000 80B5     	 push {r7,lr}
 1132              	.LCFI92:
 1133              	 .cfi_def_cfa_offset 8
 1134              	 .cfi_offset 7,-8
 1135              	 .cfi_offset 14,-4
 1136 0002 86B0     	 sub sp,sp,#24
 1137              	.LCFI93:
 1138              	 .cfi_def_cfa_offset 32
 1139 0004 00AF     	 add r7,sp,#0
 1140              	.LCFI94:
 1141              	 .cfi_def_cfa_register 7
 1142 0006 F860     	 str r0,[r7,#12]
 1143 0008 7A60     	 str r2,[r7,#4]
 1144 000a 3B60     	 str r3,[r7]
 1145 000c 0B46     	 mov r3,r1
 1146 000e FB72     	 strb r3,[r7,#11]
 295:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_STATUS_t status = XMC_DAC_CH_STATUS_OK;
 1147              	 .loc 2 295 0
 1148 0010 0023     	 movs r3,#0
 1149 0012 FB75     	 strb r3,[r7,#23]
 296:../Libraries/XMCLib/src/xmc_dac.c **** 
 297:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartNoiseMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 298:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartNoiseMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(c
 299:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartNoiseMode: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 300:../Libraries/XMCLib/src/xmc_dac.c **** 
 301:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_IDLE);
 1150              	 .loc 2 301 0
 1151 0014 FB7A     	 ldrb r3,[r7,#11]
 1152 0016 F868     	 ldr r0,[r7,#12]
 1153 0018 1946     	 mov r1,r3
 1154 001a 0022     	 movs r2,#0
 1155 001c FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 302:../Libraries/XMCLib/src/xmc_dac.c **** 
 303:../Libraries/XMCLib/src/xmc_dac.c ****   if (trigger == XMC_DAC_CH_TRIGGER_INTERNAL)
 1156              	 .loc 2 303 0
 1157 0020 7B68     	 ldr r3,[r7,#4]
 1158 0022 002B     	 cmp r3,#0
 1159 0024 07D1     	 bne .L46
 304:../Libraries/XMCLib/src/xmc_dac.c ****   {
 305:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_SetFrequency(dac, channel, frequency);
 1160              	 .loc 2 305 0
 1161 0026 FB7A     	 ldrb r3,[r7,#11]
 1162 0028 F868     	 ldr r0,[r7,#12]
 1163 002a 1946     	 mov r1,r3
 1164 002c 3A68     	 ldr r2,[r7]
 1165 002e FFF7FEFF 	 bl XMC_DAC_CH_SetFrequency
 1166 0032 0346     	 mov r3,r0
 1167 0034 FB75     	 strb r3,[r7,#23]
 1168              	.L46:
 306:../Libraries/XMCLib/src/xmc_dac.c ****   }
 307:../Libraries/XMCLib/src/xmc_dac.c **** 
 308:../Libraries/XMCLib/src/xmc_dac.c ****   if (status == XMC_DAC_CH_STATUS_OK)
 1169              	 .loc 2 308 0
 1170 0036 FB7D     	 ldrb r3,[r7,#23]
 1171 0038 002B     	 cmp r3,#0
 1172 003a 0CD1     	 bne .L47
 309:../Libraries/XMCLib/src/xmc_dac.c ****   {
 310:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetTrigger(dac, channel, trigger);
 1173              	 .loc 2 310 0
 1174 003c FB7A     	 ldrb r3,[r7,#11]
 1175 003e F868     	 ldr r0,[r7,#12]
 1176 0040 1946     	 mov r1,r3
 1177 0042 7A68     	 ldr r2,[r7,#4]
 1178 0044 FFF7FEFF 	 bl XMC_DAC_CH_SetTrigger
 311:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_NOISE);
 1179              	 .loc 2 311 0
 1180 0048 FB7A     	 ldrb r3,[r7,#11]
 1181 004a F868     	 ldr r0,[r7,#12]
 1182 004c 1946     	 mov r1,r3
 1183 004e 4FF48002 	 mov r2,#4194304
 1184 0052 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 1185              	.L47:
 312:../Libraries/XMCLib/src/xmc_dac.c ****   }
 313:../Libraries/XMCLib/src/xmc_dac.c **** 
 314:../Libraries/XMCLib/src/xmc_dac.c ****   return status;
 1186              	 .loc 2 314 0
 1187 0056 FB7D     	 ldrb r3,[r7,#23]
 315:../Libraries/XMCLib/src/xmc_dac.c **** }
 1188              	 .loc 2 315 0
 1189 0058 1846     	 mov r0,r3
 1190 005a 1837     	 adds r7,r7,#24
 1191              	.LCFI95:
 1192              	 .cfi_def_cfa_offset 8
 1193 005c BD46     	 mov sp,r7
 1194              	.LCFI96:
 1195              	 .cfi_def_cfa_register 13
 1196              	 
 1197 005e 80BD     	 pop {r7,pc}
 1198              	 .cfi_endproc
 1199              	.LFE209:
 1201              	 .section .text.XMC_DAC_CH_SetPattern,"ax",%progbits
 1202              	 .align 2
 1203              	 .global XMC_DAC_CH_SetPattern
 1204              	 .thumb
 1205              	 .thumb_func
 1207              	XMC_DAC_CH_SetPattern:
 1208              	.LFB210:
 316:../Libraries/XMCLib/src/xmc_dac.c **** 
 317:../Libraries/XMCLib/src/xmc_dac.c **** /* API to write the pattern data table. */
 318:../Libraries/XMCLib/src/xmc_dac.c **** void XMC_DAC_CH_SetPattern(XMC_DAC_t *const dac, uint8_t channel, const uint8_t *const data)
 319:../Libraries/XMCLib/src/xmc_dac.c **** {
 1209              	 .loc 2 319 0
 1210              	 .cfi_startproc
 1211              	 
 1212              	 
 1213              	 
 1214 0000 80B4     	 push {r7}
 1215              	.LCFI97:
 1216              	 .cfi_def_cfa_offset 4
 1217              	 .cfi_offset 7,-4
 1218 0002 87B0     	 sub sp,sp,#28
 1219              	.LCFI98:
 1220              	 .cfi_def_cfa_offset 32
 1221 0004 00AF     	 add r7,sp,#0
 1222              	.LCFI99:
 1223              	 .cfi_def_cfa_register 7
 1224 0006 F860     	 str r0,[r7,#12]
 1225 0008 0B46     	 mov r3,r1
 1226 000a 7A60     	 str r2,[r7,#4]
 1227 000c FB72     	 strb r3,[r7,#11]
 320:../Libraries/XMCLib/src/xmc_dac.c ****   uint32_t index;
 321:../Libraries/XMCLib/src/xmc_dac.c ****   uint32_t temp;
 322:../Libraries/XMCLib/src/xmc_dac.c **** 
 323:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_SetPattern: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 324:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_SetPattern: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(chann
 325:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_SetPattern: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 326:../Libraries/XMCLib/src/xmc_dac.c **** 
 327:../Libraries/XMCLib/src/xmc_dac.c ****   temp = data[0U];
 1228              	 .loc 2 327 0
 1229 000e 7B68     	 ldr r3,[r7,#4]
 1230 0010 1B78     	 ldrb r3,[r3]
 1231 0012 3B61     	 str r3,[r7,#16]
 328:../Libraries/XMCLib/src/xmc_dac.c ****   for (index = 1U; index < 6U; ++index)
 1232              	 .loc 2 328 0
 1233 0014 0123     	 movs r3,#1
 1234 0016 7B61     	 str r3,[r7,#20]
 1235 0018 10E0     	 b .L50
 1236              	.L51:
 329:../Libraries/XMCLib/src/xmc_dac.c ****   {
 330:../Libraries/XMCLib/src/xmc_dac.c ****     temp |= (uint32_t)data[index] << (index * XMC_DAC_DAC0PATL_PAT_BITSIZE);
 1237              	 .loc 2 330 0 discriminator 3
 1238 001a 7A68     	 ldr r2,[r7,#4]
 1239 001c 7B69     	 ldr r3,[r7,#20]
 1240 001e 1344     	 add r3,r3,r2
 1241 0020 1B78     	 ldrb r3,[r3]
 1242 0022 1946     	 mov r1,r3
 1243 0024 7A69     	 ldr r2,[r7,#20]
 1244 0026 1346     	 mov r3,r2
 1245 0028 9B00     	 lsls r3,r3,#2
 1246 002a 1344     	 add r3,r3,r2
 1247 002c 01FA03F3 	 lsl r3,r1,r3
 1248 0030 3A69     	 ldr r2,[r7,#16]
 1249 0032 1343     	 orrs r3,r3,r2
 1250 0034 3B61     	 str r3,[r7,#16]
 328:../Libraries/XMCLib/src/xmc_dac.c ****   for (index = 1U; index < 6U; ++index)
 1251              	 .loc 2 328 0 discriminator 3
 1252 0036 7B69     	 ldr r3,[r7,#20]
 1253 0038 0133     	 adds r3,r3,#1
 1254 003a 7B61     	 str r3,[r7,#20]
 1255              	.L50:
 328:../Libraries/XMCLib/src/xmc_dac.c ****   for (index = 1U; index < 6U; ++index)
 1256              	 .loc 2 328 0 is_stmt 0 discriminator 1
 1257 003c 7B69     	 ldr r3,[r7,#20]
 1258 003e 052B     	 cmp r3,#5
 1259 0040 EBD9     	 bls .L51
 331:../Libraries/XMCLib/src/xmc_dac.c ****   }
 332:../Libraries/XMCLib/src/xmc_dac.c ****   dac->DACPAT[channel].low = temp;
 1260              	 .loc 2 332 0 is_stmt 1
 1261 0042 FA7A     	 ldrb r2,[r7,#11]
 1262 0044 FB68     	 ldr r3,[r7,#12]
 1263 0046 0432     	 adds r2,r2,#4
 1264 0048 3969     	 ldr r1,[r7,#16]
 1265 004a 43F83210 	 str r1,[r3,r2,lsl#3]
 333:../Libraries/XMCLib/src/xmc_dac.c **** 
 334:../Libraries/XMCLib/src/xmc_dac.c ****   temp = data[6U];
 1266              	 .loc 2 334 0
 1267 004e 7B68     	 ldr r3,[r7,#4]
 1268 0050 0633     	 adds r3,r3,#6
 1269 0052 1B78     	 ldrb r3,[r3]
 1270 0054 3B61     	 str r3,[r7,#16]
 335:../Libraries/XMCLib/src/xmc_dac.c ****   for (index = 1U; index < 6U; ++index)
 1271              	 .loc 2 335 0
 1272 0056 0123     	 movs r3,#1
 1273 0058 7B61     	 str r3,[r7,#20]
 1274 005a 11E0     	 b .L52
 1275              	.L53:
 336:../Libraries/XMCLib/src/xmc_dac.c ****   {
 337:../Libraries/XMCLib/src/xmc_dac.c ****     temp |= (uint32_t)data[index + 6U] << (index * XMC_DAC_DAC0PATL_PAT_BITSIZE);
 1276              	 .loc 2 337 0 discriminator 3
 1277 005c 7B69     	 ldr r3,[r7,#20]
 1278 005e 0633     	 adds r3,r3,#6
 1279 0060 7A68     	 ldr r2,[r7,#4]
 1280 0062 1344     	 add r3,r3,r2
 1281 0064 1B78     	 ldrb r3,[r3]
 1282 0066 1946     	 mov r1,r3
 1283 0068 7A69     	 ldr r2,[r7,#20]
 1284 006a 1346     	 mov r3,r2
 1285 006c 9B00     	 lsls r3,r3,#2
 1286 006e 1344     	 add r3,r3,r2
 1287 0070 01FA03F3 	 lsl r3,r1,r3
 1288 0074 3A69     	 ldr r2,[r7,#16]
 1289 0076 1343     	 orrs r3,r3,r2
 1290 0078 3B61     	 str r3,[r7,#16]
 335:../Libraries/XMCLib/src/xmc_dac.c ****   for (index = 1U; index < 6U; ++index)
 1291              	 .loc 2 335 0 discriminator 3
 1292 007a 7B69     	 ldr r3,[r7,#20]
 1293 007c 0133     	 adds r3,r3,#1
 1294 007e 7B61     	 str r3,[r7,#20]
 1295              	.L52:
 335:../Libraries/XMCLib/src/xmc_dac.c ****   for (index = 1U; index < 6U; ++index)
 1296              	 .loc 2 335 0 is_stmt 0 discriminator 1
 1297 0080 7B69     	 ldr r3,[r7,#20]
 1298 0082 052B     	 cmp r3,#5
 1299 0084 EAD9     	 bls .L53
 338:../Libraries/XMCLib/src/xmc_dac.c ****   }
 339:../Libraries/XMCLib/src/xmc_dac.c ****   dac->DACPAT[channel].high = temp;
 1300              	 .loc 2 339 0 is_stmt 1
 1301 0086 FB7A     	 ldrb r3,[r7,#11]
 1302 0088 FA68     	 ldr r2,[r7,#12]
 1303 008a 0433     	 adds r3,r3,#4
 1304 008c DB00     	 lsls r3,r3,#3
 1305 008e 1344     	 add r3,r3,r2
 1306 0090 3A69     	 ldr r2,[r7,#16]
 1307 0092 5A60     	 str r2,[r3,#4]
 340:../Libraries/XMCLib/src/xmc_dac.c **** }
 1308              	 .loc 2 340 0
 1309 0094 1C37     	 adds r7,r7,#28
 1310              	.LCFI100:
 1311              	 .cfi_def_cfa_offset 4
 1312 0096 BD46     	 mov sp,r7
 1313              	.LCFI101:
 1314              	 .cfi_def_cfa_register 13
 1315              	 
 1316 0098 5DF8047B 	 ldr r7,[sp],#4
 1317              	.LCFI102:
 1318              	 .cfi_restore 7
 1319              	 .cfi_def_cfa_offset 0
 1320 009c 7047     	 bx lr
 1321              	 .cfi_endproc
 1322              	.LFE210:
 1324 009e 00BF     	 .text
 1325              	.Letext0:
 1326              	 .file 3 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1327              	 .file 4 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1328              	 .file 5 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/XMCLib/inc/xmc4_scu.h"
 1329              	 .file 6 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/cmsis_gcc.h"
 1330              	 .file 7 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Include/core_cm4.h"
 1331              	 .file 8 "C:/Repos/tributech-oem-module-iot-kit-examples/IoT-KIT-Infineon-XMC47_RELAX_5V_AD_V1/XMC4700_USB_to_UART/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_dac.c
    {standard input}:20     .text.XMC_DAC_CH_EnableOutput:00000000 $t
    {standard input}:24     .text.XMC_DAC_CH_EnableOutput:00000000 XMC_DAC_CH_EnableOutput
    {standard input}:74     .text.XMC_DAC_CH_EnablePatternSignOutput:00000000 $t
    {standard input}:78     .text.XMC_DAC_CH_EnablePatternSignOutput:00000000 XMC_DAC_CH_EnablePatternSignOutput
    {standard input}:127    .text.XMC_DAC_CH_DisablePatternSignOutput:00000000 $t
    {standard input}:131    .text.XMC_DAC_CH_DisablePatternSignOutput:00000000 XMC_DAC_CH_DisablePatternSignOutput
    {standard input}:180    .text.XMC_DAC_CH_SetRampStart:00000000 $t
    {standard input}:184    .text.XMC_DAC_CH_SetRampStart:00000000 XMC_DAC_CH_SetRampStart
    {standard input}:231    .text.XMC_DAC_CH_SetRampStop:00000000 $t
    {standard input}:235    .text.XMC_DAC_CH_SetRampStop:00000000 XMC_DAC_CH_SetRampStop
    {standard input}:293    .text.XMC_DAC_CH_SetTrigger:00000000 $t
    {standard input}:297    .text.XMC_DAC_CH_SetTrigger:00000000 XMC_DAC_CH_SetTrigger
    {standard input}:349    .text.XMC_DAC_CH_SetMode:00000000 $t
    {standard input}:353    .text.XMC_DAC_CH_SetMode:00000000 XMC_DAC_CH_SetMode
    {standard input}:405    .text.XMC_DAC_Enable:00000000 $t
    {standard input}:410    .text.XMC_DAC_Enable:00000000 XMC_DAC_Enable
    {standard input}:447    .text.XMC_DAC_Enable:0000001c $d
    {standard input}:452    .text.XMC_DAC_Disable:00000000 $t
    {standard input}:457    .text.XMC_DAC_Disable:00000000 XMC_DAC_Disable
    {standard input}:493    .text.XMC_DAC_Disable:0000001c $d
    {standard input}:498    .text.XMC_DAC_IsEnabled:00000000 $t
    {standard input}:503    .text.XMC_DAC_IsEnabled:00000000 XMC_DAC_IsEnabled
    {standard input}:554    .text.XMC_DAC_IsEnabled:0000002c $d
    {standard input}:559    .text.XMC_DAC_CH_Init:00000000 $t
    {standard input}:564    .text.XMC_DAC_CH_Init:00000000 XMC_DAC_CH_Init
    {standard input}:627    .text.XMC_DAC_CH_SetFrequency:00000000 $t
    {standard input}:632    .text.XMC_DAC_CH_SetFrequency:00000000 XMC_DAC_CH_SetFrequency
    {standard input}:712    .text.XMC_DAC_CH_SetRampFrequency:00000000 $t
    {standard input}:717    .text.XMC_DAC_CH_SetRampFrequency:00000000 XMC_DAC_CH_SetRampFrequency
    {standard input}:781    .text.XMC_DAC_CH_StartSingleValueMode:00000000 $t
    {standard input}:786    .text.XMC_DAC_CH_StartSingleValueMode:00000000 XMC_DAC_CH_StartSingleValueMode
    {standard input}:828    .text.XMC_DAC_CH_StartDataMode:00000000 $t
    {standard input}:833    .text.XMC_DAC_CH_StartDataMode:00000000 XMC_DAC_CH_StartDataMode
    {standard input}:910    .text.XMC_DAC_CH_StartRampMode:00000000 $t
    {standard input}:915    .text.XMC_DAC_CH_StartRampMode:00000000 XMC_DAC_CH_StartRampMode
    {standard input}:1011   .text.XMC_DAC_CH_StartPatternMode:00000000 $t
    {standard input}:1016   .text.XMC_DAC_CH_StartPatternMode:00000000 XMC_DAC_CH_StartPatternMode
    {standard input}:1207   .text.XMC_DAC_CH_SetPattern:00000000 XMC_DAC_CH_SetPattern
    {standard input}:1120   .text.XMC_DAC_CH_StartNoiseMode:00000000 $t
    {standard input}:1125   .text.XMC_DAC_CH_StartNoiseMode:00000000 XMC_DAC_CH_StartNoiseMode
    {standard input}:1202   .text.XMC_DAC_CH_SetPattern:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_CLOCK_GetPeripheralClockFrequency
